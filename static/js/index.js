function __vite__mapDeps(indexes) {
    if (!__vite__mapDeps.viteFileDeps) {
        __vite__mapDeps.viteFileDeps = ["assets/BoardStockInfo.js", "assets/performance.js"]
    }
    return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}

(function () {
        const t = document.createElement("link").relList;
        if (t && t.supports && t.supports("modulepreload"))
            return;
        for (const o of document.querySelectorAll('link[rel="modulepreload"]'))
            a(o);
        new MutationObserver(o => {
                for (const l of o)
                    if (l.type === "childList")
                        for (const u of l.addedNodes)
                            u.tagName === "LINK" && u.rel === "modulepreload" && a(u)
            }
        ).observe(document, {
            childList: !0,
            subtree: !0
        });

        function s(o) {
            const l = {};
            return o.integrity && (l.integrity = o.integrity),
            o.referrerPolicy && (l.referrerPolicy = o.referrerPolicy),
                o.crossOrigin === "use-credentials" ? l.credentials = "include" : o.crossOrigin === "anonymous" ? l.credentials = "omit" : l.credentials = "same-origin",
                l
        }

        function a(o) {
            if (o.ep)
                return;
            o.ep = !0;
            const l = s(o);
            fetch(o.href, l)
        }
    }
)();
/**
 * @vue/shared v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/

/*! #__NO_SIDE_EFFECTS__ */
function Pu(e) {
    const t = Object.create(null);
    for (const s of e.split(","))
        t[s] = 1;
    return s => s in t
}

const Ut = {}
    , $r = []
    , Ht = () => {
    }
    , J_ = () => !1
    , jl = e => e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && (e.charCodeAt(2) > 122 || e.charCodeAt(2) < 97)
    , Rf = e => e.startsWith("onUpdate:")
    , ns = Object.assign
    , Nf = (e, t) => {
        const s = e.indexOf(t);
        s > -1 && e.splice(s, 1)
    }
    , Q_ = Object.prototype.hasOwnProperty
    , Wt = (e, t) => Q_.call(e, t)
    , Ze = Array.isArray
    , Br = e => bo(e) === "[object Map]"
    , cr = e => bo(e) === "[object Set]"
    , Lg = e => bo(e) === "[object Date]"
    , ek = e => bo(e) === "[object RegExp]"
    , nt = e => typeof e == "function"
    , pt = e => typeof e == "string"
    , ei = e => typeof e == "symbol"
    , At = e => e !== null && typeof e == "object"
    , fl = e => (At(e) || nt(e)) && nt(e.then) && nt(e.catch)
    , _y = Object.prototype.toString
    , bo = e => _y.call(e)
    , tk = e => bo(e).slice(8, -1)
    , er = e => bo(e) === "[object Object]"
    , Df = e => pt(e) && e !== "NaN" && e[0] !== "-" && "" + parseInt(e, 10) === e
    ,
    Hr = Pu(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted")
    , Lu = e => {
        const t = Object.create(null);
        return s => t[s] || (t[s] = e(s))
    }
    , sk = /-(\w)/g
    , Ds = Lu(e => e.replace(sk, (t, s) => s ? s.toUpperCase() : ""))
    , nk = /\B([A-Z])/g
    , tn = Lu(e => e.replace(nk, "-$1").toLowerCase())
    , yo = Lu(e => e.charAt(0).toUpperCase() + e.slice(1))
    , Vr = Lu(e => e ? `on${yo(e)}` : "")
    , Qs = (e, t) => !Object.is(e, t)
    , zr = (e, ...t) => {
        for (let s = 0; s < e.length; s++)
            e[s](...t)
    }
    , ky = (e, t, s, a = !1) => {
        Object.defineProperty(e, t, {
            configurable: !0,
            enumerable: !1,
            writable: a,
            value: s
        })
    }
    , tu = e => {
        const t = parseFloat(e);
        return isNaN(t) ? e : t
    }
    , su = e => {
        const t = pt(e) ? Number(e) : NaN;
        return isNaN(t) ? e : t
    }
;
let Mg;
const Mu = () => Mg || (Mg = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : typeof global < "u" ? global : {})
    ,
    ik = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol"
    , ak = Pu(ik);

function kt(e) {
    if (Ze(e)) {
        const t = {};
        for (let s = 0; s < e.length; s++) {
            const a = e[s]
                , o = pt(a) ? ck(a) : kt(a);
            if (o)
                for (const l in o)
                    t[l] = o[l]
        }
        return t
    } else if (pt(e) || At(e))
        return e
}

const rk = /;(?![^(]*\))/g
    , ok = /:([^]+)/
    , lk = /\/\*[^]*?\*\//g;

function ck(e) {
    const t = {};
    return e.replace(lk, "").split(rk).forEach(s => {
            if (s) {
                const a = s.split(ok);
                a.length > 1 && (t[a[0].trim()] = a[1].trim())
            }
        }
    ),
        t
}

function he(e) {
    let t = "";
    if (pt(e))
        t = e;
    else if (Ze(e))
        for (let s = 0; s < e.length; s++) {
            const a = he(e[s]);
            a && (t += a + " ")
        }
    else if (At(e))
        for (const s in e)
            e[s] && (t += s + " ");
    return t.trim()
}

function Cy(e) {
    if (!e)
        return null;
    let {class: t, style: s} = e;
    return t && !pt(t) && (e.class = he(t)),
    s && (e.style = kt(s)),
        e
}

const uk = "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly"
    , dk = Pu(uk);

function Ay(e) {
    return !!e || e === ""
}

function hk(e, t) {
    if (e.length !== t.length)
        return !1;
    let s = !0;
    for (let a = 0; s && a < e.length; a++)
        s = ka(e[a], t[a]);
    return s
}

function ka(e, t) {
    if (e === t)
        return !0;
    let s = Lg(e)
        , a = Lg(t);
    if (s || a)
        return s && a ? e.getTime() === t.getTime() : !1;
    if (s = ei(e),
        a = ei(t),
    s || a)
        return e === t;
    if (s = Ze(e),
        a = Ze(t),
    s || a)
        return s && a ? hk(e, t) : !1;
    if (s = At(e),
        a = At(t),
    s || a) {
        if (!s || !a)
            return !1;
        const o = Object.keys(e).length
            , l = Object.keys(t).length;
        if (o !== l)
            return !1;
        for (const u in e) {
            const p = e.hasOwnProperty(u)
                , g = t.hasOwnProperty(u);
            if (p && !g || !p && g || !ka(e[u], t[u]))
                return !1
        }
    }
    return String(e) === String(t)
}

function Ou(e, t) {
    return e.findIndex(s => ka(s, t))
}

const Ey = e => !!(e && e.__v_isRef === !0)
    ,
    me = e => pt(e) ? e : e == null ? "" : Ze(e) || At(e) && (e.toString === _y || !nt(e.toString)) ? Ey(e) ? me(e.value) : JSON.stringify(e, Ty, 2) : String(e)
    , Ty = (e, t) => Ey(t) ? Ty(e, t.value) : Br(t) ? {
        [`Map(${t.size})`]: [...t.entries()].reduce((s, [a, o], l) => (s[Pd(a, l) + " =>"] = o,
            s), {})
    } : cr(t) ? {
        [`Set(${t.size})`]: [...t.values()].map(s => Pd(s))
    } : ei(t) ? Pd(t) : At(t) && !Ze(t) && !er(t) ? String(t) : t
    , Pd = (e, t = "") => {
        var s;
        return ei(e) ? `Symbol(${(s = e.description) != null ? s : t})` : e
    }
;
/**
 * @vue/reactivity v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/
let Js;

class Ff {
    constructor(t = !1) {
        this.detached = t,
            this._active = !0,
            this.effects = [],
            this.cleanups = [],
            this._isPaused = !1,
            this.parent = Js,
        !t && Js && (this.index = (Js.scopes || (Js.scopes = [])).push(this) - 1)
    }

    get active() {
        return this._active
    }

    pause() {
        if (this._active) {
            this._isPaused = !0;
            let t, s;
            if (this.scopes)
                for (t = 0,
                         s = this.scopes.length; t < s; t++)
                    this.scopes[t].pause();
            for (t = 0,
                     s = this.effects.length; t < s; t++)
                this.effects[t].pause()
        }
    }

    resume() {
        if (this._active && this._isPaused) {
            this._isPaused = !1;
            let t, s;
            if (this.scopes)
                for (t = 0,
                         s = this.scopes.length; t < s; t++)
                    this.scopes[t].resume();
            for (t = 0,
                     s = this.effects.length; t < s; t++)
                this.effects[t].resume()
        }
    }

    run(t) {
        if (this._active) {
            const s = Js;
            try {
                return Js = this,
                    t()
            } finally {
                Js = s
            }
        }
    }

    on() {
        Js = this
    }

    off() {
        Js = this.parent
    }

    stop(t) {
        if (this._active) {
            this._active = !1;
            let s, a;
            for (s = 0,
                     a = this.effects.length; s < a; s++)
                this.effects[s].stop();
            for (this.effects.length = 0,
                     s = 0,
                     a = this.cleanups.length; s < a; s++)
                this.cleanups[s]();
            if (this.cleanups.length = 0,
                this.scopes) {
                for (s = 0,
                         a = this.scopes.length; s < a; s++)
                    this.scopes[s].stop(!0);
                this.scopes.length = 0
            }
            if (!this.detached && this.parent && !t) {
                const o = this.parent.scopes.pop();
                o && o !== this && (this.parent.scopes[this.index] = o,
                    o.index = this.index)
            }
            this.parent = void 0
        }
    }
}

function $f(e) {
    return new Ff(e)
}

function Ru() {
    return Js
}

function Nu(e, t = !1) {
    Js && Js.cleanups.push(e)
}

let rs;
const Ld = new WeakSet;

class pl {
    constructor(t) {
        this.fn = t,
            this.deps = void 0,
            this.depsTail = void 0,
            this.flags = 5,
            this.next = void 0,
            this.cleanup = void 0,
            this.scheduler = void 0,
        Js && Js.active && Js.effects.push(this)
    }

    pause() {
        this.flags |= 64
    }

    resume() {
        this.flags & 64 && (this.flags &= -65,
        Ld.has(this) && (Ld.delete(this),
            this.trigger()))
    }

    notify() {
        this.flags & 2 && !(this.flags & 32) || this.flags & 8 || Py(this)
    }

    run() {
        if (!(this.flags & 1))
            return this.fn();
        this.flags |= 2,
            Og(this),
            Ly(this);
        const t = rs
            , s = qn;
        rs = this,
            qn = !0;
        try {
            return this.fn()
        } finally {
            My(this),
                rs = t,
                qn = s,
                this.flags &= -3
        }
    }

    stop() {
        if (this.flags & 1) {
            for (let t = this.deps; t; t = t.nextDep)
                Vf(t);
            this.deps = this.depsTail = void 0,
                Og(this),
            this.onStop && this.onStop(),
                this.flags &= -2
        }
    }

    trigger() {
        this.flags & 64 ? Ld.add(this) : this.scheduler ? this.scheduler() : this.runIfDirty()
    }

    runIfDirty() {
        bh(this) && this.run()
    }

    get dirty() {
        return bh(this)
    }
}

let Iy = 0, qo, Ko;

function Py(e, t = !1) {
    if (e.flags |= 8,
        t) {
        e.next = Ko,
            Ko = e;
        return
    }
    e.next = qo,
        qo = e
}

function Bf() {
    Iy++
}

function Hf() {
    if (--Iy > 0)
        return;
    if (Ko) {
        let t = Ko;
        for (Ko = void 0; t;) {
            const s = t.next;
            t.next = void 0,
                t.flags &= -9,
                t = s
        }
    }
    let e;
    for (; qo;) {
        let t = qo;
        for (qo = void 0; t;) {
            const s = t.next;
            if (t.next = void 0,
                t.flags &= -9,
            t.flags & 1)
                try {
                    t.trigger()
                } catch (a) {
                    e || (e = a)
                }
            t = s
        }
    }
    if (e)
        throw e
}

function Ly(e) {
    for (let t = e.deps; t; t = t.nextDep)
        t.version = -1,
            t.prevActiveLink = t.dep.activeLink,
            t.dep.activeLink = t
}

function My(e) {
    let t, s = e.depsTail, a = s;
    for (; a;) {
        const o = a.prevDep;
        a.version === -1 ? (a === s && (s = o),
            Vf(a),
            fk(a)) : t = a,
            a.dep.activeLink = a.prevActiveLink,
            a.prevActiveLink = void 0,
            a = o
    }
    e.deps = t,
        e.depsTail = s
}

function bh(e) {
    for (let t = e.deps; t; t = t.nextDep)
        if (t.dep.version !== t.version || t.dep.computed && (Oy(t.dep.computed) || t.dep.version !== t.version))
            return !0;
    return !!e._dirty
}

function Oy(e) {
    if (e.flags & 4 && !(e.flags & 16) || (e.flags &= -17,
    e.globalVersion === gl))
        return;
    e.globalVersion = gl;
    const t = e.dep;
    if (e.flags |= 2,
    t.version > 0 && !e.isSSR && e.deps && !bh(e)) {
        e.flags &= -3;
        return
    }
    const s = rs
        , a = qn;
    rs = e,
        qn = !0;
    try {
        Ly(e);
        const o = e.fn(e._value);
        (t.version === 0 || Qs(o, e._value)) && (e._value = o,
            t.version++)
    } catch (o) {
        throw t.version++,
            o
    } finally {
        rs = s,
            qn = a,
            My(e),
            e.flags &= -3
    }
}

function Vf(e, t = !1) {
    const {dep: s, prevSub: a, nextSub: o} = e;
    if (a && (a.nextSub = o,
        e.prevSub = void 0),
    o && (o.prevSub = a,
        e.nextSub = void 0),
    s.subs === e && (s.subs = a,
    !a && s.computed)) {
        s.computed.flags &= -5;
        for (let l = s.computed.deps; l; l = l.nextDep)
            Vf(l, !0)
    }
    !t && !--s.sc && s.map && s.map.delete(s.key)
}

function fk(e) {
    const {prevDep: t, nextDep: s} = e;
    t && (t.nextDep = s,
        e.prevDep = void 0),
    s && (s.prevDep = t,
        e.nextDep = void 0)
}

function pk(e, t) {
    e.effect instanceof pl && (e = e.effect.fn);
    const s = new pl(e);
    t && ns(s, t);
    try {
        s.run()
    } catch (o) {
        throw s.stop(),
            o
    }
    const a = s.run.bind(s);
    return a.effect = s,
        a
}

function gk(e) {
    e.effect.stop()
}

let qn = !0;
const Ry = [];

function La() {
    Ry.push(qn),
        qn = !1
}

function Ma() {
    const e = Ry.pop();
    qn = e === void 0 ? !0 : e
}

function Og(e) {
    const {cleanup: t} = e;
    if (e.cleanup = void 0,
        t) {
        const s = rs;
        rs = void 0;
        try {
            t()
        } finally {
            rs = s
        }
    }
}

let gl = 0
    , mk = class {
        constructor(t, s) {
            this.sub = t,
                this.dep = s,
                this.version = s.version,
                this.nextDep = this.prevDep = this.nextSub = this.prevSub = this.prevActiveLink = void 0
        }
    }
;

class Du {
    constructor(t) {
        this.computed = t,
            this.version = 0,
            this.activeLink = void 0,
            this.subs = void 0,
            this.map = void 0,
            this.key = void 0,
            this.sc = 0
    }

    track(t) {
        if (!rs || !qn || rs === this.computed)
            return;
        let s = this.activeLink;
        if (s === void 0 || s.sub !== rs)
            s = this.activeLink = new mk(rs, this),
                rs.deps ? (s.prevDep = rs.depsTail,
                    rs.depsTail.nextDep = s,
                    rs.depsTail = s) : rs.deps = rs.depsTail = s,
                Ny(s);
        else if (s.version === -1 && (s.version = this.version,
            s.nextDep)) {
            const a = s.nextDep;
            a.prevDep = s.prevDep,
            s.prevDep && (s.prevDep.nextDep = a),
                s.prevDep = rs.depsTail,
                s.nextDep = void 0,
                rs.depsTail.nextDep = s,
                rs.depsTail = s,
            rs.deps === s && (rs.deps = a)
        }
        return s
    }

    trigger(t) {
        this.version++,
            gl++,
            this.notify(t)
    }

    notify(t) {
        Bf();
        try {
            for (let s = this.subs; s; s = s.prevSub)
                s.sub.notify() && s.sub.dep.notify()
        } finally {
            Hf()
        }
    }
}

function Ny(e) {
    if (e.dep.sc++,
    e.sub.flags & 4) {
        const t = e.dep.computed;
        if (t && !e.dep.subs) {
            t.flags |= 20;
            for (let a = t.deps; a; a = a.nextDep)
                Ny(a)
        }
        const s = e.dep.subs;
        s !== e && (e.prevSub = s,
        s && (s.nextSub = e)),
            e.dep.subs = e
    }
}

const nu = new WeakMap
    , Ga = Symbol("")
    , yh = Symbol("")
    , ml = Symbol("");

function Xs(e, t, s) {
    if (qn && rs) {
        let a = nu.get(e);
        a || nu.set(e, a = new Map);
        let o = a.get(s);
        o || (a.set(s, o = new Du),
            o.map = a,
            o.key = s),
            o.track()
    }
}

function Vi(e, t, s, a, o, l) {
    const u = nu.get(e);
    if (!u) {
        gl++;
        return
    }
    const p = g => {
            g && g.trigger()
        }
    ;
    if (Bf(),
    t === "clear")
        u.forEach(p);
    else {
        const g = Ze(e)
            , y = g && Df(s);
        if (g && s === "length") {
            const v = Number(a);
            u.forEach((w, C) => {
                    (C === "length" || C === ml || !ei(C) && C >= v) && p(w)
                }
            )
        } else
            switch ((s !== void 0 || u.has(void 0)) && p(u.get(s)),
            y && p(u.get(ml)),
                t) {
                case "add":
                    g ? y && p(u.get("length")) : (p(u.get(Ga)),
                    Br(e) && p(u.get(yh)));
                    break;
                case "delete":
                    g || (p(u.get(Ga)),
                    Br(e) && p(u.get(yh)));
                    break;
                case "set":
                    Br(e) && p(u.get(Ga));
                    break
            }
    }
    Hf()
}

function vk(e, t) {
    const s = nu.get(e);
    return s && s.get(t)
}

function xr(e) {
    const t = Ft(e);
    return t === e ? t : (Xs(t, "iterate", ml),
        xn(e) ? t : t.map(js))
}

function Fu(e) {
    return Xs(e = Ft(e), "iterate", ml),
        e
}

const bk = {
    __proto__: null,
    [Symbol.iterator]() {
        return Md(this, Symbol.iterator, js)
    },
    concat(...e) {
        return xr(this).concat(...e.map(t => Ze(t) ? xr(t) : t))
    },
    entries() {
        return Md(this, "entries", e => (e[1] = js(e[1]),
            e))
    },
    every(e, t) {
        return Oi(this, "every", e, t, void 0, arguments)
    },
    filter(e, t) {
        return Oi(this, "filter", e, t, s => s.map(js), arguments)
    },
    find(e, t) {
        return Oi(this, "find", e, t, js, arguments)
    },
    findIndex(e, t) {
        return Oi(this, "findIndex", e, t, void 0, arguments)
    },
    findLast(e, t) {
        return Oi(this, "findLast", e, t, js, arguments)
    },
    findLastIndex(e, t) {
        return Oi(this, "findLastIndex", e, t, void 0, arguments)
    },
    forEach(e, t) {
        return Oi(this, "forEach", e, t, void 0, arguments)
    },
    includes(...e) {
        return Od(this, "includes", e)
    },
    indexOf(...e) {
        return Od(this, "indexOf", e)
    },
    join(e) {
        return xr(this).join(e)
    },
    lastIndexOf(...e) {
        return Od(this, "lastIndexOf", e)
    },
    map(e, t) {
        return Oi(this, "map", e, t, void 0, arguments)
    },
    pop() {
        return Fo(this, "pop")
    },
    push(...e) {
        return Fo(this, "push", e)
    },
    reduce(e, ...t) {
        return Rg(this, "reduce", e, t)
    },
    reduceRight(e, ...t) {
        return Rg(this, "reduceRight", e, t)
    },
    shift() {
        return Fo(this, "shift")
    },
    some(e, t) {
        return Oi(this, "some", e, t, void 0, arguments)
    },
    splice(...e) {
        return Fo(this, "splice", e)
    },
    toReversed() {
        return xr(this).toReversed()
    },
    toSorted(e) {
        return xr(this).toSorted(e)
    },
    toSpliced(...e) {
        return xr(this).toSpliced(...e)
    },
    unshift(...e) {
        return Fo(this, "unshift", e)
    },
    values() {
        return Md(this, "values", js)
    }
};

function Md(e, t, s) {
    const a = Fu(e)
        , o = a[t]();
    return a !== e && !xn(e) && (o._next = o.next,
            o.next = () => {
                const l = o._next();
                return l.value && (l.value = s(l.value)),
                    l
            }
    ),
        o
}

const yk = Array.prototype;

function Oi(e, t, s, a, o, l) {
    const u = Fu(e)
        , p = u !== e && !xn(e)
        , g = u[t];
    if (g !== yk[t]) {
        const w = g.apply(e, l);
        return p ? js(w) : w
    }
    let y = s;
    u !== e && (p ? y = function (w, C) {
            return s.call(this, js(w), C, e)
        }
        : s.length > 2 && (y = function (w, C) {
            return s.call(this, w, C, e)
        }
    ));
    const v = g.call(u, y, a);
    return p && o ? o(v) : v
}

function Rg(e, t, s, a) {
    const o = Fu(e);
    let l = s;
    return o !== e && (xn(e) ? s.length > 3 && (l = function (u, p, g) {
                return s.call(this, u, p, g, e)
            }
        ) : l = function (u, p, g) {
            return s.call(this, u, js(p), g, e)
        }
    ),
        o[t](l, ...a)
}

function Od(e, t, s) {
    const a = Ft(e);
    Xs(a, "iterate", ml);
    const o = a[t](...s);
    return (o === -1 || o === !1) && Vu(s[0]) ? (s[0] = Ft(s[0]),
        a[t](...s)) : o
}

function Fo(e, t, s = []) {
    La(),
        Bf();
    const a = Ft(e)[t].apply(e, s);
    return Hf(),
        Ma(),
        a
}

const xk = Pu("__proto__,__v_isRef,__isVue")
    ,
    Dy = new Set(Object.getOwnPropertyNames(Symbol).filter(e => e !== "arguments" && e !== "caller").map(e => Symbol[e]).filter(ei));

function wk(e) {
    ei(e) || (e = String(e));
    const t = Ft(this);
    return Xs(t, "has", e),
        t.hasOwnProperty(e)
}

class Fy {
    constructor(t = !1, s = !1) {
        this._isReadonly = t,
            this._isShallow = s
    }

    get(t, s, a) {
        if (s === "__v_skip")
            return t.__v_skip;
        const o = this._isReadonly
            , l = this._isShallow;
        if (s === "__v_isReactive")
            return !o;
        if (s === "__v_isReadonly")
            return o;
        if (s === "__v_isShallow")
            return l;
        if (s === "__v_raw")
            return a === (o ? l ? Wy : zy : l ? Vy : Hy).get(t) || Object.getPrototypeOf(t) === Object.getPrototypeOf(a) ? t : void 0;
        const u = Ze(t);
        if (!o) {
            let g;
            if (u && (g = bk[s]))
                return g;
            if (s === "hasOwnProperty")
                return wk
        }
        const p = Reflect.get(t, s, Qt(t) ? t : a);
        return (ei(s) ? Dy.has(s) : xk(s)) || (o || Xs(t, "get", s),
            l) ? p : Qt(p) ? u && Df(s) ? p : p.value : At(p) ? o ? Zi(p) : ys(p) : p
    }
}

class $y extends Fy {
    constructor(t = !1) {
        super(!1, t)
    }

    set(t, s, a, o) {
        let l = t[s];
        if (!this._isShallow) {
            const g = Ca(l);
            if (!xn(a) && !Ca(a) && (l = Ft(l),
                a = Ft(a)),
            !Ze(t) && Qt(l) && !Qt(a))
                return g ? !1 : (l.value = a,
                    !0)
        }
        const u = Ze(t) && Df(s) ? Number(s) < t.length : Wt(t, s)
            , p = Reflect.set(t, s, a, Qt(t) ? t : o);
        return t === Ft(o) && (u ? Qs(a, l) && Vi(t, "set", s, a) : Vi(t, "add", s, a)),
            p
    }

    deleteProperty(t, s) {
        const a = Wt(t, s);
        t[s];
        const o = Reflect.deleteProperty(t, s);
        return o && a && Vi(t, "delete", s, void 0),
            o
    }

    has(t, s) {
        const a = Reflect.has(t, s);
        return (!ei(s) || !Dy.has(s)) && Xs(t, "has", s),
            a
    }

    ownKeys(t) {
        return Xs(t, "iterate", Ze(t) ? "length" : Ga),
            Reflect.ownKeys(t)
    }
}

class By extends Fy {
    constructor(t = !1) {
        super(!0, t)
    }

    set(t, s) {
        return !0
    }

    deleteProperty(t, s) {
        return !0
    }
}

const Sk = new $y
    , _k = new By
    , kk = new $y(!0)
    , Ck = new By(!0)
    , xh = e => e
    , gc = e => Reflect.getPrototypeOf(e);

function Ak(e, t, s) {
    return function (...a) {
        const o = this.__v_raw
            , l = Ft(o)
            , u = Br(l)
            , p = e === "entries" || e === Symbol.iterator && u
            , g = e === "keys" && u
            , y = o[e](...a)
            , v = s ? xh : t ? wh : js;
        return !t && Xs(l, "iterate", g ? yh : Ga),
            {
                next() {
                    const {value: w, done: C} = y.next();
                    return C ? {
                        value: w,
                        done: C
                    } : {
                        value: p ? [v(w[0]), v(w[1])] : v(w),
                        done: C
                    }
                },
                [Symbol.iterator]() {
                    return this
                }
            }
    }
}

function mc(e) {
    return function (...t) {
        return e === "delete" ? !1 : e === "clear" ? void 0 : this
    }
}

function Ek(e, t) {
    const s = {
        get(o) {
            const l = this.__v_raw
                , u = Ft(l)
                , p = Ft(o);
            e || (Qs(o, p) && Xs(u, "get", o),
                Xs(u, "get", p));
            const {has: g} = gc(u)
                , y = t ? xh : e ? wh : js;
            if (g.call(u, o))
                return y(l.get(o));
            if (g.call(u, p))
                return y(l.get(p));
            l !== u && l.get(o)
        },
        get size() {
            const o = this.__v_raw;
            return !e && Xs(Ft(o), "iterate", Ga),
                Reflect.get(o, "size", o)
        },
        has(o) {
            const l = this.__v_raw
                , u = Ft(l)
                , p = Ft(o);
            return e || (Qs(o, p) && Xs(u, "has", o),
                Xs(u, "has", p)),
                o === p ? l.has(o) : l.has(o) || l.has(p)
        },
        forEach(o, l) {
            const u = this
                , p = u.__v_raw
                , g = Ft(p)
                , y = t ? xh : e ? wh : js;
            return !e && Xs(g, "iterate", Ga),
                p.forEach((v, w) => o.call(l, y(v), y(w), u))
        }
    };
    return ns(s, e ? {
        add: mc("add"),
        set: mc("set"),
        delete: mc("delete"),
        clear: mc("clear")
    } : {
        add(o) {
            !t && !xn(o) && !Ca(o) && (o = Ft(o));
            const l = Ft(this);
            return gc(l).has.call(l, o) || (l.add(o),
                Vi(l, "add", o, o)),
                this
        },
        set(o, l) {
            !t && !xn(l) && !Ca(l) && (l = Ft(l));
            const u = Ft(this)
                , {has: p, get: g} = gc(u);
            let y = p.call(u, o);
            y || (o = Ft(o),
                y = p.call(u, o));
            const v = g.call(u, o);
            return u.set(o, l),
                y ? Qs(l, v) && Vi(u, "set", o, l) : Vi(u, "add", o, l),
                this
        },
        delete(o) {
            const l = Ft(this)
                , {has: u, get: p} = gc(l);
            let g = u.call(l, o);
            g || (o = Ft(o),
                g = u.call(l, o)),
            p && p.call(l, o);
            const y = l.delete(o);
            return g && Vi(l, "delete", o, void 0),
                y
        },
        clear() {
            const o = Ft(this)
                , l = o.size !== 0
                , u = o.clear();
            return l && Vi(o, "clear", void 0, void 0),
                u
        }
    }),
        ["keys", "values", "entries", Symbol.iterator].forEach(o => {
                s[o] = Ak(o, e, t)
            }
        ),
        s
}

function $u(e, t) {
    const s = Ek(e, t);
    return (a, o, l) => o === "__v_isReactive" ? !e : o === "__v_isReadonly" ? e : o === "__v_raw" ? a : Reflect.get(Wt(s, o) && o in a ? s : a, o, l)
}

const Tk = {
    get: $u(!1, !1)
}
    , Ik = {
    get: $u(!1, !0)
}
    , Pk = {
    get: $u(!0, !1)
}
    , Lk = {
    get: $u(!0, !0)
}
    , Hy = new WeakMap
    , Vy = new WeakMap
    , zy = new WeakMap
    , Wy = new WeakMap;

function Mk(e) {
    switch (e) {
        case "Object":
        case "Array":
            return 1;
        case "Map":
        case "Set":
        case "WeakMap":
        case "WeakSet":
            return 2;
        default:
            return 0
    }
}

function Ok(e) {
    return e.__v_skip || !Object.isExtensible(e) ? 0 : Mk(tk(e))
}

function ys(e) {
    return Ca(e) ? e : Hu(e, !1, Sk, Tk, Hy)
}

function Bu(e) {
    return Hu(e, !1, kk, Ik, Vy)
}

function Zi(e) {
    return Hu(e, !0, _k, Pk, zy)
}

function Rk(e) {
    return Hu(e, !0, Ck, Lk, Wy)
}

function Hu(e, t, s, a, o) {
    if (!At(e) || e.__v_raw && !(t && e.__v_isReactive))
        return e;
    const l = o.get(e);
    if (l)
        return l;
    const u = Ok(e);
    if (u === 0)
        return e;
    const p = new Proxy(e, u === 2 ? a : s);
    return o.set(e, p),
        p
}

function wa(e) {
    return Ca(e) ? wa(e.__v_raw) : !!(e && e.__v_isReactive)
}

function Ca(e) {
    return !!(e && e.__v_isReadonly)
}

function xn(e) {
    return !!(e && e.__v_isShallow)
}

function Vu(e) {
    return e ? !!e.__v_raw : !1
}

function Ft(e) {
    const t = e && e.__v_raw;
    return t ? Ft(t) : e
}

function vl(e) {
    return !Wt(e, "__v_skip") && Object.isExtensible(e) && ky(e, "__v_skip", !0),
        e
}

const js = e => At(e) ? ys(e) : e
    , wh = e => At(e) ? Zi(e) : e;

function Qt(e) {
    return e ? e.__v_isRef === !0 : !1
}

function Se(e) {
    return Uy(e, !1)
}

function Bs(e) {
    return Uy(e, !0)
}

function Uy(e, t) {
    return Qt(e) ? e : new Nk(e, t)
}

class Nk {
    constructor(t, s) {
        this.dep = new Du,
            this.__v_isRef = !0,
            this.__v_isShallow = !1,
            this._rawValue = s ? t : Ft(t),
            this._value = s ? t : js(t),
            this.__v_isShallow = s
    }

    get value() {
        return this.dep.track(),
            this._value
    }

    set value(t) {
        const s = this._rawValue
            , a = this.__v_isShallow || xn(t) || Ca(t);
        t = a ? t : Ft(t),
        Qs(t, s) && (this._rawValue = t,
            this._value = a ? t : js(t),
            this.dep.trigger())
    }
}

function Dk(e) {
    e.dep && e.dep.trigger()
}

function D(e) {
    return Qt(e) ? e.value : e
}

function Fk(e) {
    return nt(e) ? e() : D(e)
}

const $k = {
    get: (e, t, s) => t === "__v_raw" ? e : D(Reflect.get(e, t, s)),
    set: (e, t, s, a) => {
        const o = e[t];
        return Qt(o) && !Qt(s) ? (o.value = s,
            !0) : Reflect.set(e, t, s, a)
    }
};

function zf(e) {
    return wa(e) ? e : new Proxy(e, $k)
}

class Bk {
    constructor(t) {
        this.__v_isRef = !0,
            this._value = void 0;
        const s = this.dep = new Du
            , {get: a, set: o} = t(s.track.bind(s), s.trigger.bind(s));
        this._get = a,
            this._set = o
    }

    get value() {
        return this._value = this._get()
    }

    set value(t) {
        this._set(t)
    }
}

function Wf(e) {
    return new Bk(e)
}

function ai(e) {
    const t = Ze(e) ? new Array(e.length) : {};
    for (const s in e)
        t[s] = Yy(e, s);
    return t
}

class Hk {
    constructor(t, s, a) {
        this._object = t,
            this._key = s,
            this._defaultValue = a,
            this.__v_isRef = !0,
            this._value = void 0
    }

    get value() {
        const t = this._object[this._key];
        return this._value = t === void 0 ? this._defaultValue : t
    }

    set value(t) {
        this._object[this._key] = t
    }

    get dep() {
        return vk(Ft(this._object), this._key)
    }
}

class Vk {
    constructor(t) {
        this._getter = t,
            this.__v_isRef = !0,
            this.__v_isReadonly = !0,
            this._value = void 0
    }

    get value() {
        return this._value = this._getter()
    }
}

function ks(e, t, s) {
    return Qt(e) ? e : nt(e) ? new Vk(e) : At(e) && arguments.length > 1 ? Yy(e, t, s) : Se(e)
}

function Yy(e, t, s) {
    const a = e[t];
    return Qt(a) ? a : new Hk(e, t, s)
}

class zk {
    constructor(t, s, a) {
        this.fn = t,
            this.setter = s,
            this._value = void 0,
            this.dep = new Du(this),
            this.__v_isRef = !0,
            this.deps = void 0,
            this.depsTail = void 0,
            this.flags = 16,
            this.globalVersion = gl - 1,
            this.next = void 0,
            this.effect = this,
            this.__v_isReadonly = !s,
            this.isSSR = a
    }

    notify() {
        if (this.flags |= 16,
        !(this.flags & 8) && rs !== this)
            return Py(this, !0),
                !0
    }

    get value() {
        const t = this.dep.track();
        return Oy(this),
        t && (t.version = this.dep.version),
            this._value
    }

    set value(t) {
        this.setter && this.setter(t)
    }
}

function Wk(e, t, s = !1) {
    let a, o;
    return nt(e) ? a = e : (a = e.get,
        o = e.set),
        new zk(a, o, s)
}

const Uk = {
    GET: "get",
    HAS: "has",
    ITERATE: "iterate"
}
    , Yk = {
    SET: "set",
    ADD: "add",
    DELETE: "delete",
    CLEAR: "clear"
}
    , vc = {}
    , iu = new WeakMap;
let fa;

function Xk() {
    return fa
}

function Xy(e, t = !1, s = fa) {
    if (s) {
        let a = iu.get(s);
        a || iu.set(s, a = []),
            a.push(e)
    }
}

function jk(e, t, s = Ut) {
    const {immediate: a, deep: o, once: l, scheduler: u, augmentJob: p, call: g} = s
        , y = F => o ? F : xn(F) || o === !1 || o === 0 ? zi(F, 1) : zi(F);
    let v, w, C, T, I = !1, A = !1;
    if (Qt(e) ? (w = () => e.value,
        I = xn(e)) : wa(e) ? (w = () => y(e),
        I = !0) : Ze(e) ? (A = !0,
        I = e.some(F => wa(F) || xn(F)),
        w = () => e.map(F => {
                if (Qt(F))
                    return F.value;
                if (wa(F))
                    return y(F);
                if (nt(F))
                    return g ? g(F, 2) : F()
            }
        )) : nt(e) ? t ? w = g ? () => g(e, 2) : e : w = () => {
            if (C) {
                La();
                try {
                    C()
                } finally {
                    Ma()
                }
            }
            const F = fa;
            fa = v;
            try {
                return g ? g(e, 3, [T]) : e(T)
            } finally {
                fa = F
            }
        }
        : w = Ht,
    t && o) {
        const F = w
            , $ = o === !0 ? 1 / 0 : o;
        w = () => zi(F(), $)
    }
    const R = Ru()
        , P = () => {
            v.stop(),
            R && R.active && Nf(R.effects, v)
        }
    ;
    if (l && t) {
        const F = t;
        t = (...$) => {
            F(...$),
                P()
        }
    }
    let M = A ? new Array(e.length).fill(vc) : vc;
    const O = F => {
            if (!(!(v.flags & 1) || !v.dirty && !F))
                if (t) {
                    const $ = v.run();
                    if (o || I || (A ? $.some((V, G) => Qs(V, M[G])) : Qs($, M))) {
                        C && C();
                        const V = fa;
                        fa = v;
                        try {
                            const G = [$, M === vc ? void 0 : A && M[0] === vc ? [] : M, T];
                            g ? g(t, 3, G) : t(...G),
                                M = $
                        } finally {
                            fa = V
                        }
                    }
                } else
                    v.run()
        }
    ;
    return p && p(O),
        v = new pl(w),
        v.scheduler = u ? () => u(O, !1) : O,
        T = F => Xy(F, !1, v),
        C = v.onStop = () => {
            const F = iu.get(v);
            if (F) {
                if (g)
                    g(F, 4);
                else
                    for (const $ of F)
                        $();
                iu.delete(v)
            }
        }
        ,
        t ? a ? O(!0) : M = v.run() : u ? u(O.bind(null, !0), !0) : v.run(),
        P.pause = v.pause.bind(v),
        P.resume = v.resume.bind(v),
        P.stop = P,
        P
}

function zi(e, t = 1 / 0, s) {
    if (t <= 0 || !At(e) || e.__v_skip || (s = s || new Set,
        s.has(e)))
        return e;
    if (s.add(e),
        t--,
        Qt(e))
        zi(e.value, t, s);
    else if (Ze(e))
        for (let a = 0; a < e.length; a++)
            zi(e[a], t, s);
    else if (cr(e) || Br(e))
        e.forEach(a => {
                zi(a, t, s)
            }
        );
    else if (er(e)) {
        for (const a in e)
            zi(e[a], t, s);
        for (const a of Object.getOwnPropertySymbols(e))
            Object.prototype.propertyIsEnumerable.call(e, a) && zi(e[a], t, s)
    }
    return e
}

/**
 * @vue/runtime-core v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/
const jy = [];

function Gk(e) {
    jy.push(e)
}

function qk() {
    jy.pop()
}

function Kk(e, t) {
}

const Zk = {
    SETUP_FUNCTION: 0,
    0: "SETUP_FUNCTION",
    RENDER_FUNCTION: 1,
    1: "RENDER_FUNCTION",
    NATIVE_EVENT_HANDLER: 5,
    5: "NATIVE_EVENT_HANDLER",
    COMPONENT_EVENT_HANDLER: 6,
    6: "COMPONENT_EVENT_HANDLER",
    VNODE_HOOK: 7,
    7: "VNODE_HOOK",
    DIRECTIVE_HOOK: 8,
    8: "DIRECTIVE_HOOK",
    TRANSITION_HOOK: 9,
    9: "TRANSITION_HOOK",
    APP_ERROR_HANDLER: 10,
    10: "APP_ERROR_HANDLER",
    APP_WARN_HANDLER: 11,
    11: "APP_WARN_HANDLER",
    FUNCTION_REF: 12,
    12: "FUNCTION_REF",
    ASYNC_COMPONENT_LOADER: 13,
    13: "ASYNC_COMPONENT_LOADER",
    SCHEDULER: 14,
    14: "SCHEDULER",
    COMPONENT_UPDATE: 15,
    15: "COMPONENT_UPDATE",
    APP_UNMOUNT_CLEANUP: 16,
    16: "APP_UNMOUNT_CLEANUP"
}
    , Jk = {
    sp: "serverPrefetch hook",
    bc: "beforeCreate hook",
    c: "created hook",
    bm: "beforeMount hook",
    m: "mounted hook",
    bu: "beforeUpdate hook",
    u: "updated",
    bum: "beforeUnmount hook",
    um: "unmounted hook",
    a: "activated hook",
    da: "deactivated hook",
    ec: "errorCaptured hook",
    rtc: "renderTracked hook",
    rtg: "renderTriggered hook",
    0: "setup function",
    1: "render function",
    2: "watcher getter",
    3: "watcher callback",
    4: "watcher cleanup function",
    5: "native event handler",
    6: "component event handler",
    7: "vnode hook",
    8: "directive hook",
    9: "transition hook",
    10: "app errorHandler",
    11: "app warnHandler",
    12: "ref function",
    13: "async component loader",
    14: "scheduler flush",
    15: "component update",
    16: "app unmount cleanup function"
};

function xo(e, t, s, a) {
    try {
        return a ? e(...a) : e()
    } catch (o) {
        ur(o, t, s)
    }
}

function Mn(e, t, s, a) {
    if (nt(e)) {
        const o = xo(e, t, s, a);
        return o && fl(o) && o.catch(l => {
                ur(l, t, s)
            }
        ),
            o
    }
    if (Ze(e)) {
        const o = [];
        for (let l = 0; l < e.length; l++)
            o.push(Mn(e[l], t, s, a));
        return o
    }
}

function ur(e, t, s, a = !0) {
    const o = t ? t.vnode : null
        , {errorHandler: l, throwUnhandledErrorInProduction: u} = t && t.appContext.config || Ut;
    if (t) {
        let p = t.parent;
        const g = t.proxy
            , y = `https://vuejs.org/error-reference/#runtime-${s}`;
        for (; p;) {
            const v = p.ec;
            if (v) {
                for (let w = 0; w < v.length; w++)
                    if (v[w](e, g, y) === !1)
                        return
            }
            p = p.parent
        }
        if (l) {
            La(),
                xo(l, null, 10, [e, g, y]),
                Ma();
            return
        }
    }
    Qk(e, s, o, a, u)
}

function Qk(e, t, s, a = !0, o = !1) {
    if (o)
        throw e;
    console.error(e)
}

const en = [];
let fi = -1;
const Wr = [];
let pa = null
    , Er = 0;
const Gy = Promise.resolve();
let au = null;

function xt(e) {
    const t = au || Gy;
    return e ? t.then(this ? e.bind(this) : e) : t
}

function eC(e) {
    let t = fi + 1
        , s = en.length;
    for (; t < s;) {
        const a = t + s >>> 1
            , o = en[a]
            , l = yl(o);
        l < e || l === e && o.flags & 2 ? t = a + 1 : s = a
    }
    return t
}

function Uf(e) {
    if (!(e.flags & 1)) {
        const t = yl(e)
            , s = en[en.length - 1];
        !s || !(e.flags & 2) && t >= yl(s) ? en.push(e) : en.splice(eC(t), 0, e),
            e.flags |= 1,
            qy()
    }
}

function qy() {
    au || (au = Gy.then(Ky))
}

function bl(e) {
    Ze(e) ? Wr.push(...e) : pa && e.id === -1 ? pa.splice(Er + 1, 0, e) : e.flags & 1 || (Wr.push(e),
        e.flags |= 1),
        qy()
}

function Ng(e, t, s = fi + 1) {
    for (; s < en.length; s++) {
        const a = en[s];
        if (a && a.flags & 2) {
            if (e && a.id !== e.uid)
                continue;
            en.splice(s, 1),
                s--,
            a.flags & 4 && (a.flags &= -2),
                a(),
            a.flags & 4 || (a.flags &= -2)
        }
    }
}

function ru(e) {
    if (Wr.length) {
        const t = [...new Set(Wr)].sort((s, a) => yl(s) - yl(a));
        if (Wr.length = 0,
            pa) {
            pa.push(...t);
            return
        }
        for (pa = t,
                 Er = 0; Er < pa.length; Er++) {
            const s = pa[Er];
            s.flags & 4 && (s.flags &= -2),
            s.flags & 8 || s(),
                s.flags &= -2
        }
        pa = null,
            Er = 0
    }
}

const yl = e => e.id == null ? e.flags & 2 ? -1 : 1 / 0 : e.id;

function Ky(e) {
    try {
        for (fi = 0; fi < en.length; fi++) {
            const t = en[fi];
            t && !(t.flags & 8) && (t.flags & 4 && (t.flags &= -2),
                xo(t, t.i, t.i ? 15 : 14),
            t.flags & 4 || (t.flags &= -2))
        }
    } finally {
        for (; fi < en.length; fi++) {
            const t = en[fi];
            t && (t.flags &= -2)
        }
        fi = -1,
            en.length = 0,
            ru(),
            au = null,
        (en.length || Wr.length) && Ky()
    }
}

let Tr, bc = [];

function Zy(e, t) {
    var s, a;
    Tr = e,
        Tr ? (Tr.enabled = !0,
            bc.forEach(({event: o, args: l}) => Tr.emit(o, ...l)),
            bc = []) : typeof window < "u" && window.HTMLElement && !((a = (s = window.navigator) == null ? void 0 : s.userAgent) != null && a.includes("jsdom")) ? ((t.__VUE_DEVTOOLS_HOOK_REPLAY__ = t.__VUE_DEVTOOLS_HOOK_REPLAY__ || []).push(l => {
                Zy(l, t)
            }
        ),
            setTimeout(() => {
                    Tr || (t.__VUE_DEVTOOLS_HOOK_REPLAY__ = null,
                        bc = [])
                }
                , 3e3)) : bc = []
}

let Ps = null
    , zu = null;

function xl(e) {
    const t = Ps;
    return Ps = e,
        zu = e && e.type.__scopeId || null,
        t
}

function tC(e) {
    zu = e
}

function sC() {
    zu = null
}

const nC = e => se;

function se(e, t = Ps, s) {
    if (!t || e._n)
        return e;
    const a = (...o) => {
            a._d && Ih(-1);
            const l = xl(t);
            let u;
            try {
                u = e(...o)
            } finally {
                xl(l),
                a._d && Ih(1)
            }
            return u
        }
    ;
    return a._n = !0,
        a._c = !0,
        a._d = !0,
        a
}

function _t(e, t) {
    if (Ps === null)
        return e;
    const s = Zl(Ps)
        , a = e.dirs || (e.dirs = []);
    for (let o = 0; o < t.length; o++) {
        let [l, u, p, g = Ut] = t[o];
        l && (nt(l) && (l = {
            mounted: l,
            updated: l
        }),
        l.deep && zi(u),
            a.push({
                dir: l,
                instance: s,
                value: u,
                oldValue: void 0,
                arg: p,
                modifiers: g
            }))
    }
    return e
}

function gi(e, t, s, a) {
    const o = e.dirs
        , l = t && t.dirs;
    for (let u = 0; u < o.length; u++) {
        const p = o[u];
        l && (p.oldValue = l[u].value);
        let g = p.dir[a];
        g && (La(),
            Mn(g, s, 8, [e.el, p, e, t]),
            Ma())
    }
}

const Jy = Symbol("_vte")
    , Qy = e => e.__isTeleport
    , Zo = e => e && (e.disabled || e.disabled === "")
    , Dg = e => e && (e.defer || e.defer === "")
    , Fg = e => typeof SVGElement < "u" && e instanceof SVGElement
    , $g = e => typeof MathMLElement == "function" && e instanceof MathMLElement
    , Sh = (e, t) => {
    const s = e && e.to;
    return pt(s) ? t ? t(s) : null : s
}
    , e0 = {
    name: "Teleport",
    __isTeleport: !0,
    process(e, t, s, a, o, l, u, p, g, y) {
        const {mc: v, pc: w, pbc: C, o: {insert: T, querySelector: I, createText: A, createComment: R}} = y
            , P = Zo(t.props);
        let {shapeFlag: M, children: O, dynamicChildren: F} = t;
        if (e == null) {
            const $ = t.el = A("")
                , V = t.anchor = A("");
            T($, s, a),
                T(V, s, a);
            const G = (te, ne) => {
                    M & 16 && (o && o.isCE && (o.ce._teleportTarget = te),
                        v(O, te, ne, o, l, u, p, g))
                }
                , ie = () => {
                    const te = t.target = Sh(t.props, I)
                        , ne = s0(te, t, A, T);
                    te && (u !== "svg" && Fg(te) ? u = "svg" : u !== "mathml" && $g(te) && (u = "mathml"),
                    P || (G(te, ne),
                        Hc(t, !1)))
                }
            ;
            P && (G(s, V),
                Hc(t, !0)),
                Dg(t.props) ? Es(() => {
                        ie(),
                            t.el.__isMounted = !0
                    }
                    , l) : ie()
        } else {
            if (Dg(t.props) && !e.el.__isMounted) {
                Es(() => {
                        e0.process(e, t, s, a, o, l, u, p, g, y),
                            delete e.el.__isMounted
                    }
                    , l);
                return
            }
            t.el = e.el,
                t.targetStart = e.targetStart;
            const $ = t.anchor = e.anchor
                , V = t.target = e.target
                , G = t.targetAnchor = e.targetAnchor
                , ie = Zo(e.props)
                , te = ie ? s : V
                , ne = ie ? $ : G;
            if (u === "svg" || Fg(V) ? u = "svg" : (u === "mathml" || $g(V)) && (u = "mathml"),
                F ? (C(e.dynamicChildren, F, te, o, l, u, p),
                    sp(e, t, !0)) : g || w(e, t, te, ne, o, l, u, p, !1),
                P)
                ie ? t.props && e.props && t.props.to !== e.props.to && (t.props.to = e.props.to) : yc(t, s, $, y, 1);
            else if ((t.props && t.props.to) !== (e.props && e.props.to)) {
                const le = t.target = Sh(t.props, I);
                le && yc(t, le, null, y, 0)
            } else
                ie && yc(t, V, G, y, 1);
            Hc(t, P)
        }
    },
    remove(e, t, s, {um: a, o: {remove: o}}, l) {
        const {shapeFlag: u, children: p, anchor: g, targetStart: y, targetAnchor: v, target: w, props: C} = e;
        if (w && (o(y),
            o(v)),
        l && o(g),
        u & 16) {
            const T = l || !Zo(C);
            for (let I = 0; I < p.length; I++) {
                const A = p[I];
                a(A, t, s, T, !!A.dynamicChildren)
            }
        }
    },
    move: yc,
    hydrate: iC
};

function yc(e, t, s, {o: {insert: a}, m: o}, l = 2) {
    l === 0 && a(e.targetAnchor, t, s);
    const {el: u, anchor: p, shapeFlag: g, children: y, props: v} = e
        , w = l === 2;
    if (w && a(u, t, s),
    (!w || Zo(v)) && g & 16)
        for (let C = 0; C < y.length; C++)
            o(y[C], t, s, 2);
    w && a(p, t, s)
}

function iC(e, t, s, a, o, l, {o: {nextSibling: u, parentNode: p, querySelector: g, insert: y, createText: v}}, w) {
    const C = t.target = Sh(t.props, g);
    if (C) {
        const T = Zo(t.props)
            , I = C._lpa || C.firstChild;
        if (t.shapeFlag & 16)
            if (T)
                t.anchor = w(u(e), t, p(e), s, a, o, l),
                    t.targetStart = I,
                    t.targetAnchor = I && u(I);
            else {
                t.anchor = u(e);
                let A = I;
                for (; A;) {
                    if (A && A.nodeType === 8) {
                        if (A.data === "teleport start anchor")
                            t.targetStart = A;
                        else if (A.data === "teleport anchor") {
                            t.targetAnchor = A,
                                C._lpa = t.targetAnchor && u(t.targetAnchor);
                            break
                        }
                    }
                    A = u(A)
                }
                t.targetAnchor || s0(C, t, v, y),
                    w(I && u(I), t, C, s, a, o, l)
            }
        Hc(t, T)
    }
    return t.anchor && u(t.anchor)
}

const t0 = e0;

function Hc(e, t) {
    const s = e.ctx;
    if (s && s.ut) {
        let a, o;
        for (t ? (a = e.el,
            o = e.anchor) : (a = e.targetStart,
            o = e.targetAnchor); a && a !== o;)
            a.nodeType === 1 && a.setAttribute("data-v-owner", s.uid),
                a = a.nextSibling;
        s.ut()
    }
}

function s0(e, t, s, a) {
    const o = t.targetStart = s("")
        , l = t.targetAnchor = s("");
    return o[Jy] = l,
    e && (a(o, e),
        a(l, e)),
        l
}

const ga = Symbol("_leaveCb")
    , xc = Symbol("_enterCb");

function Yf() {
    const e = {
        isMounted: !1,
        isLeaving: !1,
        isUnmounting: !1,
        leavingVNodes: new Map
    };
    return $t(() => {
            e.isMounted = !0
        }
    ),
        us(() => {
                e.isUnmounting = !0
            }
        ),
        e
}

const kn = [Function, Array]
    , Xf = {
    mode: String,
    appear: Boolean,
    persisted: Boolean,
    onBeforeEnter: kn,
    onEnter: kn,
    onAfterEnter: kn,
    onEnterCancelled: kn,
    onBeforeLeave: kn,
    onLeave: kn,
    onAfterLeave: kn,
    onLeaveCancelled: kn,
    onBeforeAppear: kn,
    onAppear: kn,
    onAfterAppear: kn,
    onAppearCancelled: kn
}
    , n0 = e => {
    const t = e.subTree;
    return t.component ? n0(t.component) : t
}
    , aC = {
    name: "BaseTransition",
    props: Xf,
    setup(e, {slots: t}) {
        const s = Et()
            , a = Yf();
        return () => {
            const o = t.default && Wu(t.default(), !0);
            if (!o || !o.length)
                return;
            const l = i0(o)
                , u = Ft(e)
                , {mode: p} = u;
            if (a.isLeaving)
                return Rd(l);
            const g = Bg(l);
            if (!g)
                return Rd(l);
            let y = Jr(g, u, a, s, w => y = w);
            g.type !== ws && Gi(g, y);
            let v = s.subTree && Bg(s.subTree);
            if (v && v.type !== ws && !Yn(g, v) && n0(s).type !== ws) {
                let w = Jr(v, u, a, s);
                if (Gi(v, w),
                p === "out-in" && g.type !== ws)
                    return a.isLeaving = !0,
                        w.afterLeave = () => {
                            a.isLeaving = !1,
                            s.job.flags & 8 || s.update(),
                                delete w.afterLeave,
                                v = void 0
                        }
                        ,
                        Rd(l);
                p === "in-out" && g.type !== ws ? w.delayLeave = (C, T, I) => {
                        const A = r0(a, v);
                        A[String(v.key)] = v,
                            C[ga] = () => {
                                T(),
                                    C[ga] = void 0,
                                    delete y.delayedLeave,
                                    v = void 0
                            }
                            ,
                            y.delayedLeave = () => {
                                I(),
                                    delete y.delayedLeave,
                                    v = void 0
                            }
                    }
                    : v = void 0
            } else
                v && (v = void 0);
            return l
        }
    }
};

function i0(e) {
    let t = e[0];
    if (e.length > 1) {
        for (const s of e)
            if (s.type !== ws) {
                t = s;
                break
            }
    }
    return t
}

const a0 = aC;

function r0(e, t) {
    const {leavingVNodes: s} = e;
    let a = s.get(t.type);
    return a || (a = Object.create(null),
        s.set(t.type, a)),
        a
}

function Jr(e, t, s, a, o) {
    const {
        appear: l,
        mode: u,
        persisted: p = !1,
        onBeforeEnter: g,
        onEnter: y,
        onAfterEnter: v,
        onEnterCancelled: w,
        onBeforeLeave: C,
        onLeave: T,
        onAfterLeave: I,
        onLeaveCancelled: A,
        onBeforeAppear: R,
        onAppear: P,
        onAfterAppear: M,
        onAppearCancelled: O
    } = t
        , F = String(e.key)
        , $ = r0(s, e)
        , V = (te, ne) => {
        te && Mn(te, a, 9, ne)
    }
        , G = (te, ne) => {
        const le = ne[1];
        V(te, ne),
            Ze(te) ? te.every(oe => oe.length <= 1) && le() : te.length <= 1 && le()
    }
        , ie = {
        mode: u,
        persisted: p,
        beforeEnter(te) {
            let ne = g;
            if (!s.isMounted)
                if (l)
                    ne = R || g;
                else
                    return;
            te[ga] && te[ga](!0);
            const le = $[F];
            le && Yn(e, le) && le.el[ga] && le.el[ga](),
                V(ne, [te])
        },
        enter(te) {
            let ne = y
                , le = v
                , oe = w;
            if (!s.isMounted)
                if (l)
                    ne = P || y,
                        le = M || v,
                        oe = O || w;
                else
                    return;
            let ve = !1;
            const be = te[xc] = de => {
                    ve || (ve = !0,
                        de ? V(oe, [te]) : V(le, [te]),
                    ie.delayedLeave && ie.delayedLeave(),
                        te[xc] = void 0)
                }
            ;
            ne ? G(ne, [te, be]) : be()
        },
        leave(te, ne) {
            const le = String(e.key);
            if (te[xc] && te[xc](!0),
                s.isUnmounting)
                return ne();
            V(C, [te]);
            let oe = !1;
            const ve = te[ga] = be => {
                    oe || (oe = !0,
                        ne(),
                        be ? V(A, [te]) : V(I, [te]),
                        te[ga] = void 0,
                    $[le] === e && delete $[le])
                }
            ;
            $[le] = e,
                T ? G(T, [te, ve]) : ve()
        },
        clone(te) {
            const ne = Jr(te, t, s, a, o);
            return o && o(ne),
                ne
        }
    };
    return ie
}

function Rd(e) {
    if (Gl(e))
        return e = ti(e),
            e.children = null,
            e
}

function Bg(e) {
    if (!Gl(e))
        return Qy(e.type) && e.children ? i0(e.children) : e;
    const {shapeFlag: t, children: s} = e;
    if (s) {
        if (t & 16)
            return s[0];
        if (t & 32 && nt(s.default))
            return s.default()
    }
}

function Gi(e, t) {
    e.shapeFlag & 6 && e.component ? (e.transition = t,
        Gi(e.component.subTree, t)) : e.shapeFlag & 128 ? (e.ssContent.transition = t.clone(e.ssContent),
        e.ssFallback.transition = t.clone(e.ssFallback)) : e.transition = t
}

function Wu(e, t = !1, s) {
    let a = []
        , o = 0;
    for (let l = 0; l < e.length; l++) {
        let u = e[l];
        const p = s == null ? u.key : String(s) + String(u.key != null ? u.key : l);
        u.type === Ct ? (u.patchFlag & 128 && o++,
            a = a.concat(Wu(u.children, t, p))) : (t || u.type !== ws) && a.push(p != null ? ti(u, {
            key: p
        }) : u)
    }
    if (o > 1)
        for (let l = 0; l < a.length; l++)
            a[l].patchFlag = -2;
    return a
}

/*! #__NO_SIDE_EFFECTS__ */
function Ce(e, t) {
    return nt(e) ? ns({
        name: e.name
    }, t, {
        setup: e
    }) : e
}

function rC() {
    const e = Et();
    return e ? (e.appContext.config.idPrefix || "v") + "-" + e.ids[0] + e.ids[1]++ : ""
}

function jf(e) {
    e.ids = [e.ids[0] + e.ids[2]++ + "-", 0, 0]
}

function oC(e) {
    const t = Et()
        , s = Bs(null);
    if (t) {
        const o = t.refs === Ut ? t.refs = {} : t.refs;
        Object.defineProperty(o, e, {
            enumerable: !0,
            get: () => s.value,
            set: l => s.value = l
        })
    }
    return s
}

function wl(e, t, s, a, o = !1) {
    if (Ze(e)) {
        e.forEach((I, A) => wl(I, t && (Ze(t) ? t[A] : t), s, a, o));
        return
    }
    if (Sa(a) && !o) {
        a.shapeFlag & 512 && a.type.__asyncResolved && a.component.subTree.component && wl(e, t, s, a.component.subTree);
        return
    }
    const l = a.shapeFlag & 4 ? Zl(a.component) : a.el
        , u = o ? null : l
        , {i: p, r: g} = e
        , y = t && t.r
        , v = p.refs === Ut ? p.refs = {} : p.refs
        , w = p.setupState
        , C = Ft(w)
        , T = w === Ut ? () => !1 : I => Wt(C, I);
    if (y != null && y !== g && (pt(y) ? (v[y] = null,
    T(y) && (w[y] = null)) : Qt(y) && (y.value = null)),
        nt(g))
        xo(g, p, 12, [u, v]);
    else {
        const I = pt(g)
            , A = Qt(g);
        if (I || A) {
            const R = () => {
                    if (e.f) {
                        const P = I ? T(g) ? w[g] : v[g] : g.value;
                        o ? Ze(P) && Nf(P, l) : Ze(P) ? P.includes(l) || P.push(l) : I ? (v[g] = [l],
                        T(g) && (w[g] = v[g])) : (g.value = [l],
                        e.k && (v[e.k] = g.value))
                    } else
                        I ? (v[g] = u,
                        T(g) && (w[g] = u)) : A && (g.value = u,
                        e.k && (v[e.k] = u))
                }
            ;
            u ? (R.id = -1,
                Es(R, s)) : R()
        }
    }
}

let Hg = !1;
const wr = () => {
    Hg || (console.error("Hydration completed but contains mismatches."),
        Hg = !0)
}
    , lC = e => e.namespaceURI.includes("svg") && e.tagName !== "foreignObject"
    , cC = e => e.namespaceURI.includes("MathML")
    , wc = e => {
    if (e.nodeType === 1) {
        if (lC(e))
            return "svg";
        if (cC(e))
            return "mathml"
    }
}
    , Nr = e => e.nodeType === 8;

function uC(e) {
    const {
        mt: t,
        p: s,
        o: {patchProp: a, createText: o, nextSibling: l, parentNode: u, remove: p, insert: g, createComment: y}
    } = e
        , v = (O, F) => {
        if (!F.hasChildNodes()) {
            s(null, O, F),
                ru(),
                F._vnode = O;
            return
        }
        w(F.firstChild, O, null, null, null),
            ru(),
            F._vnode = O
    }
        , w = (O, F, $, V, G, ie = !1) => {
        ie = ie || !!F.dynamicChildren;
        const te = Nr(O) && O.data === "["
            , ne = () => A(O, F, $, V, G, te)
            , {type: le, ref: oe, shapeFlag: ve, patchFlag: be} = F;
        let de = O.nodeType;
        F.el = O,
        be === -2 && (ie = !1,
            F.dynamicChildren = null);
        let J = null;
        switch (le) {
            case Kn:
                de !== 3 ? F.children === "" ? (g(F.el = o(""), u(O), O),
                    J = O) : J = ne() : (O.data !== F.children && (wr(),
                    O.data = F.children),
                    J = l(O));
                break;
            case ws:
                M(O) ? (J = l(O),
                    P(F.el = O.content.firstChild, O, $)) : de !== 8 || te ? J = ne() : J = l(O);
                break;
            case Ka:
                if (te && (O = l(O),
                    de = O.nodeType),
                de === 1 || de === 3) {
                    J = O;
                    const ue = !F.children.length;
                    for (let fe = 0; fe < F.staticCount; fe++)
                        ue && (F.children += J.nodeType === 1 ? J.outerHTML : J.data),
                        fe === F.staticCount - 1 && (F.anchor = J),
                            J = l(J);
                    return te ? l(J) : J
                } else
                    ne();
                break;
            case Ct:
                te ? J = I(O, F, $, V, G, ie) : J = ne();
                break;
            default:
                if (ve & 1)
                    (de !== 1 || F.type.toLowerCase() !== O.tagName.toLowerCase()) && !M(O) ? J = ne() : J = C(O, F, $, V, G, ie);
                else if (ve & 6) {
                    F.slotScopeIds = G;
                    const ue = u(O);
                    if (te ? J = R(O) : Nr(O) && O.data === "teleport start" ? J = R(O, O.data, "teleport end") : J = l(O),
                        t(F, ue, null, $, V, wc(ue), ie),
                    Sa(F) && !F.type.__asyncResolved) {
                        let fe;
                        te ? (fe = ae(Ct),
                            fe.anchor = J ? J.previousSibling : ue.lastChild) : fe = O.nodeType === 3 ? at("") : ae("div"),
                            fe.el = O,
                            F.component.subTree = fe
                    }
                } else
                    ve & 64 ? de !== 8 ? J = ne() : J = F.type.hydrate(O, F, $, V, G, ie, e, T) : ve & 128 && (J = F.type.hydrate(O, F, $, V, wc(u(O)), G, ie, e, w))
        }
        return oe != null && wl(oe, null, V, F),
            J
    }
        , C = (O, F, $, V, G, ie) => {
        ie = ie || !!F.dynamicChildren;
        const {type: te, props: ne, patchFlag: le, shapeFlag: oe, dirs: ve, transition: be} = F
            , de = te === "input" || te === "option";
        if (de || le !== -1) {
            ve && gi(F, null, $, "created");
            let J = !1;
            if (M(O)) {
                J = P0(null, be) && $ && $.vnode.props && $.vnode.props.appear;
                const fe = O.content.firstChild;
                J && be.beforeEnter(fe),
                    P(fe, O, $),
                    F.el = O = fe
            }
            if (oe & 16 && !(ne && (ne.innerHTML || ne.textContent))) {
                let fe = T(O.firstChild, F, O, $, V, G, ie);
                for (; fe;) {
                    Sc(O, 1) || wr();
                    const Me = fe;
                    fe = fe.nextSibling,
                        p(Me)
                }
            } else if (oe & 8) {
                let fe = F.children;
                fe[0] === `
` && (O.tagName === "PRE" || O.tagName === "TEXTAREA") && (fe = fe.slice(1)),
                O.textContent !== fe && (Sc(O, 0) || wr(),
                    O.textContent = F.children)
            }
            if (ne) {
                if (de || !ie || le & 48) {
                    const fe = O.tagName.includes("-");
                    for (const Me in ne)
                        (de && (Me.endsWith("value") || Me === "indeterminate") || jl(Me) && !Hr(Me) || Me[0] === "." || fe) && a(O, Me, null, ne[Me], void 0, $)
                } else if (ne.onClick)
                    a(O, "onClick", null, ne.onClick, void 0, $);
                else if (le & 4 && wa(ne.style))
                    for (const fe in ne.style)
                        ne.style[fe]
            }
            let ue;
            (ue = ne && ne.onVnodeBeforeMount) && on(ue, $, F),
            ve && gi(F, null, $, "beforeMount"),
            ((ue = ne && ne.onVnodeMounted) || ve || J) && B0(() => {
                    ue && on(ue, $, F),
                    J && be.enter(O),
                    ve && gi(F, null, $, "mounted")
                }
                , V)
        }
        return O.nextSibling
    }
        , T = (O, F, $, V, G, ie, te) => {
        te = te || !!F.dynamicChildren;
        const ne = F.children
            , le = ne.length;
        for (let oe = 0; oe < le; oe++) {
            const ve = te ? ne[oe] : ne[oe] = ln(ne[oe])
                , be = ve.type === Kn;
            O ? (be && !te && oe + 1 < le && ln(ne[oe + 1]).type === Kn && (g(o(O.data.slice(ve.children.length)), $, l(O)),
                O.data = ve.children),
                O = w(O, ve, V, G, ie, te)) : be && !ve.children ? g(ve.el = o(""), $) : (Sc($, 1) || wr(),
                s(null, ve, $, null, V, G, wc($), ie))
        }
        return O
    }
        , I = (O, F, $, V, G, ie) => {
        const {slotScopeIds: te} = F;
        te && (G = G ? G.concat(te) : te);
        const ne = u(O)
            , le = T(l(O), F, ne, $, V, G, ie);
        return le && Nr(le) && le.data === "]" ? l(F.anchor = le) : (wr(),
            g(F.anchor = y("]"), ne, le),
            le)
    }
        , A = (O, F, $, V, G, ie) => {
        if (Sc(O.parentElement, 1) || wr(),
            F.el = null,
            ie) {
            const le = R(O);
            for (; ;) {
                const oe = l(O);
                if (oe && oe !== le)
                    p(oe);
                else
                    break
            }
        }
        const te = l(O)
            , ne = u(O);
        return p(O),
            s(null, F, ne, te, $, V, wc(ne), G),
        $ && ($.vnode.el = F.el,
            Xu($, F.el)),
            te
    }
        , R = (O, F = "[", $ = "]") => {
        let V = 0;
        for (; O;)
            if (O = l(O),
            O && Nr(O) && (O.data === F && V++,
            O.data === $)) {
                if (V === 0)
                    return l(O);
                V--
            }
        return O
    }
        , P = (O, F, $) => {
        const V = F.parentNode;
        V && V.replaceChild(O, F);
        let G = $;
        for (; G;)
            G.vnode.el === F && (G.vnode.el = G.subTree.el = O),
                G = G.parent
    }
        , M = O => O.nodeType === 1 && O.tagName === "TEMPLATE";
    return [v, w]
}

const Vg = "data-allow-mismatch"
    , dC = {
    0: "text",
    1: "children",
    2: "class",
    3: "style",
    4: "attribute"
};

function Sc(e, t) {
    if (t === 0 || t === 1)
        for (; e && !e.hasAttribute(Vg);)
            e = e.parentElement;
    const s = e && e.getAttribute(Vg);
    if (s == null)
        return !1;
    if (s === "")
        return !0;
    {
        const a = s.split(",");
        return t === 0 && a.includes("children") ? !0 : s.split(",").includes(dC[t])
    }
}

const hC = Mu().requestIdleCallback || (e => setTimeout(e, 1))
    , fC = Mu().cancelIdleCallback || (e => clearTimeout(e))
    , pC = (e = 1e4) => t => {
        const s = hC(t, {
            timeout: e
        });
        return () => fC(s)
    }
;

function gC(e) {
    const {top: t, left: s, bottom: a, right: o} = e.getBoundingClientRect()
        , {innerHeight: l, innerWidth: u} = window;
    return (t > 0 && t < l || a > 0 && a < l) && (s > 0 && s < u || o > 0 && o < u)
}

const mC = e => (t, s) => {
        const a = new IntersectionObserver(o => {
                for (const l of o)
                    if (l.isIntersecting) {
                        a.disconnect(),
                            t();
                        break
                    }
            }
            , e);
        return s(o => {
                if (o instanceof Element) {
                    if (gC(o))
                        return t(),
                            a.disconnect(),
                            !1;
                    a.observe(o)
                }
            }
        ),
            () => a.disconnect()
    }
    , vC = e => t => {
        if (e) {
            const s = matchMedia(e);
            if (s.matches)
                t();
            else
                return s.addEventListener("change", t, {
                    once: !0
                }),
                    () => s.removeEventListener("change", t)
        }
    }
    , bC = (e = []) => (t, s) => {
        pt(e) && (e = [e]);
        let a = !1;
        const o = u => {
                a || (a = !0,
                    l(),
                    t(),
                    u.target.dispatchEvent(new u.constructor(u.type, u)))
            }
            , l = () => {
                s(u => {
                        for (const p of e)
                            u.removeEventListener(p, o)
                    }
                )
            }
        ;
        return s(u => {
                for (const p of e)
                    u.addEventListener(p, o, {
                        once: !0
                    })
            }
        ),
            l
    }
;

function yC(e, t) {
    if (Nr(e) && e.data === "[") {
        let s = 1
            , a = e.nextSibling;
        for (; a;) {
            if (a.nodeType === 1) {
                if (t(a) === !1)
                    break
            } else if (Nr(a))
                if (a.data === "]") {
                    if (--s === 0)
                        break
                } else
                    a.data === "[" && s++;
            a = a.nextSibling
        }
    } else
        t(e)
}

const Sa = e => !!e.type.__asyncLoader;

/*! #__NO_SIDE_EFFECTS__ */
function xC(e) {
    nt(e) && (e = {
        loader: e
    });
    const {
        loader: t,
        loadingComponent: s,
        errorComponent: a,
        delay: o = 200,
        hydrate: l,
        timeout: u,
        suspensible: p = !0,
        onError: g
    } = e;
    let y = null, v, w = 0;
    const C = () => (w++,
            y = null,
            T())
        , T = () => {
            let I;
            return y || (I = y = t().catch(A => {
                    if (A = A instanceof Error ? A : new Error(String(A)),
                        g)
                        return new Promise((R, P) => {
                                g(A, () => R(C()), () => P(A), w + 1)
                            }
                        );
                    throw A
                }
            ).then(A => I !== y && y ? y : (A && (A.__esModule || A[Symbol.toStringTag] === "Module") && (A = A.default),
                v = A,
                A)))
        }
    ;
    return Ce({
        name: "AsyncComponentWrapper",
        __asyncLoader: T,
        __asyncHydrate(I, A, R) {
            const P = l ? () => {
                    const M = l(R, O => yC(I, O));
                    M && (A.bum || (A.bum = [])).push(M)
                }
                : R;
            v ? P() : T().then(() => !A.isUnmounted && P())
        },
        get __asyncResolved() {
            return v
        },
        setup() {
            const I = Ts;
            if (jf(I),
                v)
                return () => Nd(v, I);
            const A = O => {
                    y = null,
                        ur(O, I, 13, !a)
                }
            ;
            if (p && I.suspense || Qr)
                return T().then(O => () => Nd(O, I)).catch(O => (A(O),
                    () => a ? ae(a, {
                        error: O
                    }) : null));
            const R = Se(!1)
                , P = Se()
                , M = Se(!!o);
            return o && setTimeout(() => {
                    M.value = !1
                }
                , o),
            u != null && setTimeout(() => {
                    if (!R.value && !P.value) {
                        const O = new Error(`Async component timed out after ${u}ms.`);
                        A(O),
                            P.value = O
                    }
                }
                , u),
                T().then(() => {
                        R.value = !0,
                        I.parent && Gl(I.parent.vnode) && I.parent.update()
                    }
                ).catch(O => {
                        A(O),
                            P.value = O
                    }
                ),
                () => {
                    if (R.value && v)
                        return Nd(v, I);
                    if (P.value && a)
                        return ae(a, {
                            error: P.value
                        });
                    if (s && !M.value)
                        return ae(s)
                }
        }
    })
}

function Nd(e, t) {
    const {ref: s, props: a, children: o, ce: l} = t.vnode
        , u = ae(e, a, o);
    return u.ref = s,
        u.ce = l,
        delete t.vnode.ce,
        u
}

const Gl = e => e.type.__isKeepAlive
    , wC = {
    name: "KeepAlive",
    __isKeepAlive: !0,
    props: {
        include: [String, RegExp, Array],
        exclude: [String, RegExp, Array],
        max: [String, Number]
    },
    setup(e, {slots: t}) {
        const s = Et()
            , a = s.ctx;
        if (!a.renderer)
            return () => {
                const M = t.default && t.default();
                return M && M.length === 1 ? M[0] : M
            }
                ;
        const o = new Map
            , l = new Set;
        let u = null;
        const p = s.suspense
            , {renderer: {p: g, m: y, um: v, o: {createElement: w}}} = a
            , C = w("div");
        a.activate = (M, O, F, $, V) => {
            const G = M.component;
            y(M, O, F, 0, p),
                g(G.vnode, M, O, F, G, p, $, M.slotScopeIds, V),
                Es(() => {
                        G.isDeactivated = !1,
                        G.a && zr(G.a);
                        const ie = M.props && M.props.onVnodeMounted;
                        ie && on(ie, G.parent, M)
                    }
                    , p)
        }
            ,
            a.deactivate = M => {
                const O = M.component;
                lu(O.m),
                    lu(O.a),
                    y(M, C, null, 1, p),
                    Es(() => {
                            O.da && zr(O.da);
                            const F = M.props && M.props.onVnodeUnmounted;
                            F && on(F, O.parent, M),
                                O.isDeactivated = !0
                        }
                        , p)
            }
        ;

        function T(M) {
            Dd(M),
                v(M, s, p, !0)
        }

        function I(M) {
            o.forEach((O, F) => {
                    const $ = Rh(O.type);
                    $ && !M($) && A(F)
                }
            )
        }

        function A(M) {
            const O = o.get(M);
            O && (!u || !Yn(O, u)) ? T(O) : u && Dd(u),
                o.delete(M),
                l.delete(M)
        }

        Ke(() => [e.include, e.exclude], ([M, O]) => {
                M && I(F => Yo(M, F)),
                O && I(F => !Yo(O, F))
            }
            , {
                flush: "post",
                deep: !0
            });
        let R = null;
        const P = () => {
                R != null && (cu(s.subTree.type) ? Es(() => {
                        o.set(R, _c(s.subTree))
                    }
                    , s.subTree.suspense) : o.set(R, _c(s.subTree)))
            }
        ;
        return $t(P),
            dr(P),
            us(() => {
                    o.forEach(M => {
                            const {subTree: O, suspense: F} = s
                                , $ = _c(O);
                            if (M.type === $.type && M.key === $.key) {
                                Dd($);
                                const V = $.component.da;
                                V && Es(V, F);
                                return
                            }
                            T(M)
                        }
                    )
                }
            ),
            () => {
                if (R = null,
                    !t.default)
                    return u = null;
                const M = t.default()
                    , O = M[0];
                if (M.length > 1)
                    return u = null,
                        M;
                if (!Hs(O) || !(O.shapeFlag & 4) && !(O.shapeFlag & 128))
                    return u = null,
                        O;
                let F = _c(O);
                if (F.type === ws)
                    return u = null,
                        F;
                const $ = F.type
                    , V = Rh(Sa(F) ? F.type.__asyncResolved || {} : $)
                    , {include: G, exclude: ie, max: te} = e;
                if (G && (!V || !Yo(G, V)) || ie && V && Yo(ie, V))
                    return F.shapeFlag &= -257,
                        u = F,
                        O;
                const ne = F.key == null ? $ : F.key
                    , le = o.get(ne);
                return F.el && (F = ti(F),
                O.shapeFlag & 128 && (O.ssContent = F)),
                    R = ne,
                    le ? (F.el = le.el,
                        F.component = le.component,
                    F.transition && Gi(F, F.transition),
                        F.shapeFlag |= 512,
                        l.delete(ne),
                        l.add(ne)) : (l.add(ne),
                    te && l.size > parseInt(te, 10) && A(l.values().next().value)),
                    F.shapeFlag |= 256,
                    u = F,
                    cu(O.type) ? O : F
            }
    }
}
    , SC = wC;

function Yo(e, t) {
    return Ze(e) ? e.some(s => Yo(s, t)) : pt(e) ? e.split(",").includes(t) : ek(e) ? (e.lastIndex = 0,
        e.test(t)) : !1
}

function Gf(e, t) {
    o0(e, "a", t)
}

function qf(e, t) {
    o0(e, "da", t)
}

function o0(e, t, s = Ts) {
    const a = e.__wdc || (e.__wdc = () => {
            let o = s;
            for (; o;) {
                if (o.isDeactivated)
                    return;
                o = o.parent
            }
            return e()
        }
    );
    if (Uu(t, a, s),
        s) {
        let o = s.parent;
        for (; o && o.parent;)
            Gl(o.parent.vnode) && _C(a, t, s, o),
                o = o.parent
    }
}

function _C(e, t, s, a) {
    const o = Uu(t, e, a, !0);
    hr(() => {
            Nf(a[t], o)
        }
        , s)
}

function Dd(e) {
    e.shapeFlag &= -257,
        e.shapeFlag &= -513
}

function _c(e) {
    return e.shapeFlag & 128 ? e.ssContent : e
}

function Uu(e, t, s = Ts, a = !1) {
    if (s) {
        const o = s[e] || (s[e] = [])
            , l = t.__weh || (t.__weh = (...u) => {
                La();
                const p = sr(s)
                    , g = Mn(t, s, e, u);
                return p(),
                    Ma(),
                    g
            }
        );
        return a ? o.unshift(l) : o.push(l),
            l
    }
}

const Ji = e => (t, s = Ts) => {
    (!Qr || e === "sp") && Uu(e, (...a) => t(...a), s)
}
    , ql = Ji("bm")
    , $t = Ji("m")
    , Kf = Ji("bu")
    , dr = Ji("u")
    , us = Ji("bum")
    , hr = Ji("um")
    , l0 = Ji("sp")
    , c0 = Ji("rtg")
    , u0 = Ji("rtc");

function d0(e, t = Ts) {
    Uu("ec", e, t)
}

const Zf = "components"
    , kC = "directives";

function Bt(e, t) {
    return Jf(Zf, e, !0, t) || e
}

const h0 = Symbol.for("v-ndc");

function Vt(e) {
    return pt(e) ? Jf(Zf, e, !1) || e : e || h0
}

function wo(e) {
    return Jf(kC, e)
}

function Jf(e, t, s = !0, a = !1) {
    const o = Ps || Ts;
    if (o) {
        const l = o.type;
        if (e === Zf) {
            const p = Rh(l, !1);
            if (p && (p === t || p === Ds(t) || p === yo(Ds(t))))
                return l
        }
        const u = zg(o[e] || l[e], t) || zg(o.appContext[e], t);
        return !u && a ? l : u
    }
}

function zg(e, t) {
    return e && (e[t] || e[Ds(t)] || e[yo(Ds(t))])
}

function wi(e, t, s, a) {
    let o;
    const l = s && s[a]
        , u = Ze(e);
    if (u || pt(e)) {
        const p = u && wa(e);
        let g = !1;
        p && (g = !xn(e),
            e = Fu(e)),
            o = new Array(e.length);
        for (let y = 0, v = e.length; y < v; y++)
            o[y] = t(g ? js(e[y]) : e[y], y, void 0, l && l[y])
    } else if (typeof e == "number") {
        o = new Array(e);
        for (let p = 0; p < e; p++)
            o[p] = t(p + 1, p, void 0, l && l[p])
    } else if (At(e))
        if (e[Symbol.iterator])
            o = Array.from(e, (p, g) => t(p, g, void 0, l && l[g]));
        else {
            const p = Object.keys(e);
            o = new Array(p.length);
            for (let g = 0, y = p.length; g < y; g++) {
                const v = p[g];
                o[g] = t(e[v], v, g, l && l[g])
            }
        }
    else
        o = [];
    return s && (s[a] = o),
        o
}

function Sl(e, t) {
    for (let s = 0; s < t.length; s++) {
        const a = t[s];
        if (Ze(a))
            for (let o = 0; o < a.length; o++)
                e[a[o].name] = a[o].fn;
        else
            a && (e[a.name] = a.key ? (...o) => {
                    const l = a.fn(...o);
                    return l && (l.key = a.key),
                        l
                }
                : a.fn)
    }
    return e
}

function De(e, t, s = {}, a, o) {
    if (Ps.ce || Ps.parent && Sa(Ps.parent) && Ps.parent.ce)
        return t !== "default" && (s.name = t),
            Z(),
            Te(Ct, null, [ae("slot", s, a && a())], 64);
    let l = e[t];
    l && l._c && (l._d = !1),
        Z();
    const u = l && Qf(l(s))
        , p = s.key || u && u.key
        , g = Te(Ct, {
        key: (p && !ei(p) ? p : `_${t}`) + (!u && a ? "_fb" : "")
    }, u || (a ? a() : []), u && e._ === 1 ? 64 : -2);
    return !o && g.scopeId && (g.slotScopeIds = [g.scopeId + "-s"]),
    l && l._c && (l._d = !0),
        g
}

function Qf(e) {
    return e.some(t => Hs(t) ? !(t.type === ws || t.type === Ct && !Qf(t.children)) : !0) ? e : null
}

function f0(e, t) {
    const s = {};
    for (const a in e)
        s[t && /[A-Z]/.test(a) ? `on:${a}` : Vr(a)] = e[a];
    return s
}

const _h = e => e ? U0(e) ? Zl(e) : _h(e.parent) : null
    , Jo = ns(Object.create(null), {
    $: e => e,
    $el: e => e.vnode.el,
    $data: e => e.data,
    $props: e => e.props,
    $attrs: e => e.attrs,
    $slots: e => e.slots,
    $refs: e => e.refs,
    $parent: e => _h(e.parent),
    $root: e => _h(e.root),
    $host: e => e.ce,
    $emit: e => e.emit,
    $options: e => ep(e),
    $forceUpdate: e => e.f || (e.f = () => {
            Uf(e.update)
        }
    ),
    $nextTick: e => e.n || (e.n = xt.bind(e.proxy)),
    $watch: e => QC.bind(e)
})
    , Fd = (e, t) => e !== Ut && !e.__isScriptSetup && Wt(e, t)
    , kh = {
    get({_: e}, t) {
        if (t === "__v_skip")
            return !0;
        const {ctx: s, setupState: a, data: o, props: l, accessCache: u, type: p, appContext: g} = e;
        let y;
        if (t[0] !== "$") {
            const T = u[t];
            if (T !== void 0)
                switch (T) {
                    case 1:
                        return a[t];
                    case 2:
                        return o[t];
                    case 4:
                        return s[t];
                    case 3:
                        return l[t]
                }
            else {
                if (Fd(a, t))
                    return u[t] = 1,
                        a[t];
                if (o !== Ut && Wt(o, t))
                    return u[t] = 2,
                        o[t];
                if ((y = e.propsOptions[0]) && Wt(y, t))
                    return u[t] = 3,
                        l[t];
                if (s !== Ut && Wt(s, t))
                    return u[t] = 4,
                        s[t];
                Ch && (u[t] = 0)
            }
        }
        const v = Jo[t];
        let w, C;
        if (v)
            return t === "$attrs" && Xs(e.attrs, "get", ""),
                v(e);
        if ((w = p.__cssModules) && (w = w[t]))
            return w;
        if (s !== Ut && Wt(s, t))
            return u[t] = 4,
                s[t];
        if (C = g.config.globalProperties,
            Wt(C, t))
            return C[t]
    },
    set({_: e}, t, s) {
        const {data: a, setupState: o, ctx: l} = e;
        return Fd(o, t) ? (o[t] = s,
            !0) : a !== Ut && Wt(a, t) ? (a[t] = s,
            !0) : Wt(e.props, t) || t[0] === "$" && t.slice(1) in e ? !1 : (l[t] = s,
            !0)
    },
    has({_: {data: e, setupState: t, accessCache: s, ctx: a, appContext: o, propsOptions: l}}, u) {
        let p;
        return !!s[u] || e !== Ut && Wt(e, u) || Fd(t, u) || (p = l[0]) && Wt(p, u) || Wt(a, u) || Wt(Jo, u) || Wt(o.config.globalProperties, u)
    },
    defineProperty(e, t, s) {
        return s.get != null ? e._.accessCache[t] = 0 : Wt(s, "value") && this.set(e, t, s.value, null),
            Reflect.defineProperty(e, t, s)
    }
}
    , CC = ns({}, kh, {
    get(e, t) {
        if (t !== Symbol.unscopables)
            return kh.get(e, t, e)
    },
    has(e, t) {
        return t[0] !== "_" && !ak(t)
    }
});

function AC() {
    return null
}

function EC() {
    return null
}

function TC(e) {
}

function IC(e) {
}

function PC() {
    return null
}

function LC() {
}

function MC(e, t) {
    return null
}

function _i() {
    return g0().slots
}

function p0() {
    return g0().attrs
}

function g0() {
    const e = Et();
    return e.setupContext || (e.setupContext = j0(e))
}

function _l(e) {
    return Ze(e) ? e.reduce((t, s) => (t[s] = null,
        t), {}) : e
}

function OC(e, t) {
    const s = _l(e);
    for (const a in t) {
        if (a.startsWith("__skip"))
            continue;
        let o = s[a];
        o ? Ze(o) || nt(o) ? o = s[a] = {
            type: o,
            default: t[a]
        } : o.default = t[a] : o === null && (o = s[a] = {
            default: t[a]
        }),
        o && t[`__skip_${a}`] && (o.skipFactory = !0)
    }
    return s
}

function RC(e, t) {
    return !e || !t ? e || t : Ze(e) && Ze(t) ? e.concat(t) : ns({}, _l(e), _l(t))
}

function NC(e, t) {
    const s = {};
    for (const a in e)
        t.includes(a) || Object.defineProperty(s, a, {
            enumerable: !0,
            get: () => e[a]
        });
    return s
}

function DC(e) {
    const t = Et();
    let s = e();
    return Lh(),
    fl(s) && (s = s.catch(a => {
            throw sr(t),
                a
        }
    )),
        [s, () => sr(t)]
}

let Ch = !0;

function FC(e) {
    const t = ep(e)
        , s = e.proxy
        , a = e.ctx;
    Ch = !1,
    t.beforeCreate && Wg(t.beforeCreate, e, "bc");
    const {
        data: o,
        computed: l,
        methods: u,
        watch: p,
        provide: g,
        inject: y,
        created: v,
        beforeMount: w,
        mounted: C,
        beforeUpdate: T,
        updated: I,
        activated: A,
        deactivated: R,
        beforeDestroy: P,
        beforeUnmount: M,
        destroyed: O,
        unmounted: F,
        render: $,
        renderTracked: V,
        renderTriggered: G,
        errorCaptured: ie,
        serverPrefetch: te,
        expose: ne,
        inheritAttrs: le,
        components: oe,
        directives: ve,
        filters: be
    } = t;
    if (y && $C(y, a, null),
        u)
        for (const ue in u) {
            const fe = u[ue];
            nt(fe) && (a[ue] = fe.bind(s))
        }
    if (o) {
        const ue = o.call(s, s);
        At(ue) && (e.data = ys(ue))
    }
    if (Ch = !0,
        l)
        for (const ue in l) {
            const fe = l[ue]
                , Me = nt(fe) ? fe.bind(s, s) : nt(fe.get) ? fe.get.bind(s, s) : Ht
                , Xe = !nt(fe) && nt(fe.set) ? fe.set.bind(s) : Ht
                , Be = re({
                get: Me,
                set: Xe
            });
            Object.defineProperty(a, ue, {
                enumerable: !0,
                configurable: !0,
                get: () => Be.value,
                set: je => Be.value = je
            })
        }
    if (p)
        for (const ue in p)
            m0(p[ue], a, s, ue);
    if (g) {
        const ue = nt(g) ? g.call(s) : g;
        Reflect.ownKeys(ue).forEach(fe => {
                Xt(fe, ue[fe])
            }
        )
    }
    v && Wg(v, e, "c");

    function J(ue, fe) {
        Ze(fe) ? fe.forEach(Me => ue(Me.bind(s))) : fe && ue(fe.bind(s))
    }

    if (J(ql, w),
        J($t, C),
        J(Kf, T),
        J(dr, I),
        J(Gf, A),
        J(qf, R),
        J(d0, ie),
        J(u0, V),
        J(c0, G),
        J(us, M),
        J(hr, F),
        J(l0, te),
        Ze(ne))
        if (ne.length) {
            const ue = e.exposed || (e.exposed = {});
            ne.forEach(fe => {
                    Object.defineProperty(ue, fe, {
                        get: () => s[fe],
                        set: Me => s[fe] = Me
                    })
                }
            )
        } else
            e.exposed || (e.exposed = {});
    $ && e.render === Ht && (e.render = $),
    le != null && (e.inheritAttrs = le),
    oe && (e.components = oe),
    ve && (e.directives = ve),
    te && jf(e)
}

function $C(e, t, s = Ht) {
    Ze(e) && (e = Ah(e));
    for (const a in e) {
        const o = e[a];
        let l;
        At(o) ? "default" in o ? l = st(o.from || a, o.default, !0) : l = st(o.from || a) : l = st(o),
            Qt(l) ? Object.defineProperty(t, a, {
                enumerable: !0,
                configurable: !0,
                get: () => l.value,
                set: u => l.value = u
            }) : t[a] = l
    }
}

function Wg(e, t, s) {
    Mn(Ze(e) ? e.map(a => a.bind(t.proxy)) : e.bind(t.proxy), t, s)
}

function m0(e, t, s, a) {
    let o = a.includes(".") ? N0(s, a) : () => s[a];
    if (pt(e)) {
        const l = t[e];
        nt(l) && Ke(o, l)
    } else if (nt(e))
        Ke(o, e.bind(s));
    else if (At(e))
        if (Ze(e))
            e.forEach(l => m0(l, t, s, a));
        else {
            const l = nt(e.handler) ? e.handler.bind(s) : t[e.handler];
            nt(l) && Ke(o, l, e)
        }
}

function ep(e) {
    const t = e.type
        , {mixins: s, extends: a} = t
        , {mixins: o, optionsCache: l, config: {optionMergeStrategies: u}} = e.appContext
        , p = l.get(t);
    let g;
    return p ? g = p : !o.length && !s && !a ? g = t : (g = {},
    o.length && o.forEach(y => ou(g, y, u, !0)),
        ou(g, t, u)),
    At(t) && l.set(t, g),
        g
}

function ou(e, t, s, a = !1) {
    const {mixins: o, extends: l} = t;
    l && ou(e, l, s, !0),
    o && o.forEach(u => ou(e, u, s, !0));
    for (const u in t)
        if (!(a && u === "expose")) {
            const p = BC[u] || s && s[u];
            e[u] = p ? p(e[u], t[u]) : t[u]
        }
    return e
}

const BC = {
    data: Ug,
    props: Yg,
    emits: Yg,
    methods: Xo,
    computed: Xo,
    beforeCreate: Ks,
    created: Ks,
    beforeMount: Ks,
    mounted: Ks,
    beforeUpdate: Ks,
    updated: Ks,
    beforeDestroy: Ks,
    beforeUnmount: Ks,
    destroyed: Ks,
    unmounted: Ks,
    activated: Ks,
    deactivated: Ks,
    errorCaptured: Ks,
    serverPrefetch: Ks,
    components: Xo,
    directives: Xo,
    watch: VC,
    provide: Ug,
    inject: HC
};

function Ug(e, t) {
    return t ? e ? function () {
            return ns(nt(e) ? e.call(this, this) : e, nt(t) ? t.call(this, this) : t)
        }
        : t : e
}

function HC(e, t) {
    return Xo(Ah(e), Ah(t))
}

function Ah(e) {
    if (Ze(e)) {
        const t = {};
        for (let s = 0; s < e.length; s++)
            t[e[s]] = e[s];
        return t
    }
    return e
}

function Ks(e, t) {
    return e ? [...new Set([].concat(e, t))] : t
}

function Xo(e, t) {
    return e ? ns(Object.create(null), e, t) : t
}

function Yg(e, t) {
    return e ? Ze(e) && Ze(t) ? [...new Set([...e, ...t])] : ns(Object.create(null), _l(e), _l(t ?? {})) : t
}

function VC(e, t) {
    if (!e)
        return t;
    if (!t)
        return e;
    const s = ns(Object.create(null), e);
    for (const a in t)
        s[a] = Ks(e[a], t[a]);
    return s
}

function v0() {
    return {
        app: null,
        config: {
            isNativeTag: J_,
            performance: !1,
            globalProperties: {},
            optionMergeStrategies: {},
            errorHandler: void 0,
            warnHandler: void 0,
            compilerOptions: {}
        },
        mixins: [],
        components: {},
        directives: {},
        provides: Object.create(null),
        optionsCache: new WeakMap,
        propsCache: new WeakMap,
        emitsCache: new WeakMap
    }
}

let zC = 0;

function WC(e, t) {
    return function (a, o = null) {
        nt(a) || (a = ns({}, a)),
        o != null && !At(o) && (o = null);
        const l = v0()
            , u = new WeakSet
            , p = [];
        let g = !1;
        const y = l.app = {
            _uid: zC++,
            _component: a,
            _props: o,
            _container: null,
            _context: l,
            _instance: null,
            version: q0,
            get config() {
                return l.config
            },
            set config(v) {
            },
            use(v, ...w) {
                return u.has(v) || (v && nt(v.install) ? (u.add(v),
                    v.install(y, ...w)) : nt(v) && (u.add(v),
                    v(y, ...w))),
                    y
            },
            mixin(v) {
                return l.mixins.includes(v) || l.mixins.push(v),
                    y
            },
            component(v, w) {
                return w ? (l.components[v] = w,
                    y) : l.components[v]
            },
            directive(v, w) {
                return w ? (l.directives[v] = w,
                    y) : l.directives[v]
            },
            mount(v, w, C) {
                if (!g) {
                    const T = y._ceVNode || ae(a, o);
                    return T.appContext = l,
                        C === !0 ? C = "svg" : C === !1 && (C = void 0),
                        w && t ? t(T, v) : e(T, v, C),
                        g = !0,
                        y._container = v,
                        v.__vue_app__ = y,
                        Zl(T.component)
                }
            },
            onUnmount(v) {
                p.push(v)
            },
            unmount() {
                g && (Mn(p, y._instance, 16),
                    e(null, y._container),
                    delete y._container.__vue_app__)
            },
            provide(v, w) {
                return l.provides[v] = w,
                    y
            },
            runWithContext(v) {
                const w = qa;
                qa = y;
                try {
                    return v()
                } finally {
                    qa = w
                }
            }
        };
        return y
    }
}

let qa = null;

function Xt(e, t) {
    if (Ts) {
        let s = Ts.provides;
        const a = Ts.parent && Ts.parent.provides;
        a === s && (s = Ts.provides = Object.create(a)),
            s[e] = t
    }
}

function st(e, t, s = !1) {
    const a = Ts || Ps;
    if (a || qa) {
        const o = qa ? qa._context.provides : a ? a.parent == null ? a.vnode.appContext && a.vnode.appContext.provides : a.parent.provides : void 0;
        if (o && e in o)
            return o[e];
        if (arguments.length > 1)
            return s && nt(t) ? t.call(a && a.proxy) : t
    }
}

function UC() {
    return !!(Ts || Ps || qa)
}

const b0 = {}
    , y0 = () => Object.create(b0)
    , x0 = e => Object.getPrototypeOf(e) === b0;

function YC(e, t, s, a = !1) {
    const o = {}
        , l = y0();
    e.propsDefaults = Object.create(null),
        w0(e, t, o, l);
    for (const u in e.propsOptions[0])
        u in o || (o[u] = void 0);
    s ? e.props = a ? o : Bu(o) : e.type.props ? e.props = o : e.props = l,
        e.attrs = l
}

function XC(e, t, s, a) {
    const {props: o, attrs: l, vnode: {patchFlag: u}} = e
        , p = Ft(o)
        , [g] = e.propsOptions;
    let y = !1;
    if ((a || u > 0) && !(u & 16)) {
        if (u & 8) {
            const v = e.vnode.dynamicProps;
            for (let w = 0; w < v.length; w++) {
                let C = v[w];
                if (Yu(e.emitsOptions, C))
                    continue;
                const T = t[C];
                if (g)
                    if (Wt(l, C))
                        T !== l[C] && (l[C] = T,
                            y = !0);
                    else {
                        const I = Ds(C);
                        o[I] = Eh(g, p, I, T, e, !1)
                    }
                else
                    T !== l[C] && (l[C] = T,
                        y = !0)
            }
        }
    } else {
        w0(e, t, o, l) && (y = !0);
        let v;
        for (const w in p)
            (!t || !Wt(t, w) && ((v = tn(w)) === w || !Wt(t, v))) && (g ? s && (s[w] !== void 0 || s[v] !== void 0) && (o[w] = Eh(g, p, w, void 0, e, !0)) : delete o[w]);
        if (l !== p)
            for (const w in l)
                (!t || !Wt(t, w)) && (delete l[w],
                    y = !0)
    }
    y && Vi(e.attrs, "set", "")
}

function w0(e, t, s, a) {
    const [o, l] = e.propsOptions;
    let u = !1, p;
    if (t)
        for (let g in t) {
            if (Hr(g))
                continue;
            const y = t[g];
            let v;
            o && Wt(o, v = Ds(g)) ? !l || !l.includes(v) ? s[v] = y : (p || (p = {}))[v] = y : Yu(e.emitsOptions, g) || (!(g in a) || y !== a[g]) && (a[g] = y,
                u = !0)
        }
    if (l) {
        const g = Ft(s)
            , y = p || Ut;
        for (let v = 0; v < l.length; v++) {
            const w = l[v];
            s[w] = Eh(o, g, w, y[w], e, !Wt(y, w))
        }
    }
    return u
}

function Eh(e, t, s, a, o, l) {
    const u = e[s];
    if (u != null) {
        const p = Wt(u, "default");
        if (p && a === void 0) {
            const g = u.default;
            if (u.type !== Function && !u.skipFactory && nt(g)) {
                const {propsDefaults: y} = o;
                if (s in y)
                    a = y[s];
                else {
                    const v = sr(o);
                    a = y[s] = g.call(null, t),
                        v()
                }
            } else
                a = g;
            o.ce && o.ce._setProp(s, a)
        }
        u[0] && (l && !p ? a = !1 : u[1] && (a === "" || a === tn(s)) && (a = !0))
    }
    return a
}

const jC = new WeakMap;

function S0(e, t, s = !1) {
    const a = s ? jC : t.propsCache
        , o = a.get(e);
    if (o)
        return o;
    const l = e.props
        , u = {}
        , p = [];
    let g = !1;
    if (!nt(e)) {
        const v = w => {
                g = !0;
                const [C, T] = S0(w, t, !0);
                ns(u, C),
                T && p.push(...T)
            }
        ;
        !s && t.mixins.length && t.mixins.forEach(v),
        e.extends && v(e.extends),
        e.mixins && e.mixins.forEach(v)
    }
    if (!l && !g)
        return At(e) && a.set(e, $r),
            $r;
    if (Ze(l))
        for (let v = 0; v < l.length; v++) {
            const w = Ds(l[v]);
            Xg(w) && (u[w] = Ut)
        }
    else if (l)
        for (const v in l) {
            const w = Ds(v);
            if (Xg(w)) {
                const C = l[v]
                    , T = u[w] = Ze(C) || nt(C) ? {
                    type: C
                } : ns({}, C)
                    , I = T.type;
                let A = !1
                    , R = !0;
                if (Ze(I))
                    for (let P = 0; P < I.length; ++P) {
                        const M = I[P]
                            , O = nt(M) && M.name;
                        if (O === "Boolean") {
                            A = !0;
                            break
                        } else
                            O === "String" && (R = !1)
                    }
                else
                    A = nt(I) && I.name === "Boolean";
                T[0] = A,
                    T[1] = R,
                (A || Wt(T, "default")) && p.push(w)
            }
        }
    const y = [u, p];
    return At(e) && a.set(e, y),
        y
}

function Xg(e) {
    return e[0] !== "$" && !Hr(e)
}

const _0 = e => e[0] === "_" || e === "$stable"
    , tp = e => Ze(e) ? e.map(ln) : [ln(e)]
    , GC = (e, t, s) => {
    if (t._n)
        return t;
    const a = se((...o) => tp(t(...o)), s);
    return a._c = !1,
        a
}
    , k0 = (e, t, s) => {
    const a = e._ctx;
    for (const o in e) {
        if (_0(o))
            continue;
        const l = e[o];
        if (nt(l))
            t[o] = GC(o, l, a);
        else if (l != null) {
            const u = tp(l);
            t[o] = () => u
        }
    }
}
    , C0 = (e, t) => {
    const s = tp(t);
    e.slots.default = () => s
}
    , A0 = (e, t, s) => {
    for (const a in t)
        (s || a !== "_") && (e[a] = t[a])
}
    , qC = (e, t, s) => {
    const a = e.slots = y0();
    if (e.vnode.shapeFlag & 32) {
        const o = t._;
        o ? (A0(a, t, s),
        s && ky(a, "_", o, !0)) : k0(t, a)
    } else
        t && C0(e, t)
}
    , KC = (e, t, s) => {
    const {vnode: a, slots: o} = e;
    let l = !0
        , u = Ut;
    if (a.shapeFlag & 32) {
        const p = t._;
        p ? s && p === 1 ? l = !1 : A0(o, t, s) : (l = !t.$stable,
            k0(t, o)),
            u = t
    } else
        t && (C0(e, t),
            u = {
                default: 1
            });
    if (l)
        for (const p in o)
            !_0(p) && u[p] == null && delete o[p]
}
    , Es = B0;

function E0(e) {
    return I0(e)
}

function T0(e) {
    return I0(e, uC)
}

function I0(e, t) {
    const s = Mu();
    s.__VUE__ = !0;
    const {
            insert: a,
            remove: o,
            patchProp: l,
            createElement: u,
            createText: p,
            createComment: g,
            setText: y,
            setElementText: v,
            parentNode: w,
            nextSibling: C,
            setScopeId: T = Ht,
            insertStaticContent: I
        } = e
        , A = (Y, W, ce, we = null, _e = null, Oe = null, qe = void 0, We = null, Ge = !!W.dynamicChildren) => {
            if (Y === W)
                return;
            Y && !Yn(Y, W) && (we = Pe(Y),
                je(Y, _e, Oe, !0),
                Y = null),
            W.patchFlag === -2 && (Ge = !1,
                W.dynamicChildren = null);
            const {type: Ue, ref: ht, shapeFlag: Ee} = W;
            switch (Ue) {
                case Kn:
                    R(Y, W, ce, we);
                    break;
                case ws:
                    P(Y, W, ce, we);
                    break;
                case Ka:
                    Y == null && M(W, ce, we, qe);
                    break;
                case Ct:
                    oe(Y, W, ce, we, _e, Oe, qe, We, Ge);
                    break;
                default:
                    Ee & 1 ? $(Y, W, ce, we, _e, Oe, qe, We, Ge) : Ee & 6 ? ve(Y, W, ce, we, _e, Oe, qe, We, Ge) : (Ee & 64 || Ee & 128) && Ue.process(Y, W, ce, we, _e, Oe, qe, We, Ge, He)
            }
            ht != null && _e && wl(ht, Y && Y.ref, Oe, W || Y, !W)
        }
        , R = (Y, W, ce, we) => {
            if (Y == null)
                a(W.el = p(W.children), ce, we);
            else {
                const _e = W.el = Y.el;
                W.children !== Y.children && y(_e, W.children)
            }
        }
        , P = (Y, W, ce, we) => {
            Y == null ? a(W.el = g(W.children || ""), ce, we) : W.el = Y.el
        }
        , M = (Y, W, ce, we) => {
            [Y.el, Y.anchor] = I(Y.children, W, ce, we, Y.el, Y.anchor)
        }
        , O = ({el: Y, anchor: W}, ce, we) => {
            let _e;
            for (; Y && Y !== W;)
                _e = C(Y),
                    a(Y, ce, we),
                    Y = _e;
            a(W, ce, we)
        }
        , F = ({el: Y, anchor: W}) => {
            let ce;
            for (; Y && Y !== W;)
                ce = C(Y),
                    o(Y),
                    Y = ce;
            o(W)
        }
        , $ = (Y, W, ce, we, _e, Oe, qe, We, Ge) => {
            W.type === "svg" ? qe = "svg" : W.type === "math" && (qe = "mathml"),
                Y == null ? V(W, ce, we, _e, Oe, qe, We, Ge) : te(Y, W, _e, Oe, qe, We, Ge)
        }
        , V = (Y, W, ce, we, _e, Oe, qe, We) => {
            let Ge, Ue;
            const {props: ht, shapeFlag: Ee, transition: ze, dirs: xe} = Y;
            if (Ge = Y.el = u(Y.type, Oe, ht && ht.is, ht),
                Ee & 8 ? v(Ge, Y.children) : Ee & 16 && ie(Y.children, Ge, null, we, _e, $d(Y, Oe), qe, We),
            xe && gi(Y, null, we, "created"),
                G(Ge, Y, Y.scopeId, qe, we),
                ht) {
                for (const lt in ht)
                    lt !== "value" && !Hr(lt) && l(Ge, lt, null, ht[lt], Oe, we);
                "value" in ht && l(Ge, "value", null, ht.value, Oe),
                (Ue = ht.onVnodeBeforeMount) && on(Ue, we, Y)
            }
            xe && gi(Y, null, we, "beforeMount");
            const Re = P0(_e, ze);
            Re && ze.beforeEnter(Ge),
                a(Ge, W, ce),
            ((Ue = ht && ht.onVnodeMounted) || Re || xe) && Es(() => {
                    Ue && on(Ue, we, Y),
                    Re && ze.enter(Ge),
                    xe && gi(Y, null, we, "mounted")
                }
                , _e)
        }
        , G = (Y, W, ce, we, _e) => {
            if (ce && T(Y, ce),
                we)
                for (let Oe = 0; Oe < we.length; Oe++)
                    T(Y, we[Oe]);
            if (_e) {
                let Oe = _e.subTree;
                if (W === Oe || cu(Oe.type) && (Oe.ssContent === W || Oe.ssFallback === W)) {
                    const qe = _e.vnode;
                    G(Y, qe, qe.scopeId, qe.slotScopeIds, _e.parent)
                }
            }
        }
        , ie = (Y, W, ce, we, _e, Oe, qe, We, Ge = 0) => {
            for (let Ue = Ge; Ue < Y.length; Ue++) {
                const ht = Y[Ue] = We ? ma(Y[Ue]) : ln(Y[Ue]);
                A(null, ht, W, ce, we, _e, Oe, qe, We)
            }
        }
        , te = (Y, W, ce, we, _e, Oe, qe) => {
            const We = W.el = Y.el;
            let {patchFlag: Ge, dynamicChildren: Ue, dirs: ht} = W;
            Ge |= Y.patchFlag & 16;
            const Ee = Y.props || Ut
                , ze = W.props || Ut;
            let xe;
            if (ce && Ba(ce, !1),
            (xe = ze.onVnodeBeforeUpdate) && on(xe, ce, W, Y),
            ht && gi(W, Y, ce, "beforeUpdate"),
            ce && Ba(ce, !0),
            (Ee.innerHTML && ze.innerHTML == null || Ee.textContent && ze.textContent == null) && v(We, ""),
                Ue ? ne(Y.dynamicChildren, Ue, We, ce, we, $d(W, _e), Oe) : qe || fe(Y, W, We, null, ce, we, $d(W, _e), Oe, !1),
            Ge > 0) {
                if (Ge & 16)
                    le(We, Ee, ze, ce, _e);
                else if (Ge & 2 && Ee.class !== ze.class && l(We, "class", null, ze.class, _e),
                Ge & 4 && l(We, "style", Ee.style, ze.style, _e),
                Ge & 8) {
                    const Re = W.dynamicProps;
                    for (let lt = 0; lt < Re.length; lt++) {
                        const vt = Re[lt]
                            , qt = Ee[vt]
                            , is = ze[vt];
                        (is !== qt || vt === "value") && l(We, vt, qt, is, _e, ce)
                    }
                }
                Ge & 1 && Y.children !== W.children && v(We, W.children)
            } else
                !qe && Ue == null && le(We, Ee, ze, ce, _e);
            ((xe = ze.onVnodeUpdated) || ht) && Es(() => {
                    xe && on(xe, ce, W, Y),
                    ht && gi(W, Y, ce, "updated")
                }
                , we)
        }
        , ne = (Y, W, ce, we, _e, Oe, qe) => {
            for (let We = 0; We < W.length; We++) {
                const Ge = Y[We]
                    , Ue = W[We]
                    , ht = Ge.el && (Ge.type === Ct || !Yn(Ge, Ue) || Ge.shapeFlag & 70) ? w(Ge.el) : ce;
                A(Ge, Ue, ht, null, we, _e, Oe, qe, !0)
            }
        }
        , le = (Y, W, ce, we, _e) => {
            if (W !== ce) {
                if (W !== Ut)
                    for (const Oe in W)
                        !Hr(Oe) && !(Oe in ce) && l(Y, Oe, W[Oe], null, _e, we);
                for (const Oe in ce) {
                    if (Hr(Oe))
                        continue;
                    const qe = ce[Oe]
                        , We = W[Oe];
                    qe !== We && Oe !== "value" && l(Y, Oe, We, qe, _e, we)
                }
                "value" in ce && l(Y, "value", W.value, ce.value, _e)
            }
        }
        , oe = (Y, W, ce, we, _e, Oe, qe, We, Ge) => {
            const Ue = W.el = Y ? Y.el : p("")
                , ht = W.anchor = Y ? Y.anchor : p("");
            let {patchFlag: Ee, dynamicChildren: ze, slotScopeIds: xe} = W;
            xe && (We = We ? We.concat(xe) : xe),
                Y == null ? (a(Ue, ce, we),
                    a(ht, ce, we),
                    ie(W.children || [], ce, ht, _e, Oe, qe, We, Ge)) : Ee > 0 && Ee & 64 && ze && Y.dynamicChildren ? (ne(Y.dynamicChildren, ze, ce, _e, Oe, qe, We),
                (W.key != null || _e && W === _e.subTree) && sp(Y, W, !0)) : fe(Y, W, ce, ht, _e, Oe, qe, We, Ge)
        }
        , ve = (Y, W, ce, we, _e, Oe, qe, We, Ge) => {
            W.slotScopeIds = We,
                Y == null ? W.shapeFlag & 512 ? _e.ctx.activate(W, ce, we, qe, Ge) : be(W, ce, we, _e, Oe, qe, Ge) : de(Y, W, Ge)
        }
        , be = (Y, W, ce, we, _e, Oe, qe) => {
            const We = Y.component = W0(Y, we, _e);
            if (Gl(Y) && (We.ctx.renderer = He),
                Y0(We, !1, qe),
                We.asyncDep) {
                if (_e && _e.registerDep(We, J, qe),
                    !Y.el) {
                    const Ge = We.subTree = ae(ws);
                    P(null, Ge, W, ce)
                }
            } else
                J(We, Y, W, ce, _e, Oe, qe)
        }
        , de = (Y, W, ce) => {
            const we = W.component = Y.component;
            if (aA(Y, W, ce))
                if (we.asyncDep && !we.asyncResolved) {
                    ue(we, W, ce);
                    return
                } else
                    we.next = W,
                        we.update();
            else
                W.el = Y.el,
                    we.vnode = W
        }
        , J = (Y, W, ce, we, _e, Oe, qe) => {
            const We = () => {
                    if (Y.isMounted) {
                        let {next: Ee, bu: ze, u: xe, parent: Re, vnode: lt} = Y;
                        {
                            const Ss = L0(Y);
                            if (Ss) {
                                Ee && (Ee.el = lt.el,
                                    ue(Y, Ee, qe)),
                                    Ss.asyncDep.then(() => {
                                            Y.isUnmounted || We()
                                        }
                                    );
                                return
                            }
                        }
                        let vt = Ee, qt;
                        Ba(Y, !1),
                            Ee ? (Ee.el = lt.el,
                                ue(Y, Ee, qe)) : Ee = lt,
                        ze && zr(ze),
                        (qt = Ee.props && Ee.props.onVnodeBeforeUpdate) && on(qt, Re, Ee, lt),
                            Ba(Y, !0);
                        const is = Vc(Y)
                            , bs = Y.subTree;
                        Y.subTree = is,
                            A(bs, is, w(bs.el), Pe(bs), Y, _e, Oe),
                            Ee.el = is.el,
                        vt === null && Xu(Y, is.el),
                        xe && Es(xe, _e),
                        (qt = Ee.props && Ee.props.onVnodeUpdated) && Es(() => on(qt, Re, Ee, lt), _e)
                    } else {
                        let Ee;
                        const {el: ze, props: xe} = W
                            , {bm: Re, m: lt, parent: vt, root: qt, type: is} = Y
                            , bs = Sa(W);
                        if (Ba(Y, !1),
                        Re && zr(Re),
                        !bs && (Ee = xe && xe.onVnodeBeforeMount) && on(Ee, vt, W),
                            Ba(Y, !0),
                        ze && dt) {
                            const Ss = () => {
                                    Y.subTree = Vc(Y),
                                        dt(ze, Y.subTree, Y, _e, null)
                                }
                            ;
                            bs && is.__asyncHydrate ? is.__asyncHydrate(ze, Y, Ss) : Ss()
                        } else {
                            qt.ce && qt.ce._injectChildStyle(is);
                            const Ss = Y.subTree = Vc(Y);
                            A(null, Ss, ce, we, Y, _e, Oe),
                                W.el = Ss.el
                        }
                        if (lt && Es(lt, _e),
                        !bs && (Ee = xe && xe.onVnodeMounted)) {
                            const Ss = W;
                            Es(() => on(Ee, vt, Ss), _e)
                        }
                        (W.shapeFlag & 256 || vt && Sa(vt.vnode) && vt.vnode.shapeFlag & 256) && Y.a && Es(Y.a, _e),
                            Y.isMounted = !0,
                            W = ce = we = null
                    }
                }
            ;
            Y.scope.on();
            const Ge = Y.effect = new pl(We);
            Y.scope.off();
            const Ue = Y.update = Ge.run.bind(Ge)
                , ht = Y.job = Ge.runIfDirty.bind(Ge);
            ht.i = Y,
                ht.id = Y.uid,
                Ge.scheduler = () => Uf(ht),
                Ba(Y, !0),
                Ue()
        }
        , ue = (Y, W, ce) => {
            W.component = Y;
            const we = Y.vnode.props;
            Y.vnode = W,
                Y.next = null,
                XC(Y, W.props, we, ce),
                KC(Y, W.children, ce),
                La(),
                Ng(Y),
                Ma()
        }
        , fe = (Y, W, ce, we, _e, Oe, qe, We, Ge = !1) => {
            const Ue = Y && Y.children
                , ht = Y ? Y.shapeFlag : 0
                , Ee = W.children
                , {patchFlag: ze, shapeFlag: xe} = W;
            if (ze > 0) {
                if (ze & 128) {
                    Xe(Ue, Ee, ce, we, _e, Oe, qe, We, Ge);
                    return
                } else if (ze & 256) {
                    Me(Ue, Ee, ce, we, _e, Oe, qe, We, Ge);
                    return
                }
            }
            xe & 8 ? (ht & 16 && bt(Ue, _e, Oe),
            Ee !== Ue && v(ce, Ee)) : ht & 16 ? xe & 16 ? Xe(Ue, Ee, ce, we, _e, Oe, qe, We, Ge) : bt(Ue, _e, Oe, !0) : (ht & 8 && v(ce, ""),
            xe & 16 && ie(Ee, ce, we, _e, Oe, qe, We, Ge))
        }
        , Me = (Y, W, ce, we, _e, Oe, qe, We, Ge) => {
            Y = Y || $r,
                W = W || $r;
            const Ue = Y.length
                , ht = W.length
                , Ee = Math.min(Ue, ht);
            let ze;
            for (ze = 0; ze < Ee; ze++) {
                const xe = W[ze] = Ge ? ma(W[ze]) : ln(W[ze]);
                A(Y[ze], xe, ce, null, _e, Oe, qe, We, Ge)
            }
            Ue > ht ? bt(Y, _e, Oe, !0, !1, Ee) : ie(W, ce, we, _e, Oe, qe, We, Ge, Ee)
        }
        , Xe = (Y, W, ce, we, _e, Oe, qe, We, Ge) => {
            let Ue = 0;
            const ht = W.length;
            let Ee = Y.length - 1
                , ze = ht - 1;
            for (; Ue <= Ee && Ue <= ze;) {
                const xe = Y[Ue]
                    , Re = W[Ue] = Ge ? ma(W[Ue]) : ln(W[Ue]);
                if (Yn(xe, Re))
                    A(xe, Re, ce, null, _e, Oe, qe, We, Ge);
                else
                    break;
                Ue++
            }
            for (; Ue <= Ee && Ue <= ze;) {
                const xe = Y[Ee]
                    , Re = W[ze] = Ge ? ma(W[ze]) : ln(W[ze]);
                if (Yn(xe, Re))
                    A(xe, Re, ce, null, _e, Oe, qe, We, Ge);
                else
                    break;
                Ee--,
                    ze--
            }
            if (Ue > Ee) {
                if (Ue <= ze) {
                    const xe = ze + 1
                        , Re = xe < ht ? W[xe].el : we;
                    for (; Ue <= ze;)
                        A(null, W[Ue] = Ge ? ma(W[Ue]) : ln(W[Ue]), ce, Re, _e, Oe, qe, We, Ge),
                            Ue++
                }
            } else if (Ue > ze)
                for (; Ue <= Ee;)
                    je(Y[Ue], _e, Oe, !0),
                        Ue++;
            else {
                const xe = Ue
                    , Re = Ue
                    , lt = new Map;
                for (Ue = Re; Ue <= ze; Ue++) {
                    const Rs = W[Ue] = Ge ? ma(W[Ue]) : ln(W[Ue]);
                    Rs.key != null && lt.set(Rs.key, Ue)
                }
                let vt, qt = 0;
                const is = ze - Re + 1;
                let bs = !1
                    , Ss = 0;
                const Hn = new Array(is);
                for (Ue = 0; Ue < is; Ue++)
                    Hn[Ue] = 0;
                for (Ue = xe; Ue <= Ee; Ue++) {
                    const Rs = Y[Ue];
                    if (qt >= is) {
                        je(Rs, _e, Oe, !0);
                        continue
                    }
                    let Ns;
                    if (Rs.key != null)
                        Ns = lt.get(Rs.key);
                    else
                        for (vt = Re; vt <= ze; vt++)
                            if (Hn[vt - Re] === 0 && Yn(Rs, W[vt])) {
                                Ns = vt;
                                break
                            }
                    Ns === void 0 ? je(Rs, _e, Oe, !0) : (Hn[Ns - Re] = Ue + 1,
                        Ns >= Ss ? Ss = Ns : bs = !0,
                        A(Rs, W[Ns], ce, null, _e, Oe, qe, We, Ge),
                        qt++)
                }
                const Fa = bs ? ZC(Hn) : $r;
                for (vt = Fa.length - 1,
                         Ue = is - 1; Ue >= 0; Ue--) {
                    const Rs = Re + Ue
                        , Ns = W[Rs]
                        , vr = Rs + 1 < ht ? W[Rs + 1].el : we;
                    Hn[Ue] === 0 ? A(null, Ns, ce, vr, _e, Oe, qe, We, Ge) : bs && (vt < 0 || Ue !== Fa[vt] ? Be(Ns, ce, vr, 2) : vt--)
                }
            }
        }
        , Be = (Y, W, ce, we, _e = null) => {
            const {el: Oe, type: qe, transition: We, children: Ge, shapeFlag: Ue} = Y;
            if (Ue & 6) {
                Be(Y.component.subTree, W, ce, we);
                return
            }
            if (Ue & 128) {
                Y.suspense.move(W, ce, we);
                return
            }
            if (Ue & 64) {
                qe.move(Y, W, ce, He);
                return
            }
            if (qe === Ct) {
                a(Oe, W, ce);
                for (let Ee = 0; Ee < Ge.length; Ee++)
                    Be(Ge[Ee], W, ce, we);
                a(Y.anchor, W, ce);
                return
            }
            if (qe === Ka) {
                O(Y, W, ce);
                return
            }
            if (we !== 2 && Ue & 1 && We)
                if (we === 0)
                    We.beforeEnter(Oe),
                        a(Oe, W, ce),
                        Es(() => We.enter(Oe), _e);
                else {
                    const {leave: Ee, delayLeave: ze, afterLeave: xe} = We
                        , Re = () => a(Oe, W, ce)
                        , lt = () => {
                            Ee(Oe, () => {
                                    Re(),
                                    xe && xe()
                                }
                            )
                        }
                    ;
                    ze ? ze(Oe, Re, lt) : lt()
                }
            else
                a(Oe, W, ce)
        }
        , je = (Y, W, ce, we = !1, _e = !1) => {
            const {
                type: Oe,
                props: qe,
                ref: We,
                children: Ge,
                dynamicChildren: Ue,
                shapeFlag: ht,
                patchFlag: Ee,
                dirs: ze,
                cacheIndex: xe
            } = Y;
            if (Ee === -2 && (_e = !1),
            We != null && wl(We, null, ce, Y, !0),
            xe != null && (W.renderCache[xe] = void 0),
            ht & 256) {
                W.ctx.deactivate(Y);
                return
            }
            const Re = ht & 1 && ze
                , lt = !Sa(Y);
            let vt;
            if (lt && (vt = qe && qe.onVnodeBeforeUnmount) && on(vt, W, Y),
            ht & 6)
                mt(Y.component, ce, we);
            else {
                if (ht & 128) {
                    Y.suspense.unmount(ce, we);
                    return
                }
                Re && gi(Y, null, W, "beforeUnmount"),
                    ht & 64 ? Y.type.remove(Y, W, ce, He, we) : Ue && !Ue.hasOnce && (Oe !== Ct || Ee > 0 && Ee & 64) ? bt(Ue, W, ce, !1, !0) : (Oe === Ct && Ee & 384 || !_e && ht & 16) && bt(Ge, W, ce),
                we && tt(Y)
            }
            (lt && (vt = qe && qe.onVnodeUnmounted) || Re) && Es(() => {
                    vt && on(vt, W, Y),
                    Re && gi(Y, null, W, "unmounted")
                }
                , ce)
        }
        , tt = Y => {
            const {type: W, el: ce, anchor: we, transition: _e} = Y;
            if (W === Ct) {
                ft(ce, we);
                return
            }
            if (W === Ka) {
                F(Y);
                return
            }
            const Oe = () => {
                    o(ce),
                    _e && !_e.persisted && _e.afterLeave && _e.afterLeave()
                }
            ;
            if (Y.shapeFlag & 1 && _e && !_e.persisted) {
                const {leave: qe, delayLeave: We} = _e
                    , Ge = () => qe(ce, Oe);
                We ? We(Y.el, Oe, Ge) : Ge()
            } else
                Oe()
        }
        , ft = (Y, W) => {
            let ce;
            for (; Y !== W;)
                ce = C(Y),
                    o(Y),
                    Y = ce;
            o(W)
        }
        , mt = (Y, W, ce) => {
            const {bum: we, scope: _e, job: Oe, subTree: qe, um: We, m: Ge, a: Ue} = Y;
            lu(Ge),
                lu(Ue),
            we && zr(we),
                _e.stop(),
            Oe && (Oe.flags |= 8,
                je(qe, Y, W, ce)),
            We && Es(We, W),
                Es(() => {
                        Y.isUnmounted = !0
                    }
                    , W),
            W && W.pendingBranch && !W.isUnmounted && Y.asyncDep && !Y.asyncResolved && Y.suspenseId === W.pendingId && (W.deps--,
            W.deps === 0 && W.resolve())
        }
        , bt = (Y, W, ce, we = !1, _e = !1, Oe = 0) => {
            for (let qe = Oe; qe < Y.length; qe++)
                je(Y[qe], W, ce, we, _e)
        }
        , Pe = Y => {
            if (Y.shapeFlag & 6)
                return Pe(Y.component.subTree);
            if (Y.shapeFlag & 128)
                return Y.suspense.next();
            const W = C(Y.anchor || Y.el)
                , ce = W && W[Jy];
            return ce ? C(ce) : W
        }
    ;
    let Ae = !1;
    const Ne = (Y, W, ce) => {
        Y == null ? W._vnode && je(W._vnode, null, null, !0) : A(W._vnode || null, Y, W, null, null, null, ce),
            W._vnode = Y,
        Ae || (Ae = !0,
            Ng(),
            ru(),
            Ae = !1)
    }
        , He = {
        p: A,
        um: je,
        m: Be,
        r: tt,
        mt: be,
        mc: ie,
        pc: fe,
        pbc: ne,
        n: Pe,
        o: e
    };
    let et, dt;
    return t && ([et, dt] = t(He)),
        {
            render: Ne,
            hydrate: et,
            createApp: WC(Ne, et)
        }
}

function $d({type: e, props: t}, s) {
    return s === "svg" && e === "foreignObject" || s === "mathml" && e === "annotation-xml" && t && t.encoding && t.encoding.includes("html") ? void 0 : s
}

function Ba({effect: e, job: t}, s) {
    s ? (e.flags |= 32,
        t.flags |= 4) : (e.flags &= -33,
        t.flags &= -5)
}

function P0(e, t) {
    return (!e || e && !e.pendingBranch) && t && !t.persisted
}

function sp(e, t, s = !1) {
    const a = e.children
        , o = t.children;
    if (Ze(a) && Ze(o))
        for (let l = 0; l < a.length; l++) {
            const u = a[l];
            let p = o[l];
            p.shapeFlag & 1 && !p.dynamicChildren && ((p.patchFlag <= 0 || p.patchFlag === 32) && (p = o[l] = ma(o[l]),
                p.el = u.el),
            !s && p.patchFlag !== -2 && sp(u, p)),
            p.type === Kn && (p.el = u.el)
        }
}

function ZC(e) {
    const t = e.slice()
        , s = [0];
    let a, o, l, u, p;
    const g = e.length;
    for (a = 0; a < g; a++) {
        const y = e[a];
        if (y !== 0) {
            if (o = s[s.length - 1],
            e[o] < y) {
                t[a] = o,
                    s.push(a);
                continue
            }
            for (l = 0,
                     u = s.length - 1; l < u;)
                p = l + u >> 1,
                    e[s[p]] < y ? l = p + 1 : u = p;
            y < e[s[l]] && (l > 0 && (t[a] = s[l - 1]),
                s[l] = a)
        }
    }
    for (l = s.length,
             u = s[l - 1]; l-- > 0;)
        s[l] = u,
            u = t[u];
    return s
}

function L0(e) {
    const t = e.subTree.component;
    if (t)
        return t.asyncDep && !t.asyncResolved ? t : L0(t)
}

function lu(e) {
    if (e)
        for (let t = 0; t < e.length; t++)
            e[t].flags |= 8
}

const M0 = Symbol.for("v-scx")
    , O0 = () => st(M0);

function So(e, t) {
    return Kl(e, null, t)
}

function JC(e, t) {
    return Kl(e, null, {
        flush: "post"
    })
}

function R0(e, t) {
    return Kl(e, null, {
        flush: "sync"
    })
}

function Ke(e, t, s) {
    return Kl(e, t, s)
}

function Kl(e, t, s = Ut) {
    const {immediate: a, deep: o, flush: l, once: u} = s
        , p = ns({}, s)
        , g = t && a || !t && l !== "post";
    let y;
    if (Qr) {
        if (l === "sync") {
            const T = O0();
            y = T.__watcherHandles || (T.__watcherHandles = [])
        } else if (!g) {
            const T = () => {
                }
            ;
            return T.stop = Ht,
                T.resume = Ht,
                T.pause = Ht,
                T
        }
    }
    const v = Ts;
    p.call = (T, I, A) => Mn(T, v, I, A);
    let w = !1;
    l === "post" ? p.scheduler = T => {
            Es(T, v && v.suspense)
        }
        : l !== "sync" && (w = !0,
            p.scheduler = (T, I) => {
                I ? T() : Uf(T)
            }
    ),
        p.augmentJob = T => {
            t && (T.flags |= 4),
            w && (T.flags |= 2,
            v && (T.id = v.uid,
                T.i = v))
        }
    ;
    const C = jk(e, t, p);
    return Qr && (y ? y.push(C) : g && C()),
        C
}

function QC(e, t, s) {
    const a = this.proxy
        , o = pt(e) ? e.includes(".") ? N0(a, e) : () => a[e] : e.bind(a, a);
    let l;
    nt(t) ? l = t : (l = t.handler,
        s = t);
    const u = sr(this)
        , p = Kl(o, l.bind(a), s);
    return u(),
        p
}

function N0(e, t) {
    const s = t.split(".");
    return () => {
        let a = e;
        for (let o = 0; o < s.length && a; o++)
            a = a[s[o]];
        return a
    }
}

function eA(e, t, s = Ut) {
    const a = Et()
        , o = Ds(t)
        , l = tn(t)
        , u = D0(e, o)
        , p = Wf((g, y) => {
            let v, w = Ut, C;
            return R0(() => {
                    const T = e[o];
                    Qs(v, T) && (v = T,
                        y())
                }
            ),
                {
                    get() {
                        return g(),
                            s.get ? s.get(v) : v
                    },
                    set(T) {
                        const I = s.set ? s.set(T) : T;
                        if (!Qs(I, v) && !(w !== Ut && Qs(T, w)))
                            return;
                        const A = a.vnode.props;
                        A && (t in A || o in A || l in A) && (`onUpdate:${t}` in A || `onUpdate:${o}` in A || `onUpdate:${l}` in A) || (v = T,
                            y()),
                            a.emit(`update:${t}`, I),
                        Qs(T, I) && Qs(T, w) && !Qs(I, C) && y(),
                            w = T,
                            C = I
                    }
                }
        }
    );
    return p[Symbol.iterator] = () => {
        let g = 0;
        return {
            next() {
                return g < 2 ? {
                    value: g++ ? u || Ut : p,
                    done: !1
                } : {
                    done: !0
                }
            }
        }
    }
        ,
        p
}

const D0 = (e, t) => t === "modelValue" || t === "model-value" ? e.modelModifiers : e[`${t}Modifiers`] || e[`${Ds(t)}Modifiers`] || e[`${tn(t)}Modifiers`];

function tA(e, t, ...s) {
    if (e.isUnmounted)
        return;
    const a = e.vnode.props || Ut;
    let o = s;
    const l = t.startsWith("update:")
        , u = l && D0(a, t.slice(7));
    u && (u.trim && (o = s.map(v => pt(v) ? v.trim() : v)),
    u.number && (o = s.map(tu)));
    let p, g = a[p = Vr(t)] || a[p = Vr(Ds(t))];
    !g && l && (g = a[p = Vr(tn(t))]),
    g && Mn(g, e, 6, o);
    const y = a[p + "Once"];
    if (y) {
        if (!e.emitted)
            e.emitted = {};
        else if (e.emitted[p])
            return;
        e.emitted[p] = !0,
            Mn(y, e, 6, o)
    }
}

function F0(e, t, s = !1) {
    const a = t.emitsCache
        , o = a.get(e);
    if (o !== void 0)
        return o;
    const l = e.emits;
    let u = {}
        , p = !1;
    if (!nt(e)) {
        const g = y => {
                const v = F0(y, t, !0);
                v && (p = !0,
                    ns(u, v))
            }
        ;
        !s && t.mixins.length && t.mixins.forEach(g),
        e.extends && g(e.extends),
        e.mixins && e.mixins.forEach(g)
    }
    return !l && !p ? (At(e) && a.set(e, null),
        null) : (Ze(l) ? l.forEach(g => u[g] = null) : ns(u, l),
    At(e) && a.set(e, u),
        u)
}

function Yu(e, t) {
    return !e || !jl(t) ? !1 : (t = t.slice(2).replace(/Once$/, ""),
    Wt(e, t[0].toLowerCase() + t.slice(1)) || Wt(e, tn(t)) || Wt(e, t))
}

function Vc(e) {
    const {
        type: t,
        vnode: s,
        proxy: a,
        withProxy: o,
        propsOptions: [l],
        slots: u,
        attrs: p,
        emit: g,
        render: y,
        renderCache: v,
        props: w,
        data: C,
        setupState: T,
        ctx: I,
        inheritAttrs: A
    } = e
        , R = xl(e);
    let P, M;
    try {
        if (s.shapeFlag & 4) {
            const F = o || a
                , $ = F;
            P = ln(y.call($, F, v, w, T, C, I)),
                M = p
        } else {
            const F = t;
            P = ln(F.length > 1 ? F(w, {
                attrs: p,
                slots: u,
                emit: g
            }) : F(w, null)),
                M = t.props ? p : nA(p)
        }
    } catch (F) {
        Qo.length = 0,
            ur(F, e, 1),
            P = ae(ws)
    }
    let O = P;
    if (M && A !== !1) {
        const F = Object.keys(M)
            , {shapeFlag: $} = O;
        F.length && $ & 7 && (l && F.some(Rf) && (M = iA(M, l)),
            O = ti(O, M, !1, !0))
    }
    return s.dirs && (O = ti(O, null, !1, !0),
        O.dirs = O.dirs ? O.dirs.concat(s.dirs) : s.dirs),
    s.transition && Gi(O, s.transition),
        P = O,
        xl(R),
        P
}

function sA(e, t = !0) {
    let s;
    for (let a = 0; a < e.length; a++) {
        const o = e[a];
        if (Hs(o)) {
            if (o.type !== ws || o.children === "v-if") {
                if (s)
                    return;
                s = o
            }
        } else
            return
    }
    return s
}

const nA = e => {
        let t;
        for (const s in e)
            (s === "class" || s === "style" || jl(s)) && ((t || (t = {}))[s] = e[s]);
        return t
    }
    , iA = (e, t) => {
        const s = {};
        for (const a in e)
            (!Rf(a) || !(a.slice(9) in t)) && (s[a] = e[a]);
        return s
    }
;

function aA(e, t, s) {
    const {props: a, children: o, component: l} = e
        , {props: u, children: p, patchFlag: g} = t
        , y = l.emitsOptions;
    if (t.dirs || t.transition)
        return !0;
    if (s && g >= 0) {
        if (g & 1024)
            return !0;
        if (g & 16)
            return a ? jg(a, u, y) : !!u;
        if (g & 8) {
            const v = t.dynamicProps;
            for (let w = 0; w < v.length; w++) {
                const C = v[w];
                if (u[C] !== a[C] && !Yu(y, C))
                    return !0
            }
        }
    } else
        return (o || p) && (!p || !p.$stable) ? !0 : a === u ? !1 : a ? u ? jg(a, u, y) : !0 : !!u;
    return !1
}

function jg(e, t, s) {
    const a = Object.keys(t);
    if (a.length !== Object.keys(e).length)
        return !0;
    for (let o = 0; o < a.length; o++) {
        const l = a[o];
        if (t[l] !== e[l] && !Yu(s, l))
            return !0
    }
    return !1
}

function Xu({vnode: e, parent: t}, s) {
    for (; t;) {
        const a = t.subTree;
        if (a.suspense && a.suspense.activeBranch === e && (a.el = e.el),
        a === e)
            (e = t.vnode).el = s,
                t = t.parent;
        else
            break
    }
}

const cu = e => e.__isSuspense;
let Th = 0;
const rA = {
    name: "Suspense",
    __isSuspense: !0,
    process(e, t, s, a, o, l, u, p, g, y) {
        if (e == null)
            lA(t, s, a, o, l, u, p, g, y);
        else {
            if (l && l.deps > 0 && !e.suspense.isInFallback) {
                t.suspense = e.suspense,
                    t.suspense.vnode = t,
                    t.el = e.el;
                return
            }
            cA(e, t, s, a, o, u, p, g, y)
        }
    },
    hydrate: uA,
    normalize: dA
}
    , oA = rA;

function kl(e, t) {
    const s = e.props && e.props[t];
    nt(s) && s()
}

function lA(e, t, s, a, o, l, u, p, g) {
    const {p: y, o: {createElement: v}} = g
        , w = v("div")
        , C = e.suspense = $0(e, o, a, t, w, s, l, u, p, g);
    y(null, C.pendingBranch = e.ssContent, w, null, a, C, l, u),
        C.deps > 0 ? (kl(e, "onPending"),
            kl(e, "onFallback"),
            y(null, e.ssFallback, t, s, a, null, l, u),
            Ur(C, e.ssFallback)) : C.resolve(!1, !0)
}

function cA(e, t, s, a, o, l, u, p, {p: g, um: y, o: {createElement: v}}) {
    const w = t.suspense = e.suspense;
    w.vnode = t,
        t.el = e.el;
    const C = t.ssContent
        , T = t.ssFallback
        , {activeBranch: I, pendingBranch: A, isInFallback: R, isHydrating: P} = w;
    if (A)
        w.pendingBranch = C,
            Yn(C, A) ? (g(A, C, w.hiddenContainer, null, o, w, l, u, p),
                w.deps <= 0 ? w.resolve() : R && (P || (g(I, T, s, a, o, null, l, u, p),
                    Ur(w, T)))) : (w.pendingId = Th++,
                P ? (w.isHydrating = !1,
                    w.activeBranch = A) : y(A, o, w),
                w.deps = 0,
                w.effects.length = 0,
                w.hiddenContainer = v("div"),
                R ? (g(null, C, w.hiddenContainer, null, o, w, l, u, p),
                    w.deps <= 0 ? w.resolve() : (g(I, T, s, a, o, null, l, u, p),
                        Ur(w, T))) : I && Yn(C, I) ? (g(I, C, s, a, o, w, l, u, p),
                    w.resolve(!0)) : (g(null, C, w.hiddenContainer, null, o, w, l, u, p),
                w.deps <= 0 && w.resolve()));
    else if (I && Yn(C, I))
        g(I, C, s, a, o, w, l, u, p),
            Ur(w, C);
    else if (kl(t, "onPending"),
        w.pendingBranch = C,
        C.shapeFlag & 512 ? w.pendingId = C.component.suspenseId : w.pendingId = Th++,
        g(null, C, w.hiddenContainer, null, o, w, l, u, p),
    w.deps <= 0)
        w.resolve();
    else {
        const {timeout: M, pendingId: O} = w;
        M > 0 ? setTimeout(() => {
                w.pendingId === O && w.fallback(T)
            }
            , M) : M === 0 && w.fallback(T)
    }
}

function $0(e, t, s, a, o, l, u, p, g, y, v = !1) {
    const {p: w, m: C, um: T, n: I, o: {parentNode: A, remove: R}} = y;
    let P;
    const M = hA(e);
    M && t && t.pendingBranch && (P = t.pendingId,
        t.deps++);
    const O = e.props ? su(e.props.timeout) : void 0
        , F = l
        , $ = {
        vnode: e,
        parent: t,
        parentComponent: s,
        namespace: u,
        container: a,
        hiddenContainer: o,
        deps: 0,
        pendingId: Th++,
        timeout: typeof O == "number" ? O : -1,
        activeBranch: null,
        pendingBranch: null,
        isInFallback: !v,
        isHydrating: v,
        isUnmounted: !1,
        effects: [],
        resolve(V = !1, G = !1) {
            const {
                vnode: ie,
                activeBranch: te,
                pendingBranch: ne,
                pendingId: le,
                effects: oe,
                parentComponent: ve,
                container: be
            } = $;
            let de = !1;
            $.isHydrating ? $.isHydrating = !1 : V || (de = te && ne.transition && ne.transition.mode === "out-in",
            de && (te.transition.afterLeave = () => {
                    le === $.pendingId && (C(ne, be, l === F ? I(te) : l, 0),
                        bl(oe))
                }
            ),
            te && (A(te.el) === be && (l = I(te)),
                T(te, ve, $, !0)),
            de || C(ne, be, l, 0)),
                Ur($, ne),
                $.pendingBranch = null,
                $.isInFallback = !1;
            let J = $.parent
                , ue = !1;
            for (; J;) {
                if (J.pendingBranch) {
                    J.effects.push(...oe),
                        ue = !0;
                    break
                }
                J = J.parent
            }
            !ue && !de && bl(oe),
                $.effects = [],
            M && t && t.pendingBranch && P === t.pendingId && (t.deps--,
            t.deps === 0 && !G && t.resolve()),
                kl(ie, "onResolve")
        },
        fallback(V) {
            if (!$.pendingBranch)
                return;
            const {vnode: G, activeBranch: ie, parentComponent: te, container: ne, namespace: le} = $;
            kl(G, "onFallback");
            const oe = I(ie)
                , ve = () => {
                $.isInFallback && (w(null, V, ne, oe, te, null, le, p, g),
                    Ur($, V))
            }
                , be = V.transition && V.transition.mode === "out-in";
            be && (ie.transition.afterLeave = ve),
                $.isInFallback = !0,
                T(ie, te, null, !0),
            be || ve()
        },
        move(V, G, ie) {
            $.activeBranch && C($.activeBranch, V, G, ie),
                $.container = V
        },
        next() {
            return $.activeBranch && I($.activeBranch)
        },
        registerDep(V, G, ie) {
            const te = !!$.pendingBranch;
            te && $.deps++;
            const ne = V.vnode.el;
            V.asyncDep.catch(le => {
                    ur(le, V, 0)
                }
            ).then(le => {
                    if (V.isUnmounted || $.isUnmounted || $.pendingId !== V.suspenseId)
                        return;
                    V.asyncResolved = !0;
                    const {vnode: oe} = V;
                    Mh(V, le, !1),
                    ne && (oe.el = ne);
                    const ve = !ne && V.subTree.el;
                    G(V, oe, A(ne || V.subTree.el), ne ? null : I(V.subTree), $, u, ie),
                    ve && R(ve),
                        Xu(V, oe.el),
                    te && --$.deps === 0 && $.resolve()
                }
            )
        },
        unmount(V, G) {
            $.isUnmounted = !0,
            $.activeBranch && T($.activeBranch, s, V, G),
            $.pendingBranch && T($.pendingBranch, s, V, G)
        }
    };
    return $
}

function uA(e, t, s, a, o, l, u, p, g) {
    const y = t.suspense = $0(t, a, s, e.parentNode, document.createElement("div"), null, o, l, u, p, !0)
        , v = g(e, y.pendingBranch = t.ssContent, s, y, l, u);
    return y.deps === 0 && y.resolve(!1, !0),
        v
}

function dA(e) {
    const {shapeFlag: t, children: s} = e
        , a = t & 32;
    e.ssContent = Gg(a ? s.default : s),
        e.ssFallback = a ? Gg(s.fallback) : ae(ws)
}

function Gg(e) {
    let t;
    if (nt(e)) {
        const s = tr && e._c;
        s && (e._d = !1,
            Z()),
            e = e(),
        s && (e._d = !0,
            t = Gs,
            H0())
    }
    return Ze(e) && (e = sA(e)),
        e = ln(e),
    t && !e.dynamicChildren && (e.dynamicChildren = t.filter(s => s !== e)),
        e
}

function B0(e, t) {
    t && t.pendingBranch ? Ze(e) ? t.effects.push(...e) : t.effects.push(e) : bl(e)
}

function Ur(e, t) {
    e.activeBranch = t;
    const {vnode: s, parentComponent: a} = e;
    let o = t.el;
    for (; !o && t.component;)
        t = t.component.subTree,
            o = t.el;
    s.el = o,
    a && a.subTree === s && (a.vnode.el = o,
        Xu(a, o))
}

function hA(e) {
    const t = e.props && e.props.suspensible;
    return t != null && t !== !1
}

const Ct = Symbol.for("v-fgt")
    , Kn = Symbol.for("v-txt")
    , ws = Symbol.for("v-cmt")
    , Ka = Symbol.for("v-stc")
    , Qo = [];
let Gs = null;

function Z(e = !1) {
    Qo.push(Gs = e ? null : [])
}

function H0() {
    Qo.pop(),
        Gs = Qo[Qo.length - 1] || null
}

let tr = 1;

function Ih(e, t = !1) {
    tr += e,
    e < 0 && Gs && t && (Gs.hasOnce = !0)
}

function V0(e) {
    return e.dynamicChildren = tr > 0 ? Gs || $r : null,
        H0(),
    tr > 0 && Gs && Gs.push(e),
        e
}

function ye(e, t, s, a, o, l) {
    return V0(U(e, t, s, a, o, l, !0))
}

function Te(e, t, s, a, o) {
    return V0(ae(e, t, s, a, o, !0))
}

function Hs(e) {
    return e ? e.__v_isVNode === !0 : !1
}

function Yn(e, t) {
    return e.type === t.type && e.key === t.key
}

function fA(e) {
}

const z0 = ({key: e}) => e ?? null
    , zc = ({ref: e, ref_key: t, ref_for: s}) => (typeof e == "number" && (e = "" + e),
    e != null ? pt(e) || Qt(e) || nt(e) ? {
        i: Ps,
        r: e,
        k: t,
        f: !!s
    } : e : null);

function U(e, t = null, s = null, a = 0, o = null, l = e === Ct ? 0 : 1, u = !1, p = !1) {
    const g = {
        __v_isVNode: !0,
        __v_skip: !0,
        type: e,
        props: t,
        key: t && z0(t),
        ref: t && zc(t),
        scopeId: zu,
        slotScopeIds: null,
        children: s,
        component: null,
        suspense: null,
        ssContent: null,
        ssFallback: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: l,
        patchFlag: a,
        dynamicProps: o,
        dynamicChildren: null,
        appContext: null,
        ctx: Ps
    };
    return p ? (ip(g, s),
    l & 128 && e.normalize(g)) : s && (g.shapeFlag |= pt(s) ? 8 : 16),
    tr > 0 && !u && Gs && (g.patchFlag > 0 || l & 6) && g.patchFlag !== 32 && Gs.push(g),
        g
}

const ae = pA;

function pA(e, t = null, s = null, a = 0, o = null, l = !1) {
    if ((!e || e === h0) && (e = ws),
        Hs(e)) {
        const p = ti(e, t, !0);
        return s && ip(p, s),
        tr > 0 && !l && Gs && (p.shapeFlag & 6 ? Gs[Gs.indexOf(e)] = p : Gs.push(p)),
            p.patchFlag = -2,
            p
    }
    if (SA(e) && (e = e.__vccOpts),
        t) {
        t = np(t);
        let {class: p, style: g} = t;
        p && !pt(p) && (t.class = he(p)),
        At(g) && (Vu(g) && !Ze(g) && (g = ns({}, g)),
            t.style = kt(g))
    }
    const u = pt(e) ? 1 : cu(e) ? 128 : Qy(e) ? 64 : At(e) ? 4 : nt(e) ? 2 : 0;
    return U(e, t, s, a, o, u, l, !0)
}

function np(e) {
    return e ? Vu(e) || x0(e) ? ns({}, e) : e : null
}

function ti(e, t, s = !1, a = !1) {
    const {props: o, ref: l, patchFlag: u, children: p, transition: g} = e
        , y = t ? vs(o || {}, t) : o
        , v = {
        __v_isVNode: !0,
        __v_skip: !0,
        type: e.type,
        props: y,
        key: y && z0(y),
        ref: t && t.ref ? s && l ? Ze(l) ? l.concat(zc(t)) : [l, zc(t)] : zc(t) : l,
        scopeId: e.scopeId,
        slotScopeIds: e.slotScopeIds,
        children: p,
        target: e.target,
        targetStart: e.targetStart,
        targetAnchor: e.targetAnchor,
        staticCount: e.staticCount,
        shapeFlag: e.shapeFlag,
        patchFlag: t && e.type !== Ct ? u === -1 ? 16 : u | 16 : u,
        dynamicProps: e.dynamicProps,
        dynamicChildren: e.dynamicChildren,
        appContext: e.appContext,
        dirs: e.dirs,
        transition: g,
        component: e.component,
        suspense: e.suspense,
        ssContent: e.ssContent && ti(e.ssContent),
        ssFallback: e.ssFallback && ti(e.ssFallback),
        el: e.el,
        anchor: e.anchor,
        ctx: e.ctx,
        ce: e.ce
    };
    return g && a && Gi(v, g.clone(v)),
        v
}

function at(e = " ", t = 0) {
    return ae(Kn, null, e, t)
}

function gA(e, t) {
    const s = ae(Ka, null, e);
    return s.staticCount = t,
        s
}

function ke(e = "", t = !1) {
    return t ? (Z(),
        Te(ws, null, e)) : ae(ws, null, e)
}

function ln(e) {
    return e == null || typeof e == "boolean" ? ae(ws) : Ze(e) ? ae(Ct, null, e.slice()) : Hs(e) ? ma(e) : ae(Kn, null, String(e))
}

function ma(e) {
    return e.el === null && e.patchFlag !== -1 || e.memo ? e : ti(e)
}

function ip(e, t) {
    let s = 0;
    const {shapeFlag: a} = e;
    if (t == null)
        t = null;
    else if (Ze(t))
        s = 16;
    else if (typeof t == "object")
        if (a & 65) {
            const o = t.default;
            o && (o._c && (o._d = !1),
                ip(e, o()),
            o._c && (o._d = !0));
            return
        } else {
            s = 32;
            const o = t._;
            !o && !x0(t) ? t._ctx = Ps : o === 3 && Ps && (Ps.slots._ === 1 ? t._ = 1 : (t._ = 2,
                e.patchFlag |= 1024))
        }
    else
        nt(t) ? (t = {
            default: t,
            _ctx: Ps
        },
            s = 32) : (t = String(t),
            a & 64 ? (s = 16,
                t = [at(t)]) : s = 8);
    e.children = t,
        e.shapeFlag |= s
}

function vs(...e) {
    const t = {};
    for (let s = 0; s < e.length; s++) {
        const a = e[s];
        for (const o in a)
            if (o === "class")
                t.class !== a.class && (t.class = he([t.class, a.class]));
            else if (o === "style")
                t.style = kt([t.style, a.style]);
            else if (jl(o)) {
                const l = t[o]
                    , u = a[o];
                u && l !== u && !(Ze(l) && l.includes(u)) && (t[o] = l ? [].concat(l, u) : u)
            } else
                o !== "" && (t[o] = a[o])
    }
    return t
}

function on(e, t, s, a = null) {
    Mn(e, t, 7, [s, a])
}

const mA = v0();
let vA = 0;

function W0(e, t, s) {
    const a = e.type
        , o = (t ? t.appContext : e.appContext) || mA
        , l = {
        uid: vA++,
        vnode: e,
        type: a,
        parent: t,
        appContext: o,
        root: null,
        next: null,
        subTree: null,
        effect: null,
        update: null,
        job: null,
        scope: new Ff(!0),
        render: null,
        proxy: null,
        exposed: null,
        exposeProxy: null,
        withProxy: null,
        provides: t ? t.provides : Object.create(o.provides),
        ids: t ? t.ids : ["", 0, 0],
        accessCache: null,
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: S0(a, o),
        emitsOptions: F0(a, o),
        emit: null,
        emitted: null,
        propsDefaults: Ut,
        inheritAttrs: a.inheritAttrs,
        ctx: Ut,
        data: Ut,
        props: Ut,
        attrs: Ut,
        slots: Ut,
        refs: Ut,
        setupState: Ut,
        setupContext: null,
        suspense: s,
        suspenseId: s ? s.pendingId : 0,
        asyncDep: null,
        asyncResolved: !1,
        isMounted: !1,
        isUnmounted: !1,
        isDeactivated: !1,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null
    };
    return l.ctx = {
        _: l
    },
        l.root = t ? t.root : l,
        l.emit = tA.bind(null, l),
    e.ce && e.ce(l),
        l
}

let Ts = null;
const Et = () => Ts || Ps;
let uu, Ph;
{
    const e = Mu()
        , t = (s, a) => {
            let o;
            return (o = e[s]) || (o = e[s] = []),
                o.push(a),
                l => {
                    o.length > 1 ? o.forEach(u => u(l)) : o[0](l)
                }
        }
    ;
    uu = t("__VUE_INSTANCE_SETTERS__", s => Ts = s),
        Ph = t("__VUE_SSR_SETTERS__", s => Qr = s)
}
const sr = e => {
        const t = Ts;
        return uu(e),
            e.scope.on(),
            () => {
                e.scope.off(),
                    uu(t)
            }
    }
    , Lh = () => {
        Ts && Ts.scope.off(),
            uu(null)
    }
;

function U0(e) {
    return e.vnode.shapeFlag & 4
}

let Qr = !1;

function Y0(e, t = !1, s = !1) {
    t && Ph(t);
    const {props: a, children: o} = e.vnode
        , l = U0(e);
    YC(e, a, l, t),
        qC(e, o, s);
    const u = l ? bA(e, t) : void 0;
    return t && Ph(!1),
        u
}

function bA(e, t) {
    const s = e.type;
    e.accessCache = Object.create(null),
        e.proxy = new Proxy(e.ctx, kh);
    const {setup: a} = s;
    if (a) {
        La();
        const o = e.setupContext = a.length > 1 ? j0(e) : null
            , l = sr(e)
            , u = xo(a, e, 0, [e.props, o])
            , p = fl(u);
        if (Ma(),
            l(),
        (p || e.sp) && !Sa(e) && jf(e),
            p) {
            if (u.then(Lh, Lh),
                t)
                return u.then(g => {
                        Mh(e, g, t)
                    }
                ).catch(g => {
                        ur(g, e, 0)
                    }
                );
            e.asyncDep = u
        } else
            Mh(e, u, t)
    } else
        X0(e, t)
}

function Mh(e, t, s) {
    nt(t) ? e.type.__ssrInlineRender ? e.ssrRender = t : e.render = t : At(t) && (e.setupState = zf(t)),
        X0(e, s)
}

let du, Oh;

function yA(e) {
    du = e,
        Oh = t => {
            t.render._rc && (t.withProxy = new Proxy(t.ctx, CC))
        }
}

const xA = () => !du;

function X0(e, t, s) {
    const a = e.type;
    if (!e.render) {
        if (!t && du && !a.render) {
            const o = a.template || ep(e).template;
            if (o) {
                const {isCustomElement: l, compilerOptions: u} = e.appContext.config
                    , {delimiters: p, compilerOptions: g} = a
                    , y = ns(ns({
                    isCustomElement: l,
                    delimiters: p
                }, u), g);
                a.render = du(o, y)
            }
        }
        e.render = a.render || Ht,
        Oh && Oh(e)
    }
    {
        const o = sr(e);
        La();
        try {
            FC(e)
        } finally {
            Ma(),
                o()
        }
    }
}

const wA = {
    get(e, t) {
        return Xs(e, "get", ""),
            e[t]
    }
};

function j0(e) {
    const t = s => {
            e.exposed = s || {}
        }
    ;
    return {
        attrs: new Proxy(e.attrs, wA),
        slots: e.slots,
        emit: e.emit,
        expose: t
    }
}

function Zl(e) {
    return e.exposed ? e.exposeProxy || (e.exposeProxy = new Proxy(zf(vl(e.exposed)), {
        get(t, s) {
            if (s in t)
                return t[s];
            if (s in Jo)
                return Jo[s](e)
        },
        has(t, s) {
            return s in t || s in Jo
        }
    })) : e.proxy
}

function Rh(e, t = !0) {
    return nt(e) ? e.displayName || e.name : e.name || t && e.__name
}

function SA(e) {
    return nt(e) && "__vccOpts" in e
}

const re = (e, t) => Wk(e, t, Qr);

function jt(e, t, s) {
    const a = arguments.length;
    return a === 2 ? At(t) && !Ze(t) ? Hs(t) ? ae(e, null, [t]) : ae(e, t) : ae(e, null, t) : (a > 3 ? s = Array.prototype.slice.call(arguments, 2) : a === 3 && Hs(s) && (s = [s]),
        ae(e, t, s))
}

function _A() {
}

function kA(e, t, s, a) {
    const o = s[a];
    if (o && G0(o, e))
        return o;
    const l = t();
    return l.memo = e.slice(),
        l.cacheIndex = a,
        s[a] = l
}

function G0(e, t) {
    const s = e.memo;
    if (s.length != t.length)
        return !1;
    for (let a = 0; a < s.length; a++)
        if (Qs(s[a], t[a]))
            return !1;
    return tr > 0 && Gs && Gs.push(e),
        !0
}

const q0 = "3.5.13"
    , K0 = Ht
    , CA = Jk
    , AA = Tr
    , EA = Zy
    , TA = {
    createComponentInstance: W0,
    setupComponent: Y0,
    renderComponentRoot: Vc,
    setCurrentRenderingInstance: xl,
    isVNode: Hs,
    normalizeVNode: ln,
    getComponentPublicInstance: Zl,
    ensureValidVNode: Qf,
    pushWarningContext: Gk,
    popWarningContext: qk
}
    , IA = TA
    , PA = null
    , LA = null
    , MA = null;
/**
 * @vue/runtime-dom v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/
let Nh;
const qg = typeof window < "u" && window.trustedTypes;
if (qg)
    try {
        Nh = qg.createPolicy("vue", {
            createHTML: e => e
        })
    } catch {
    }
const Z0 = Nh ? e => Nh.createHTML(e) : e => e
    , OA = "http://www.w3.org/2000/svg"
    , RA = "http://www.w3.org/1998/Math/MathML"
    , $i = typeof document < "u" ? document : null
    , Kg = $i && $i.createElement("template")
    , NA = {
    insert: (e, t, s) => {
        t.insertBefore(e, s || null)
    }
    ,
    remove: e => {
        const t = e.parentNode;
        t && t.removeChild(e)
    }
    ,
    createElement: (e, t, s, a) => {
        const o = t === "svg" ? $i.createElementNS(OA, e) : t === "mathml" ? $i.createElementNS(RA, e) : s ? $i.createElement(e, {
            is: s
        }) : $i.createElement(e);
        return e === "select" && a && a.multiple != null && o.setAttribute("multiple", a.multiple),
            o
    }
    ,
    createText: e => $i.createTextNode(e),
    createComment: e => $i.createComment(e),
    setText: (e, t) => {
        e.nodeValue = t
    }
    ,
    setElementText: (e, t) => {
        e.textContent = t
    }
    ,
    parentNode: e => e.parentNode,
    nextSibling: e => e.nextSibling,
    querySelector: e => $i.querySelector(e),
    setScopeId(e, t) {
        e.setAttribute(t, "")
    },
    insertStaticContent(e, t, s, a, o, l) {
        const u = s ? s.previousSibling : t.lastChild;
        if (o && (o === l || o.nextSibling))
            for (; t.insertBefore(o.cloneNode(!0), s),
                       !(o === l || !(o = o.nextSibling));)
                ;
        else {
            Kg.innerHTML = Z0(a === "svg" ? `<svg>${e}</svg>` : a === "mathml" ? `<math>${e}</math>` : e);
            const p = Kg.content;
            if (a === "svg" || a === "mathml") {
                const g = p.firstChild;
                for (; g.firstChild;)
                    p.appendChild(g.firstChild);
                p.removeChild(g)
            }
            t.insertBefore(p, s)
        }
        return [u ? u.nextSibling : t.firstChild, s ? s.previousSibling : t.lastChild]
    }
}
    , aa = "transition"
    , $o = "animation"
    , eo = Symbol("_vtc")
    , J0 = {
    name: String,
    type: String,
    css: {
        type: Boolean,
        default: !0
    },
    duration: [String, Number, Object],
    enterFromClass: String,
    enterActiveClass: String,
    enterToClass: String,
    appearFromClass: String,
    appearActiveClass: String,
    appearToClass: String,
    leaveFromClass: String,
    leaveActiveClass: String,
    leaveToClass: String
}
    , Q0 = ns({}, Xf, J0)
    , DA = e => (e.displayName = "Transition",
    e.props = Q0,
    e)
    , fn = DA((e, {slots: t}) => jt(a0, ex(e), t))
    , Ha = (e, t = []) => {
    Ze(e) ? e.forEach(s => s(...t)) : e && e(...t)
}
    , Zg = e => e ? Ze(e) ? e.some(t => t.length > 1) : e.length > 1 : !1;

function ex(e) {
    const t = {};
    for (const oe in e)
        oe in J0 || (t[oe] = e[oe]);
    if (e.css === !1)
        return t;
    const {
            name: s = "v",
            type: a,
            duration: o,
            enterFromClass: l = `${s}-enter-from`,
            enterActiveClass: u = `${s}-enter-active`,
            enterToClass: p = `${s}-enter-to`,
            appearFromClass: g = l,
            appearActiveClass: y = u,
            appearToClass: v = p,
            leaveFromClass: w = `${s}-leave-from`,
            leaveActiveClass: C = `${s}-leave-active`,
            leaveToClass: T = `${s}-leave-to`
        } = e
        , I = FA(o)
        , A = I && I[0]
        , R = I && I[1]
        , {
            onBeforeEnter: P,
            onEnter: M,
            onEnterCancelled: O,
            onLeave: F,
            onLeaveCancelled: $,
            onBeforeAppear: V = P,
            onAppear: G = M,
            onAppearCancelled: ie = O
        } = t
        , te = (oe, ve, be, de) => {
            oe._enterCancelled = de,
                ua(oe, ve ? v : p),
                ua(oe, ve ? y : u),
            be && be()
        }
        , ne = (oe, ve) => {
            oe._isLeaving = !1,
                ua(oe, w),
                ua(oe, T),
                ua(oe, C),
            ve && ve()
        }
        , le = oe => (ve, be) => {
            const de = oe ? G : M
                , J = () => te(ve, oe, be);
            Ha(de, [ve, J]),
                Jg(() => {
                        ua(ve, oe ? g : l),
                            hi(ve, oe ? v : p),
                        Zg(de) || Qg(ve, a, A, J)
                    }
                )
        }
    ;
    return ns(t, {
        onBeforeEnter(oe) {
            Ha(P, [oe]),
                hi(oe, l),
                hi(oe, u)
        },
        onBeforeAppear(oe) {
            Ha(V, [oe]),
                hi(oe, g),
                hi(oe, y)
        },
        onEnter: le(!1),
        onAppear: le(!0),
        onLeave(oe, ve) {
            oe._isLeaving = !0;
            const be = () => ne(oe, ve);
            hi(oe, w),
                oe._enterCancelled ? (hi(oe, C),
                    Dh()) : (Dh(),
                    hi(oe, C)),
                Jg(() => {
                        oe._isLeaving && (ua(oe, w),
                            hi(oe, T),
                        Zg(F) || Qg(oe, a, R, be))
                    }
                ),
                Ha(F, [oe, be])
        },
        onEnterCancelled(oe) {
            te(oe, !1, void 0, !0),
                Ha(O, [oe])
        },
        onAppearCancelled(oe) {
            te(oe, !0, void 0, !0),
                Ha(ie, [oe])
        },
        onLeaveCancelled(oe) {
            ne(oe),
                Ha($, [oe])
        }
    })
}

function FA(e) {
    if (e == null)
        return null;
    if (At(e))
        return [Bd(e.enter), Bd(e.leave)];
    {
        const t = Bd(e);
        return [t, t]
    }
}

function Bd(e) {
    return su(e)
}

function hi(e, t) {
    t.split(/\s+/).forEach(s => s && e.classList.add(s)),
        (e[eo] || (e[eo] = new Set)).add(t)
}

function ua(e, t) {
    t.split(/\s+/).forEach(a => a && e.classList.remove(a));
    const s = e[eo];
    s && (s.delete(t),
    s.size || (e[eo] = void 0))
}

function Jg(e) {
    requestAnimationFrame(() => {
            requestAnimationFrame(e)
        }
    )
}

let $A = 0;

function Qg(e, t, s, a) {
    const o = e._endId = ++$A
        , l = () => {
            o === e._endId && a()
        }
    ;
    if (s != null)
        return setTimeout(l, s);
    const {type: u, timeout: p, propCount: g} = tx(e, t);
    if (!u)
        return a();
    const y = u + "end";
    let v = 0;
    const w = () => {
            e.removeEventListener(y, C),
                l()
        }
        , C = T => {
            T.target === e && ++v >= g && w()
        }
    ;
    setTimeout(() => {
            v < g && w()
        }
        , p + 1),
        e.addEventListener(y, C)
}

function tx(e, t) {
    const s = window.getComputedStyle(e)
        , a = I => (s[I] || "").split(", ")
        , o = a(`${aa}Delay`)
        , l = a(`${aa}Duration`)
        , u = em(o, l)
        , p = a(`${$o}Delay`)
        , g = a(`${$o}Duration`)
        , y = em(p, g);
    let v = null
        , w = 0
        , C = 0;
    t === aa ? u > 0 && (v = aa,
        w = u,
        C = l.length) : t === $o ? y > 0 && (v = $o,
        w = y,
        C = g.length) : (w = Math.max(u, y),
        v = w > 0 ? u > y ? aa : $o : null,
        C = v ? v === aa ? l.length : g.length : 0);
    const T = v === aa && /\b(transform|all)(,|$)/.test(a(`${aa}Property`).toString());
    return {
        type: v,
        timeout: w,
        propCount: C,
        hasTransform: T
    }
}

function em(e, t) {
    for (; e.length < t.length;)
        e = e.concat(e);
    return Math.max(...t.map((s, a) => tm(s) + tm(e[a])))
}

function tm(e) {
    return e === "auto" ? 0 : Number(e.slice(0, -1).replace(",", ".")) * 1e3
}

function Dh() {
    return document.body.offsetHeight
}

function BA(e, t, s) {
    const a = e[eo];
    a && (t = (t ? [t, ...a] : [...a]).join(" ")),
        t == null ? e.removeAttribute("class") : s ? e.setAttribute("class", t) : e.className = t
}

const hu = Symbol("_vod")
    , sx = Symbol("_vsh")
    , ss = {
    beforeMount(e, {value: t}, {transition: s}) {
        e[hu] = e.style.display === "none" ? "" : e.style.display,
            s && t ? s.beforeEnter(e) : Bo(e, t)
    },
    mounted(e, {value: t}, {transition: s}) {
        s && t && s.enter(e)
    },
    updated(e, {value: t, oldValue: s}, {transition: a}) {
        !t != !s && (a ? t ? (a.beforeEnter(e),
            Bo(e, !0),
            a.enter(e)) : a.leave(e, () => {
                Bo(e, !1)
            }
        ) : Bo(e, t))
    },
    beforeUnmount(e, {value: t}) {
        Bo(e, t)
    }
};

function Bo(e, t) {
    e.style.display = t ? e[hu] : "none",
        e[sx] = !t
}

function HA() {
    ss.getSSRProps = ({value: e}) => {
        if (!e)
            return {
                style: {
                    display: "none"
                }
            }
    }
}

const nx = Symbol("");

function VA(e) {
    const t = Et();
    if (!t)
        return;
    const s = t.ut = (o = e(t.proxy)) => {
            Array.from(document.querySelectorAll(`[data-v-owner="${t.uid}"]`)).forEach(l => fu(l, o))
        }
        , a = () => {
            const o = e(t.proxy);
            t.ce ? fu(t.ce, o) : Fh(t.subTree, o),
                s(o)
        }
    ;
    Kf(() => {
            bl(a)
        }
    ),
        $t(() => {
                Ke(a, Ht, {
                    flush: "post"
                });
                const o = new MutationObserver(a);
                o.observe(t.subTree.el.parentNode, {
                    childList: !0
                }),
                    hr(() => o.disconnect())
            }
        )
}

function Fh(e, t) {
    if (e.shapeFlag & 128) {
        const s = e.suspense;
        e = s.activeBranch,
        s.pendingBranch && !s.isHydrating && s.effects.push(() => {
                Fh(s.activeBranch, t)
            }
        )
    }
    for (; e.component;)
        e = e.component.subTree;
    if (e.shapeFlag & 1 && e.el)
        fu(e.el, t);
    else if (e.type === Ct)
        e.children.forEach(s => Fh(s, t));
    else if (e.type === Ka) {
        let {el: s, anchor: a} = e;
        for (; s && (fu(s, t),
        s !== a);)
            s = s.nextSibling
    }
}

function fu(e, t) {
    if (e.nodeType === 1) {
        const s = e.style;
        let a = "";
        for (const o in t)
            s.setProperty(`--${o}`, t[o]),
                a += `--${o}: ${t[o]};`;
        s[nx] = a
    }
}

const zA = /(^|;)\s*display\s*:/;

function WA(e, t, s) {
    const a = e.style
        , o = pt(s);
    let l = !1;
    if (s && !o) {
        if (t)
            if (pt(t))
                for (const u of t.split(";")) {
                    const p = u.slice(0, u.indexOf(":")).trim();
                    s[p] == null && Wc(a, p, "")
                }
            else
                for (const u in t)
                    s[u] == null && Wc(a, u, "");
        for (const u in s)
            u === "display" && (l = !0),
                Wc(a, u, s[u])
    } else if (o) {
        if (t !== s) {
            const u = a[nx];
            u && (s += ";" + u),
                a.cssText = s,
                l = zA.test(s)
        }
    } else
        t && e.removeAttribute("style");
    hu in e && (e[hu] = l ? a.display : "",
    e[sx] && (a.display = "none"))
}

const sm = /\s*!important$/;

function Wc(e, t, s) {
    if (Ze(s))
        s.forEach(a => Wc(e, t, a));
    else if (s == null && (s = ""),
        t.startsWith("--"))
        e.setProperty(t, s);
    else {
        const a = UA(e, t);
        sm.test(s) ? e.setProperty(tn(a), s.replace(sm, ""), "important") : e[a] = s
    }
}

const nm = ["Webkit", "Moz", "ms"]
    , Hd = {};

function UA(e, t) {
    const s = Hd[t];
    if (s)
        return s;
    let a = Ds(t);
    if (a !== "filter" && a in e)
        return Hd[t] = a;
    a = yo(a);
    for (let o = 0; o < nm.length; o++) {
        const l = nm[o] + a;
        if (l in e)
            return Hd[t] = l
    }
    return t
}

const im = "http://www.w3.org/1999/xlink";

function am(e, t, s, a, o, l = dk(t)) {
    a && t.startsWith("xlink:") ? s == null ? e.removeAttributeNS(im, t.slice(6, t.length)) : e.setAttributeNS(im, t, s) : s == null || l && !Ay(s) ? e.removeAttribute(t) : e.setAttribute(t, l ? "" : ei(s) ? String(s) : s)
}

function rm(e, t, s, a, o) {
    if (t === "innerHTML" || t === "textContent") {
        s != null && (e[t] = t === "innerHTML" ? Z0(s) : s);
        return
    }
    const l = e.tagName;
    if (t === "value" && l !== "PROGRESS" && !l.includes("-")) {
        const p = l === "OPTION" ? e.getAttribute("value") || "" : e.value
            , g = s == null ? e.type === "checkbox" ? "on" : "" : String(s);
        (p !== g || !("_value" in e)) && (e.value = g),
        s == null && e.removeAttribute(t),
            e._value = s;
        return
    }
    let u = !1;
    if (s === "" || s == null) {
        const p = typeof e[t];
        p === "boolean" ? s = Ay(s) : s == null && p === "string" ? (s = "",
            u = !0) : p === "number" && (s = 0,
            u = !0)
    }
    try {
        e[t] = s
    } catch {
    }
    u && e.removeAttribute(o || t)
}

function Wi(e, t, s, a) {
    e.addEventListener(t, s, a)
}

function YA(e, t, s, a) {
    e.removeEventListener(t, s, a)
}

const om = Symbol("_vei");

function XA(e, t, s, a, o = null) {
    const l = e[om] || (e[om] = {})
        , u = l[t];
    if (a && u)
        u.value = a;
    else {
        const [p, g] = jA(t);
        if (a) {
            const y = l[t] = KA(a, o);
            Wi(e, p, y, g)
        } else
            u && (YA(e, p, u, g),
                l[t] = void 0)
    }
}

const lm = /(?:Once|Passive|Capture)$/;

function jA(e) {
    let t;
    if (lm.test(e)) {
        t = {};
        let a;
        for (; a = e.match(lm);)
            e = e.slice(0, e.length - a[0].length),
                t[a[0].toLowerCase()] = !0
    }
    return [e[2] === ":" ? e.slice(3) : tn(e.slice(2)), t]
}

let Vd = 0;
const GA = Promise.resolve()
    , qA = () => Vd || (GA.then(() => Vd = 0),
    Vd = Date.now());

function KA(e, t) {
    const s = a => {
            if (!a._vts)
                a._vts = Date.now();
            else if (a._vts <= s.attached)
                return;
            Mn(ZA(a, s.value), t, 5, [a])
        }
    ;
    return s.value = e,
        s.attached = qA(),
        s
}

function ZA(e, t) {
    if (Ze(t)) {
        const s = e.stopImmediatePropagation;
        return e.stopImmediatePropagation = () => {
            s.call(e),
                e._stopped = !0
        }
            ,
            t.map(a => o => !o._stopped && a && a(o))
    } else
        return t
}

const cm = e => e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) > 96 && e.charCodeAt(2) < 123
    , JA = (e, t, s, a, o, l) => {
        const u = o === "svg";
        t === "class" ? BA(e, a, u) : t === "style" ? WA(e, s, a) : jl(t) ? Rf(t) || XA(e, t, s, a, l) : (t[0] === "." ? (t = t.slice(1),
            !0) : t[0] === "^" ? (t = t.slice(1),
            !1) : QA(e, t, a, u)) ? (rm(e, t, a),
        !e.tagName.includes("-") && (t === "value" || t === "checked" || t === "selected") && am(e, t, a, u, l, t !== "value")) : e._isVueCE && (/[A-Z]/.test(t) || !pt(a)) ? rm(e, Ds(t), a, l, t) : (t === "true-value" ? e._trueValue = a : t === "false-value" && (e._falseValue = a),
            am(e, t, a, u))
    }
;

function QA(e, t, s, a) {
    if (a)
        return !!(t === "innerHTML" || t === "textContent" || t in e && cm(t) && nt(s));
    if (t === "spellcheck" || t === "draggable" || t === "translate" || t === "form" || t === "list" && e.tagName === "INPUT" || t === "type" && e.tagName === "TEXTAREA")
        return !1;
    if (t === "width" || t === "height") {
        const o = e.tagName;
        if (o === "IMG" || o === "VIDEO" || o === "CANVAS" || o === "SOURCE")
            return !1
    }
    return cm(t) && pt(s) ? !1 : t in e
}

const um = {};

/*! #__NO_SIDE_EFFECTS__ */
function ix(e, t, s) {
    const a = Ce(e, t);
    er(a) && ns(a, t);

    class o extends ju {
        constructor(u) {
            super(a, u, s)
        }
    }

    return o.def = a,
        o
}

/*! #__NO_SIDE_EFFECTS__ */
const eE = (e, t) => ix(e, t, gx)
    , tE = typeof HTMLElement < "u" ? HTMLElement : class {
    }
;

class ju extends tE {
    constructor(t, s = {}, a = Al) {
        super(),
            this._def = t,
            this._props = s,
            this._createApp = a,
            this._isVueCE = !0,
            this._instance = null,
            this._app = null,
            this._nonce = this._def.nonce,
            this._connected = !1,
            this._resolved = !1,
            this._numberProps = null,
            this._styleChildren = new WeakSet,
            this._ob = null,
            this.shadowRoot && a !== Al ? this._root = this.shadowRoot : t.shadowRoot !== !1 ? (this.attachShadow({
                mode: "open"
            }),
                this._root = this.shadowRoot) : this._root = this,
        this._def.__asyncLoader || this._resolveProps(this._def)
    }

    connectedCallback() {
        if (!this.isConnected)
            return;
        this.shadowRoot || this._parseSlots(),
            this._connected = !0;
        let t = this;
        for (; t = t && (t.parentNode || t.host);)
            if (t instanceof ju) {
                this._parent = t;
                break
            }
        this._instance || (this._resolved ? (this._setParent(),
            this._update()) : t && t._pendingResolve ? this._pendingResolve = t._pendingResolve.then(() => {
                this._pendingResolve = void 0,
                    this._resolveDef()
            }
        ) : this._resolveDef())
    }

    _setParent(t = this._parent) {
        t && (this._instance.parent = t._instance,
            this._instance.provides = t._instance.provides)
    }

    disconnectedCallback() {
        this._connected = !1,
            xt(() => {
                    this._connected || (this._ob && (this._ob.disconnect(),
                        this._ob = null),
                    this._app && this._app.unmount(),
                    this._instance && (this._instance.ce = void 0),
                        this._app = this._instance = null)
                }
            )
    }

    _resolveDef() {
        if (this._pendingResolve)
            return;
        for (let a = 0; a < this.attributes.length; a++)
            this._setAttr(this.attributes[a].name);
        this._ob = new MutationObserver(a => {
                for (const o of a)
                    this._setAttr(o.attributeName)
            }
        ),
            this._ob.observe(this, {
                attributes: !0
            });
        const t = (a, o = !1) => {
            this._resolved = !0,
                this._pendingResolve = void 0;
            const {props: l, styles: u} = a;
            let p;
            if (l && !Ze(l))
                for (const g in l) {
                    const y = l[g];
                    (y === Number || y && y.type === Number) && (g in this._props && (this._props[g] = su(this._props[g])),
                        (p || (p = Object.create(null)))[Ds(g)] = !0)
                }
            this._numberProps = p,
            o && this._resolveProps(a),
            this.shadowRoot && this._applyStyles(u),
                this._mount(a)
        }
            , s = this._def.__asyncLoader;
        s ? this._pendingResolve = s().then(a => t(this._def = a, !0)) : t(this._def)
    }

    _mount(t) {
        this._app = this._createApp(t),
        t.configureApp && t.configureApp(this._app),
            this._app._ceVNode = this._createVNode(),
            this._app.mount(this._root);
        const s = this._instance && this._instance.exposed;
        if (s)
            for (const a in s)
                Wt(this, a) || Object.defineProperty(this, a, {
                    get: () => D(s[a])
                })
    }

    _resolveProps(t) {
        const {props: s} = t
            , a = Ze(s) ? s : Object.keys(s || {});
        for (const o of Object.keys(this))
            o[0] !== "_" && a.includes(o) && this._setProp(o, this[o]);
        for (const o of a.map(Ds))
            Object.defineProperty(this, o, {
                get() {
                    return this._getProp(o)
                },
                set(l) {
                    this._setProp(o, l, !0, !0)
                }
            })
    }

    _setAttr(t) {
        if (t.startsWith("data-v-"))
            return;
        const s = this.hasAttribute(t);
        let a = s ? this.getAttribute(t) : um;
        const o = Ds(t);
        s && this._numberProps && this._numberProps[o] && (a = su(a)),
            this._setProp(o, a, !1, !0)
    }

    _getProp(t) {
        return this._props[t]
    }

    _setProp(t, s, a = !0, o = !1) {
        if (s !== this._props[t] && (s === um ? delete this._props[t] : (this._props[t] = s,
        t === "key" && this._app && (this._app._ceVNode.key = s)),
        o && this._instance && this._update(),
            a)) {
            const l = this._ob;
            l && l.disconnect(),
                s === !0 ? this.setAttribute(tn(t), "") : typeof s == "string" || typeof s == "number" ? this.setAttribute(tn(t), s + "") : s || this.removeAttribute(tn(t)),
            l && l.observe(this, {
                attributes: !0
            })
        }
    }

    _update() {
        so(this._createVNode(), this._root)
    }

    _createVNode() {
        const t = {};
        this.shadowRoot || (t.onVnodeMounted = t.onVnodeUpdated = this._renderSlots.bind(this));
        const s = ae(this._def, ns(t, this._props));
        return this._instance || (s.ce = a => {
                this._instance = a,
                    a.ce = this,
                    a.isCE = !0;
                const o = (l, u) => {
                        this.dispatchEvent(new CustomEvent(l, er(u[0]) ? ns({
                            detail: u
                        }, u[0]) : {
                            detail: u
                        }))
                    }
                ;
                a.emit = (l, ...u) => {
                    o(l, u),
                    tn(l) !== l && o(tn(l), u)
                }
                    ,
                    this._setParent()
            }
        ),
            s
    }

    _applyStyles(t, s) {
        if (!t)
            return;
        if (s) {
            if (s === this._def || this._styleChildren.has(s))
                return;
            this._styleChildren.add(s)
        }
        const a = this._nonce;
        for (let o = t.length - 1; o >= 0; o--) {
            const l = document.createElement("style");
            a && l.setAttribute("nonce", a),
                l.textContent = t[o],
                this.shadowRoot.prepend(l)
        }
    }

    _parseSlots() {
        const t = this._slots = {};
        let s;
        for (; s = this.firstChild;) {
            const a = s.nodeType === 1 && s.getAttribute("slot") || "default";
            (t[a] || (t[a] = [])).push(s),
                this.removeChild(s)
        }
    }

    _renderSlots() {
        const t = (this._teleportTarget || this).querySelectorAll("slot")
            , s = this._instance.type.__scopeId;
        for (let a = 0; a < t.length; a++) {
            const o = t[a]
                , l = o.getAttribute("name") || "default"
                , u = this._slots[l]
                , p = o.parentNode;
            if (u)
                for (const g of u) {
                    if (s && g.nodeType === 1) {
                        const y = s + "-s"
                            , v = document.createTreeWalker(g, 1);
                        g.setAttribute(y, "");
                        let w;
                        for (; w = v.nextNode();)
                            w.setAttribute(y, "")
                    }
                    p.insertBefore(g, o)
                }
            else
                for (; o.firstChild;)
                    p.insertBefore(o.firstChild, o);
            p.removeChild(o)
        }
    }

    _injectChildStyle(t) {
        this._applyStyles(t.styles, t)
    }

    _removeChildStyle(t) {
    }
}

function ax(e) {
    const t = Et()
        , s = t && t.ce;
    return s || null
}

function sE() {
    const e = ax();
    return e && e.shadowRoot
}

function nE(e = "$style") {
    {
        const t = Et();
        if (!t)
            return Ut;
        const s = t.type.__cssModules;
        if (!s)
            return Ut;
        const a = s[e];
        return a || Ut
    }
}

const rx = new WeakMap
    , ox = new WeakMap
    , pu = Symbol("_moveCb")
    , dm = Symbol("_enterCb")
    , iE = e => (delete e.props.mode,
    e)
    , aE = iE({
    name: "TransitionGroup",
    props: ns({}, Q0, {
        tag: String,
        moveClass: String
    }),
    setup(e, {slots: t}) {
        const s = Et()
            , a = Yf();
        let o, l;
        return dr(() => {
                if (!o.length)
                    return;
                const u = e.moveClass || `${e.name || "v"}-move`;
                if (!cE(o[0].el, s.vnode.el, u))
                    return;
                o.forEach(rE),
                    o.forEach(oE);
                const p = o.filter(lE);
                Dh(),
                    p.forEach(g => {
                            const y = g.el
                                , v = y.style;
                            hi(y, u),
                                v.transform = v.webkitTransform = v.transitionDuration = "";
                            const w = y[pu] = C => {
                                    C && C.target !== y || (!C || /transform$/.test(C.propertyName)) && (y.removeEventListener("transitionend", w),
                                        y[pu] = null,
                                        ua(y, u))
                                }
                            ;
                            y.addEventListener("transitionend", w)
                        }
                    )
            }
        ),
            () => {
                const u = Ft(e)
                    , p = ex(u);
                let g = u.tag || Ct;
                if (o = [],
                    l)
                    for (let y = 0; y < l.length; y++) {
                        const v = l[y];
                        v.el && v.el instanceof Element && (o.push(v),
                            Gi(v, Jr(v, p, a, s)),
                            rx.set(v, v.el.getBoundingClientRect()))
                    }
                l = t.default ? Wu(t.default()) : [];
                for (let y = 0; y < l.length; y++) {
                    const v = l[y];
                    v.key != null && Gi(v, Jr(v, p, a, s))
                }
                return ae(g, null, l)
            }
    }
})
    , Gu = aE;

function rE(e) {
    const t = e.el;
    t[pu] && t[pu](),
    t[dm] && t[dm]()
}

function oE(e) {
    ox.set(e, e.el.getBoundingClientRect())
}

function lE(e) {
    const t = rx.get(e)
        , s = ox.get(e)
        , a = t.left - s.left
        , o = t.top - s.top;
    if (a || o) {
        const l = e.el.style;
        return l.transform = l.webkitTransform = `translate(${a}px,${o}px)`,
            l.transitionDuration = "0s",
            e
    }
}

function cE(e, t, s) {
    const a = e.cloneNode()
        , o = e[eo];
    o && o.forEach(p => {
            p.split(/\s+/).forEach(g => g && a.classList.remove(g))
        }
    ),
        s.split(/\s+/).forEach(p => p && a.classList.add(p)),
        a.style.display = "none";
    const l = t.nodeType === 1 ? t : t.parentNode;
    l.appendChild(a);
    const {hasTransform: u} = tx(a);
    return l.removeChild(a),
        u
}

const Aa = e => {
        const t = e.props["onUpdate:modelValue"] || !1;
        return Ze(t) ? s => zr(t, s) : t
    }
;

function uE(e) {
    e.target.composing = !0
}

function hm(e) {
    const t = e.target;
    t.composing && (t.composing = !1,
        t.dispatchEvent(new Event("input")))
}

const Tn = Symbol("_assign")
    , Cl = {
    created(e, {modifiers: {lazy: t, trim: s, number: a}}, o) {
        e[Tn] = Aa(o);
        const l = a || o.props && o.props.type === "number";
        Wi(e, t ? "change" : "input", u => {
                if (u.target.composing)
                    return;
                let p = e.value;
                s && (p = p.trim()),
                l && (p = tu(p)),
                    e[Tn](p)
            }
        ),
        s && Wi(e, "change", () => {
                e.value = e.value.trim()
            }
        ),
        t || (Wi(e, "compositionstart", uE),
            Wi(e, "compositionend", hm),
            Wi(e, "change", hm))
    },
    mounted(e, {value: t}) {
        e.value = t ?? ""
    },
    beforeUpdate(e, {value: t, oldValue: s, modifiers: {lazy: a, trim: o, number: l}}, u) {
        if (e[Tn] = Aa(u),
            e.composing)
            return;
        const p = (l || e.type === "number") && !/^0\d/.test(e.value) ? tu(e.value) : e.value
            , g = t ?? "";
        p !== g && (document.activeElement === e && e.type !== "range" && (a && t === s || o && e.value.trim() === g) || (e.value = g))
    }
}
    , nr = {
    deep: !0,
    created(e, t, s) {
        e[Tn] = Aa(s),
            Wi(e, "change", () => {
                    const a = e._modelValue
                        , o = to(e)
                        , l = e.checked
                        , u = e[Tn];
                    if (Ze(a)) {
                        const p = Ou(a, o)
                            , g = p !== -1;
                        if (l && !g)
                            u(a.concat(o));
                        else if (!l && g) {
                            const y = [...a];
                            y.splice(p, 1),
                                u(y)
                        }
                    } else if (cr(a)) {
                        const p = new Set(a);
                        l ? p.add(o) : p.delete(o),
                            u(p)
                    } else
                        u(cx(e, l))
                }
            )
    },
    mounted: fm,
    beforeUpdate(e, t, s) {
        e[Tn] = Aa(s),
            fm(e, t, s)
    }
};

function fm(e, {value: t, oldValue: s}, a) {
    e._modelValue = t;
    let o;
    if (Ze(t))
        o = Ou(t, a.props.value) > -1;
    else if (cr(t))
        o = t.has(a.props.value);
    else {
        if (t === s)
            return;
        o = ka(t, cx(e, !0))
    }
    e.checked !== o && (e.checked = o)
}

const Jl = {
    created(e, {value: t}, s) {
        e.checked = ka(t, s.props.value),
            e[Tn] = Aa(s),
            Wi(e, "change", () => {
                    e[Tn](to(e))
                }
            )
    },
    beforeUpdate(e, {value: t, oldValue: s}, a) {
        e[Tn] = Aa(a),
        t !== s && (e.checked = ka(t, a.props.value))
    }
}
    , lx = {
    deep: !0,
    created(e, {value: t, modifiers: {number: s}}, a) {
        const o = cr(t);
        Wi(e, "change", () => {
                const l = Array.prototype.filter.call(e.options, u => u.selected).map(u => s ? tu(to(u)) : to(u));
                e[Tn](e.multiple ? o ? new Set(l) : l : l[0]),
                    e._assigning = !0,
                    xt(() => {
                            e._assigning = !1
                        }
                    )
            }
        ),
            e[Tn] = Aa(a)
    },
    mounted(e, {value: t}) {
        pm(e, t)
    },
    beforeUpdate(e, t, s) {
        e[Tn] = Aa(s)
    },
    updated(e, {value: t}) {
        e._assigning || pm(e, t)
    }
};

function pm(e, t) {
    const s = e.multiple
        , a = Ze(t);
    if (!(s && !a && !cr(t))) {
        for (let o = 0, l = e.options.length; o < l; o++) {
            const u = e.options[o]
                , p = to(u);
            if (s)
                if (a) {
                    const g = typeof p;
                    g === "string" || g === "number" ? u.selected = t.some(y => String(y) === String(p)) : u.selected = Ou(t, p) > -1
                } else
                    u.selected = t.has(p);
            else if (ka(to(u), t)) {
                e.selectedIndex !== o && (e.selectedIndex = o);
                return
            }
        }
        !s && e.selectedIndex !== -1 && (e.selectedIndex = -1)
    }
}

function to(e) {
    return "_value" in e ? e._value : e.value
}

function cx(e, t) {
    const s = t ? "_trueValue" : "_falseValue";
    return s in e ? e[s] : t
}

const ux = {
    created(e, t, s) {
        kc(e, t, s, null, "created")
    },
    mounted(e, t, s) {
        kc(e, t, s, null, "mounted")
    },
    beforeUpdate(e, t, s, a) {
        kc(e, t, s, a, "beforeUpdate")
    },
    updated(e, t, s, a) {
        kc(e, t, s, a, "updated")
    }
};

function dx(e, t) {
    switch (e) {
        case "SELECT":
            return lx;
        case "TEXTAREA":
            return Cl;
        default:
            switch (t) {
                case "checkbox":
                    return nr;
                case "radio":
                    return Jl;
                default:
                    return Cl
            }
    }
}

function kc(e, t, s, a, o) {
    const u = dx(e.tagName, s.props && s.props.type)[o];
    u && u(e, t, s, a)
}

function dE() {
    Cl.getSSRProps = ({value: e}) => ({
        value: e
    }),
        Jl.getSSRProps = ({value: e}, t) => {
            if (t.props && ka(t.props.value, e))
                return {
                    checked: !0
                }
        }
        ,
        nr.getSSRProps = ({value: e}, t) => {
            if (Ze(e)) {
                if (t.props && Ou(e, t.props.value) > -1)
                    return {
                        checked: !0
                    }
            } else if (cr(e)) {
                if (t.props && e.has(t.props.value))
                    return {
                        checked: !0
                    }
            } else if (e)
                return {
                    checked: !0
                }
        }
        ,
        ux.getSSRProps = (e, t) => {
            if (typeof t.type != "string")
                return;
            const s = dx(t.type.toUpperCase(), t.props && t.props.type);
            if (s.getSSRProps)
                return s.getSSRProps(e, t)
        }
}

const hE = ["ctrl", "shift", "alt", "meta"]
    , fE = {
    stop: e => e.stopPropagation(),
    prevent: e => e.preventDefault(),
    self: e => e.target !== e.currentTarget,
    ctrl: e => !e.ctrlKey,
    shift: e => !e.shiftKey,
    alt: e => !e.altKey,
    meta: e => !e.metaKey,
    left: e => "button" in e && e.button !== 0,
    middle: e => "button" in e && e.button !== 1,
    right: e => "button" in e && e.button !== 2,
    exact: (e, t) => hE.some(s => e[`${s}Key`] && !t.includes(s))
}
    , Ot = (e, t) => {
    const s = e._withMods || (e._withMods = {})
        , a = t.join(".");
    return s[a] || (s[a] = (o, ...l) => {
            for (let u = 0; u < t.length; u++) {
                const p = fE[t[u]];
                if (p && p(o, t))
                    return
            }
            return e(o, ...l)
        }
    )
}
    , pE = {
    esc: "escape",
    space: " ",
    up: "arrow-up",
    left: "arrow-left",
    right: "arrow-right",
    down: "arrow-down",
    delete: "backspace"
}
    , vn = (e, t) => {
    const s = e._withKeys || (e._withKeys = {})
        , a = t.join(".");
    return s[a] || (s[a] = o => {
            if (!("key" in o))
                return;
            const l = tn(o.key);
            if (t.some(u => u === l || pE[u] === l))
                return e(o)
        }
    )
}
    , hx = ns({
    patchProp: JA
}, NA);
let el, gm = !1;

function fx() {
    return el || (el = E0(hx))
}

function px() {
    return el = gm ? el : T0(hx),
        gm = !0,
        el
}

const so = (...e) => {
        fx().render(...e)
    }
    , gE = (...e) => {
        px().hydrate(...e)
    }
    , Al = (...e) => {
        const t = fx().createApp(...e)
            , {mount: s} = t;
        return t.mount = a => {
            const o = vx(a);
            if (!o)
                return;
            const l = t._component;
            !nt(l) && !l.render && !l.template && (l.template = o.innerHTML),
            o.nodeType === 1 && (o.textContent = "");
            const u = s(o, !1, mx(o));
            return o instanceof Element && (o.removeAttribute("v-cloak"),
                o.setAttribute("data-v-app", "")),
                u
        }
            ,
            t
    }
    , gx = (...e) => {
        const t = px().createApp(...e)
            , {mount: s} = t;
        return t.mount = a => {
            const o = vx(a);
            if (o)
                return s(o, !0, mx(o))
        }
            ,
            t
    }
;

function mx(e) {
    if (e instanceof SVGElement)
        return "svg";
    if (typeof MathMLElement == "function" && e instanceof MathMLElement)
        return "mathml"
}

function vx(e) {
    return pt(e) ? document.querySelector(e) : e
}

let mm = !1;
const mE = () => {
        mm || (mm = !0,
            dE(),
            HA())
    }
;
/**
 * vue v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/
const vE = () => {
}
    , bE = Object.freeze(Object.defineProperty({
    __proto__: null,
    BaseTransition: a0,
    BaseTransitionPropsValidators: Xf,
    Comment: ws,
    DeprecationTypes: MA,
    EffectScope: Ff,
    ErrorCodes: Zk,
    ErrorTypeStrings: CA,
    Fragment: Ct,
    KeepAlive: SC,
    ReactiveEffect: pl,
    Static: Ka,
    Suspense: oA,
    Teleport: t0,
    Text: Kn,
    TrackOpTypes: Uk,
    Transition: fn,
    TransitionGroup: Gu,
    TriggerOpTypes: Yk,
    VueElement: ju,
    assertNumber: Kk,
    callWithAsyncErrorHandling: Mn,
    callWithErrorHandling: xo,
    camelize: Ds,
    capitalize: yo,
    cloneVNode: ti,
    compatUtils: LA,
    compile: vE,
    computed: re,
    createApp: Al,
    createBlock: Te,
    createCommentVNode: ke,
    createElementBlock: ye,
    createElementVNode: U,
    createHydrationRenderer: T0,
    createPropsRestProxy: NC,
    createRenderer: E0,
    createSSRApp: gx,
    createSlots: Sl,
    createStaticVNode: gA,
    createTextVNode: at,
    createVNode: ae,
    customRef: Wf,
    defineAsyncComponent: xC,
    defineComponent: Ce,
    defineCustomElement: ix,
    defineEmits: EC,
    defineExpose: TC,
    defineModel: LC,
    defineOptions: IC,
    defineProps: AC,
    defineSSRCustomElement: eE,
    defineSlots: PC,
    devtools: AA,
    effect: pk,
    effectScope: $f,
    getCurrentInstance: Et,
    getCurrentScope: Ru,
    getCurrentWatcher: Xk,
    getTransitionRawChildren: Wu,
    guardReactiveProps: np,
    h: jt,
    handleError: ur,
    hasInjectionContext: UC,
    hydrate: gE,
    hydrateOnIdle: pC,
    hydrateOnInteraction: bC,
    hydrateOnMediaQuery: vC,
    hydrateOnVisible: mC,
    initCustomFormatter: _A,
    initDirectivesForSSR: mE,
    inject: st,
    isMemoSame: G0,
    isProxy: Vu,
    isReactive: wa,
    isReadonly: Ca,
    isRef: Qt,
    isRuntimeOnly: xA,
    isShallow: xn,
    isVNode: Hs,
    markRaw: vl,
    mergeDefaults: OC,
    mergeModels: RC,
    mergeProps: vs,
    nextTick: xt,
    normalizeClass: he,
    normalizeProps: Cy,
    normalizeStyle: kt,
    onActivated: Gf,
    onBeforeMount: ql,
    onBeforeUnmount: us,
    onBeforeUpdate: Kf,
    onDeactivated: qf,
    onErrorCaptured: d0,
    onMounted: $t,
    onRenderTracked: u0,
    onRenderTriggered: c0,
    onScopeDispose: Nu,
    onServerPrefetch: l0,
    onUnmounted: hr,
    onUpdated: dr,
    onWatcherCleanup: Xy,
    openBlock: Z,
    popScopeId: sC,
    provide: Xt,
    proxyRefs: zf,
    pushScopeId: tC,
    queuePostFlushCb: bl,
    reactive: ys,
    readonly: Zi,
    ref: Se,
    registerRuntimeCompiler: yA,
    render: so,
    renderList: wi,
    renderSlot: De,
    resolveComponent: Bt,
    resolveDirective: wo,
    resolveDynamicComponent: Vt,
    resolveFilter: PA,
    resolveTransitionHooks: Jr,
    setBlockTracking: Ih,
    setDevtoolsHook: EA,
    setTransitionHooks: Gi,
    shallowReactive: Bu,
    shallowReadonly: Rk,
    shallowRef: Bs,
    ssrContextKey: M0,
    ssrUtils: IA,
    stop: gk,
    toDisplayString: me,
    toHandlerKey: Vr,
    toHandlers: f0,
    toRaw: Ft,
    toRef: ks,
    toRefs: ai,
    toValue: Fk,
    transformVNodeArgs: fA,
    triggerRef: Dk,
    unref: D,
    useAttrs: p0,
    useCssModule: nE,
    useCssVars: VA,
    useHost: ax,
    useId: rC,
    useModel: eA,
    useSSRContext: O0,
    useShadowRoot: sE,
    useSlots: _i,
    useTemplateRef: oC,
    useTransitionState: Yf,
    vModelCheckbox: nr,
    vModelDynamic: ux,
    vModelRadio: Jl,
    vModelSelect: lx,
    vModelText: Cl,
    vShow: ss,
    version: q0,
    warn: K0,
    watch: Ke,
    watchEffect: So,
    watchPostEffect: JC,
    watchSyncEffect: R0,
    withAsyncContext: DC,
    withCtx: se,
    withDefaults: MC,
    withDirectives: _t,
    withKeys: vn,
    withMemo: kA,
    withModifiers: Ot,
    withScopeId: nC
}, Symbol.toStringTag, {
    value: "Module"
}));

function ap(e) {
    return Ru() ? (Nu(e),
        !0) : !1
}

function Ea(e) {
    return typeof e == "function" ? e() : D(e)
}

const bx = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const yE = e => e != null
    , xE = Object.prototype.toString
    , wE = e => xE.call(e) === "[object Object]"
    , yx = () => {
    }
;

function SE(e, t) {
    function s(...a) {
        return new Promise((o, l) => {
                Promise.resolve(e(() => t.apply(this, a), {
                    fn: t,
                    thisArg: this,
                    args: a
                })).then(o).catch(l)
            }
        )
    }

    return s
}

const xx = e => e();

function _E(e = xx) {
    const t = Se(!0);

    function s() {
        t.value = !1
    }

    function a() {
        t.value = !0
    }

    const o = (...l) => {
            t.value && e(...l)
        }
    ;
    return {
        isActive: Zi(t),
        pause: s,
        resume: a,
        eventFilter: o
    }
}

function kE(e, t) {
    var s;
    if (typeof e == "number")
        return e + t;
    const a = ((s = e.match(/^-?[0-9]+\.?[0-9]*/)) == null ? void 0 : s[0]) || ""
        , o = e.slice(a.length)
        , l = Number.parseFloat(a) + t;
    return Number.isNaN(l) ? e : l + o
}

function wx(e) {
    return e || Et()
}

function rp(...e) {
    if (e.length !== 1)
        return ks(...e);
    const t = e[0];
    return typeof t == "function" ? Zi(Wf(() => ({
        get: t,
        set: yx
    }))) : Se(t)
}

function CE(e, t, s = {}) {
    const {eventFilter: a = xx, ...o} = s;
    return Ke(e, SE(a, t), o)
}

function AE(e, t, s = {}) {
    const {eventFilter: a, ...o} = s
        , {eventFilter: l, pause: u, resume: p, isActive: g} = _E(a);
    return {
        stop: CE(e, t, {
            ...o,
            eventFilter: l
        }),
        pause: u,
        resume: p,
        isActive: g
    }
}

function EE(e, t) {
    wx(t) && us(e, t)
}

function Sx(e, t = !0, s) {
    wx() ? $t(e, s) : t ? e() : xt(e)
}

function op(e) {
    var t;
    const s = Ea(e);
    return (t = s == null ? void 0 : s.$el) != null ? t : s
}

const Ta = bx ? window : void 0
    , _x = bx ? window.document : void 0;

function vm(...e) {
    let t, s, a, o;
    if (typeof e[0] == "string" || Array.isArray(e[0]) ? ([s, a, o] = e,
        t = Ta) : [t, s, a, o] = e,
        !t)
        return yx;
    Array.isArray(s) || (s = [s]),
    Array.isArray(a) || (a = [a]);
    const l = []
        , u = () => {
            l.forEach(v => v()),
                l.length = 0
        }
        , p = (v, w, C, T) => (v.addEventListener(w, C, T),
            () => v.removeEventListener(w, C, T))
        , g = Ke(() => [op(t), Ea(o)], ([v, w]) => {
                if (u(),
                    !v)
                    return;
                const C = wE(w) ? {
                    ...w
                } : w;
                l.push(...s.flatMap(T => a.map(I => p(v, T, I, C))))
            }
            , {
                immediate: !0,
                flush: "post"
            })
        , y = () => {
            g(),
                u()
        }
    ;
    return ap(y),
        y
}

function TE() {
    const e = Se(!1)
        , t = Et();
    return t && $t(() => {
            e.value = !0
        }
        , t),
        e
}

function kx(e) {
    const t = TE();
    return re(() => (t.value,
        !!e()))
}

function Ir(e, t = {}) {
    const {window: s = Ta} = t
        , a = kx(() => s && "matchMedia" in s && typeof s.matchMedia == "function");
    let o;
    const l = Se(!1)
        , u = y => {
        l.value = y.matches
    }
        , p = () => {
        o && ("removeEventListener" in o ? o.removeEventListener("change", u) : o.removeListener(u))
    }
        , g = So(() => {
            a.value && (p(),
                o = s.matchMedia(Ea(e)),
                "addEventListener" in o ? o.addEventListener("change", u) : o.addListener(u),
                l.value = o.matches)
        }
    );
    return ap(() => {
            g(),
                p(),
                o = void 0
        }
    ),
        l
}

function IE(e, t = {}) {
    function s(v, w) {
        let C = Ea(e[Ea(v)]);
        return w != null && (C = kE(C, w)),
        typeof C == "number" && (C = `${C}px`),
            C
    }

    const {window: a = Ta, strategy: o = "min-width"} = t;

    function l(v) {
        return a ? a.matchMedia(v).matches : !1
    }

    const u = v => Ir(() => `(min-width: ${s(v)})`, t)
        , p = v => Ir(() => `(max-width: ${s(v)})`, t)
        , g = Object.keys(e).reduce((v, w) => (Object.defineProperty(v, w, {
        get: () => o === "min-width" ? u(w) : p(w),
        enumerable: !0,
        configurable: !0
    }),
        v), {});

    function y() {
        const v = Object.keys(e).map(w => [w, u(w)]);
        return re(() => v.filter(([, w]) => w.value).map(([w]) => w))
    }

    return Object.assign(g, {
        greaterOrEqual: u,
        smallerOrEqual: p,
        greater(v) {
            return Ir(() => `(min-width: ${s(v, .1)})`, t)
        },
        smaller(v) {
            return Ir(() => `(max-width: ${s(v, -.1)})`, t)
        },
        between(v, w) {
            return Ir(() => `(min-width: ${s(v)}) and (max-width: ${s(w, -.1)})`, t)
        },
        isGreater(v) {
            return l(`(min-width: ${s(v, .1)})`)
        },
        isGreaterOrEqual(v) {
            return l(`(min-width: ${s(v)})`)
        },
        isSmaller(v) {
            return l(`(max-width: ${s(v, -.1)})`)
        },
        isSmallerOrEqual(v) {
            return l(`(max-width: ${s(v)})`)
        },
        isInBetween(v, w) {
            return l(`(min-width: ${s(v)}) and (max-width: ${s(w, -.1)})`)
        },
        current: y,
        active() {
            const v = y();
            return re(() => v.value.length === 0 ? "" : v.value.at(-1))
        }
    })
}

const Cc = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}
    , Ac = "__vueuse_ssr_handlers__"
    , PE = LE();

function LE() {
    return Ac in Cc || (Cc[Ac] = Cc[Ac] || {}),
        Cc[Ac]
}

function Cx(e, t) {
    return PE[e] || t
}

function ME(e) {
    return e == null ? "any" : e instanceof Set ? "set" : e instanceof Map ? "map" : e instanceof Date ? "date" : typeof e == "boolean" ? "boolean" : typeof e == "string" ? "string" : typeof e == "object" ? "object" : Number.isNaN(e) ? "any" : "number"
}

const OE = {
    boolean: {
        read: e => e === "true",
        write: e => String(e)
    },
    object: {
        read: e => JSON.parse(e),
        write: e => JSON.stringify(e)
    },
    number: {
        read: e => Number.parseFloat(e),
        write: e => String(e)
    },
    any: {
        read: e => e,
        write: e => String(e)
    },
    string: {
        read: e => e,
        write: e => String(e)
    },
    map: {
        read: e => new Map(JSON.parse(e)),
        write: e => JSON.stringify(Array.from(e.entries()))
    },
    set: {
        read: e => new Set(JSON.parse(e)),
        write: e => JSON.stringify(Array.from(e))
    },
    date: {
        read: e => new Date(e),
        write: e => e.toISOString()
    }
}
    , bm = "vueuse-storage";

function Ax(e, t, s, a = {}) {
    var o;
    const {
        flush: l = "pre",
        deep: u = !0,
        listenToStorageChanges: p = !0,
        writeDefaults: g = !0,
        mergeDefaults: y = !1,
        shallow: v,
        window: w = Ta,
        eventFilter: C,
        onError: T = ne => {
            console.error(ne)
        }
        ,
        initOnMounted: I
    } = a
        , A = (v ? Bs : Se)(typeof t == "function" ? t() : t);
    if (!s)
        try {
            s = Cx("getDefaultStorage", () => {
                    var ne;
                    return (ne = Ta) == null ? void 0 : ne.localStorage
                }
            )()
        } catch (ne) {
            T(ne)
        }
    if (!s)
        return A;
    const R = Ea(t)
        , P = ME(R)
        , M = (o = a.serializer) != null ? o : OE[P]
        , {pause: O, resume: F} = AE(A, () => V(A.value), {
        flush: l,
        deep: u,
        eventFilter: C
    });
    w && p && Sx(() => {
            vm(w, "storage", ie),
                vm(w, bm, te),
            I && ie()
        }
    ),
    I || ie();

    function $(ne, le) {
        w && w.dispatchEvent(new CustomEvent(bm, {
            detail: {
                key: e,
                oldValue: ne,
                newValue: le,
                storageArea: s
            }
        }))
    }

    function V(ne) {
        try {
            const le = s.getItem(e);
            if (ne == null)
                $(le, null),
                    s.removeItem(e);
            else {
                const oe = M.write(ne);
                le !== oe && (s.setItem(e, oe),
                    $(le, oe))
            }
        } catch (le) {
            T(le)
        }
    }

    function G(ne) {
        const le = ne ? ne.newValue : s.getItem(e);
        if (le == null)
            return g && R != null && s.setItem(e, M.write(R)),
                R;
        if (!ne && y) {
            const oe = M.read(le);
            return typeof y == "function" ? y(oe, R) : P === "object" && !Array.isArray(oe) ? {
                ...R,
                ...oe
            } : oe
        } else
            return typeof le != "string" ? le : M.read(le)
    }

    function ie(ne) {
        if (!(ne && ne.storageArea !== s)) {
            if (ne && ne.key == null) {
                A.value = R;
                return
            }
            if (!(ne && ne.key !== e)) {
                O();
                try {
                    (ne == null ? void 0 : ne.newValue) !== M.write(A.value) && (A.value = G(ne))
                } catch (le) {
                    T(le)
                } finally {
                    ne ? xt(F) : F()
                }
            }
        }
    }

    function te(ne) {
        ie(ne.detail)
    }

    return A
}

function Ex(e) {
    return Ir("(prefers-color-scheme: dark)", e)
}

function RE(e = {}) {
    const {
        selector: t = "html",
        attribute: s = "class",
        initialValue: a = "auto",
        window: o = Ta,
        storage: l,
        storageKey: u = "vueuse-color-scheme",
        listenToStorageChanges: p = !0,
        storageRef: g,
        emitAuto: y,
        disableTransition: v = !0
    } = e
        , w = {
        auto: "",
        light: "light",
        dark: "dark",
        ...e.modes || {}
    }
        , C = Ex({
        window: o
    })
        , T = re(() => C.value ? "dark" : "light")
        , I = g || (u == null ? rp(a) : Ax(u, a, l, {
        window: o,
        listenToStorageChanges: p
    }))
        , A = re(() => I.value === "auto" ? T.value : I.value)
        , R = Cx("updateHTMLAttrs", (F, $, V) => {
            const G = typeof F == "string" ? o == null ? void 0 : o.document.querySelector(F) : op(F);
            if (!G)
                return;
            let ie;
            if (v) {
                ie = o.document.createElement("style");
                const te = "*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
                ie.appendChild(document.createTextNode(te)),
                    o.document.head.appendChild(ie)
            }
            if ($ === "class") {
                const te = V.split(/\s/g);
                Object.values(w).flatMap(ne => (ne || "").split(/\s/g)).filter(Boolean).forEach(ne => {
                        te.includes(ne) ? G.classList.add(ne) : G.classList.remove(ne)
                    }
                )
            } else
                G.setAttribute($, V);
            v && (o.getComputedStyle(ie).opacity,
                document.head.removeChild(ie))
        }
    );

    function P(F) {
        var $;
        R(t, s, ($ = w[F]) != null ? $ : F)
    }

    function M(F) {
        e.onChanged ? e.onChanged(F, P) : P(F)
    }

    Ke(A, M, {
        flush: "post",
        immediate: !0
    }),
        Sx(() => M(A.value));
    const O = re({
        get() {
            return y ? I.value : A.value
        },
        set(F) {
            I.value = F
        }
    });
    try {
        return Object.assign(O, {
            store: I,
            system: T,
            state: A
        })
    } catch {
        return O
    }
}

function NE(e, t, s = {}) {
    const {window: a = Ta, ...o} = s;
    let l;
    const u = kx(() => a && "MutationObserver" in a)
        , p = () => {
            l && (l.disconnect(),
                l = void 0)
        }
        , g = re(() => {
                const C = Ea(e)
                    , T = (Array.isArray(C) ? C : [C]).map(op).filter(yE);
                return new Set(T)
            }
        )
        , y = Ke(() => g.value, C => {
                p(),
                u.value && a && C.size && (l = new MutationObserver(t),
                    C.forEach(T => l.observe(T, o)))
            }
            , {
                immediate: !0,
                flush: "post"
            })
        , v = () => l == null ? void 0 : l.takeRecords()
        , w = () => {
            p(),
                y()
        }
    ;
    return ap(w),
        {
            isSupported: u,
            stop: w,
            takeRecords: v
        }
}

function DE(e = {}) {
    const {valueDark: t = "dark", valueLight: s = "", window: a = Ta} = e
        , o = RE({
        ...e,
        onChanged: (p, g) => {
            var y;
            e.onChanged ? (y = e.onChanged) == null || y.call(e, p === "dark", g, p) : g(p)
        }
        ,
        modes: {
            dark: t,
            light: s
        }
    })
        , l = re(() => o.system ? o.system.value : Ex({
        window: a
    }).value ? "dark" : "light");
    return re({
        get() {
            return o.value === "dark"
        },
        set(p) {
            const g = p ? "dark" : "light";
            l.value === g ? o.value = "auto" : o.value = g
        }
    })
}

function FE(e = null, t = {}) {
    const {baseUrl: s = "", rel: a = "icon", document: o = _x} = t
        , l = rp(e)
        , u = p => {
            const g = o == null ? void 0 : o.head.querySelectorAll(`link[rel*="${a}"]`);
            if (!g || g.length === 0) {
                const y = o == null ? void 0 : o.createElement("link");
                y && (y.rel = a,
                    y.href = `${s}${p}`,
                    y.type = `image/${p.split(".").pop()}`,
                o == null || o.head.append(y));
                return
            }
            g == null || g.forEach(y => y.href = `${s}${p}`)
        }
    ;
    return Ke(l, (p, g) => {
            typeof p == "string" && p !== g && u(p)
        }
        , {
            immediate: !0
        }),
        l
}

function $E(e = null, t = {}) {
    var s, a, o;
    const {document: l = _x, restoreOnUnmount: u = w => w} = t
        , p = (s = l == null ? void 0 : l.title) != null ? s : ""
        , g = rp((a = e ?? (l == null ? void 0 : l.title)) != null ? a : null)
        , y = e && typeof e == "function";

    function v(w) {
        if (!("titleTemplate" in t))
            return w;
        const C = t.titleTemplate || "%s";
        return typeof C == "function" ? C(w) : Ea(C).replace(/%s/g, w)
    }

    return Ke(g, (w, C) => {
            w !== C && l && (l.title = v(typeof w == "string" ? w : ""))
        }
        , {
            immediate: !0
        }),
    t.observe && !t.titleTemplate && l && !y && NE((o = l.head) == null ? void 0 : o.querySelector("title"), () => {
            l && l.title !== g.value && (g.value = v(l.title))
        }
        , {
            childList: !0
        }),
        EE(() => {
                if (u) {
                    const w = u(p, g.value || "");
                    w != null && l && (l.title = w)
                }
            }
        ),
        g
}

const Tq = function (e, t) {
    const s = {};
    return e.forEach(a => {
            s[a[t]] = a
        }
    ),
        s
}
    , jo = function (e) {
    const t = ["H/s", "KH/s", "MH/s", "GH/s", "TH/s", "PH/s", "EH/s", "ZH/s", "YH/s"];
    let {hashrate: s = "", measure: a = ""} = e
        , o = t.findIndex(l => l.toUpperCase() === a.toUpperCase());
    if (s == 0)
        return {
            hashrate: s,
            measure: t[0]
        };
    if (!s || o < 0)
        return {
            hashrate: s,
            measure: a
        };
    for (; s >= 1e3 && o < t.length - 1;)
        s /= 1e3,
            ++o;
    for (; s < 1 && o > 0;)
        s *= 1e3,
            --o;
    return {
        hashrate: s,
        measure: t[o]
    }
};

function BE() {
    return Tx().__VUE_DEVTOOLS_GLOBAL_HOOK__
}

function Tx() {
    return typeof navigator < "u" && typeof window < "u" ? window : typeof globalThis < "u" ? globalThis : {}
}

const HE = typeof Proxy == "function"
    , VE = "devtools-plugin:setup"
    , zE = "plugin:settings:set";
let Sr, $h;

function WE() {
    var e;
    return Sr !== void 0 || (typeof window < "u" && window.performance ? (Sr = !0,
        $h = window.performance) : typeof globalThis < "u" && (!((e = globalThis.perf_hooks) === null || e === void 0) && e.performance) ? (Sr = !0,
        $h = globalThis.perf_hooks.performance) : Sr = !1),
        Sr
}

function UE() {
    return WE() ? $h.now() : Date.now()
}

class YE {
    constructor(t, s) {
        this.target = null,
            this.targetQueue = [],
            this.onQueue = [],
            this.plugin = t,
            this.hook = s;
        const a = {};
        if (t.settings)
            for (const u in t.settings) {
                const p = t.settings[u];
                a[u] = p.defaultValue
            }
        const o = `__vue-devtools-plugin-settings__${t.id}`;
        let l = Object.assign({}, a);
        try {
            const u = localStorage.getItem(o)
                , p = JSON.parse(u);
            Object.assign(l, p)
        } catch {
        }
        this.fallbacks = {
            getSettings() {
                return l
            },
            setSettings(u) {
                try {
                    localStorage.setItem(o, JSON.stringify(u))
                } catch {
                }
                l = u
            },
            now() {
                return UE()
            }
        },
        s && s.on(zE, (u, p) => {
                u === this.plugin.id && this.fallbacks.setSettings(p)
            }
        ),
            this.proxiedOn = new Proxy({}, {
                get: (u, p) => this.target ? this.target.on[p] : (...g) => {
                    this.onQueue.push({
                        method: p,
                        args: g
                    })
                }
            }),
            this.proxiedTarget = new Proxy({}, {
                get: (u, p) => this.target ? this.target[p] : p === "on" ? this.proxiedOn : Object.keys(this.fallbacks).includes(p) ? (...g) => (this.targetQueue.push({
                    method: p,
                    args: g,
                    resolve: () => {
                    }
                }),
                    this.fallbacks[p](...g)) : (...g) => new Promise(y => {
                        this.targetQueue.push({
                            method: p,
                            args: g,
                            resolve: y
                        })
                    }
                )
            })
    }

    async setRealTarget(t) {
        this.target = t;
        for (const s of this.onQueue)
            this.target.on[s.method](...s.args);
        for (const s of this.targetQueue)
            s.resolve(await this.target[s.method](...s.args))
    }
}

function XE(e, t) {
    const s = e
        , a = Tx()
        , o = BE()
        , l = HE && s.enableEarlyProxy;
    if (o && (a.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !l))
        o.emit(VE, e, t);
    else {
        const u = l ? new YE(s, o) : null;
        (a.__VUE_DEVTOOLS_PLUGINS__ = a.__VUE_DEVTOOLS_PLUGINS__ || []).push({
            pluginDescriptor: s,
            setupFn: t,
            proxy: u
        }),
        u && t(u.proxiedTarget)
    }
}

/*!
 * vuex v4.1.0
 * (c) 2022 Evan You
 * @license MIT
 */
var Ix = "store";

function jE(e) {
    return e === void 0 && (e = null),
        st(e !== null ? e : Ix)
}

function _o(e, t) {
    Object.keys(e).forEach(function (s) {
        return t(e[s], s)
    })
}

function Px(e) {
    return e !== null && typeof e == "object"
}

function GE(e) {
    return e && typeof e.then == "function"
}

function qE(e, t) {
    return function () {
        return e(t)
    }
}

function Lx(e, t, s) {
    return t.indexOf(e) < 0 && (s && s.prepend ? t.unshift(e) : t.push(e)),
        function () {
            var a = t.indexOf(e);
            a > -1 && t.splice(a, 1)
        }
}

function Mx(e, t) {
    e._actions = Object.create(null),
        e._mutations = Object.create(null),
        e._wrappedGetters = Object.create(null),
        e._modulesNamespaceMap = Object.create(null);
    var s = e.state;
    qu(e, s, [], e._modules.root, !0),
        lp(e, s, t)
}

function lp(e, t, s) {
    var a = e._state
        , o = e._scope;
    e.getters = {},
        e._makeLocalGettersCache = Object.create(null);
    var l = e._wrappedGetters
        , u = {}
        , p = {}
        , g = $f(!0);
    g.run(function () {
        _o(l, function (y, v) {
            u[v] = qE(y, e),
                p[v] = re(function () {
                    return u[v]()
                }),
                Object.defineProperty(e.getters, v, {
                    get: function () {
                        return p[v].value
                    },
                    enumerable: !0
                })
        })
    }),
        e._state = ys({
            data: t
        }),
        e._scope = g,
    e.strict && e2(e),
    a && s && e._withCommit(function () {
        a.data = null
    }),
    o && o.stop()
}

function qu(e, t, s, a, o) {
    var l = !s.length
        , u = e._modules.getNamespace(s);
    if (a.namespaced && (e._modulesNamespaceMap[u],
        e._modulesNamespaceMap[u] = a),
    !l && !o) {
        var p = cp(t, s.slice(0, -1))
            , g = s[s.length - 1];
        e._withCommit(function () {
            p[g] = a.state
        })
    }
    var y = a.context = KE(e, u, s);
    a.forEachMutation(function (v, w) {
        var C = u + w;
        ZE(e, C, v, y)
    }),
        a.forEachAction(function (v, w) {
            var C = v.root ? w : u + w
                , T = v.handler || v;
            JE(e, C, T, y)
        }),
        a.forEachGetter(function (v, w) {
            var C = u + w;
            QE(e, C, v, y)
        }),
        a.forEachChild(function (v, w) {
            qu(e, t, s.concat(w), v, o)
        })
}

function KE(e, t, s) {
    var a = t === ""
        , o = {
        dispatch: a ? e.dispatch : function (l, u, p) {
            var g = gu(l, u, p)
                , y = g.payload
                , v = g.options
                , w = g.type;
            return (!v || !v.root) && (w = t + w),
                e.dispatch(w, y)
        }
        ,
        commit: a ? e.commit : function (l, u, p) {
            var g = gu(l, u, p)
                , y = g.payload
                , v = g.options
                , w = g.type;
            (!v || !v.root) && (w = t + w),
                e.commit(w, y, v)
        }
    };
    return Object.defineProperties(o, {
        getters: {
            get: a ? function () {
                    return e.getters
                }
                : function () {
                    return Ox(e, t)
                }
        },
        state: {
            get: function () {
                return cp(e.state, s)
            }
        }
    }),
        o
}

function Ox(e, t) {
    if (!e._makeLocalGettersCache[t]) {
        var s = {}
            , a = t.length;
        Object.keys(e.getters).forEach(function (o) {
            if (o.slice(0, a) === t) {
                var l = o.slice(a);
                Object.defineProperty(s, l, {
                    get: function () {
                        return e.getters[o]
                    },
                    enumerable: !0
                })
            }
        }),
            e._makeLocalGettersCache[t] = s
    }
    return e._makeLocalGettersCache[t]
}

function ZE(e, t, s, a) {
    var o = e._mutations[t] || (e._mutations[t] = []);
    o.push(function (u) {
        s.call(e, a.state, u)
    })
}

function JE(e, t, s, a) {
    var o = e._actions[t] || (e._actions[t] = []);
    o.push(function (u) {
        var p = s.call(e, {
            dispatch: a.dispatch,
            commit: a.commit,
            getters: a.getters,
            state: a.state,
            rootGetters: e.getters,
            rootState: e.state
        }, u);
        return GE(p) || (p = Promise.resolve(p)),
            e._devtoolHook ? p.catch(function (g) {
                throw e._devtoolHook.emit("vuex:error", g),
                    g
            }) : p
    })
}

function QE(e, t, s, a) {
    e._wrappedGetters[t] || (e._wrappedGetters[t] = function (l) {
            return s(a.state, a.getters, l.state, l.getters)
        }
    )
}

function e2(e) {
    Ke(function () {
        return e._state.data
    }, function () {
    }, {
        deep: !0,
        flush: "sync"
    })
}

function cp(e, t) {
    return t.reduce(function (s, a) {
        return s[a]
    }, e)
}

function gu(e, t, s) {
    return Px(e) && e.type && (s = t,
        t = e,
        e = e.type),
        {
            type: e,
            payload: t,
            options: s
        }
}

var t2 = "vuex bindings"
    , ym = "vuex:mutations"
    , zd = "vuex:actions"
    , _r = "vuex"
    , s2 = 0;

function n2(e, t) {
    XE({
        id: "org.vuejs.vuex",
        app: e,
        label: "Vuex",
        homepage: "https://next.vuex.vuejs.org/",
        logo: "https://vuejs.org/images/icons/favicon-96x96.png",
        packageName: "vuex",
        componentStateTypes: [t2]
    }, function (s) {
        s.addTimelineLayer({
            id: ym,
            label: "Vuex Mutations",
            color: xm
        }),
            s.addTimelineLayer({
                id: zd,
                label: "Vuex Actions",
                color: xm
            }),
            s.addInspector({
                id: _r,
                label: "Vuex",
                icon: "storage",
                treeFilterPlaceholder: "Filter stores..."
            }),
            s.on.getInspectorTree(function (a) {
                if (a.app === e && a.inspectorId === _r)
                    if (a.filter) {
                        var o = [];
                        Fx(o, t._modules.root, a.filter, ""),
                            a.rootNodes = o
                    } else
                        a.rootNodes = [Dx(t._modules.root, "")]
            }),
            s.on.getInspectorState(function (a) {
                if (a.app === e && a.inspectorId === _r) {
                    var o = a.nodeId;
                    Ox(t, o),
                        a.state = r2(l2(t._modules, o), o === "root" ? t.getters : t._makeLocalGettersCache, o)
                }
            }),
            s.on.editInspectorState(function (a) {
                if (a.app === e && a.inspectorId === _r) {
                    var o = a.nodeId
                        , l = a.path;
                    o !== "root" && (l = o.split("/").filter(Boolean).concat(l)),
                        t._withCommit(function () {
                            a.set(t._state.data, l, a.state.value)
                        })
                }
            }),
            t.subscribe(function (a, o) {
                var l = {};
                a.payload && (l.payload = a.payload),
                    l.state = o,
                    s.notifyComponentUpdate(),
                    s.sendInspectorTree(_r),
                    s.sendInspectorState(_r),
                    s.addTimelineEvent({
                        layerId: ym,
                        event: {
                            time: Date.now(),
                            title: a.type,
                            data: l
                        }
                    })
            }),
            t.subscribeAction({
                before: function (a, o) {
                    var l = {};
                    a.payload && (l.payload = a.payload),
                        a._id = s2++,
                        a._time = Date.now(),
                        l.state = o,
                        s.addTimelineEvent({
                            layerId: zd,
                            event: {
                                time: a._time,
                                title: a.type,
                                groupId: a._id,
                                subtitle: "start",
                                data: l
                            }
                        })
                },
                after: function (a, o) {
                    var l = {}
                        , u = Date.now() - a._time;
                    l.duration = {
                        _custom: {
                            type: "duration",
                            display: u + "ms",
                            tooltip: "Action duration",
                            value: u
                        }
                    },
                    a.payload && (l.payload = a.payload),
                        l.state = o,
                        s.addTimelineEvent({
                            layerId: zd,
                            event: {
                                time: Date.now(),
                                title: a.type,
                                groupId: a._id,
                                subtitle: "end",
                                data: l
                            }
                        })
                }
            })
    })
}

var xm = 8702998
    , i2 = 6710886
    , a2 = 16777215
    , Rx = {
    label: "namespaced",
    textColor: a2,
    backgroundColor: i2
};

function Nx(e) {
    return e && e !== "root" ? e.split("/").slice(-2, -1)[0] : "Root"
}

function Dx(e, t) {
    return {
        id: t || "root",
        label: Nx(t),
        tags: e.namespaced ? [Rx] : [],
        children: Object.keys(e._children).map(function (s) {
            return Dx(e._children[s], t + s + "/")
        })
    }
}

function Fx(e, t, s, a) {
    a.includes(s) && e.push({
        id: a || "root",
        label: a.endsWith("/") ? a.slice(0, a.length - 1) : a || "Root",
        tags: t.namespaced ? [Rx] : []
    }),
        Object.keys(t._children).forEach(function (o) {
            Fx(e, t._children[o], s, a + o + "/")
        })
}

function r2(e, t, s) {
    t = s === "root" ? t : t[s];
    var a = Object.keys(t)
        , o = {
        state: Object.keys(e.state).map(function (u) {
            return {
                key: u,
                editable: !0,
                value: e.state[u]
            }
        })
    };
    if (a.length) {
        var l = o2(t);
        o.getters = Object.keys(l).map(function (u) {
            return {
                key: u.endsWith("/") ? Nx(u) : u,
                editable: !1,
                value: Bh(function () {
                    return l[u]
                })
            }
        })
    }
    return o
}

function o2(e) {
    var t = {};
    return Object.keys(e).forEach(function (s) {
        var a = s.split("/");
        if (a.length > 1) {
            var o = t
                , l = a.pop();
            a.forEach(function (u) {
                o[u] || (o[u] = {
                    _custom: {
                        value: {},
                        display: u,
                        tooltip: "Module",
                        abstract: !0
                    }
                }),
                    o = o[u]._custom.value
            }),
                o[l] = Bh(function () {
                    return e[s]
                })
        } else
            t[s] = Bh(function () {
                return e[s]
            })
    }),
        t
}

function l2(e, t) {
    var s = t.split("/").filter(function (a) {
        return a
    });
    return s.reduce(function (a, o, l) {
        var u = a[o];
        if (!u)
            throw new Error('Missing module "' + o + '" for path "' + t + '".');
        return l === s.length - 1 ? u : u._children
    }, t === "root" ? e : e.root._children)
}

function Bh(e) {
    try {
        return e()
    } catch (t) {
        return t
    }
}

var ri = function (t, s) {
    this.runtime = s,
        this._children = Object.create(null),
        this._rawModule = t;
    var a = t.state;
    this.state = (typeof a == "function" ? a() : a) || {}
}
    , $x = {
    namespaced: {
        configurable: !0
    }
};
$x.namespaced.get = function () {
    return !!this._rawModule.namespaced
}
;
ri.prototype.addChild = function (t, s) {
    this._children[t] = s
}
;
ri.prototype.removeChild = function (t) {
    delete this._children[t]
}
;
ri.prototype.getChild = function (t) {
    return this._children[t]
}
;
ri.prototype.hasChild = function (t) {
    return t in this._children
}
;
ri.prototype.update = function (t) {
    this._rawModule.namespaced = t.namespaced,
    t.actions && (this._rawModule.actions = t.actions),
    t.mutations && (this._rawModule.mutations = t.mutations),
    t.getters && (this._rawModule.getters = t.getters)
}
;
ri.prototype.forEachChild = function (t) {
    _o(this._children, t)
}
;
ri.prototype.forEachGetter = function (t) {
    this._rawModule.getters && _o(this._rawModule.getters, t)
}
;
ri.prototype.forEachAction = function (t) {
    this._rawModule.actions && _o(this._rawModule.actions, t)
}
;
ri.prototype.forEachMutation = function (t) {
    this._rawModule.mutations && _o(this._rawModule.mutations, t)
}
;
Object.defineProperties(ri.prototype, $x);
var fr = function (t) {
    this.register([], t, !1)
};
fr.prototype.get = function (t) {
    return t.reduce(function (s, a) {
        return s.getChild(a)
    }, this.root)
}
;
fr.prototype.getNamespace = function (t) {
    var s = this.root;
    return t.reduce(function (a, o) {
        return s = s.getChild(o),
        a + (s.namespaced ? o + "/" : "")
    }, "")
}
;
fr.prototype.update = function (t) {
    Bx([], this.root, t)
}
;
fr.prototype.register = function (t, s, a) {
    var o = this;
    a === void 0 && (a = !0);
    var l = new ri(s, a);
    if (t.length === 0)
        this.root = l;
    else {
        var u = this.get(t.slice(0, -1));
        u.addChild(t[t.length - 1], l)
    }
    s.modules && _o(s.modules, function (p, g) {
        o.register(t.concat(g), p, a)
    })
}
;
fr.prototype.unregister = function (t) {
    var s = this.get(t.slice(0, -1))
        , a = t[t.length - 1]
        , o = s.getChild(a);
    o && o.runtime && s.removeChild(a)
}
;
fr.prototype.isRegistered = function (t) {
    var s = this.get(t.slice(0, -1))
        , a = t[t.length - 1];
    return s ? s.hasChild(a) : !1
}
;

function Bx(e, t, s) {
    if (t.update(s),
        s.modules)
        for (var a in s.modules) {
            if (!t.getChild(a))
                return;
            Bx(e.concat(a), t.getChild(a), s.modules[a])
        }
}

function c2(e) {
    return new pn(e)
}

var pn = function (t) {
    var s = this;
    t === void 0 && (t = {});
    var a = t.plugins;
    a === void 0 && (a = []);
    var o = t.strict;
    o === void 0 && (o = !1);
    var l = t.devtools;
    this._committing = !1,
        this._actions = Object.create(null),
        this._actionSubscribers = [],
        this._mutations = Object.create(null),
        this._wrappedGetters = Object.create(null),
        this._modules = new fr(t),
        this._modulesNamespaceMap = Object.create(null),
        this._subscribers = [],
        this._makeLocalGettersCache = Object.create(null),
        this._scope = null,
        this._devtools = l;
    var u = this
        , p = this
        , g = p.dispatch
        , y = p.commit;
    this.dispatch = function (C, T) {
        return g.call(u, C, T)
    }
        ,
        this.commit = function (C, T, I) {
            return y.call(u, C, T, I)
        }
        ,
        this.strict = o;
    var v = this._modules.root.state;
    qu(this, v, [], this._modules.root),
        lp(this, v),
        a.forEach(function (w) {
            return w(s)
        })
}
    , up = {
    state: {
        configurable: !0
    }
};
pn.prototype.install = function (t, s) {
    t.provide(s || Ix, this),
        t.config.globalProperties.$store = this;
    var a = this._devtools !== void 0 ? this._devtools : !1;
    a && n2(t, this)
}
;
up.state.get = function () {
    return this._state.data
}
;
up.state.set = function (e) {
}
;
pn.prototype.commit = function (t, s, a) {
    var o = this
        , l = gu(t, s, a)
        , u = l.type
        , p = l.payload
        , g = {
        type: u,
        payload: p
    }
        , y = this._mutations[u];
    y && (this._withCommit(function () {
        y.forEach(function (w) {
            w(p)
        })
    }),
        this._subscribers.slice().forEach(function (v) {
            return v(g, o.state)
        }))
}
;
pn.prototype.dispatch = function (t, s) {
    var a = this
        , o = gu(t, s)
        , l = o.type
        , u = o.payload
        , p = {
        type: l,
        payload: u
    }
        , g = this._actions[l];
    if (g) {
        try {
            this._actionSubscribers.slice().filter(function (v) {
                return v.before
            }).forEach(function (v) {
                return v.before(p, a.state)
            })
        } catch {
        }
        var y = g.length > 1 ? Promise.all(g.map(function (v) {
            return v(u)
        })) : g[0](u);
        return new Promise(function (v, w) {
                y.then(function (C) {
                    try {
                        a._actionSubscribers.filter(function (T) {
                            return T.after
                        }).forEach(function (T) {
                            return T.after(p, a.state)
                        })
                    } catch {
                    }
                    v(C)
                }, function (C) {
                    try {
                        a._actionSubscribers.filter(function (T) {
                            return T.error
                        }).forEach(function (T) {
                            return T.error(p, a.state, C)
                        })
                    } catch {
                    }
                    w(C)
                })
            }
        )
    }
}
;
pn.prototype.subscribe = function (t, s) {
    return Lx(t, this._subscribers, s)
}
;
pn.prototype.subscribeAction = function (t, s) {
    var a = typeof t == "function" ? {
        before: t
    } : t;
    return Lx(a, this._actionSubscribers, s)
}
;
pn.prototype.watch = function (t, s, a) {
    var o = this;
    return Ke(function () {
        return t(o.state, o.getters)
    }, s, Object.assign({}, a))
}
;
pn.prototype.replaceState = function (t) {
    var s = this;
    this._withCommit(function () {
        s._state.data = t
    })
}
;
pn.prototype.registerModule = function (t, s, a) {
    a === void 0 && (a = {}),
    typeof t == "string" && (t = [t]),
        this._modules.register(t, s),
        qu(this, this.state, t, this._modules.get(t), a.preserveState),
        lp(this, this.state)
}
;
pn.prototype.unregisterModule = function (t) {
    var s = this;
    typeof t == "string" && (t = [t]),
        this._modules.unregister(t),
        this._withCommit(function () {
            var a = cp(s.state, t.slice(0, -1));
            delete a[t[t.length - 1]]
        }),
        Mx(this)
}
;
pn.prototype.hasModule = function (t) {
    return typeof t == "string" && (t = [t]),
        this._modules.isRegistered(t)
}
;
pn.prototype.hotUpdate = function (t) {
    this._modules.update(t),
        Mx(this, !0)
}
;
pn.prototype._withCommit = function (t) {
    var s = this._committing;
    this._committing = !0,
        t(),
        this._committing = s
}
;
Object.defineProperties(pn.prototype, up);
var ls = hp(function (e, t) {
    var s = {};
    return dp(t).forEach(function (a) {
        var o = a.key
            , l = a.val;
        s[o] = function () {
            var p = this.$store.state
                , g = this.$store.getters;
            if (e) {
                var y = fp(this.$store, "mapState", e);
                if (!y)
                    return;
                p = y.context.state,
                    g = y.context.getters
            }
            return typeof l == "function" ? l.call(this, p, g) : p[l]
        }
            ,
            s[o].vuex = !0
    }),
        s
})
    , In = hp(function (e, t) {
    var s = {};
    return dp(t).forEach(function (a) {
        var o = a.key
            , l = a.val;
        l = e + l,
            s[o] = function () {
                if (!(e && !fp(this.$store, "mapGetters", e)))
                    return this.$store.getters[l]
            }
            ,
            s[o].vuex = !0
    }),
        s
})
    , Zn = hp(function (e, t) {
    var s = {};
    return dp(t).forEach(function (a) {
        var o = a.key
            , l = a.val;
        s[o] = function () {
            for (var p = [], g = arguments.length; g--;)
                p[g] = arguments[g];
            var y = this.$store.dispatch;
            if (e) {
                var v = fp(this.$store, "mapActions", e);
                if (!v)
                    return;
                y = v.context.dispatch
            }
            return typeof l == "function" ? l.apply(this, [y].concat(p)) : y.apply(this.$store, [l].concat(p))
        }
    }),
        s
});

function dp(e) {
    return u2(e) ? Array.isArray(e) ? e.map(function (t) {
        return {
            key: t,
            val: t
        }
    }) : Object.keys(e).map(function (t) {
        return {
            key: t,
            val: e[t]
        }
    }) : []
}

function u2(e) {
    return Array.isArray(e) || Px(e)
}

function hp(e) {
    return function (t, s) {
        return typeof t != "string" ? (s = t,
            t = "") : t.charAt(t.length - 1) !== "/" && (t += "/"),
            e(t, s)
    }
}

function fp(e, t, s) {
    var a = e._modulesNamespaceMap[s];
    return a
}

function d2(e, t, s, a, o, l) {
    const u = Bt("router-view");
    return Z(),
        Te(Vt(this.$route.meta.layout || "default-layout"), null, {
            default: se(() => [ae(u)]),
            _: 1
        })
}

const fs = (e, t) => {
    const s = e.__vccOpts || e;
    for (const [a, o] of t)
        s[a] = o;
    return s
}
    , Wd = "OffAnimate"
    , h2 = {
    setup() {
        const e = jE()
            , t = re(() => e.state.summary.miner_name || e.getters["summary/getMinerModel"])
            , s = re(() => {
                    const l = jo({
                        hashrate: e.state.summary.hr_average,
                        measure: e.state.summary.hr_base_measure
                    });
                    return l.hashrate || l.hashrate === 0 ? l.hashrate.toFixed(2) + " " + l.measure : ""
                }
            )
            ,
            a = re(() => t.value + " / " + s.value + " |  " + e.state.summary.chip_temp + " | " + (e.state.summary.power_consumption ? (e.state.summary.power_consumption / 1e3).toFixed(2) : "") + " kWh ");
        $E(a);
        const o = re(() => {
                let l;
                switch (e.state.summary.status) {
                    case "mining":
                        l = "/favicons/favicon.ico";
                        break;
                    case "initializing":
                        l = "/favicons/favicon_Init.ico";
                        break;
                    case "restarting":
                        l = "/favicons/favicon_Init.ico";
                        break;
                    case "stopped":
                        l = "/favicons/favicon_Stopped.ico";
                        break;
                    case "shutting-down":
                        l = "/favicons/favicon_Warning.ico";
                        break;
                    case "disconnect":
                        l = "/favicons/favicon_Disconnect.ico";
                        break;
                    case "failure":
                        l = "/favicons/favicon_Danger.ico";
                        break;
                    case "auto-tuning":
                        l = "/favicons/favicon_Autotune.ico";
                        break;
                    default:
                        l = "/favicons/favicon.ico";
                        break
                }
                return l
            }
        );
        FE(o)
    },
    computed: {
        ...ls("ui", ["enableUIEffects"])
    },
    beforeCreate() {
        this.$store.dispatch("ui/getData"),
            this.$store.dispatch("summary/getData"),
            this.$store.dispatch("summary/status"),
            setInterval(() => {
                    this.$store.dispatch("summary/status")
                }
                , 5e3),
            this.$store.dispatch("summary/info"),
            window.debugOn = () => (this.$store.commit("ui/isDebug", !0),
                !0),
            window.debugOff = () => (this.$store.commit("ui/isDebug", !1),
                !1)
    },
    created() {
        this.enableUIEffects || document.documentElement.classList.add(Wd)
    },
    watch: {
        enableUIEffects(e) {
            e ? document.documentElement.classList.remove(Wd) : document.documentElement.classList.add(Wd)
        }
    }
}
    , f2 = fs(h2, [["render", d2]]);
/*!
  * shared v9.10.1
  * (c) 2024 kazuya kawaguchi
  * Released under the MIT License.
  */
const mu = typeof window < "u"
    , Oa = (e, t = !1) => t ? Symbol.for(e) : Symbol(e)
    , p2 = (e, t, s) => g2({
        l: e,
        k: t,
        s
    })
    ,
    g2 = e => JSON.stringify(e).replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029").replace(/\u0027/g, "\\u0027")
    , Is = e => typeof e == "number" && isFinite(e)
    , m2 = e => Vx(e) === "[object Date]"
    , Ia = e => Vx(e) === "[object RegExp]"
    , Ku = e => Tt(e) && Object.keys(e).length === 0
    , Vs = Object.assign;
let wm;
const Ui = () => wm || (wm = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : typeof global < "u" ? global : {});

function Sm(e) {
    return e.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&apos;")
}

const v2 = Object.prototype.hasOwnProperty;

function vu(e, t) {
    return v2.call(e, t)
}

const hs = Array.isArray
    , os = e => typeof e == "function"
    , it = e => typeof e == "string"
    , Dt = e => typeof e == "boolean"
    , Kt = e => e !== null && typeof e == "object"
    , b2 = e => Kt(e) && os(e.then) && os(e.catch)
    , Hx = Object.prototype.toString
    , Vx = e => Hx.call(e)
    , Tt = e => {
    if (!Kt(e))
        return !1;
    const t = Object.getPrototypeOf(e);
    return t === null || t.constructor === Object
}
    , y2 = e => e == null ? "" : hs(e) || Tt(e) && e.toString === Hx ? JSON.stringify(e, null, 2) : String(e);

function x2(e, t = "") {
    return e.reduce((s, a, o) => o === 0 ? s + a : s + t + a, "")
}

function pp(e) {
    let t = e;
    return () => ++t
}

function w2(e, t) {
    typeof console < "u" && (console.warn("[intlify] " + e),
    t && console.warn(t.stack))
}

const Ec = e => !Kt(e) || hs(e);

function Uc(e, t) {
    if (Ec(e) || Ec(t))
        throw new Error("Invalid value");
    const s = [{
        src: e,
        des: t
    }];
    for (; s.length;) {
        const {src: a, des: o} = s.pop();
        Object.keys(a).forEach(l => {
                Ec(a[l]) || Ec(o[l]) ? o[l] = a[l] : s.push({
                    src: a[l],
                    des: o[l]
                })
            }
        )
    }
}

/*!
  * message-compiler v9.10.1
  * (c) 2024 kazuya kawaguchi
  * Released under the MIT License.
  */
function S2(e, t, s) {
    return {
        line: e,
        column: t,
        offset: s
    }
}

function Hh(e, t, s) {
    const a = {
        start: e,
        end: t
    };
    return s != null && (a.source = s),
        a
}

const _2 = /\{([0-9a-zA-Z]+)\}/g;

function k2(e, ...t) {
    return t.length === 1 && C2(t[0]) && (t = t[0]),
    (!t || !t.hasOwnProperty) && (t = {}),
        e.replace(_2, (s, a) => t.hasOwnProperty(a) ? t[a] : "")
}

const zx = Object.assign
    , _m = e => typeof e == "string"
    , C2 = e => e !== null && typeof e == "object";

function Wx(e, t = "") {
    return e.reduce((s, a, o) => o === 0 ? s + a : s + t + a, "")
}

const St = {
    EXPECTED_TOKEN: 1,
    INVALID_TOKEN_IN_PLACEHOLDER: 2,
    UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,
    UNKNOWN_ESCAPE_SEQUENCE: 4,
    INVALID_UNICODE_ESCAPE_SEQUENCE: 5,
    UNBALANCED_CLOSING_BRACE: 6,
    UNTERMINATED_CLOSING_BRACE: 7,
    EMPTY_PLACEHOLDER: 8,
    NOT_ALLOW_NEST_PLACEHOLDER: 9,
    INVALID_LINKED_FORMAT: 10,
    MUST_HAVE_MESSAGES_IN_PLURAL: 11,
    UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,
    UNEXPECTED_EMPTY_LINKED_KEY: 13,
    UNEXPECTED_LEXICAL_ANALYSIS: 14,
    UNHANDLED_CODEGEN_NODE_TYPE: 15,
    UNHANDLED_MINIFIER_NODE_TYPE: 16,
    __EXTEND_POINT__: 17
}
    , A2 = {
    [St.EXPECTED_TOKEN]: "Expected token: '{0}'",
    [St.INVALID_TOKEN_IN_PLACEHOLDER]: "Invalid token in placeholder: '{0}'",
    [St.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER]: "Unterminated single quote in placeholder",
    [St.UNKNOWN_ESCAPE_SEQUENCE]: "Unknown escape sequence: \\{0}",
    [St.INVALID_UNICODE_ESCAPE_SEQUENCE]: "Invalid unicode escape sequence: {0}",
    [St.UNBALANCED_CLOSING_BRACE]: "Unbalanced closing brace",
    [St.UNTERMINATED_CLOSING_BRACE]: "Unterminated closing brace",
    [St.EMPTY_PLACEHOLDER]: "Empty placeholder",
    [St.NOT_ALLOW_NEST_PLACEHOLDER]: "Not allowed nest placeholder",
    [St.INVALID_LINKED_FORMAT]: "Invalid linked format",
    [St.MUST_HAVE_MESSAGES_IN_PLURAL]: "Plural must have messages",
    [St.UNEXPECTED_EMPTY_LINKED_MODIFIER]: "Unexpected empty linked modifier",
    [St.UNEXPECTED_EMPTY_LINKED_KEY]: "Unexpected empty linked key",
    [St.UNEXPECTED_LEXICAL_ANALYSIS]: "Unexpected lexical analysis in token: '{0}'",
    [St.UNHANDLED_CODEGEN_NODE_TYPE]: "unhandled codegen node type: '{0}'",
    [St.UNHANDLED_MINIFIER_NODE_TYPE]: "unhandled mimifier node type: '{0}'"
};

function ko(e, t, s = {}) {
    const {domain: a, messages: o, args: l} = s
        , u = k2((o || A2)[e] || "", ...l || [])
        , p = new SyntaxError(String(u));
    return p.code = e,
    t && (p.location = t),
        p.domain = a,
        p
}

function E2(e) {
    throw e
}

const Ri = " "
    , T2 = "\r"
    , Zs = `
`
    , I2 = "\u2028"
    , P2 = "\u2029";

function L2(e) {
    const t = e;
    let s = 0
        , a = 1
        , o = 1
        , l = 0;
    const u = G => t[G] === T2 && t[G + 1] === Zs
        , p = G => t[G] === Zs
        , g = G => t[G] === P2
        , y = G => t[G] === I2
        , v = G => u(G) || p(G) || g(G) || y(G)
        , w = () => s
        , C = () => a
        , T = () => o
        , I = () => l
        , A = G => u(G) || g(G) || y(G) ? Zs : t[G]
        , R = () => A(s)
        , P = () => A(s + l);

    function M() {
        return l = 0,
        v(s) && (a++,
            o = 0),
        u(s) && s++,
            s++,
            o++,
            t[s]
    }

    function O() {
        return u(s + l) && l++,
            l++,
            t[s + l]
    }

    function F() {
        s = 0,
            a = 1,
            o = 1,
            l = 0
    }

    function $(G = 0) {
        l = G
    }

    function V() {
        const G = s + l;
        for (; G !== s;)
            M();
        l = 0
    }

    return {
        index: w,
        line: C,
        column: T,
        peekOffset: I,
        charAt: A,
        currentChar: R,
        currentPeek: P,
        next: M,
        peek: O,
        reset: F,
        resetPeek: $,
        skipToPeek: V
    }
}

const ra = void 0
    , M2 = "."
    , km = "'"
    , O2 = "tokenizer";

function R2(e, t = {}) {
    const s = t.location !== !1
        , a = L2(e)
        , o = () => a.index()
        , l = () => S2(a.line(), a.column(), a.index())
        , u = l()
        , p = o()
        , g = {
        currentType: 14,
        offset: p,
        startLoc: u,
        endLoc: u,
        lastType: 14,
        lastOffset: p,
        lastStartLoc: u,
        lastEndLoc: u,
        braceNest: 0,
        inLinked: !1,
        text: ""
    }
        , y = () => g
        , {onError: v} = t;

    function w(Y, W, ce, ...we) {
        const _e = y();
        if (W.column += ce,
            W.offset += ce,
            v) {
            const Oe = s ? Hh(_e.startLoc, W) : null
                , qe = ko(Y, Oe, {
                domain: O2,
                args: we
            });
            v(qe)
        }
    }

    function C(Y, W, ce) {
        Y.endLoc = l(),
            Y.currentType = W;
        const we = {
            type: W
        };
        return s && (we.loc = Hh(Y.startLoc, Y.endLoc)),
        ce != null && (we.value = ce),
            we
    }

    const T = Y => C(Y, 14);

    function I(Y, W) {
        return Y.currentChar() === W ? (Y.next(),
            W) : (w(St.EXPECTED_TOKEN, l(), 0, W),
            "")
    }

    function A(Y) {
        let W = "";
        for (; Y.currentPeek() === Ri || Y.currentPeek() === Zs;)
            W += Y.currentPeek(),
                Y.peek();
        return W
    }

    function R(Y) {
        const W = A(Y);
        return Y.skipToPeek(),
            W
    }

    function P(Y) {
        if (Y === ra)
            return !1;
        const W = Y.charCodeAt(0);
        return W >= 97 && W <= 122 || W >= 65 && W <= 90 || W === 95
    }

    function M(Y) {
        if (Y === ra)
            return !1;
        const W = Y.charCodeAt(0);
        return W >= 48 && W <= 57
    }

    function O(Y, W) {
        const {currentType: ce} = W;
        if (ce !== 2)
            return !1;
        A(Y);
        const we = P(Y.currentPeek());
        return Y.resetPeek(),
            we
    }

    function F(Y, W) {
        const {currentType: ce} = W;
        if (ce !== 2)
            return !1;
        A(Y);
        const we = Y.currentPeek() === "-" ? Y.peek() : Y.currentPeek()
            , _e = M(we);
        return Y.resetPeek(),
            _e
    }

    function $(Y, W) {
        const {currentType: ce} = W;
        if (ce !== 2)
            return !1;
        A(Y);
        const we = Y.currentPeek() === km;
        return Y.resetPeek(),
            we
    }

    function V(Y, W) {
        const {currentType: ce} = W;
        if (ce !== 8)
            return !1;
        A(Y);
        const we = Y.currentPeek() === ".";
        return Y.resetPeek(),
            we
    }

    function G(Y, W) {
        const {currentType: ce} = W;
        if (ce !== 9)
            return !1;
        A(Y);
        const we = P(Y.currentPeek());
        return Y.resetPeek(),
            we
    }

    function ie(Y, W) {
        const {currentType: ce} = W;
        if (!(ce === 8 || ce === 12))
            return !1;
        A(Y);
        const we = Y.currentPeek() === ":";
        return Y.resetPeek(),
            we
    }

    function te(Y, W) {
        const {currentType: ce} = W;
        if (ce !== 10)
            return !1;
        const we = () => {
            const Oe = Y.currentPeek();
            return Oe === "{" ? P(Y.peek()) : Oe === "@" || Oe === "%" || Oe === "|" || Oe === ":" || Oe === "." || Oe === Ri || !Oe ? !1 : Oe === Zs ? (Y.peek(),
                we()) : P(Oe)
        }
            , _e = we();
        return Y.resetPeek(),
            _e
    }

    function ne(Y) {
        A(Y);
        const W = Y.currentPeek() === "|";
        return Y.resetPeek(),
            W
    }

    function le(Y) {
        const W = A(Y)
            , ce = Y.currentPeek() === "%" && Y.peek() === "{";
        return Y.resetPeek(),
            {
                isModulo: ce,
                hasSpace: W.length > 0
            }
    }

    function oe(Y, W = !0) {
        const ce = (_e = !1, Oe = "", qe = !1) => {
            const We = Y.currentPeek();
            return We === "{" ? Oe === "%" ? !1 : _e : We === "@" || !We ? Oe === "%" ? !0 : _e : We === "%" ? (Y.peek(),
                ce(_e, "%", !0)) : We === "|" ? Oe === "%" || qe ? !0 : !(Oe === Ri || Oe === Zs) : We === Ri ? (Y.peek(),
                ce(!0, Ri, qe)) : We === Zs ? (Y.peek(),
                ce(!0, Zs, qe)) : !0
        }
            , we = ce();
        return W && Y.resetPeek(),
            we
    }

    function ve(Y, W) {
        const ce = Y.currentChar();
        return ce === ra ? ra : W(ce) ? (Y.next(),
            ce) : null
    }

    function be(Y) {
        return ve(Y, ce => {
                const we = ce.charCodeAt(0);
                return we >= 97 && we <= 122 || we >= 65 && we <= 90 || we >= 48 && we <= 57 || we === 95 || we === 36
            }
        )
    }

    function de(Y) {
        return ve(Y, ce => {
                const we = ce.charCodeAt(0);
                return we >= 48 && we <= 57
            }
        )
    }

    function J(Y) {
        return ve(Y, ce => {
                const we = ce.charCodeAt(0);
                return we >= 48 && we <= 57 || we >= 65 && we <= 70 || we >= 97 && we <= 102
            }
        )
    }

    function ue(Y) {
        let W = ""
            , ce = "";
        for (; W = de(Y);)
            ce += W;
        return ce
    }

    function fe(Y) {
        R(Y);
        const W = Y.currentChar();
        return W !== "%" && w(St.EXPECTED_TOKEN, l(), 0, W),
            Y.next(),
            "%"
    }

    function Me(Y) {
        let W = "";
        for (; ;) {
            const ce = Y.currentChar();
            if (ce === "{" || ce === "}" || ce === "@" || ce === "|" || !ce)
                break;
            if (ce === "%")
                if (oe(Y))
                    W += ce,
                        Y.next();
                else
                    break;
            else if (ce === Ri || ce === Zs)
                if (oe(Y))
                    W += ce,
                        Y.next();
                else {
                    if (ne(Y))
                        break;
                    W += ce,
                        Y.next()
                }
            else
                W += ce,
                    Y.next()
        }
        return W
    }

    function Xe(Y) {
        R(Y);
        let W = ""
            , ce = "";
        for (; W = be(Y);)
            ce += W;
        return Y.currentChar() === ra && w(St.UNTERMINATED_CLOSING_BRACE, l(), 0),
            ce
    }

    function Be(Y) {
        R(Y);
        let W = "";
        return Y.currentChar() === "-" ? (Y.next(),
            W += `-${ue(Y)}`) : W += ue(Y),
        Y.currentChar() === ra && w(St.UNTERMINATED_CLOSING_BRACE, l(), 0),
            W
    }

    function je(Y) {
        R(Y),
            I(Y, "'");
        let W = ""
            , ce = "";
        const we = Oe => Oe !== km && Oe !== Zs;
        for (; W = ve(Y, we);)
            W === "\\" ? ce += tt(Y) : ce += W;
        const _e = Y.currentChar();
        return _e === Zs || _e === ra ? (w(St.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, l(), 0),
        _e === Zs && (Y.next(),
            I(Y, "'")),
            ce) : (I(Y, "'"),
            ce)
    }

    function tt(Y) {
        const W = Y.currentChar();
        switch (W) {
            case "\\":
            case "'":
                return Y.next(),
                    `\\${W}`;
            case "u":
                return ft(Y, W, 4);
            case "U":
                return ft(Y, W, 6);
            default:
                return w(St.UNKNOWN_ESCAPE_SEQUENCE, l(), 0, W),
                    ""
        }
    }

    function ft(Y, W, ce) {
        I(Y, W);
        let we = "";
        for (let _e = 0; _e < ce; _e++) {
            const Oe = J(Y);
            if (!Oe) {
                w(St.INVALID_UNICODE_ESCAPE_SEQUENCE, l(), 0, `\\${W}${we}${Y.currentChar()}`);
                break
            }
            we += Oe
        }
        return `\\${W}${we}`
    }

    function mt(Y) {
        R(Y);
        let W = ""
            , ce = "";
        const we = _e => _e !== "{" && _e !== "}" && _e !== Ri && _e !== Zs;
        for (; W = ve(Y, we);)
            ce += W;
        return ce
    }

    function bt(Y) {
        let W = ""
            , ce = "";
        for (; W = be(Y);)
            ce += W;
        return ce
    }

    function Pe(Y) {
        const W = (ce = !1, we) => {
                const _e = Y.currentChar();
                return _e === "{" || _e === "%" || _e === "@" || _e === "|" || _e === "(" || _e === ")" || !_e || _e === Ri ? we : _e === Zs || _e === M2 ? (we += _e,
                    Y.next(),
                    W(ce, we)) : (we += _e,
                    Y.next(),
                    W(!0, we))
            }
        ;
        return W(!1, "")
    }

    function Ae(Y) {
        R(Y);
        const W = I(Y, "|");
        return R(Y),
            W
    }

    function Ne(Y, W) {
        let ce = null;
        switch (Y.currentChar()) {
            case "{":
                return W.braceNest >= 1 && w(St.NOT_ALLOW_NEST_PLACEHOLDER, l(), 0),
                    Y.next(),
                    ce = C(W, 2, "{"),
                    R(Y),
                    W.braceNest++,
                    ce;
            case "}":
                return W.braceNest > 0 && W.currentType === 2 && w(St.EMPTY_PLACEHOLDER, l(), 0),
                    Y.next(),
                    ce = C(W, 3, "}"),
                    W.braceNest--,
                W.braceNest > 0 && R(Y),
                W.inLinked && W.braceNest === 0 && (W.inLinked = !1),
                    ce;
            case "@":
                return W.braceNest > 0 && w(St.UNTERMINATED_CLOSING_BRACE, l(), 0),
                    ce = He(Y, W) || T(W),
                    W.braceNest = 0,
                    ce;
            default:
                let _e = !0
                    , Oe = !0
                    , qe = !0;
                if (ne(Y))
                    return W.braceNest > 0 && w(St.UNTERMINATED_CLOSING_BRACE, l(), 0),
                        ce = C(W, 1, Ae(Y)),
                        W.braceNest = 0,
                        W.inLinked = !1,
                        ce;
                if (W.braceNest > 0 && (W.currentType === 5 || W.currentType === 6 || W.currentType === 7))
                    return w(St.UNTERMINATED_CLOSING_BRACE, l(), 0),
                        W.braceNest = 0,
                        et(Y, W);
                if (_e = O(Y, W))
                    return ce = C(W, 5, Xe(Y)),
                        R(Y),
                        ce;
                if (Oe = F(Y, W))
                    return ce = C(W, 6, Be(Y)),
                        R(Y),
                        ce;
                if (qe = $(Y, W))
                    return ce = C(W, 7, je(Y)),
                        R(Y),
                        ce;
                if (!_e && !Oe && !qe)
                    return ce = C(W, 13, mt(Y)),
                        w(St.INVALID_TOKEN_IN_PLACEHOLDER, l(), 0, ce.value),
                        R(Y),
                        ce;
                break
        }
        return ce
    }

    function He(Y, W) {
        const {currentType: ce} = W;
        let we = null;
        const _e = Y.currentChar();
        switch ((ce === 8 || ce === 9 || ce === 12 || ce === 10) && (_e === Zs || _e === Ri) && w(St.INVALID_LINKED_FORMAT, l(), 0),
            _e) {
            case "@":
                return Y.next(),
                    we = C(W, 8, "@"),
                    W.inLinked = !0,
                    we;
            case ".":
                return R(Y),
                    Y.next(),
                    C(W, 9, ".");
            case ":":
                return R(Y),
                    Y.next(),
                    C(W, 10, ":");
            default:
                return ne(Y) ? (we = C(W, 1, Ae(Y)),
                    W.braceNest = 0,
                    W.inLinked = !1,
                    we) : V(Y, W) || ie(Y, W) ? (R(Y),
                    He(Y, W)) : G(Y, W) ? (R(Y),
                    C(W, 12, bt(Y))) : te(Y, W) ? (R(Y),
                    _e === "{" ? Ne(Y, W) || we : C(W, 11, Pe(Y))) : (ce === 8 && w(St.INVALID_LINKED_FORMAT, l(), 0),
                    W.braceNest = 0,
                    W.inLinked = !1,
                    et(Y, W))
        }
    }

    function et(Y, W) {
        let ce = {
            type: 14
        };
        if (W.braceNest > 0)
            return Ne(Y, W) || T(W);
        if (W.inLinked)
            return He(Y, W) || T(W);
        switch (Y.currentChar()) {
            case "{":
                return Ne(Y, W) || T(W);
            case "}":
                return w(St.UNBALANCED_CLOSING_BRACE, l(), 0),
                    Y.next(),
                    C(W, 3, "}");
            case "@":
                return He(Y, W) || T(W);
            default:
                if (ne(Y))
                    return ce = C(W, 1, Ae(Y)),
                        W.braceNest = 0,
                        W.inLinked = !1,
                        ce;
                const {isModulo: _e, hasSpace: Oe} = le(Y);
                if (_e)
                    return Oe ? C(W, 0, Me(Y)) : C(W, 4, fe(Y));
                if (oe(Y))
                    return C(W, 0, Me(Y));
                break
        }
        return ce
    }

    function dt() {
        const {currentType: Y, offset: W, startLoc: ce, endLoc: we} = g;
        return g.lastType = Y,
            g.lastOffset = W,
            g.lastStartLoc = ce,
            g.lastEndLoc = we,
            g.offset = o(),
            g.startLoc = l(),
            a.currentChar() === ra ? C(g, 14) : et(a, g)
    }

    return {
        nextToken: dt,
        currentOffset: o,
        currentPosition: l,
        context: y
    }
}

const N2 = "parser"
    , D2 = /(?:\\\\|\\'|\\u([0-9a-fA-F]{4})|\\U([0-9a-fA-F]{6}))/g;

function F2(e, t, s) {
    switch (e) {
        case "\\\\":
            return "\\";
        case "\\'":
            return "'";
        default: {
            const a = parseInt(t || s, 16);
            return a <= 55295 || a >= 57344 ? String.fromCodePoint(a) : "�"
        }
    }
}

function $2(e = {}) {
    const t = e.location !== !1
        , {onError: s} = e;

    function a(P, M, O, F, ...$) {
        const V = P.currentPosition();
        if (V.offset += F,
            V.column += F,
            s) {
            const G = t ? Hh(O, V) : null
                , ie = ko(M, G, {
                domain: N2,
                args: $
            });
            s(ie)
        }
    }

    function o(P, M, O) {
        const F = {
            type: P
        };
        return t && (F.start = M,
            F.end = M,
            F.loc = {
                start: O,
                end: O
            }),
            F
    }

    function l(P, M, O, F) {
        F && (P.type = F),
        t && (P.end = M,
        P.loc && (P.loc.end = O))
    }

    function u(P, M) {
        const O = P.context()
            , F = o(3, O.offset, O.startLoc);
        return F.value = M,
            l(F, P.currentOffset(), P.currentPosition()),
            F
    }

    function p(P, M) {
        const O = P.context()
            , {lastOffset: F, lastStartLoc: $} = O
            , V = o(5, F, $);
        return V.index = parseInt(M, 10),
            P.nextToken(),
            l(V, P.currentOffset(), P.currentPosition()),
            V
    }

    function g(P, M) {
        const O = P.context()
            , {lastOffset: F, lastStartLoc: $} = O
            , V = o(4, F, $);
        return V.key = M,
            P.nextToken(),
            l(V, P.currentOffset(), P.currentPosition()),
            V
    }

    function y(P, M) {
        const O = P.context()
            , {lastOffset: F, lastStartLoc: $} = O
            , V = o(9, F, $);
        return V.value = M.replace(D2, F2),
            P.nextToken(),
            l(V, P.currentOffset(), P.currentPosition()),
            V
    }

    function v(P) {
        const M = P.nextToken()
            , O = P.context()
            , {lastOffset: F, lastStartLoc: $} = O
            , V = o(8, F, $);
        return M.type !== 12 ? (a(P, St.UNEXPECTED_EMPTY_LINKED_MODIFIER, O.lastStartLoc, 0),
            V.value = "",
            l(V, F, $),
            {
                nextConsumeToken: M,
                node: V
            }) : (M.value == null && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, O.lastStartLoc, 0, ui(M)),
            V.value = M.value || "",
            l(V, P.currentOffset(), P.currentPosition()),
            {
                node: V
            })
    }

    function w(P, M) {
        const O = P.context()
            , F = o(7, O.offset, O.startLoc);
        return F.value = M,
            l(F, P.currentOffset(), P.currentPosition()),
            F
    }

    function C(P) {
        const M = P.context()
            , O = o(6, M.offset, M.startLoc);
        let F = P.nextToken();
        if (F.type === 9) {
            const $ = v(P);
            O.modifier = $.node,
                F = $.nextConsumeToken || P.nextToken()
        }
        switch (F.type !== 10 && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, M.lastStartLoc, 0, ui(F)),
            F = P.nextToken(),
        F.type === 2 && (F = P.nextToken()),
            F.type) {
            case 11:
                F.value == null && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, M.lastStartLoc, 0, ui(F)),
                    O.key = w(P, F.value || "");
                break;
            case 5:
                F.value == null && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, M.lastStartLoc, 0, ui(F)),
                    O.key = g(P, F.value || "");
                break;
            case 6:
                F.value == null && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, M.lastStartLoc, 0, ui(F)),
                    O.key = p(P, F.value || "");
                break;
            case 7:
                F.value == null && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, M.lastStartLoc, 0, ui(F)),
                    O.key = y(P, F.value || "");
                break;
            default:
                a(P, St.UNEXPECTED_EMPTY_LINKED_KEY, M.lastStartLoc, 0);
                const $ = P.context()
                    , V = o(7, $.offset, $.startLoc);
                return V.value = "",
                    l(V, $.offset, $.startLoc),
                    O.key = V,
                    l(O, $.offset, $.startLoc),
                    {
                        nextConsumeToken: F,
                        node: O
                    }
        }
        return l(O, P.currentOffset(), P.currentPosition()),
            {
                node: O
            }
    }

    function T(P) {
        const M = P.context()
            , O = M.currentType === 1 ? P.currentOffset() : M.offset
            , F = M.currentType === 1 ? M.endLoc : M.startLoc
            , $ = o(2, O, F);
        $.items = [];
        let V = null;
        do {
            const te = V || P.nextToken();
            switch (V = null,
                te.type) {
                case 0:
                    te.value == null && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, M.lastStartLoc, 0, ui(te)),
                        $.items.push(u(P, te.value || ""));
                    break;
                case 6:
                    te.value == null && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, M.lastStartLoc, 0, ui(te)),
                        $.items.push(p(P, te.value || ""));
                    break;
                case 5:
                    te.value == null && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, M.lastStartLoc, 0, ui(te)),
                        $.items.push(g(P, te.value || ""));
                    break;
                case 7:
                    te.value == null && a(P, St.UNEXPECTED_LEXICAL_ANALYSIS, M.lastStartLoc, 0, ui(te)),
                        $.items.push(y(P, te.value || ""));
                    break;
                case 8:
                    const ne = C(P);
                    $.items.push(ne.node),
                        V = ne.nextConsumeToken || null;
                    break
            }
        } while (M.currentType !== 14 && M.currentType !== 1);
        const G = M.currentType === 1 ? M.lastOffset : P.currentOffset()
            , ie = M.currentType === 1 ? M.lastEndLoc : P.currentPosition();
        return l($, G, ie),
            $
    }

    function I(P, M, O, F) {
        const $ = P.context();
        let V = F.items.length === 0;
        const G = o(1, M, O);
        G.cases = [],
            G.cases.push(F);
        do {
            const ie = T(P);
            V || (V = ie.items.length === 0),
                G.cases.push(ie)
        } while ($.currentType !== 14);
        return V && a(P, St.MUST_HAVE_MESSAGES_IN_PLURAL, O, 0),
            l(G, P.currentOffset(), P.currentPosition()),
            G
    }

    function A(P) {
        const M = P.context()
            , {offset: O, startLoc: F} = M
            , $ = T(P);
        return M.currentType === 14 ? $ : I(P, O, F, $)
    }

    function R(P) {
        const M = R2(P, zx({}, e))
            , O = M.context()
            , F = o(0, O.offset, O.startLoc);
        return t && F.loc && (F.loc.source = P),
            F.body = A(M),
        e.onCacheKey && (F.cacheKey = e.onCacheKey(P)),
        O.currentType !== 14 && a(M, St.UNEXPECTED_LEXICAL_ANALYSIS, O.lastStartLoc, 0, P[O.offset] || ""),
            l(F, M.currentOffset(), M.currentPosition()),
            F
    }

    return {
        parse: R
    }
}

function ui(e) {
    if (e.type === 14)
        return "EOF";
    const t = (e.value || "").replace(/\r?\n/gu, "\\n");
    return t.length > 10 ? t.slice(0, 9) + "…" : t
}

function B2(e, t = {}) {
    const s = {
        ast: e,
        helpers: new Set
    };
    return {
        context: () => s,
        helper: l => (s.helpers.add(l),
            l)
    }
}

function Cm(e, t) {
    for (let s = 0; s < e.length; s++)
        gp(e[s], t)
}

function gp(e, t) {
    switch (e.type) {
        case 1:
            Cm(e.cases, t),
                t.helper("plural");
            break;
        case 2:
            Cm(e.items, t);
            break;
        case 6:
            gp(e.key, t),
                t.helper("linked"),
                t.helper("type");
            break;
        case 5:
            t.helper("interpolate"),
                t.helper("list");
            break;
        case 4:
            t.helper("interpolate"),
                t.helper("named");
            break
    }
}

function H2(e, t = {}) {
    const s = B2(e);
    s.helper("normalize"),
    e.body && gp(e.body, s);
    const a = s.context();
    e.helpers = Array.from(a.helpers)
}

function V2(e) {
    const t = e.body;
    return t.type === 2 ? Am(t) : t.cases.forEach(s => Am(s)),
        e
}

function Am(e) {
    if (e.items.length === 1) {
        const t = e.items[0];
        (t.type === 3 || t.type === 9) && (e.static = t.value,
            delete t.value)
    } else {
        const t = [];
        for (let s = 0; s < e.items.length; s++) {
            const a = e.items[s];
            if (!(a.type === 3 || a.type === 9) || a.value == null)
                break;
            t.push(a.value)
        }
        if (t.length === e.items.length) {
            e.static = Wx(t);
            for (let s = 0; s < e.items.length; s++) {
                const a = e.items[s];
                (a.type === 3 || a.type === 9) && delete a.value
            }
        }
    }
}

const z2 = "minifier";

function Pr(e) {
    switch (e.t = e.type,
        e.type) {
        case 0:
            const t = e;
            Pr(t.body),
                t.b = t.body,
                delete t.body;
            break;
        case 1:
            const s = e
                , a = s.cases;
            for (let v = 0; v < a.length; v++)
                Pr(a[v]);
            s.c = a,
                delete s.cases;
            break;
        case 2:
            const o = e
                , l = o.items;
            for (let v = 0; v < l.length; v++)
                Pr(l[v]);
            o.i = l,
                delete o.items,
            o.static && (o.s = o.static,
                delete o.static);
            break;
        case 3:
        case 9:
        case 8:
        case 7:
            const u = e;
            u.value && (u.v = u.value,
                delete u.value);
            break;
        case 6:
            const p = e;
            Pr(p.key),
                p.k = p.key,
                delete p.key,
            p.modifier && (Pr(p.modifier),
                p.m = p.modifier,
                delete p.modifier);
            break;
        case 5:
            const g = e;
            g.i = g.index,
                delete g.index;
            break;
        case 4:
            const y = e;
            y.k = y.key,
                delete y.key;
            break;
        default:
            throw ko(St.UNHANDLED_MINIFIER_NODE_TYPE, null, {
                domain: z2,
                args: [e.type]
            })
    }
    delete e.type
}

const W2 = "parser";

function U2(e, t) {
    const {sourceMap: s, filename: a, breakLineCode: o, needIndent: l} = t
        , u = t.location !== !1
        , p = {
        filename: a,
        code: "",
        column: 1,
        line: 1,
        offset: 0,
        map: void 0,
        breakLineCode: o,
        needIndent: l,
        indentLevel: 0
    };
    u && e.loc && (p.source = e.loc.source);
    const g = () => p;

    function y(R, P) {
        p.code += R
    }

    function v(R, P = !0) {
        const M = P ? o : "";
        y(l ? M + "  ".repeat(R) : M)
    }

    function w(R = !0) {
        const P = ++p.indentLevel;
        R && v(P)
    }

    function C(R = !0) {
        const P = --p.indentLevel;
        R && v(P)
    }

    function T() {
        v(p.indentLevel)
    }

    return {
        context: g,
        push: y,
        indent: w,
        deindent: C,
        newline: T,
        helper: R => `_${R}`,
        needIndent: () => p.needIndent
    }
}

function Y2(e, t) {
    const {helper: s} = e;
    e.push(`${s("linked")}(`),
        no(e, t.key),
        t.modifier ? (e.push(", "),
            no(e, t.modifier),
            e.push(", _type")) : e.push(", undefined, _type"),
        e.push(")")
}

function X2(e, t) {
    const {helper: s, needIndent: a} = e;
    e.push(`${s("normalize")}([`),
        e.indent(a());
    const o = t.items.length;
    for (let l = 0; l < o && (no(e, t.items[l]),
    l !== o - 1); l++)
        e.push(", ");
    e.deindent(a()),
        e.push("])")
}

function j2(e, t) {
    const {helper: s, needIndent: a} = e;
    if (t.cases.length > 1) {
        e.push(`${s("plural")}([`),
            e.indent(a());
        const o = t.cases.length;
        for (let l = 0; l < o && (no(e, t.cases[l]),
        l !== o - 1); l++)
            e.push(", ");
        e.deindent(a()),
            e.push("])")
    }
}

function G2(e, t) {
    t.body ? no(e, t.body) : e.push("null")
}

function no(e, t) {
    const {helper: s} = e;
    switch (t.type) {
        case 0:
            G2(e, t);
            break;
        case 1:
            j2(e, t);
            break;
        case 2:
            X2(e, t);
            break;
        case 6:
            Y2(e, t);
            break;
        case 8:
            e.push(JSON.stringify(t.value), t);
            break;
        case 7:
            e.push(JSON.stringify(t.value), t);
            break;
        case 5:
            e.push(`${s("interpolate")}(${s("list")}(${t.index}))`, t);
            break;
        case 4:
            e.push(`${s("interpolate")}(${s("named")}(${JSON.stringify(t.key)}))`, t);
            break;
        case 9:
            e.push(JSON.stringify(t.value), t);
            break;
        case 3:
            e.push(JSON.stringify(t.value), t);
            break;
        default:
            throw ko(St.UNHANDLED_CODEGEN_NODE_TYPE, null, {
                domain: W2,
                args: [t.type]
            })
    }
}

const q2 = (e, t = {}) => {
        const s = _m(t.mode) ? t.mode : "normal"
            , a = _m(t.filename) ? t.filename : "message.intl"
            , o = !!t.sourceMap
            , l = t.breakLineCode != null ? t.breakLineCode : s === "arrow" ? ";" : `
`
            , u = t.needIndent ? t.needIndent : s !== "arrow"
            , p = e.helpers || []
            , g = U2(e, {
            mode: s,
            filename: a,
            sourceMap: o,
            breakLineCode: l,
            needIndent: u
        });
        g.push(s === "normal" ? "function __msg__ (ctx) {" : "(ctx) => {"),
            g.indent(u),
        p.length > 0 && (g.push(`const { ${Wx(p.map(w => `${w}: _${w}`), ", ")} } = ctx`),
            g.newline()),
            g.push("return "),
            no(g, e),
            g.deindent(u),
            g.push("}"),
            delete e.helpers;
        const {code: y, map: v} = g.context();
        return {
            ast: e,
            code: y,
            map: v ? v.toJSON() : void 0
        }
    }
;

function K2(e, t = {}) {
    const s = zx({}, t)
        , a = !!s.jit
        , o = !!s.minify
        , l = s.optimize == null ? !0 : s.optimize
        , p = $2(s).parse(e);
    return a ? (l && V2(p),
    o && Pr(p),
        {
            ast: p,
            code: ""
        }) : (H2(p, s),
        q2(p, s))
}

/*!
  * core-base v9.10.1
  * (c) 2024 kazuya kawaguchi
  * Released under the MIT License.
  */
function Z2() {
    typeof __INTLIFY_PROD_DEVTOOLS__ != "boolean" && (Ui().__INTLIFY_PROD_DEVTOOLS__ = !1),
    typeof __INTLIFY_JIT_COMPILATION__ != "boolean" && (Ui().__INTLIFY_JIT_COMPILATION__ = !1),
    typeof __INTLIFY_DROP_MESSAGE_COMPILER__ != "boolean" && (Ui().__INTLIFY_DROP_MESSAGE_COMPILER__ = !1)
}

const Ra = [];
Ra[0] = {
    w: [0],
    i: [3, 0],
    "[": [4],
    o: [7]
};
Ra[1] = {
    w: [1],
    ".": [2],
    "[": [4],
    o: [7]
};
Ra[2] = {
    w: [2],
    i: [3, 0],
    0: [3, 0]
};
Ra[3] = {
    i: [3, 0],
    0: [3, 0],
    w: [1, 1],
    ".": [2, 1],
    "[": [4, 1],
    o: [7, 1]
};
Ra[4] = {
    "'": [5, 0],
    '"': [6, 0],
    "[": [4, 2],
    "]": [1, 3],
    o: 8,
    l: [4, 0]
};
Ra[5] = {
    "'": [4, 0],
    o: 8,
    l: [5, 0]
};
Ra[6] = {
    '"': [4, 0],
    o: 8,
    l: [6, 0]
};
const J2 = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;

function Q2(e) {
    return J2.test(e)
}

function eT(e) {
    const t = e.charCodeAt(0)
        , s = e.charCodeAt(e.length - 1);
    return t === s && (t === 34 || t === 39) ? e.slice(1, -1) : e
}

function tT(e) {
    if (e == null)
        return "o";
    switch (e.charCodeAt(0)) {
        case 91:
        case 93:
        case 46:
        case 34:
        case 39:
            return e;
        case 95:
        case 36:
        case 45:
            return "i";
        case 9:
        case 10:
        case 13:
        case 160:
        case 65279:
        case 8232:
        case 8233:
            return "w"
    }
    return "i"
}

function sT(e) {
    const t = e.trim();
    return e.charAt(0) === "0" && isNaN(parseInt(e)) ? !1 : Q2(t) ? eT(t) : "*" + t
}

function nT(e) {
    const t = [];
    let s = -1, a = 0, o = 0, l, u, p, g, y, v, w;
    const C = [];
    C[0] = () => {
        u === void 0 ? u = p : u += p
    }
        ,
        C[1] = () => {
            u !== void 0 && (t.push(u),
                u = void 0)
        }
        ,
        C[2] = () => {
            C[0](),
                o++
        }
        ,
        C[3] = () => {
            if (o > 0)
                o--,
                    a = 4,
                    C[0]();
            else {
                if (o = 0,
                u === void 0 || (u = sT(u),
                u === !1))
                    return !1;
                C[1]()
            }
        }
    ;

    function T() {
        const I = e[s + 1];
        if (a === 5 && I === "'" || a === 6 && I === '"')
            return s++,
                p = "\\" + I,
                C[0](),
                !0
    }

    for (; a !== null;)
        if (s++,
            l = e[s],
            !(l === "\\" && T())) {
            if (g = tT(l),
                w = Ra[a],
                y = w[g] || w.l || 8,
            y === 8 || (a = y[0],
            y[1] !== void 0 && (v = C[y[1]],
            v && (p = l,
            v() === !1))))
                return;
            if (a === 7)
                return t
        }
}

const Em = new Map;

function iT(e, t) {
    return Kt(e) ? e[t] : null
}

function aT(e, t) {
    if (!Kt(e))
        return null;
    let s = Em.get(t);
    if (s || (s = nT(t),
    s && Em.set(t, s)),
        !s)
        return null;
    const a = s.length;
    let o = e
        , l = 0;
    for (; l < a;) {
        const u = o[s[l]];
        if (u === void 0 || os(o))
            return null;
        o = u,
            l++
    }
    return o
}

const rT = e => e
    , oT = e => ""
    , lT = "text"
    , cT = e => e.length === 0 ? "" : x2(e)
    , uT = y2;

function Tm(e, t) {
    return e = Math.abs(e),
        t === 2 ? e ? e > 1 ? 1 : 0 : 1 : e ? Math.min(e, 2) : 0
}

function dT(e) {
    const t = Is(e.pluralIndex) ? e.pluralIndex : -1;
    return e.named && (Is(e.named.count) || Is(e.named.n)) ? Is(e.named.count) ? e.named.count : Is(e.named.n) ? e.named.n : t : t
}

function hT(e, t) {
    t.count || (t.count = e),
    t.n || (t.n = e)
}

function fT(e = {}) {
    const t = e.locale
        , s = dT(e)
        , a = Kt(e.pluralRules) && it(t) && os(e.pluralRules[t]) ? e.pluralRules[t] : Tm
        , o = Kt(e.pluralRules) && it(t) && os(e.pluralRules[t]) ? Tm : void 0
        , l = P => P[a(s, P.length, o)]
        , u = e.list || []
        , p = P => u[P]
        , g = e.named || {};
    Is(e.pluralIndex) && hT(s, g);
    const y = P => g[P];

    function v(P) {
        const M = os(e.messages) ? e.messages(P) : Kt(e.messages) ? e.messages[P] : !1;
        return M || (e.parent ? e.parent.message(P) : oT)
    }

    const w = P => e.modifiers ? e.modifiers[P] : rT
        , C = Tt(e.processor) && os(e.processor.normalize) ? e.processor.normalize : cT
        , T = Tt(e.processor) && os(e.processor.interpolate) ? e.processor.interpolate : uT
        , I = Tt(e.processor) && it(e.processor.type) ? e.processor.type : lT
        , R = {
        list: p,
        named: y,
        plural: l,
        linked: (P, ...M) => {
            const [O, F] = M;
            let $ = "text"
                , V = "";
            M.length === 1 ? Kt(O) ? (V = O.modifier || V,
                $ = O.type || $) : it(O) && (V = O || V) : M.length === 2 && (it(O) && (V = O || V),
            it(F) && ($ = F || $));
            const G = v(P)(R)
                , ie = $ === "vnode" && hs(G) && V ? G[0] : G;
            return V ? w(V)(ie, $) : ie
        }
        ,
        message: v,
        type: I,
        interpolate: T,
        normalize: C,
        values: Vs({}, u, g)
    };
    return R
}

let El = null;

function pT(e) {
    El = e
}

function gT(e, t, s) {
    El && El.emit("i18n:init", {
        timestamp: Date.now(),
        i18n: e,
        version: t,
        meta: s
    })
}

const mT = vT("function:translate");

function vT(e) {
    return t => El && El.emit(e, t)
}

const bT = {
    NOT_FOUND_KEY: 1,
    FALLBACK_TO_TRANSLATE: 2,
    CANNOT_FORMAT_NUMBER: 3,
    FALLBACK_TO_NUMBER_FORMAT: 4,
    CANNOT_FORMAT_DATE: 5,
    FALLBACK_TO_DATE_FORMAT: 6,
    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: 7,
    __EXTEND_POINT__: 8
}
    , Ux = St.__EXTEND_POINT__
    , Va = pp(Ux)
    , Xn = {
    INVALID_ARGUMENT: Ux,
    INVALID_DATE_ARGUMENT: Va(),
    INVALID_ISO_DATE_ARGUMENT: Va(),
    NOT_SUPPORT_NON_STRING_MESSAGE: Va(),
    NOT_SUPPORT_LOCALE_PROMISE_VALUE: Va(),
    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: Va(),
    NOT_SUPPORT_LOCALE_TYPE: Va(),
    __EXTEND_POINT__: Va()
};

function mi(e) {
    return ko(e, null, void 0)
}

function mp(e, t) {
    return t.locale != null ? Im(t.locale) : Im(e.locale)
}

let Ud;

function Im(e) {
    if (it(e))
        return e;
    if (os(e)) {
        if (e.resolvedOnce && Ud != null)
            return Ud;
        if (e.constructor.name === "Function") {
            const t = e();
            if (b2(t))
                throw mi(Xn.NOT_SUPPORT_LOCALE_PROMISE_VALUE);
            return Ud = t
        } else
            throw mi(Xn.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION)
    } else
        throw mi(Xn.NOT_SUPPORT_LOCALE_TYPE)
}

function yT(e, t, s) {
    return [...new Set([s, ...hs(t) ? t : Kt(t) ? Object.keys(t) : it(t) ? [t] : [s]])]
}

function Yx(e, t, s) {
    const a = it(s) ? s : io
        , o = e;
    o.__localeChainCache || (o.__localeChainCache = new Map);
    let l = o.__localeChainCache.get(a);
    if (!l) {
        l = [];
        let u = [s];
        for (; hs(u);)
            u = Pm(l, u, t);
        const p = hs(t) || !Tt(t) ? t : t.default ? t.default : null;
        u = it(p) ? [p] : p,
        hs(u) && Pm(l, u, !1),
            o.__localeChainCache.set(a, l)
    }
    return l
}

function Pm(e, t, s) {
    let a = !0;
    for (let o = 0; o < t.length && Dt(a); o++) {
        const l = t[o];
        it(l) && (a = xT(e, t[o], s))
    }
    return a
}

function xT(e, t, s) {
    let a;
    const o = t.split("-");
    do {
        const l = o.join("-");
        a = wT(e, l, s),
            o.splice(-1, 1)
    } while (o.length && a === !0);
    return a
}

function wT(e, t, s) {
    let a = !1;
    if (!e.includes(t) && (a = !0,
        t)) {
        a = t[t.length - 1] !== "!";
        const o = t.replace(/!/g, "");
        e.push(o),
        (hs(s) || Tt(s)) && s[o] && (a = s[o])
    }
    return a
}

const ST = "9.10.1"
    , Zu = -1
    , io = "en-US"
    , Lm = ""
    , Mm = e => `${e.charAt(0).toLocaleUpperCase()}${e.substr(1)}`;

function _T() {
    return {
        upper: (e, t) => t === "text" && it(e) ? e.toUpperCase() : t === "vnode" && Kt(e) && "__v_isVNode" in e ? e.children.toUpperCase() : e,
        lower: (e, t) => t === "text" && it(e) ? e.toLowerCase() : t === "vnode" && Kt(e) && "__v_isVNode" in e ? e.children.toLowerCase() : e,
        capitalize: (e, t) => t === "text" && it(e) ? Mm(e) : t === "vnode" && Kt(e) && "__v_isVNode" in e ? Mm(e.children) : e
    }
}

let Xx;

function Om(e) {
    Xx = e
}

let jx;

function kT(e) {
    jx = e
}

let Gx;

function CT(e) {
    Gx = e
}

let qx = null;
const AT = e => {
    qx = e
}
    , ET = () => qx;
let Kx = null;
const Rm = e => {
    Kx = e
}
    , TT = () => Kx;
let Nm = 0;

function IT(e = {}) {
    const t = os(e.onWarn) ? e.onWarn : w2
        , s = it(e.version) ? e.version : ST
        , a = it(e.locale) || os(e.locale) ? e.locale : io
        , o = os(a) ? io : a
        ,
        l = hs(e.fallbackLocale) || Tt(e.fallbackLocale) || it(e.fallbackLocale) || e.fallbackLocale === !1 ? e.fallbackLocale : o
        , u = Tt(e.messages) ? e.messages : {
            [o]: {}
        }
        , p = Tt(e.datetimeFormats) ? e.datetimeFormats : {
            [o]: {}
        }
        , g = Tt(e.numberFormats) ? e.numberFormats : {
            [o]: {}
        }
        , y = Vs({}, e.modifiers || {}, _T())
        , v = e.pluralRules || {}
        , w = os(e.missing) ? e.missing : null
        , C = Dt(e.missingWarn) || Ia(e.missingWarn) ? e.missingWarn : !0
        , T = Dt(e.fallbackWarn) || Ia(e.fallbackWarn) ? e.fallbackWarn : !0
        , I = !!e.fallbackFormat
        , A = !!e.unresolving
        , R = os(e.postTranslation) ? e.postTranslation : null
        , P = Tt(e.processor) ? e.processor : null
        , M = Dt(e.warnHtmlMessage) ? e.warnHtmlMessage : !0
        , O = !!e.escapeParameter
        , F = os(e.messageCompiler) ? e.messageCompiler : Xx
        , $ = os(e.messageResolver) ? e.messageResolver : jx || iT
        , V = os(e.localeFallbacker) ? e.localeFallbacker : Gx || yT
        , G = Kt(e.fallbackContext) ? e.fallbackContext : void 0
        , ie = e
        , te = Kt(ie.__datetimeFormatters) ? ie.__datetimeFormatters : new Map
        , ne = Kt(ie.__numberFormatters) ? ie.__numberFormatters : new Map
        , le = Kt(ie.__meta) ? ie.__meta : {};
    Nm++;
    const oe = {
        version: s,
        cid: Nm,
        locale: a,
        fallbackLocale: l,
        messages: u,
        modifiers: y,
        pluralRules: v,
        missing: w,
        missingWarn: C,
        fallbackWarn: T,
        fallbackFormat: I,
        unresolving: A,
        postTranslation: R,
        processor: P,
        warnHtmlMessage: M,
        escapeParameter: O,
        messageCompiler: F,
        messageResolver: $,
        localeFallbacker: V,
        fallbackContext: G,
        onWarn: t,
        __meta: le
    };
    return oe.datetimeFormats = p,
        oe.numberFormats = g,
        oe.__datetimeFormatters = te,
        oe.__numberFormatters = ne,
    __INTLIFY_PROD_DEVTOOLS__ && gT(oe, s, le),
        oe
}

function vp(e, t, s, a, o) {
    const {missing: l, onWarn: u} = e;
    if (l !== null) {
        const p = l(e, s, t, o);
        return it(p) ? p : t
    } else
        return t
}

function Ho(e, t, s) {
    const a = e;
    a.__localeChainCache = new Map,
        e.localeFallbacker(e, s, t)
}

function Yd(e) {
    return s => PT(s, e)
}

function PT(e, t) {
    const s = t.b || t.body;
    if ((s.t || s.type) === 1) {
        const a = s
            , o = a.c || a.cases;
        return e.plural(o.reduce((l, u) => [...l, Dm(e, u)], []))
    } else
        return Dm(e, s)
}

function Dm(e, t) {
    const s = t.s || t.static;
    if (s)
        return e.type === "text" ? s : e.normalize([s]);
    {
        const a = (t.i || t.items).reduce((o, l) => [...o, Vh(e, l)], []);
        return e.normalize(a)
    }
}

function Vh(e, t) {
    const s = t.t || t.type;
    switch (s) {
        case 3:
            const a = t;
            return a.v || a.value;
        case 9:
            const o = t;
            return o.v || o.value;
        case 4:
            const l = t;
            return e.interpolate(e.named(l.k || l.key));
        case 5:
            const u = t;
            return e.interpolate(e.list(u.i != null ? u.i : u.index));
        case 6:
            const p = t
                , g = p.m || p.modifier;
            return e.linked(Vh(e, p.k || p.key), g ? Vh(e, g) : void 0, e.type);
        case 7:
            const y = t;
            return y.v || y.value;
        case 8:
            const v = t;
            return v.v || v.value;
        default:
            throw new Error(`unhandled node type on format message part: ${s}`)
    }
}

const Zx = e => e;
let Dr = Object.create(null);
const ao = e => Kt(e) && (e.t === 0 || e.type === 0) && ("b" in e || "body" in e);

function Jx(e, t = {}) {
    let s = !1;
    const a = t.onError || E2;
    return t.onError = o => {
        s = !0,
            a(o)
    }
        ,
        {
            ...K2(e, t),
            detectError: s
        }
}

const LT = (e, t) => {
        if (!it(e))
            throw mi(Xn.NOT_SUPPORT_NON_STRING_MESSAGE);
        {
            Dt(t.warnHtmlMessage) && t.warnHtmlMessage;
            const a = (t.onCacheKey || Zx)(e)
                , o = Dr[a];
            if (o)
                return o;
            const {code: l, detectError: u} = Jx(e, t)
                , p = new Function(`return ${l}`)();
            return u ? p : Dr[a] = p
        }
    }
;

function MT(e, t) {
    if (__INTLIFY_JIT_COMPILATION__ && !__INTLIFY_DROP_MESSAGE_COMPILER__ && it(e)) {
        Dt(t.warnHtmlMessage) && t.warnHtmlMessage;
        const a = (t.onCacheKey || Zx)(e)
            , o = Dr[a];
        if (o)
            return o;
        const {ast: l, detectError: u} = Jx(e, {
            ...t,
            location: !1,
            jit: !0
        })
            , p = Yd(l);
        return u ? p : Dr[a] = p
    } else {
        const s = e.cacheKey;
        if (s) {
            const a = Dr[s];
            return a || (Dr[s] = Yd(e))
        } else
            return Yd(e)
    }
}

const Fm = () => ""
    , Cn = e => os(e);

function $m(e, ...t) {
    const {
        fallbackFormat: s,
        postTranslation: a,
        unresolving: o,
        messageCompiler: l,
        fallbackLocale: u,
        messages: p
    } = e
        , [g, y] = zh(...t)
        , v = Dt(y.missingWarn) ? y.missingWarn : e.missingWarn
        , w = Dt(y.fallbackWarn) ? y.fallbackWarn : e.fallbackWarn
        , C = Dt(y.escapeParameter) ? y.escapeParameter : e.escapeParameter
        , T = !!y.resolvedMessage
        , I = it(y.default) || Dt(y.default) ? Dt(y.default) ? l ? g : () => g : y.default : s ? l ? g : () => g : ""
        , A = s || I !== ""
        , R = mp(e, y);
    C && OT(y);
    let [P, M, O] = T ? [g, R, p[R] || {}] : Qx(e, g, R, u, w, v)
        , F = P
        , $ = g;
    if (!T && !(it(F) || ao(F) || Cn(F)) && A && (F = I,
        $ = F),
    !T && (!(it(F) || ao(F) || Cn(F)) || !it(M)))
        return o ? Zu : g;
    let V = !1;
    const G = () => {
        V = !0
    }
        , ie = Cn(F) ? F : e1(e, g, M, F, $, G);
    if (V)
        return F;
    const te = DT(e, M, O, y)
        , ne = fT(te)
        , le = RT(e, ie, ne)
        , oe = a ? a(le, g) : le;
    if (__INTLIFY_PROD_DEVTOOLS__) {
        const ve = {
            timestamp: Date.now(),
            key: it(g) ? g : Cn(F) ? F.key : "",
            locale: M || (Cn(F) ? F.locale : ""),
            format: it(F) ? F : Cn(F) ? F.source : "",
            message: oe
        };
        ve.meta = Vs({}, e.__meta, ET() || {}),
            mT(ve)
    }
    return oe
}

function OT(e) {
    hs(e.list) ? e.list = e.list.map(t => it(t) ? Sm(t) : t) : Kt(e.named) && Object.keys(e.named).forEach(t => {
            it(e.named[t]) && (e.named[t] = Sm(e.named[t]))
        }
    )
}

function Qx(e, t, s, a, o, l) {
    const {messages: u, onWarn: p, messageResolver: g, localeFallbacker: y} = e
        , v = y(e, a, s);
    let w = {}, C, T = null;
    const I = "translate";
    for (let A = 0; A < v.length && (C = v[A],
        w = u[C] || {},
    (T = g(w, t)) === null && (T = w[t]),
        !(it(T) || ao(T) || Cn(T))); A++) {
        const R = vp(e, t, C, l, I);
        R !== t && (T = R)
    }
    return [T, C, w]
}

function e1(e, t, s, a, o, l) {
    const {messageCompiler: u, warnHtmlMessage: p} = e;
    if (Cn(a)) {
        const y = a;
        return y.locale = y.locale || s,
            y.key = y.key || t,
            y
    }
    if (u == null) {
        const y = () => a;
        return y.locale = s,
            y.key = t,
            y
    }
    const g = u(a, NT(e, s, o, a, p, l));
    return g.locale = s,
        g.key = t,
        g.source = a,
        g
}

function RT(e, t, s) {
    return t(s)
}

function zh(...e) {
    const [t, s, a] = e
        , o = {};
    if (!it(t) && !Is(t) && !Cn(t) && !ao(t))
        throw mi(Xn.INVALID_ARGUMENT);
    const l = Is(t) ? String(t) : (Cn(t),
        t);
    return Is(s) ? o.plural = s : it(s) ? o.default = s : Tt(s) && !Ku(s) ? o.named = s : hs(s) && (o.list = s),
        Is(a) ? o.plural = a : it(a) ? o.default = a : Tt(a) && Vs(o, a),
        [l, o]
}

function NT(e, t, s, a, o, l) {
    return {
        locale: t,
        key: s,
        warnHtmlMessage: o,
        onError: u => {
            throw l && l(u),
                u
        }
        ,
        onCacheKey: u => p2(t, s, u)
    }
}

function DT(e, t, s, a) {
    const {
        modifiers: o,
        pluralRules: l,
        messageResolver: u,
        fallbackLocale: p,
        fallbackWarn: g,
        missingWarn: y,
        fallbackContext: v
    } = e
        , C = {
        locale: t,
        modifiers: o,
        pluralRules: l,
        messages: T => {
            let I = u(s, T);
            if (I == null && v) {
                const [, , A] = Qx(v, T, t, p, g, y);
                I = u(A, T)
            }
            if (it(I) || ao(I)) {
                let A = !1;
                const P = e1(e, T, t, I, T, () => {
                        A = !0
                    }
                );
                return A ? Fm : P
            } else
                return Cn(I) ? I : Fm
        }
    };
    return e.processor && (C.processor = e.processor),
    a.list && (C.list = a.list),
    a.named && (C.named = a.named),
    Is(a.plural) && (C.pluralIndex = a.plural),
        C
}

function Bm(e, ...t) {
    const {datetimeFormats: s, unresolving: a, fallbackLocale: o, onWarn: l, localeFallbacker: u} = e
        , {__datetimeFormatters: p} = e
        , [g, y, v, w] = Wh(...t)
        , C = Dt(v.missingWarn) ? v.missingWarn : e.missingWarn;
    Dt(v.fallbackWarn) ? v.fallbackWarn : e.fallbackWarn;
    const T = !!v.part
        , I = mp(e, v)
        , A = u(e, o, I);
    if (!it(g) || g === "")
        return new Intl.DateTimeFormat(I, w).format(y);
    let R = {}, P, M = null;
    const O = "datetime format";
    for (let V = 0; V < A.length && (P = A[V],
        R = s[P] || {},
        M = R[g],
        !Tt(M)); V++)
        vp(e, g, P, C, O);
    if (!Tt(M) || !it(P))
        return a ? Zu : g;
    let F = `${P}__${g}`;
    Ku(w) || (F = `${F}__${JSON.stringify(w)}`);
    let $ = p.get(F);
    return $ || ($ = new Intl.DateTimeFormat(P, Vs({}, M, w)),
        p.set(F, $)),
        T ? $.formatToParts(y) : $.format(y)
}

const t1 = ["localeMatcher", "weekday", "era", "year", "month", "day", "hour", "minute", "second", "timeZoneName", "formatMatcher", "hour12", "timeZone", "dateStyle", "timeStyle", "calendar", "dayPeriod", "numberingSystem", "hourCycle", "fractionalSecondDigits"];

function Wh(...e) {
    const [t, s, a, o] = e
        , l = {};
    let u = {}, p;
    if (it(t)) {
        const g = t.match(/(\d{4}-\d{2}-\d{2})(T|\s)?(.*)/);
        if (!g)
            throw mi(Xn.INVALID_ISO_DATE_ARGUMENT);
        const y = g[3] ? g[3].trim().startsWith("T") ? `${g[1].trim()}${g[3].trim()}` : `${g[1].trim()}T${g[3].trim()}` : g[1].trim();
        p = new Date(y);
        try {
            p.toISOString()
        } catch {
            throw mi(Xn.INVALID_ISO_DATE_ARGUMENT)
        }
    } else if (m2(t)) {
        if (isNaN(t.getTime()))
            throw mi(Xn.INVALID_DATE_ARGUMENT);
        p = t
    } else if (Is(t))
        p = t;
    else
        throw mi(Xn.INVALID_ARGUMENT);
    return it(s) ? l.key = s : Tt(s) && Object.keys(s).forEach(g => {
            t1.includes(g) ? u[g] = s[g] : l[g] = s[g]
        }
    ),
        it(a) ? l.locale = a : Tt(a) && (u = a),
    Tt(o) && (u = o),
        [l.key || "", p, l, u]
}

function Hm(e, t, s) {
    const a = e;
    for (const o in s) {
        const l = `${t}__${o}`;
        a.__datetimeFormatters.has(l) && a.__datetimeFormatters.delete(l)
    }
}

function Vm(e, ...t) {
    const {numberFormats: s, unresolving: a, fallbackLocale: o, onWarn: l, localeFallbacker: u} = e
        , {__numberFormatters: p} = e
        , [g, y, v, w] = Uh(...t)
        , C = Dt(v.missingWarn) ? v.missingWarn : e.missingWarn;
    Dt(v.fallbackWarn) ? v.fallbackWarn : e.fallbackWarn;
    const T = !!v.part
        , I = mp(e, v)
        , A = u(e, o, I);
    if (!it(g) || g === "")
        return new Intl.NumberFormat(I, w).format(y);
    let R = {}, P, M = null;
    const O = "number format";
    for (let V = 0; V < A.length && (P = A[V],
        R = s[P] || {},
        M = R[g],
        !Tt(M)); V++)
        vp(e, g, P, C, O);
    if (!Tt(M) || !it(P))
        return a ? Zu : g;
    let F = `${P}__${g}`;
    Ku(w) || (F = `${F}__${JSON.stringify(w)}`);
    let $ = p.get(F);
    return $ || ($ = new Intl.NumberFormat(P, Vs({}, M, w)),
        p.set(F, $)),
        T ? $.formatToParts(y) : $.format(y)
}

const s1 = ["localeMatcher", "style", "currency", "currencyDisplay", "currencySign", "useGrouping", "minimumIntegerDigits", "minimumFractionDigits", "maximumFractionDigits", "minimumSignificantDigits", "maximumSignificantDigits", "compactDisplay", "notation", "signDisplay", "unit", "unitDisplay", "roundingMode", "roundingPriority", "roundingIncrement", "trailingZeroDisplay"];

function Uh(...e) {
    const [t, s, a, o] = e
        , l = {};
    let u = {};
    if (!Is(t))
        throw mi(Xn.INVALID_ARGUMENT);
    const p = t;
    return it(s) ? l.key = s : Tt(s) && Object.keys(s).forEach(g => {
            s1.includes(g) ? u[g] = s[g] : l[g] = s[g]
        }
    ),
        it(a) ? l.locale = a : Tt(a) && (u = a),
    Tt(o) && (u = o),
        [l.key || "", p, l, u]
}

function zm(e, t, s) {
    const a = e;
    for (const o in s) {
        const l = `${t}__${o}`;
        a.__numberFormatters.has(l) && a.__numberFormatters.delete(l)
    }
}

Z2();
/*!
  * vue-i18n v9.10.1
  * (c) 2024 kazuya kawaguchi
  * Released under the MIT License.
  */
const FT = "9.10.1";

function $T() {
    typeof __VUE_I18N_FULL_INSTALL__ != "boolean" && (Ui().__VUE_I18N_FULL_INSTALL__ = !0),
    typeof __VUE_I18N_LEGACY_API__ != "boolean" && (Ui().__VUE_I18N_LEGACY_API__ = !0),
    typeof __INTLIFY_JIT_COMPILATION__ != "boolean" && (Ui().__INTLIFY_JIT_COMPILATION__ = !1),
    typeof __INTLIFY_DROP_MESSAGE_COMPILER__ != "boolean" && (Ui().__INTLIFY_DROP_MESSAGE_COMPILER__ = !1),
    typeof __INTLIFY_PROD_DEVTOOLS__ != "boolean" && (Ui().__INTLIFY_PROD_DEVTOOLS__ = !1)
}

const n1 = bT.__EXTEND_POINT__
    , Ni = pp(n1);
Ni(),
    Ni(),
    Ni(),
    Ni(),
    Ni(),
    Ni(),
    Ni(),
    Ni(),
    Ni();
const i1 = Xn.__EXTEND_POINT__
    , an = pp(i1)
    , Ls = {
    UNEXPECTED_RETURN_TYPE: i1,
    INVALID_ARGUMENT: an(),
    MUST_BE_CALL_SETUP_TOP: an(),
    NOT_INSTALLED: an(),
    NOT_AVAILABLE_IN_LEGACY_MODE: an(),
    REQUIRED_VALUE: an(),
    INVALID_VALUE: an(),
    CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN: an(),
    NOT_INSTALLED_WITH_PROVIDE: an(),
    UNEXPECTED_ERROR: an(),
    NOT_COMPATIBLE_LEGACY_VUE_I18N: an(),
    BRIDGE_SUPPORT_VUE_2_ONLY: an(),
    MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION: an(),
    NOT_AVAILABLE_COMPOSITION_IN_LEGACY: an(),
    __EXTEND_POINT__: an()
};

function Fs(e, ...t) {
    return ko(e, null, void 0)
}

const Yh = Oa("__translateVNode")
    , Xh = Oa("__datetimeParts")
    , jh = Oa("__numberParts")
    , a1 = Oa("__setPluralRules")
    , r1 = Oa("__injectWithOption")
    , Gh = Oa("__dispose");

function Tl(e) {
    if (!Kt(e))
        return e;
    for (const t in e)
        if (vu(e, t))
            if (!t.includes("."))
                Kt(e[t]) && Tl(e[t]);
            else {
                const s = t.split(".")
                    , a = s.length - 1;
                let o = e
                    , l = !1;
                for (let u = 0; u < a; u++) {
                    if (s[u] in o || (o[s[u]] = {}),
                        !Kt(o[s[u]])) {
                        l = !0;
                        break
                    }
                    o = o[s[u]]
                }
                l || (o[s[a]] = e[t],
                    delete e[t]),
                Kt(o[s[a]]) && Tl(o[s[a]])
            }
    return e
}

function Ju(e, t) {
    const {messages: s, __i18n: a, messageResolver: o, flatJson: l} = t
        , u = Tt(s) ? s : hs(a) ? {} : {
        [e]: {}
    };
    if (hs(a) && a.forEach(p => {
            if ("locale" in p && "resource" in p) {
                const {locale: g, resource: y} = p;
                g ? (u[g] = u[g] || {},
                    Uc(y, u[g])) : Uc(y, u)
            } else
                it(p) && Uc(JSON.parse(p), u)
        }
    ),
    o == null && l)
        for (const p in u)
            vu(u, p) && Tl(u[p]);
    return u
}

function o1(e) {
    return e.type
}

function l1(e, t, s) {
    let a = Kt(t.messages) ? t.messages : {};
    "__i18nGlobal" in s && (a = Ju(e.locale.value, {
        messages: a,
        __i18n: s.__i18nGlobal
    }));
    const o = Object.keys(a);
    o.length && o.forEach(l => {
            e.mergeLocaleMessage(l, a[l])
        }
    );
    {
        if (Kt(t.datetimeFormats)) {
            const l = Object.keys(t.datetimeFormats);
            l.length && l.forEach(u => {
                    e.mergeDateTimeFormat(u, t.datetimeFormats[u])
                }
            )
        }
        if (Kt(t.numberFormats)) {
            const l = Object.keys(t.numberFormats);
            l.length && l.forEach(u => {
                    e.mergeNumberFormat(u, t.numberFormats[u])
                }
            )
        }
    }
}

function Wm(e) {
    return ae(Kn, null, e, 0)
}

const Um = "__INTLIFY_META__"
    , Ym = () => []
    , BT = () => !1;
let Xm = 0;

function jm(e) {
    return (t, s, a, o) => e(s, a, Et() || void 0, o)
}

const HT = () => {
        const e = Et();
        let t = null;
        return e && (t = o1(e)[Um]) ? {
            [Um]: t
        } : null
    }
;

function bp(e = {}, t) {
    const {__root: s, __injectWithOption: a} = e
        , o = s === void 0
        , l = e.flatJson
        , u = mu ? Se : Bs
        , p = !!e.translateExistCompatible;
    let g = Dt(e.inheritLocale) ? e.inheritLocale : !0;
    const y = u(s && g ? s.locale.value : it(e.locale) ? e.locale : io)
        ,
        v = u(s && g ? s.fallbackLocale.value : it(e.fallbackLocale) || hs(e.fallbackLocale) || Tt(e.fallbackLocale) || e.fallbackLocale === !1 ? e.fallbackLocale : y.value)
        , w = u(Ju(y.value, e))
        , C = u(Tt(e.datetimeFormats) ? e.datetimeFormats : {
            [y.value]: {}
        })
        , T = u(Tt(e.numberFormats) ? e.numberFormats : {
            [y.value]: {}
        });
    let I = s ? s.missingWarn : Dt(e.missingWarn) || Ia(e.missingWarn) ? e.missingWarn : !0
        , A = s ? s.fallbackWarn : Dt(e.fallbackWarn) || Ia(e.fallbackWarn) ? e.fallbackWarn : !0
        , R = s ? s.fallbackRoot : Dt(e.fallbackRoot) ? e.fallbackRoot : !0
        , P = !!e.fallbackFormat
        , M = os(e.missing) ? e.missing : null
        , O = os(e.missing) ? jm(e.missing) : null
        , F = os(e.postTranslation) ? e.postTranslation : null
        , $ = s ? s.warnHtmlMessage : Dt(e.warnHtmlMessage) ? e.warnHtmlMessage : !0
        , V = !!e.escapeParameter;
    const G = s ? s.modifiers : Tt(e.modifiers) ? e.modifiers : {};
    let ie = e.pluralRules || s && s.pluralRules, te;
    te = (() => {
            o && Rm(null);
            const xe = {
                version: FT,
                locale: y.value,
                fallbackLocale: v.value,
                messages: w.value,
                modifiers: G,
                pluralRules: ie,
                missing: O === null ? void 0 : O,
                missingWarn: I,
                fallbackWarn: A,
                fallbackFormat: P,
                unresolving: !0,
                postTranslation: F === null ? void 0 : F,
                warnHtmlMessage: $,
                escapeParameter: V,
                messageResolver: e.messageResolver,
                messageCompiler: e.messageCompiler,
                __meta: {
                    framework: "vue"
                }
            };
            xe.datetimeFormats = C.value,
                xe.numberFormats = T.value,
                xe.__datetimeFormatters = Tt(te) ? te.__datetimeFormatters : void 0,
                xe.__numberFormatters = Tt(te) ? te.__numberFormatters : void 0;
            const Re = IT(xe);
            return o && Rm(Re),
                Re
        }
    )(),
        Ho(te, y.value, v.value);

    function le() {
        return [y.value, v.value, w.value, C.value, T.value]
    }

    const oe = re({
        get: () => y.value,
        set: xe => {
            y.value = xe,
                te.locale = y.value
        }
    })
        , ve = re({
        get: () => v.value,
        set: xe => {
            v.value = xe,
                te.fallbackLocale = v.value,
                Ho(te, y.value, xe)
        }
    })
        , be = re(() => w.value)
        , de = re(() => C.value)
        , J = re(() => T.value);

    function ue() {
        return os(F) ? F : null
    }

    function fe(xe) {
        F = xe,
            te.postTranslation = xe
    }

    function Me() {
        return M
    }

    function Xe(xe) {
        xe !== null && (O = jm(xe)),
            M = xe,
            te.missing = O
    }

    const Be = (xe, Re, lt, vt, qt, is) => {
            le();
            let bs;
            try {
                __INTLIFY_PROD_DEVTOOLS__,
                o || (te.fallbackContext = s ? TT() : void 0),
                    bs = xe(te)
            } finally {
                __INTLIFY_PROD_DEVTOOLS__,
                o || (te.fallbackContext = void 0)
            }
            if (lt !== "translate exists" && Is(bs) && bs === Zu || lt === "translate exists" && !bs) {
                const [Ss, Hn] = Re();
                return s && R ? vt(s) : qt(Ss)
            } else {
                if (is(bs))
                    return bs;
                throw Fs(Ls.UNEXPECTED_RETURN_TYPE)
            }
        }
    ;

    function je(...xe) {
        return Be(Re => Reflect.apply($m, null, [Re, ...xe]), () => zh(...xe), "translate", Re => Reflect.apply(Re.t, Re, [...xe]), Re => Re, Re => it(Re))
    }

    function tt(...xe) {
        const [Re, lt, vt] = xe;
        if (vt && !Kt(vt))
            throw Fs(Ls.INVALID_ARGUMENT);
        return je(Re, lt, Vs({
            resolvedMessage: !0
        }, vt || {}))
    }

    function ft(...xe) {
        return Be(Re => Reflect.apply(Bm, null, [Re, ...xe]), () => Wh(...xe), "datetime format", Re => Reflect.apply(Re.d, Re, [...xe]), () => Lm, Re => it(Re))
    }

    function mt(...xe) {
        return Be(Re => Reflect.apply(Vm, null, [Re, ...xe]), () => Uh(...xe), "number format", Re => Reflect.apply(Re.n, Re, [...xe]), () => Lm, Re => it(Re))
    }

    function bt(xe) {
        return xe.map(Re => it(Re) || Is(Re) || Dt(Re) ? Wm(String(Re)) : Re)
    }

    const Ae = {
        normalize: bt,
        interpolate: xe => xe,
        type: "vnode"
    };

    function Ne(...xe) {
        return Be(Re => {
                let lt;
                const vt = Re;
                try {
                    vt.processor = Ae,
                        lt = Reflect.apply($m, null, [vt, ...xe])
                } finally {
                    vt.processor = null
                }
                return lt
            }
            , () => zh(...xe), "translate", Re => Re[Yh](...xe), Re => [Wm(Re)], Re => hs(Re))
    }

    function He(...xe) {
        return Be(Re => Reflect.apply(Vm, null, [Re, ...xe]), () => Uh(...xe), "number format", Re => Re[jh](...xe), Ym, Re => it(Re) || hs(Re))
    }

    function et(...xe) {
        return Be(Re => Reflect.apply(Bm, null, [Re, ...xe]), () => Wh(...xe), "datetime format", Re => Re[Xh](...xe), Ym, Re => it(Re) || hs(Re))
    }

    function dt(xe) {
        ie = xe,
            te.pluralRules = ie
    }

    function Y(xe, Re) {
        return Be(() => {
                if (!xe)
                    return !1;
                const lt = it(Re) ? Re : y.value
                    , vt = we(lt)
                    , qt = te.messageResolver(vt, xe);
                return p ? qt != null : ao(qt) || Cn(qt) || it(qt)
            }
            , () => [xe], "translate exists", lt => Reflect.apply(lt.te, lt, [xe, Re]), BT, lt => Dt(lt))
    }

    function W(xe) {
        let Re = null;
        const lt = Yx(te, v.value, y.value);
        for (let vt = 0; vt < lt.length; vt++) {
            const qt = w.value[lt[vt]] || {}
                , is = te.messageResolver(qt, xe);
            if (is != null) {
                Re = is;
                break
            }
        }
        return Re
    }

    function ce(xe) {
        const Re = W(xe);
        return Re ?? (s ? s.tm(xe) || {} : {})
    }

    function we(xe) {
        return w.value[xe] || {}
    }

    function _e(xe, Re) {
        if (l) {
            const lt = {
                [xe]: Re
            };
            for (const vt in lt)
                vu(lt, vt) && Tl(lt[vt]);
            Re = lt[xe]
        }
        w.value[xe] = Re,
            te.messages = w.value
    }

    function Oe(xe, Re) {
        w.value[xe] = w.value[xe] || {};
        const lt = {
            [xe]: Re
        };
        if (l)
            for (const vt in lt)
                vu(lt, vt) && Tl(lt[vt]);
        Re = lt[xe],
            Uc(Re, w.value[xe]),
            te.messages = w.value
    }

    function qe(xe) {
        return C.value[xe] || {}
    }

    function We(xe, Re) {
        C.value[xe] = Re,
            te.datetimeFormats = C.value,
            Hm(te, xe, Re)
    }

    function Ge(xe, Re) {
        C.value[xe] = Vs(C.value[xe] || {}, Re),
            te.datetimeFormats = C.value,
            Hm(te, xe, Re)
    }

    function Ue(xe) {
        return T.value[xe] || {}
    }

    function ht(xe, Re) {
        T.value[xe] = Re,
            te.numberFormats = T.value,
            zm(te, xe, Re)
    }

    function Ee(xe, Re) {
        T.value[xe] = Vs(T.value[xe] || {}, Re),
            te.numberFormats = T.value,
            zm(te, xe, Re)
    }

    Xm++,
    s && mu && (Ke(s.locale, xe => {
            g && (y.value = xe,
                te.locale = xe,
                Ho(te, y.value, v.value))
        }
    ),
        Ke(s.fallbackLocale, xe => {
                g && (v.value = xe,
                    te.fallbackLocale = xe,
                    Ho(te, y.value, v.value))
            }
        ));
    const ze = {
        id: Xm,
        locale: oe,
        fallbackLocale: ve,
        get inheritLocale() {
            return g
        },
        set inheritLocale(xe) {
            g = xe,
            xe && s && (y.value = s.locale.value,
                v.value = s.fallbackLocale.value,
                Ho(te, y.value, v.value))
        },
        get availableLocales() {
            return Object.keys(w.value).sort()
        },
        messages: be,
        get modifiers() {
            return G
        },
        get pluralRules() {
            return ie || {}
        },
        get isGlobal() {
            return o
        },
        get missingWarn() {
            return I
        },
        set missingWarn(xe) {
            I = xe,
                te.missingWarn = I
        },
        get fallbackWarn() {
            return A
        },
        set fallbackWarn(xe) {
            A = xe,
                te.fallbackWarn = A
        },
        get fallbackRoot() {
            return R
        },
        set fallbackRoot(xe) {
            R = xe
        },
        get fallbackFormat() {
            return P
        },
        set fallbackFormat(xe) {
            P = xe,
                te.fallbackFormat = P
        },
        get warnHtmlMessage() {
            return $
        },
        set warnHtmlMessage(xe) {
            $ = xe,
                te.warnHtmlMessage = xe
        },
        get escapeParameter() {
            return V
        },
        set escapeParameter(xe) {
            V = xe,
                te.escapeParameter = xe
        },
        t: je,
        getLocaleMessage: we,
        setLocaleMessage: _e,
        mergeLocaleMessage: Oe,
        getPostTranslationHandler: ue,
        setPostTranslationHandler: fe,
        getMissingHandler: Me,
        setMissingHandler: Xe,
        [a1]: dt
    };
    return ze.datetimeFormats = de,
        ze.numberFormats = J,
        ze.rt = tt,
        ze.te = Y,
        ze.tm = ce,
        ze.d = ft,
        ze.n = mt,
        ze.getDateTimeFormat = qe,
        ze.setDateTimeFormat = We,
        ze.mergeDateTimeFormat = Ge,
        ze.getNumberFormat = Ue,
        ze.setNumberFormat = ht,
        ze.mergeNumberFormat = Ee,
        ze[r1] = a,
        ze[Yh] = Ne,
        ze[Xh] = et,
        ze[jh] = He,
        ze
}

function VT(e) {
    const t = it(e.locale) ? e.locale : io
        ,
        s = it(e.fallbackLocale) || hs(e.fallbackLocale) || Tt(e.fallbackLocale) || e.fallbackLocale === !1 ? e.fallbackLocale : t
        , a = os(e.missing) ? e.missing : void 0
        , o = Dt(e.silentTranslationWarn) || Ia(e.silentTranslationWarn) ? !e.silentTranslationWarn : !0
        , l = Dt(e.silentFallbackWarn) || Ia(e.silentFallbackWarn) ? !e.silentFallbackWarn : !0
        , u = Dt(e.fallbackRoot) ? e.fallbackRoot : !0
        , p = !!e.formatFallbackMessages
        , g = Tt(e.modifiers) ? e.modifiers : {}
        , y = e.pluralizationRules
        , v = os(e.postTranslation) ? e.postTranslation : void 0
        , w = it(e.warnHtmlInMessage) ? e.warnHtmlInMessage !== "off" : !0
        , C = !!e.escapeParameterHtml
        , T = Dt(e.sync) ? e.sync : !0;
    let I = e.messages;
    if (Tt(e.sharedMessages)) {
        const V = e.sharedMessages;
        I = Object.keys(V).reduce((ie, te) => {
                const ne = ie[te] || (ie[te] = {});
                return Vs(ne, V[te]),
                    ie
            }
            , I || {})
    }
    const {__i18n: A, __root: R, __injectWithOption: P} = e
        , M = e.datetimeFormats
        , O = e.numberFormats
        , F = e.flatJson
        , $ = e.translateExistCompatible;
    return {
        locale: t,
        fallbackLocale: s,
        messages: I,
        flatJson: F,
        datetimeFormats: M,
        numberFormats: O,
        missing: a,
        missingWarn: o,
        fallbackWarn: l,
        fallbackRoot: u,
        fallbackFormat: p,
        modifiers: g,
        pluralRules: y,
        postTranslation: v,
        warnHtmlMessage: w,
        escapeParameter: C,
        messageResolver: e.messageResolver,
        inheritLocale: T,
        translateExistCompatible: $,
        __i18n: A,
        __root: R,
        __injectWithOption: P
    }
}

function qh(e = {}, t) {
    {
        const s = bp(VT(e))
            , {__extender: a} = e
            , o = {
            id: s.id,
            get locale() {
                return s.locale.value
            },
            set locale(l) {
                s.locale.value = l
            },
            get fallbackLocale() {
                return s.fallbackLocale.value
            },
            set fallbackLocale(l) {
                s.fallbackLocale.value = l
            },
            get messages() {
                return s.messages.value
            },
            get datetimeFormats() {
                return s.datetimeFormats.value
            },
            get numberFormats() {
                return s.numberFormats.value
            },
            get availableLocales() {
                return s.availableLocales
            },
            get formatter() {
                return {
                    interpolate() {
                        return []
                    }
                }
            },
            set formatter(l) {
            },
            get missing() {
                return s.getMissingHandler()
            },
            set missing(l) {
                s.setMissingHandler(l)
            },
            get silentTranslationWarn() {
                return Dt(s.missingWarn) ? !s.missingWarn : s.missingWarn
            },
            set silentTranslationWarn(l) {
                s.missingWarn = Dt(l) ? !l : l
            },
            get silentFallbackWarn() {
                return Dt(s.fallbackWarn) ? !s.fallbackWarn : s.fallbackWarn
            },
            set silentFallbackWarn(l) {
                s.fallbackWarn = Dt(l) ? !l : l
            },
            get modifiers() {
                return s.modifiers
            },
            get formatFallbackMessages() {
                return s.fallbackFormat
            },
            set formatFallbackMessages(l) {
                s.fallbackFormat = l
            },
            get postTranslation() {
                return s.getPostTranslationHandler()
            },
            set postTranslation(l) {
                s.setPostTranslationHandler(l)
            },
            get sync() {
                return s.inheritLocale
            },
            set sync(l) {
                s.inheritLocale = l
            },
            get warnHtmlInMessage() {
                return s.warnHtmlMessage ? "warn" : "off"
            },
            set warnHtmlInMessage(l) {
                s.warnHtmlMessage = l !== "off"
            },
            get escapeParameterHtml() {
                return s.escapeParameter
            },
            set escapeParameterHtml(l) {
                s.escapeParameter = l
            },
            get preserveDirectiveContent() {
                return !0
            },
            set preserveDirectiveContent(l) {
            },
            get pluralizationRules() {
                return s.pluralRules || {}
            },
            __composer: s,
            t(...l) {
                const [u, p, g] = l
                    , y = {};
                let v = null
                    , w = null;
                if (!it(u))
                    throw Fs(Ls.INVALID_ARGUMENT);
                const C = u;
                return it(p) ? y.locale = p : hs(p) ? v = p : Tt(p) && (w = p),
                    hs(g) ? v = g : Tt(g) && (w = g),
                    Reflect.apply(s.t, s, [C, v || w || {}, y])
            },
            rt(...l) {
                return Reflect.apply(s.rt, s, [...l])
            },
            tc(...l) {
                const [u, p, g] = l
                    , y = {
                    plural: 1
                };
                let v = null
                    , w = null;
                if (!it(u))
                    throw Fs(Ls.INVALID_ARGUMENT);
                const C = u;
                return it(p) ? y.locale = p : Is(p) ? y.plural = p : hs(p) ? v = p : Tt(p) && (w = p),
                    it(g) ? y.locale = g : hs(g) ? v = g : Tt(g) && (w = g),
                    Reflect.apply(s.t, s, [C, v || w || {}, y])
            },
            te(l, u) {
                return s.te(l, u)
            },
            tm(l) {
                return s.tm(l)
            },
            getLocaleMessage(l) {
                return s.getLocaleMessage(l)
            },
            setLocaleMessage(l, u) {
                s.setLocaleMessage(l, u)
            },
            mergeLocaleMessage(l, u) {
                s.mergeLocaleMessage(l, u)
            },
            d(...l) {
                return Reflect.apply(s.d, s, [...l])
            },
            getDateTimeFormat(l) {
                return s.getDateTimeFormat(l)
            },
            setDateTimeFormat(l, u) {
                s.setDateTimeFormat(l, u)
            },
            mergeDateTimeFormat(l, u) {
                s.mergeDateTimeFormat(l, u)
            },
            n(...l) {
                return Reflect.apply(s.n, s, [...l])
            },
            getNumberFormat(l) {
                return s.getNumberFormat(l)
            },
            setNumberFormat(l, u) {
                s.setNumberFormat(l, u)
            },
            mergeNumberFormat(l, u) {
                s.mergeNumberFormat(l, u)
            },
            getChoiceIndex(l, u) {
                return -1
            }
        };
        return o.__extender = a,
            o
    }
}

const yp = {
    tag: {
        type: [String, Object]
    },
    locale: {
        type: String
    },
    scope: {
        type: String,
        validator: e => e === "parent" || e === "global",
        default: "parent"
    },
    i18n: {
        type: Object
    }
};

function zT({slots: e}, t) {
    return t.length === 1 && t[0] === "default" ? (e.default ? e.default() : []).reduce((a, o) => [...a, ...o.type === Ct ? o.children : [o]], []) : t.reduce((s, a) => {
            const o = e[a];
            return o && (s[a] = o()),
                s
        }
        , {})
}

function c1(e) {
    return Ct
}

const WT = Ce({
    name: "i18n-t",
    props: Vs({
        keypath: {
            type: String,
            required: !0
        },
        plural: {
            type: [Number, String],
            validator: e => Is(e) || !isNaN(e)
        }
    }, yp),
    setup(e, t) {
        const {slots: s, attrs: a} = t
            , o = e.i18n || Ql({
            useScope: e.scope,
            __useComponent: !0
        });
        return () => {
            const l = Object.keys(s).filter(w => w !== "_")
                , u = {};
            e.locale && (u.locale = e.locale),
            e.plural !== void 0 && (u.plural = it(e.plural) ? +e.plural : e.plural);
            const p = zT(t, l)
                , g = o[Yh](e.keypath, p, u)
                , y = Vs({}, a)
                , v = it(e.tag) || Kt(e.tag) ? e.tag : c1();
            return jt(v, y, g)
        }
    }
})
    , Gm = WT;

function UT(e) {
    return hs(e) && !it(e[0])
}

function u1(e, t, s, a) {
    const {slots: o, attrs: l} = t;
    return () => {
        const u = {
            part: !0
        };
        let p = {};
        e.locale && (u.locale = e.locale),
            it(e.format) ? u.key = e.format : Kt(e.format) && (it(e.format.key) && (u.key = e.format.key),
                p = Object.keys(e.format).reduce((C, T) => s.includes(T) ? Vs({}, C, {
                    [T]: e.format[T]
                }) : C, {}));
        const g = a(e.value, u, p);
        let y = [u.key];
        hs(g) ? y = g.map((C, T) => {
                const I = o[C.type]
                    , A = I ? I({
                    [C.type]: C.value,
                    index: T,
                    parts: g
                }) : [C.value];
                return UT(A) && (A[0].key = `${C.type}-${T}`),
                    A
            }
        ) : it(g) && (y = [g]);
        const v = Vs({}, l)
            , w = it(e.tag) || Kt(e.tag) ? e.tag : c1();
        return jt(w, v, y)
    }
}

const YT = Ce({
    name: "i18n-n",
    props: Vs({
        value: {
            type: Number,
            required: !0
        },
        format: {
            type: [String, Object]
        }
    }, yp),
    setup(e, t) {
        const s = e.i18n || Ql({
            useScope: "parent",
            __useComponent: !0
        });
        return u1(e, t, s1, (...a) => s[jh](...a))
    }
})
    , qm = YT
    , XT = Ce({
    name: "i18n-d",
    props: Vs({
        value: {
            type: [Number, Date],
            required: !0
        },
        format: {
            type: [String, Object]
        }
    }, yp),
    setup(e, t) {
        const s = e.i18n || Ql({
            useScope: "parent",
            __useComponent: !0
        });
        return u1(e, t, t1, (...a) => s[Xh](...a))
    }
})
    , Km = XT;

function jT(e, t) {
    const s = e;
    if (e.mode === "composition")
        return s.__getInstance(t) || e.global;
    {
        const a = s.__getInstance(t);
        return a != null ? a.__composer : e.global.__composer
    }
}

function GT(e) {
    const t = u => {
            const {instance: p, modifiers: g, value: y} = u;
            if (!p || !p.$)
                throw Fs(Ls.UNEXPECTED_ERROR);
            const v = jT(e, p.$)
                , w = Zm(y);
            return [Reflect.apply(v.t, v, [...Jm(w)]), v]
        }
    ;
    return {
        created: (u, p) => {
            const [g, y] = t(p);
            mu && e.global === y && (u.__i18nWatcher = Ke(y.locale, () => {
                    p.instance && p.instance.$forceUpdate()
                }
            )),
                u.__composer = y,
                u.textContent = g
        }
        ,
        unmounted: u => {
            mu && u.__i18nWatcher && (u.__i18nWatcher(),
                u.__i18nWatcher = void 0,
                delete u.__i18nWatcher),
            u.__composer && (u.__composer = void 0,
                delete u.__composer)
        }
        ,
        beforeUpdate: (u, {value: p}) => {
            if (u.__composer) {
                const g = u.__composer
                    , y = Zm(p);
                u.textContent = Reflect.apply(g.t, g, [...Jm(y)])
            }
        }
        ,
        getSSRProps: u => {
            const [p] = t(u);
            return {
                textContent: p
            }
        }
    }
}

function Zm(e) {
    if (it(e))
        return {
            path: e
        };
    if (Tt(e)) {
        if (!("path" in e))
            throw Fs(Ls.REQUIRED_VALUE, "path");
        return e
    } else
        throw Fs(Ls.INVALID_VALUE)
}

function Jm(e) {
    const {path: t, locale: s, args: a, choice: o, plural: l} = e
        , u = {}
        , p = a || {};
    return it(s) && (u.locale = s),
    Is(o) && (u.plural = o),
    Is(l) && (u.plural = l),
        [t, p, u]
}

function qT(e, t, ...s) {
    const a = Tt(s[0]) ? s[0] : {}
        , o = !!a.useI18nComponentName;
    (Dt(a.globalInstall) ? a.globalInstall : !0) && ([o ? "i18n" : Gm.name, "I18nT"].forEach(u => e.component(u, Gm)),
        [qm.name, "I18nN"].forEach(u => e.component(u, qm)),
        [Km.name, "I18nD"].forEach(u => e.component(u, Km))),
        e.directive("t", GT(t))
}

function KT(e, t, s) {
    return {
        beforeCreate() {
            const a = Et();
            if (!a)
                throw Fs(Ls.UNEXPECTED_ERROR);
            const o = this.$options;
            if (o.i18n) {
                const l = o.i18n;
                if (o.__i18n && (l.__i18n = o.__i18n),
                    l.__root = t,
                this === this.$root)
                    this.$i18n = Qm(e, l);
                else {
                    l.__injectWithOption = !0,
                        l.__extender = s.__vueI18nExtend,
                        this.$i18n = qh(l);
                    const u = this.$i18n;
                    u.__extender && (u.__disposer = u.__extender(this.$i18n))
                }
            } else if (o.__i18n)
                if (this === this.$root)
                    this.$i18n = Qm(e, o);
                else {
                    this.$i18n = qh({
                        __i18n: o.__i18n,
                        __injectWithOption: !0,
                        __extender: s.__vueI18nExtend,
                        __root: t
                    });
                    const l = this.$i18n;
                    l.__extender && (l.__disposer = l.__extender(this.$i18n))
                }
            else
                this.$i18n = e;
            o.__i18nGlobal && l1(t, o, o),
                this.$t = (...l) => this.$i18n.t(...l),
                this.$rt = (...l) => this.$i18n.rt(...l),
                this.$tc = (...l) => this.$i18n.tc(...l),
                this.$te = (l, u) => this.$i18n.te(l, u),
                this.$d = (...l) => this.$i18n.d(...l),
                this.$n = (...l) => this.$i18n.n(...l),
                this.$tm = l => this.$i18n.tm(l),
                s.__setInstance(a, this.$i18n)
        },
        mounted() {
        },
        unmounted() {
            const a = Et();
            if (!a)
                throw Fs(Ls.UNEXPECTED_ERROR);
            const o = this.$i18n;
            delete this.$t,
                delete this.$rt,
                delete this.$tc,
                delete this.$te,
                delete this.$d,
                delete this.$n,
                delete this.$tm,
            o.__disposer && (o.__disposer(),
                delete o.__disposer,
                delete o.__extender),
                s.__deleteInstance(a),
                delete this.$i18n
        }
    }
}

function Qm(e, t) {
    e.locale = t.locale || e.locale,
        e.fallbackLocale = t.fallbackLocale || e.fallbackLocale,
        e.missing = t.missing || e.missing,
        e.silentTranslationWarn = t.silentTranslationWarn || e.silentFallbackWarn,
        e.silentFallbackWarn = t.silentFallbackWarn || e.silentFallbackWarn,
        e.formatFallbackMessages = t.formatFallbackMessages || e.formatFallbackMessages,
        e.postTranslation = t.postTranslation || e.postTranslation,
        e.warnHtmlInMessage = t.warnHtmlInMessage || e.warnHtmlInMessage,
        e.escapeParameterHtml = t.escapeParameterHtml || e.escapeParameterHtml,
        e.sync = t.sync || e.sync,
        e.__composer[a1](t.pluralizationRules || e.pluralizationRules);
    const s = Ju(e.locale, {
        messages: t.messages,
        __i18n: t.__i18n
    });
    return Object.keys(s).forEach(a => e.mergeLocaleMessage(a, s[a])),
    t.datetimeFormats && Object.keys(t.datetimeFormats).forEach(a => e.mergeDateTimeFormat(a, t.datetimeFormats[a])),
    t.numberFormats && Object.keys(t.numberFormats).forEach(a => e.mergeNumberFormat(a, t.numberFormats[a])),
        e
}

const ZT = Oa("global-vue-i18n");

function JT(e = {}, t) {
    const s = __VUE_I18N_LEGACY_API__ && Dt(e.legacy) ? e.legacy : __VUE_I18N_LEGACY_API__
        , a = Dt(e.globalInjection) ? e.globalInjection : !0
        , o = __VUE_I18N_LEGACY_API__ && s ? !!e.allowComposition : !0
        , l = new Map
        , [u, p] = QT(e, s)
        , g = Oa("");

    function y(C) {
        return l.get(C) || null
    }

    function v(C, T) {
        l.set(C, T)
    }

    function w(C) {
        l.delete(C)
    }

    {
        const C = {
            get mode() {
                return __VUE_I18N_LEGACY_API__ && s ? "legacy" : "composition"
            },
            get allowComposition() {
                return o
            },
            async install(T, ...I) {
                if (T.__VUE_I18N_SYMBOL__ = g,
                    T.provide(T.__VUE_I18N_SYMBOL__, C),
                    Tt(I[0])) {
                    const P = I[0];
                    C.__composerExtend = P.__composerExtend,
                        C.__vueI18nExtend = P.__vueI18nExtend
                }
                let A = null;
                !s && a && (A = lI(T, C.global)),
                __VUE_I18N_FULL_INSTALL__ && qT(T, C, ...I),
                __VUE_I18N_LEGACY_API__ && s && T.mixin(KT(p, p.__composer, C));
                const R = T.unmount;
                T.unmount = () => {
                    A && A(),
                        C.dispose(),
                        R()
                }
            },
            get global() {
                return p
            },
            dispose() {
                u.stop()
            },
            __instances: l,
            __getInstance: y,
            __setInstance: v,
            __deleteInstance: w
        };
        return C
    }
}

function Ql(e = {}) {
    const t = Et();
    if (t == null)
        throw Fs(Ls.MUST_BE_CALL_SETUP_TOP);
    if (!t.isCE && t.appContext.app != null && !t.appContext.app.__VUE_I18N_SYMBOL__)
        throw Fs(Ls.NOT_INSTALLED);
    const s = eI(t)
        , a = sI(s)
        , o = o1(t)
        , l = tI(e, o);
    if (__VUE_I18N_LEGACY_API__ && s.mode === "legacy" && !e.__useComponent) {
        if (!s.allowComposition)
            throw Fs(Ls.NOT_AVAILABLE_IN_LEGACY_MODE);
        return rI(t, l, a, e)
    }
    if (l === "global")
        return l1(a, e, o),
            a;
    if (l === "parent") {
        let g = nI(s, t, e.__useComponent);
        return g == null && (g = a),
            g
    }
    const u = s;
    let p = u.__getInstance(t);
    if (p == null) {
        const g = Vs({}, e);
        "__i18n" in o && (g.__i18n = o.__i18n),
        a && (g.__root = a),
            p = bp(g),
        u.__composerExtend && (p[Gh] = u.__composerExtend(p)),
            aI(u, t, p),
            u.__setInstance(t, p)
    }
    return p
}

function QT(e, t, s) {
    const a = $f();
    {
        const o = __VUE_I18N_LEGACY_API__ && t ? a.run(() => qh(e)) : a.run(() => bp(e));
        if (o == null)
            throw Fs(Ls.UNEXPECTED_ERROR);
        return [a, o]
    }
}

function eI(e) {
    {
        const t = st(e.isCE ? ZT : e.appContext.app.__VUE_I18N_SYMBOL__);
        if (!t)
            throw Fs(e.isCE ? Ls.NOT_INSTALLED_WITH_PROVIDE : Ls.UNEXPECTED_ERROR);
        return t
    }
}

function tI(e, t) {
    return Ku(e) ? "__i18n" in t ? "local" : "global" : e.useScope ? e.useScope : "local"
}

function sI(e) {
    return e.mode === "composition" ? e.global : e.global.__composer
}

function nI(e, t, s = !1) {
    let a = null;
    const o = t.root;
    let l = iI(t, s);
    for (; l != null;) {
        const u = e;
        if (e.mode === "composition")
            a = u.__getInstance(l);
        else if (__VUE_I18N_LEGACY_API__) {
            const p = u.__getInstance(l);
            p != null && (a = p.__composer,
            s && a && !a[r1] && (a = null))
        }
        if (a != null || o === l)
            break;
        l = l.parent
    }
    return a
}

function iI(e, t = !1) {
    return e == null ? null : t && e.vnode.ctx || e.parent
}

function aI(e, t, s) {
    $t(() => {
        }
        , t),
        hr(() => {
                const a = s;
                e.__deleteInstance(t);
                const o = a[Gh];
                o && (o(),
                    delete a[Gh])
            }
            , t)
}

function rI(e, t, s, a = {}) {
    const o = t === "local"
        , l = Bs(null);
    if (o && e.proxy && !(e.proxy.$options.i18n || e.proxy.$options.__i18n))
        throw Fs(Ls.MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION);
    const u = Dt(a.inheritLocale) ? a.inheritLocale : !it(a.locale)
        , p = Se(!o || u ? s.locale.value : it(a.locale) ? a.locale : io)
        ,
        g = Se(!o || u ? s.fallbackLocale.value : it(a.fallbackLocale) || hs(a.fallbackLocale) || Tt(a.fallbackLocale) || a.fallbackLocale === !1 ? a.fallbackLocale : p.value)
        , y = Se(Ju(p.value, a))
        , v = Se(Tt(a.datetimeFormats) ? a.datetimeFormats : {
            [p.value]: {}
        })
        , w = Se(Tt(a.numberFormats) ? a.numberFormats : {
            [p.value]: {}
        })
        , C = o ? s.missingWarn : Dt(a.missingWarn) || Ia(a.missingWarn) ? a.missingWarn : !0
        , T = o ? s.fallbackWarn : Dt(a.fallbackWarn) || Ia(a.fallbackWarn) ? a.fallbackWarn : !0
        , I = o ? s.fallbackRoot : Dt(a.fallbackRoot) ? a.fallbackRoot : !0
        , A = !!a.fallbackFormat
        , R = os(a.missing) ? a.missing : null
        , P = os(a.postTranslation) ? a.postTranslation : null
        , M = o ? s.warnHtmlMessage : Dt(a.warnHtmlMessage) ? a.warnHtmlMessage : !0
        , O = !!a.escapeParameter
        , F = o ? s.modifiers : Tt(a.modifiers) ? a.modifiers : {}
        , $ = a.pluralRules || o && s.pluralRules;

    function V() {
        return [p.value, g.value, y.value, v.value, w.value]
    }

    const G = re({
        get: () => l.value ? l.value.locale.value : p.value,
        set: W => {
            l.value && (l.value.locale.value = W),
                p.value = W
        }
    })
        , ie = re({
        get: () => l.value ? l.value.fallbackLocale.value : g.value,
        set: W => {
            l.value && (l.value.fallbackLocale.value = W),
                g.value = W
        }
    })
        , te = re(() => l.value ? l.value.messages.value : y.value)
        , ne = re(() => v.value)
        , le = re(() => w.value);

    function oe() {
        return l.value ? l.value.getPostTranslationHandler() : P
    }

    function ve(W) {
        l.value && l.value.setPostTranslationHandler(W)
    }

    function be() {
        return l.value ? l.value.getMissingHandler() : R
    }

    function de(W) {
        l.value && l.value.setMissingHandler(W)
    }

    function J(W) {
        return V(),
            W()
    }

    function ue(...W) {
        return l.value ? J(() => Reflect.apply(l.value.t, null, [...W])) : J(() => "")
    }

    function fe(...W) {
        return l.value ? Reflect.apply(l.value.rt, null, [...W]) : ""
    }

    function Me(...W) {
        return l.value ? J(() => Reflect.apply(l.value.d, null, [...W])) : J(() => "")
    }

    function Xe(...W) {
        return l.value ? J(() => Reflect.apply(l.value.n, null, [...W])) : J(() => "")
    }

    function Be(W) {
        return l.value ? l.value.tm(W) : {}
    }

    function je(W, ce) {
        return l.value ? l.value.te(W, ce) : !1
    }

    function tt(W) {
        return l.value ? l.value.getLocaleMessage(W) : {}
    }

    function ft(W, ce) {
        l.value && (l.value.setLocaleMessage(W, ce),
            y.value[W] = ce)
    }

    function mt(W, ce) {
        l.value && l.value.mergeLocaleMessage(W, ce)
    }

    function bt(W) {
        return l.value ? l.value.getDateTimeFormat(W) : {}
    }

    function Pe(W, ce) {
        l.value && (l.value.setDateTimeFormat(W, ce),
            v.value[W] = ce)
    }

    function Ae(W, ce) {
        l.value && l.value.mergeDateTimeFormat(W, ce)
    }

    function Ne(W) {
        return l.value ? l.value.getNumberFormat(W) : {}
    }

    function He(W, ce) {
        l.value && (l.value.setNumberFormat(W, ce),
            w.value[W] = ce)
    }

    function et(W, ce) {
        l.value && l.value.mergeNumberFormat(W, ce)
    }

    const dt = {
        get id() {
            return l.value ? l.value.id : -1
        },
        locale: G,
        fallbackLocale: ie,
        messages: te,
        datetimeFormats: ne,
        numberFormats: le,
        get inheritLocale() {
            return l.value ? l.value.inheritLocale : u
        },
        set inheritLocale(W) {
            l.value && (l.value.inheritLocale = W)
        },
        get availableLocales() {
            return l.value ? l.value.availableLocales : Object.keys(y.value)
        },
        get modifiers() {
            return l.value ? l.value.modifiers : F
        },
        get pluralRules() {
            return l.value ? l.value.pluralRules : $
        },
        get isGlobal() {
            return l.value ? l.value.isGlobal : !1
        },
        get missingWarn() {
            return l.value ? l.value.missingWarn : C
        },
        set missingWarn(W) {
            l.value && (l.value.missingWarn = W)
        },
        get fallbackWarn() {
            return l.value ? l.value.fallbackWarn : T
        },
        set fallbackWarn(W) {
            l.value && (l.value.missingWarn = W)
        },
        get fallbackRoot() {
            return l.value ? l.value.fallbackRoot : I
        },
        set fallbackRoot(W) {
            l.value && (l.value.fallbackRoot = W)
        },
        get fallbackFormat() {
            return l.value ? l.value.fallbackFormat : A
        },
        set fallbackFormat(W) {
            l.value && (l.value.fallbackFormat = W)
        },
        get warnHtmlMessage() {
            return l.value ? l.value.warnHtmlMessage : M
        },
        set warnHtmlMessage(W) {
            l.value && (l.value.warnHtmlMessage = W)
        },
        get escapeParameter() {
            return l.value ? l.value.escapeParameter : O
        },
        set escapeParameter(W) {
            l.value && (l.value.escapeParameter = W)
        },
        t: ue,
        getPostTranslationHandler: oe,
        setPostTranslationHandler: ve,
        getMissingHandler: be,
        setMissingHandler: de,
        rt: fe,
        d: Me,
        n: Xe,
        tm: Be,
        te: je,
        getLocaleMessage: tt,
        setLocaleMessage: ft,
        mergeLocaleMessage: mt,
        getDateTimeFormat: bt,
        setDateTimeFormat: Pe,
        mergeDateTimeFormat: Ae,
        getNumberFormat: Ne,
        setNumberFormat: He,
        mergeNumberFormat: et
    };

    function Y(W) {
        W.locale.value = p.value,
            W.fallbackLocale.value = g.value,
            Object.keys(y.value).forEach(ce => {
                    W.mergeLocaleMessage(ce, y.value[ce])
                }
            ),
            Object.keys(v.value).forEach(ce => {
                    W.mergeDateTimeFormat(ce, v.value[ce])
                }
            ),
            Object.keys(w.value).forEach(ce => {
                    W.mergeNumberFormat(ce, w.value[ce])
                }
            ),
            W.escapeParameter = O,
            W.fallbackFormat = A,
            W.fallbackRoot = I,
            W.fallbackWarn = T,
            W.missingWarn = C,
            W.warnHtmlMessage = M
    }

    return ql(() => {
            if (e.proxy == null || e.proxy.$i18n == null)
                throw Fs(Ls.NOT_AVAILABLE_COMPOSITION_IN_LEGACY);
            const W = l.value = e.proxy.$i18n.__composer;
            t === "global" ? (p.value = W.locale.value,
                g.value = W.fallbackLocale.value,
                y.value = W.messages.value,
                v.value = W.datetimeFormats.value,
                w.value = W.numberFormats.value) : o && Y(W)
        }
    ),
        dt
}

const oI = ["locale", "fallbackLocale", "availableLocales"]
    , ev = ["t", "rt", "d", "n", "tm", "te"];

function lI(e, t) {
    const s = Object.create(null);
    return oI.forEach(o => {
            const l = Object.getOwnPropertyDescriptor(t, o);
            if (!l)
                throw Fs(Ls.UNEXPECTED_ERROR);
            const u = Qt(l.value) ? {
                get() {
                    return l.value.value
                },
                set(p) {
                    l.value.value = p
                }
            } : {
                get() {
                    return l.get && l.get()
                }
            };
            Object.defineProperty(s, o, u)
        }
    ),
        e.config.globalProperties.$i18n = s,
        ev.forEach(o => {
                const l = Object.getOwnPropertyDescriptor(t, o);
                if (!l || !l.value)
                    throw Fs(Ls.UNEXPECTED_ERROR);
                Object.defineProperty(e.config.globalProperties, `$${o}`, l)
            }
        ),
        () => {
            delete e.config.globalProperties.$i18n,
                ev.forEach(o => {
                        delete e.config.globalProperties[`$${o}`]
                    }
                )
        }
}

$T();
__INTLIFY_JIT_COMPILATION__ ? Om(MT) : Om(LT);
kT(aT);
CT(Yx);
if (__INTLIFY_PROD_DEVTOOLS__) {
    const e = Ui();
    e.__INTLIFY__ = !0,
        pT(e.__INTLIFY_DEVTOOLS_GLOBAL_HOOK__)
}
const cI = {
    disable: "Disable",
    enable: "Enable",
    restart: "Restart",
    start: "Start",
    stop: "Stop"
}
    , uI = {
    no: "NO",
    warning: "Warning",
    yes: "OK"
}
    , dI = {
    best_share: {
        title: "BestShare"
    },
    boards: {
        NA: "N/A",
        allGood: "All chips are good",
        chipStatus: {
            grey: "Stable chips",
            orange: "Slow chips",
            red: "Critical chips",
            unknown: "Unknown"
        },
        chipStatusTitle: "Chip status",
        errors: "Errors",
        freq: "Frequency",
        power: "Consumption",
        status: {
            disabled: "Disabled",
            disconnected: "Disconnected",
            initializing: "Initializing",
            mining: "Mining",
            stopped: "Stopped",
            unknown: "Unknown"
        },
        tempBoard: "Board temperatures",
        tempChips: "Temperature",
        title: "Board",
        noBoard: "No board",
        undefinedChips: "Undefined chips",
        volt: "Voltage"
    },
    chartChipTemp: {
        title: "Temperature",
        chipTemp: "Temperature",
        fanDuty: "Fan duty"
    },
    chartHashrate: {
        title: "Hashrate",
        hashrate: "Hashrate",
        power: "Power",
        powerConsumption: "Power Consumption",
        watt: "W"
    },
    chartTest: {
        title: "ChartTest"
    },
    charts: {
        hours1: "1 h",
        hours12: "12 h",
        hours24: "24 h",
        hours3: "3 hours",
        hours72: "72 h",
        range: "Range:"
    },
    dev: {
        title: "DevFee"
    },
    editMode: {
        buttons: {
            cancel: "Cancel",
            exit: "Exit without saving",
            reset: "Defaults",
            save: "Save",
            select: "Save selected",
            widgets: "Widgets"
        },
        enterIcon: "Edit layout dashboard",
        footer: {
            caption: "Layout edit mode",
            hint: "you can move, scale, hide widgets"
        },
        header: "Edit mode",
        hideWidgetDialog: {
            cancel: "Cancel",
            description: "Choose which devices to hide this widget",
            header: "Hide widget?",
            submit: "Yes, hide!"
        },
        resetWidgetDialog: {
            cancel: "Cancel",
            description: "Choose which devices to make a reset",
            header: "Reset to default layouts?",
            submit: "Yes, reset!"
        },
        saveDialog: {
            cancel: "Not",
            header: "Save dashboard layout?",
            submit: "Yes, save!"
        },
        transferDescription: "After adding, you need to move down"
    },
    eff: {
        title: "Efficiency"
    },
    errors: {
        footer: "HW",
        title: "Errors"
    },
    fans: {
        title: "Cooling",
        fan: "Fan",
        duty: "Fan duty",
        block: "Block",
        temperature: "Temperature",
        "inlet-outlet": "In-Out",
        mode: "Mode:",
        auto: "Auto",
        manual: "Manual",
        immersion: "Immersion",
        missingCooler: {
            message: "This model does not use coolers",
            title: "No coolers"
        }
    },
    foundBlocks: {
        title: "FoundBlocks"
    },
    hashrate: {
        hashrateReal: "Curr:",
        hashrateIdeal: "Theor:",
        shortTitle: "HR",
        title: "Hashrate"
    },
    pools: {
        activate: "Activate",
        active: "Active",
        confirm: "Change active pool?",
        disabled: "Disabled",
        message: "The pool will be changed to: </br>",
        no: "Do not change",
        offline: "Offline",
        refund: "Refund",
        rejecting: "Rejecting",
        status: "Status",
        title: "Pools",
        unknown: "Unknown",
        user: "user",
        working: "Alive",
        yes: "Yes, change!"
    },
    power: {
        desk: "Estimated data",
        footer: "W",
        watt: "W",
        psu: "PSU",
        title: "Power"
    },
    temp: {
        desk: "Board:",
        footer: "°C | min-max",
        title: "Temperature"
    },
    widgets: {
        Average_Hashrate: "Average hashrate",
        BestShare: "BestShare",
        ChartChiptemp: "Temperature Chart",
        ChartHashrate: "Hashrate Chart",
        ChartTest: "ChartTest",
        Coolers: "Cooling",
        DEVFee: "DevFee",
        Efficiency: "Efficiency",
        Errors: "Errors",
        FoundBlocks: "FoundBlocks",
        Performance: "Performance",
        Plates: "Boards",
        Pools: "Pools",
        Power: "Power",
        Temperature: "Temperature"
    },
    widgetsDialog: {
        selectAll: "Select all",
        title: "Widgets"
    }
}
    , hI = {
    cancel: "Cancel",
    no: "No",
    save: "Save",
    yes: "Yes"
}
    , fI = {
    actionText: "Try updating this or switching to another page",
    text: "Page not found"
}
    , pI = {
    diff5: "Temperatures difference must be 5 or more",
    wrongTopProfile: "Top profile can't be lower than current profile",
    wrongMinProfile: "Min profile can't be higher than current profile",
    duplicate: "Try to add duplicate",
    error: "Error",
    inputDiapason: "Input value must be in diapason",
    noLoop: "Data is not updated",
    noLoopLogs: "Logs is not updated",
    noMethod: "Data is not updated",
    noSettings: "Error loading miner settings",
    noAutotunePresetData: "Error getting autotune preset data",
    passNotSaved: "Password not saved",
    someError: "Something went wrong"
}
    , gI = {
    modal: {
        alertBeta: "Attention! This firmware is not stable and is intended for testing purposes only.",
        releaseNote: "What's new?",
        title: "Firmware update",
        titleFileName: "Firmware file:",
        update: "Update",
        updateButton: "Flash miner",
        updateButtonFlash: "Firmware update...",
        updateCheck: "Save current miner configuration",
        updateCheckNote: "The current configuration of the device will be saved after flashing",
        updateText: "Drop file here or click to upload"
    },
    version: "Version"
}
    , mI = {
    errorMessages: {
        invalidField: "Field is invalid",
        invalidFieldWithExample: "The field is filled incorrectly. Example: ",
        invalidLength: "The length is {count} characters",
        invalidMaxLength: "The maximum length is {count} characters",
        invalidMinMaxValue: "Input value must be in range: ",
        mismatch: "Password mismatch",
        required: "Please enter value",
        warningWorkerFormat: "Contains non-standard characters",
        wrongPassword: "Password is wrong,try [admin]"
    }
}
    , vI = {
    title: "Firmware help"
}
    , bI = {
    events: {
        filter: "Filter:",
        placeHolder: "No events",
        title: "Events in 24h "
    },
    fan: {
        title: "Cooling",
        fan: "Fan",
        mode: "Mode",
        fanDuty: "Fan duty"
    },
    memory: {
        cacheMem: "Cached:",
        freemem: "Free:",
        fullMem: "TOTAL",
        inuse: "In use",
        title: "Memory"
    },
    monitoring: {
        errors: "Errors",
        hashrateAvg: "Average hashrate",
        hashrateCurrent: "Current hashrate",
        hashrateIdeal: "Theoretical hashrate",
        hashrateStock: "Stock hashrate",
        power: "Power",
        tempBoard: "Temp. board",
        tempChips: "Temp. chips",
        title: "Monitoring"
    },
    network: {
        gateway: "Gateway",
        hostname: "",
        labelIp: "IP",
        labelMask: "Netmask",
        mode: "Mode:",
        static: "Static",
        title: "Network status"
    },
    pin: "Pin",
    quickSettings: {
        UIEffects: "UI optimize",
        disable: "Disable",
        enable: "Enable",
        sidebarTheme: "Sidebar menu theme",
        themeUI: "UI theme",
        title: "Quick Actions"
    },
    systemInfo: {
        cgVersion: "CGMiner version",
        compileDate: "Created",
        filesystem: "File System Version",
        hardVersion: "Hardware Version",
        hostname: "Hostname",
        installationType: "Installation Type",
        minerFirmware: "Firmware",
        buildName: "Build name",
        buildUUID: "Build UUID",
        minerType: "Miner type",
        os: "OS",
        platform: "Platform",
        psuModel: "PSU model",
        psuSerial: "PSU serial number",
        serialNumber: "Serial Number",
        title: "System Information"
    }
}
    , yI = {
    added: "Added...",
    applied: "Restart mining",
    autotuneReset: "Reset done",
    firmwareUpdate: "Firmware is updating",
    keyDeleted: "Key deleted",
    logsClear: "Logs cleared",
    logsCopied: "Logs are copied to clipboard",
    logsNotCopied: "Unable to copy logs to clipboard",
    poolSwitch: "Active pool is changed",
    reboot: "Rebooting...",
    reset: "Reset...",
    restart: "Restarting...",
    restore: "Restore...",
    saved: "Settings have been saved",
    start: "Start",
    stop: "Stopping mining..."
}
    , xI = "N/A"
    , wI = {
    action: {
        apply: "Apply",
        lockResult: "Device successfully locked",
        lockUI: "Lock device",
        lockUIDialog: {
            button: "Lock",
            message: "Device successfully locked!",
            text: "Settings and device parameters will be inactive for editing them",
            title: "Lock device?"
        },
        reboot: "Reboot",
        restart: "Restart mining",
        restartDialog: {
            apply: {
                no: "Cancel",
                title: "Apply and restart mining?",
                yes: "Yes, restart!"
            },
            reboot: {
                no: "Cancel",
                title: "Reboot miner?",
                yes: "Yes, reboot!"
            },
            restart: {
                no: "Cancel",
                title: "Restart mining?",
                yes: "Yes, restart!"
            },
            start: {
                no: "Cancel",
                title: "Start mining?",
                yes: "Yes, start!"
            },
            stop: {
                no: "Cancel",
                title: "Stop mining?",
                yes: "Yes, stop!"
            }
        },
        save: "Save",
        start: "Start mining",
        stopped: "Stop mining",
        unlockResult: "Device unlocked",
        unlockUI: "Unlock",
        unlockUIDialog: {
            desc: "Only monitoring is available without password",
            label: "Enter the password for full access",
            tooIncorrectPassword: "Too many incorrect password attempts.",
            tryAgain: "Please try again in",
            message: "The device is unlocked!",
            password: "Password",
            title: "Unlock device?"
        }
    },
    chipsNumber: "Chip index on board",
    columnMode: "Dashboard display mode",
    gridMode: "Grid ",
    infoBarTooltip: "Infobar",
    listMode: "List"
}
    , SI = {
    noData: {
        actionText: "Please wait while the miner is starting",
        text: "No data to display"
    },
    noWidgets: {
        actionText: "Please choose widgets from the dashboard menu to show",
        text: "No widgets to display"
    }
}
    , _I = {
    no: "No, don't reset",
    question: "Reset changes?",
    yes: "Yes, reset"
}
    , kI = {
    404: "Page not found",
    Advanced: "Advanced",
    Cooling: "Cooling",
    Dashboard: "Dashboard",
    General: "General",
    Mining: "Mining",
    Network: "Network",
    Others: "Other",
    Pools: "Pools",
    Security: "Security",
    Settings: "Settings",
    System: "System",
    performance: "Performance"
}
    , CI = {
    advanced: {
        titleTab: "Advanced",
        warningDescription: "You make any changes in this section at your own risk"
    },
    change: {
        button: "Reset"
    },
    cooling: {
        auto: "Auto",
        checkSpeed: "Checking the speed of coolers",
        default: "default",
        immersive: "Immersion",
        labelMode: "Cooling mode",
        manual: "Manual",
        minFanCount: "Minimum number of fans",
        minFanCountDesc: "Necessary if not the regular number of coolers",
        targetTemp: "Target temperature",
        fanDuty: "Fan speed",
        fanDutyRange: "Limit fan speed",
        modeDesc: "Auto by default",
        silentMode: "Quiet fan mode at startup",
        title: "Temperature control",
        titleTab: "Cooling"
    },
    general: {
        backup: {
            backup: {
                button: "Create archive",
                config: "backup",
                desk: "Click ‹Create Archive› to load the tar archive from the current configuration files ",
                title: "Backup settings"
            },
            collapse: "Collapse panel",
            expand: "Expand panel",
            reset: {
                button: "Reset",
                desk: "To reset the firmware, click ‹Reset› ",
                popup: {
                    message: "After reset, miner will work on factory settings",
                    no: "Cancel",
                    title: "Confirm factory reset",
                    yes: "Yes, reset!"
                },
                title: "Reset"
            },
            resetToStock: {
                button: "Rollback to stock",
                desk: "To reset firmware to the original stock version, click ‹Rollback to stock›",
                popup: {
                    message: "After reboot, miner will work with stock firmware",
                    no: "Cancel",
                    title: "Confirm rollback firmware to stock",
                    yes: "Yes, rollback!"
                },
                title: "Rollback to stock"
            },
            restore: {
                button: "Restore",
                desk: "To restore configuration files, you can download a previously created backup archive",
                dialog: {
                    button: "Restore settings",
                    title: "Restore Settings",
                    uploadText: "Select settings file"
                },
                title: "Restore Settings"
            },
            title: "Backup and restore",
            titleDesc: "Tools for backing up and restoring device settings"
        },
        chipsNumber: "Display chips number on board",
        chipsNumberDesc: "For the convenience of working with the layout of the chips",
        enableUIEffects: "UI optimize",
        enableUIEffectsDesc: "Disables animation and interface effects",
        lang: {
            en: "English",
            fa: "فارْسِى",
            ru: "Русский",
            ua: ""
        },
        regional: {
            sidebar: "Sidebar",
            sidebarTheme: "Dark sidebar",
            sidebarThemeDesc: "Applies to light theme only",
            timezone: "Timezone",
            timezoneDesc: "Affects the timing of events and device logs",
            title: "Regional settings",
            uiLang: "Interface language",
            uiLangDesc: "Default browser language",
            uiSettings: "Appearance",
            uiTheme: "Theme",
            uiThemeDesc: "Auto - uses the theme of the operating system",
            uiThemes: {
                auto: "Auto",
                dark: "Dark",
                light: "Light"
            }
        },
        titleTab: "General"
    },
    network: {
        dhcpDesc: "Automatic network setup",
        gateway: "Gateway",
        hostname: "Hostname",
        hostnameDesc: "Displayed in the browser header",
        labelIp: "IP Address",
        labelMask: "Mask",
        networkRestore: {
            note: "If the new network settings fail, it will return the previous settings",
            title: "Check network settings"
        },
        networkTest: {
            button: "Test network",
            desk: "On the other hand, diluted with a fair amount of empathy, rational thinking speaks of the possibilities of new proposals",
            dialog: {
                button: "Start",
                netFunction: "Network tool",
                noValue: "anthill.farm",
                nslookup: "Nslookup",
                ping: "Ping",
                testPage: "Host",
                title: "Network testing",
                traceroute: "Traceroute"
            },
            title: "Network connection test"
        },
        title: "Network settings",
        titleTab: "Network"
    },
    others: {
        control: {
            checkChip: "Autofix non efficient chips every",
            fixPeriod0: "Disabled",
            fixPeriod1: "Every 30 minute",
            fixPeriod2: "Every hour",
            fixPeriod3: "Every 3 hours",
            fixPeriod4: "Every 6 hours",
            fixPeriod5: "Every 12 hours",
            fixPeriod6: "Every day",
            maxRestartAttempts: "Max restart attempts",
            minOperationalChains: "Minimum number of operational boards",
            minOperationalChainsDesc: "Stop miner when the number of operational chains is less then",
            noValue: "Not set",
            restart: "Restart mining if hash rate is lower",
            restartDesc: "The hashrate threshold is set manually",
            tempOff: "Chips critical temperature",
            tempOffDesc: "Recommended range 50-120°C, default: 90°C",
            title: "Control"
        },
        others: {
            checkBalanceDomains: "Check balance of voltage domains",
            defaultValue: "DEFAULT VALUE",
            downscalePresetOnFailure: "Downscale preset on failure",
            downscalePresetOnFailureDescription: "Automatic downscale preset in case of miner overheating or chain break error",
            isPowerSupplyModified: "Power supply is modified",
            isPowerSupplyModifiedDesc: "Modified power supply allows you to deliver more power",
            isResumeMiningAfterReboot: "Resume mining after reboot",
            maxStartupDelayTime: "Maximum delay time before mining startup",
            maxStartupDelayTimeDesc: "Range 0-300s, default: 0s",
            nominal: "RESET TO NOMINAL:",
            nominalVolt: "NOMINAL VALUE",
            offAdjustVoltageByTemp: "Adapt voltage to temperature",
            offBreak: "Check integrity of chains",
            offChips: "Preheat chips at startup",
            offPreset: "Ignore minimum voltage in presets",
            offQuickStart: "Quick start",
            offTempSensor: "Turn ON temperature sensors check",
            offVolt: "Check voltage setting",
            quietMode: "Quiet mode",
            quietModeDescription: "Coolers speed by 50% when starting or stopping the device",
            seconds: "s",
            setDefault: "RESET TO DEFAULT:",
            skipInvalidTempSensors: "Skip broken temperature sensors",
            ignoreChipTempSensors: "Ignore chip's temperature sensors",
            startVoltOffset: "Startup voltage offset",
            title: "Others",
            tunerChipHashrateThreshold: "Tuner bad chip hashrate threshold",
            autoChipThrottling: "Auto chip throttling"
        },
        titleTab: "Other"
    },
    performance: {
        advance_settings: {
            title: "Advance settings"
        },
        autoProfile: {
            downProfile: "Lower preset",
            downProfileFan: "If cooler speed is higher",
            downProfileTemp: "If temperature is higher",
            downProfileTune: "On auto-tuning failure",
            optionsHeader: "Auto-switching options",
            profileDownTemp: "Step DOWN preset if temperature is above",
            profileDownTempRange: "Must be in range",
            profileUpTemp: "Step UP preset if temperature is below",
            switch: "Autoswitch presets",
            switchDescription: "Switches depending on temperature",
            upProfile: "Raise preset",
            upProfileFan: "If cooler speed is lower",
            upProfileLimit: "Don't raise preset above",
            upProfileLimitDescription: "Profile switching upper limit",
            switcherMinProfile: "Don't lower preset below",
            switcherMinProfileDescription: "Profile switching lower limit",
            upProfileTemp: "If temperature is lower",
            watchTimer: "Condition check duration",
            watchTimerDescription: "Should be in range of 1-10 minutes",
            switcherPowerDelta: "Exceeding nominal consumption",
            switcherPowerDeltaDesc: "+% of preset nominal value",
            autochangeTopPreset: "Autochange top preset if error occurs",
            autochangeTopPresetDescription: "If not achieved, top preset will be autochanged to the last reached one",
            ignoreFanSpeed: "Ignore fan speed",
            ignoreFanSpeedDescription: "Ignore fan speed when lowering/raising preset"
        },
        board: {
            chipPopper: {
                chip: "Chip",
                chip_temp: "Chip Temp.",
                domainFreq: "Domain frequency ",
                errors: "Errors",
                freq: "Frequency",
                hashrate: "Hashrate",
                reset: "Reset chip settings",
                temperature: "Temperature",
                useGlobal: "Use chain freq",
                usingGlobal: "Using chain freq"
            },
            forAllBoard: "Apply to all boards",
            operations: "Operations",
            platePopper: {
                plateFrequency: "Frequency",
                plateVoltage: "Voltage",
                reset: "Reset chain frequency",
                useGlobal: "Use global",
                usingGlobal: "Using global"
            },
            resetAllChain: "Reset all settings",
            resetChipsToZero: "Reset chip settings",
            stockInfo: {
                title: "Stock info"
            },
            switchOff: "Switch OFF",
            switchOn: "Enabled",
            title: "Board",
            undoChanges: "Cancel changes",
            view: {
                chip_temp: "Heatmap",
                errors: "Errors",
                freq: "Frequencies",
                hashrate: "Hashrate",
                temperature: "Sensors",
                title: "Board view"
            }
        },
        freq: "GLOBAL FREQUENCY",
        nominal: "RESET TO NOMINAL:",
        nominalFreq: "NOMINAL FREQUENCY",
        nominalVolt: "NOMINAL VOLTAGE",
        profile: {
            attention: "* LC - For power supply only",
            description: "Standard power supply",
            descriptionAlt: "Modified power supply",
            limitlessProfile: "Limitless",
            longLabel: "Preset",
            noProfile: "Disable",
            shortLabel: "Preset",
            tuned: "tuned"
        },
        title: "Performance settings",
        titleTab: "Performance",
        tuneDialog: {
            active: "active",
            markAll: "Select all",
            noData: "No tuned profiles",
            reset: "Reset",
            resetAndRestart: "Reset and restart",
            title: "Profile management"
        },
        tunerLogs: "Tuner logs",
        voltage: "GLOBAL VOLTAGE"
    },
    pools: {
        address: "Pool:",
        changeIndex: "Change priority",
        desc: "The priority of pools is controlled by the order in the list, by the drag and drop method",
        name: "Worker",
        password: "Password",
        saveIndex: "Save priority",
        title: "Pool List",
        titleTab: "Pools"
    },
    security: {
        api: {
            buttonAdd: "Add new key",
            deleteConfirm: {
                desk: "After deleting, key will not be able to use",
                no: "No",
                title: "Delete Key?",
                yes: "Yes, delete!"
            },
            desk: "Описание для чего этот ключ нужен и как его использовать...",
            dialog: {
                description: "The API key must be strictly 32 characters long. Key description is required!",
                descriptionPlaceHolder: "remote management",
                keyPlaceHolder: "enter your key here",
                labelDesc: "Description",
                labelKey: "API key",
                title: "New API key"
            },
            labelPort: "",
            title: "API keys"
        },
        password: {
            desk: "Changes the administrator password to access the device",
            labelCurrPass: "Current password",
            labelNewPass: "New password",
            title: "Change password"
        },
        titleTab: "Security"
    }
}
    , AI = {
    Warranty: {
        button: "Warranty",
        buttonActivate: "Activate Warranty"
    },
    menu: {
        actions: "Actions",
        collapsedTitle: "Menu",
        dashboard: "Dashboard",
        findMiner: "Find miner",
        integration: "Integration",
        mining: "Mining",
        settings: "Settings",
        support: "Tech support",
        system: "System",
        title: "Monitoring",
        update: "Firmware update"
    }
}
    , EI = {
    collapse: "Minimize logs",
    expand: "Expand logs",
    logs: {
        clearLogs: "Clear",
        copyAll: "Copy log",
        doClearLogs: "Clear logs",
        markAll: "Select all",
        tabs: {
            autotune: "Autotune",
            miner: "Miner",
            status: "Status",
            system: "System"
        },
        title: "Logs"
    },
    model: "model",
    releaseNotes: {
        placeHolder: {
            description: "Release data server is unavailable",
            header: "No release details"
        }
    },
    report: {
        button: "Create report",
        desk: "On the other hand, diluted with a fair amount of empathy, rational thinking speaks of the possibilities of new proposals",
        dialog: {
            back: "Retry",
            button: "Create report",
            desc: "To help solve your problem faster, you need to create a diagnostic report and send it to us. Describe in detail the essence of the problem and other important information in your opinion ",
            download: "Download",
            issue: "Description of the problem",
            report: "report",
            title: "Create report"
        },
        title: "Diagnostic report"
    },
    status: {
        "auto-tuning": "Autotuning",
        d: "d",
        disconnect: "Disconnected",
        failure: "Error",
        findMiner: "Find miner",
        h: "h",
        initializing: "Initializing",
        m: "m",
        mining: "Mining",
        restarting: "Restarting",
        "shutting-down": "Shutting down",
        starting: "Starting",
        stopped: "Stopped"
    },
    version: "version"
}
    , TI = {
    link: {
        homepage: "Home page",
        support: "Firmware help",
        telegram: "Telegram channel"
    },
    tagSoon: "Coming soon",
    title: "Tech support"
}
    , II = {
    activation: {
        activateConfirm: "Are you sure to activate warranty?",
        errorUnable: "Unable to activate warranty"
    },
    badge: "Not available by warranty",
    modal: {
        agreeCheckbox: "Unlock all functions with a warranty loss",
        buttonUnLock: "Remove all restrictions",
        notReversible: "Attention! The action is not reversible!",
        p1: "This equipment is on the service center warranty. Unlocking additional functions is possible after the warranty period is completed or you can unlock them right now.",
        p2: "When unlocking additional functions - during the warranty period, you automatically deprive the warranty service",
        subtitle: "Warning warranty!",
        title: "Warning warranty!",
        unlockWarranty: "All functions are unlocked"
    }
}
    , PI = {
    Actions: cI,
    Confirm: uI,
    Dashboard: dI,
    Dialog: hI,
    Error404: fI,
    Errors: pI,
    Firmware: gI,
    Form: mI,
    HelpBar: vI,
    InfoBar: bI,
    Messages: yI,
    NA: xI,
    NavBar: wI,
    PlaceHolder: SI,
    ResetDialog: _I,
    Route: kI,
    Settings: CI,
    Sidebar: AI,
    StatusBar: EI,
    TechSupport: TI,
    Warranty: II
}
    , LI = {
    disable: "Выключить",
    enable: "Включить",
    restart: "Перезапустить",
    start: "Запустить",
    stop: "Остановить"
}
    , MI = {
    no: "НЕТ",
    warning: "Внимание",
    yes: "ОК"
}
    , OI = {
    best_share: {
        title: "BestShare"
    },
    boards: {
        NA: "Н/Д",
        allGood: "Все чипы стабильны",
        chipStatus: {
            grey: "Стабильные чипы",
            orange: "Медленные чипы",
            red: "Критические чипы",
            unknown: "Неизвестно"
        },
        chipStatusTitle: "Статус чипов",
        errors: "Ошибки",
        freq: "Частота",
        power: "Потребление",
        status: {
            disabled: "Плата отключена",
            disconnected: "Плата не подключена",
            initializing: "Инициализация",
            mining: "Майнинг",
            stopped: "Остановлена",
            unknown: "Неизвестный"
        },
        tempBoard: "Температуры платы",
        tempChips: "Температура",
        title: "Плата",
        noBoard: "Нет платы",
        undefinedChips: "Чипы не определены",
        volt: "Напряжение"
    },
    chartChipTemp: {
        title: "Температура",
        chipTemp: "Температура",
        fanDuty: "Скорость вентиряторов"
    },
    chartHashrate: {
        title: "Хэшрейт",
        hashrate: "Хэшрейт",
        power: "Потребление",
        powerConsumption: "Потребление",
        watt: "Вт"
    },
    chartTest: {
        title: "ChartTest"
    },
    charts: {
        hours1: "1 ч",
        hours12: "12 ч",
        hours24: "24 ч",
        hours3: "3 ч",
        hours72: "72 ч",
        range: "Диапазон:"
    },
    dev: {
        title: "DevFee"
    },
    editMode: {
        buttons: {
            cancel: "Выйти без сохранения",
            exit: "Выйти без сохранения",
            reset: "Сбросить",
            save: "Готово",
            select: "Сохранить выбранное",
            widgets: "Виджеты"
        },
        enterIcon: "Редактировать экран обзора",
        footer: {
            caption: "Режим редактирования",
            hint: "виджеты можно перетаскивать, растягивать и скрывать"
        },
        header: "Режим редактирования",
        hideWidgetDialog: {
            cancel: "Отмена",
            description: "Выбери на каких устройствах скрыть данный виджет",
            header: "Скрыть виджет?",
            submit: "Да, скрыть!"
        },
        resetWidgetDialog: {
            cancel: "Отмена",
            description: "Выбери на каких устройствах сделать сброс",
            header: "Сбросить по умолчанию?",
            submit: "Да, сбросить!"
        },
        saveDialog: {
            cancel: "Нет",
            header: "Сохранить экран обзора?",
            submit: "Да, сохранить!"
        },
        transferDescription: "После добавления, необходимо перенести вниз"
    },
    eff: {
        title: "Эффективность"
    },
    errors: {
        footer: "HW",
        title: "Ошибки"
    },
    fans: {
        title: "Охлаждение",
        fan: "Кулер",
        duty: "Скорость",
        block: "Блок",
        temperature: "Температура",
        "inlet-outlet": "Вх.-Вых.",
        mode: "Режим:",
        auto: "Авто",
        manual: "Ручной",
        immersion: "Иммерсионный",
        missingCooler: {
            message: "В данной модели кулера не используются ",
            title: "Кулеры отсутствуют"
        }
    },
    foundBlocks: {
        title: "FoundBlocks"
    },
    hashrate: {
        hashrateReal: "Тек:",
        hashrateIdeal: "Теор:",
        shortTitle: "HR",
        title: "Хэшрейт"
    },
    pools: {
        activate: "Переключить",
        active: "Активный",
        confirm: "Сменить активный пул?",
        disabled: "Выключен",
        message: "Пул будет сменен на: </br>",
        no: "Не менять",
        offline: "Офлайн",
        refund: "Возврат",
        rejecting: "Rejecting",
        status: "Статус",
        title: "Пулы",
        unknown: "Неизвестный",
        user: "пользователь",
        working: "Рабочий",
        yes: "Да, сменить!"
    },
    power: {
        desk: "Расчетные данные",
        footer: "Вт",
        watt: "Вт",
        psu: "Блок питания",
        title: "Потребление"
    },
    temp: {
        desk: "Плат:",
        footer: "°C | мин-макс",
        title: "Температура"
    },
    widgets: {
        Average_Hashrate: "Хэшрейт",
        BestShare: "BestShare",
        ChartChiptemp: "График температуры",
        ChartHashrate: "График хэшрейта",
        ChartTest: "ChartTest",
        Coolers: "Охлаждение",
        DEVFee: "DevFee",
        Efficiency: "Эффективность",
        Errors: "Ошибки",
        FoundBlocks: "FoundBlocks",
        Performance: "Производительность",
        Plates: "Платы",
        Pools: "Пулы",
        Power: "Потребление",
        Temperature: "Температура"
    },
    widgetsDialog: {
        selectAll: "Выделить все",
        title: "Виджеты"
    }
}
    , RI = {
    cancel: "Отмена",
    no: "Нет",
    save: "Сохранить",
    yes: "Да"
}
    , NI = {
    actionText: "Попробуй обновить эту или перейти на другую страничку",
    text: "Страница не найдена"
}
    , DI = {
    diff5: "Разница температур должна составлять 5 или более",
    wrongTopProfile: "Верхний предел профиля не может быть ниже текущего профиля",
    wrongMinProfile: "Минимальный предел профиля не может быть выше текущего профиля.",
    duplicate: "Уже существует",
    error: "Ошибка",
    inputDiapason: "Значение должно быть в диапазоне",
    noLoop: "Данные не обновляются",
    noLoopLogs: "Лог не обновляется",
    noMethod: "Данные не обновились",
    noSettings: "Ошибка загрузки настроек майнера",
    noAutotunePresetData: "Ошибка при получении пресетов автотюна",
    passNotSaved: "Пароль не сохранен",
    someError: "Что-то пошло не так"
}
    , FI = {
    modal: {
        alertBeta: "Внимание! Данная прошивка нестабильна и предназначена только для тестов",
        releaseNote: "Что нового?",
        title: "Обновление прошивки",
        titleFileName: "Файл прошивки:",
        update: "Обновление",
        updateButton: "Обновить прошивку",
        updateButtonFlash: "Обновление прошивки...",
        updateCheck: "Сохранить текущие настройки",
        updateCheckNote: "Текущая конфигурация устройства будет сохранена после перепрошивки",
        updateText: "Перетащите файл сюда или нажмите, чтобы загрузить"
    },
    version: "Версия"
}
    , $I = {
    errorMessages: {
        invalidField: "Поле заполнено неверно",
        invalidFieldWithExample: "Поле заполнено неверно. Пример: ",
        invalidLength: "Длина {count} символов",
        invalidMaxLength: "Максимально длина {count} символов",
        invalidMinMaxValue: "Введенное значение должно быть в диапазоне: ",
        mismatch: "Пароли не совпадают",
        required: "Пожалуйста, заполните поле",
        warningWorkerFormat: "Нестандартный синтаксис воркера",
        wrongPassword: "Неверный пароль,попробуй [admin] "
    }
}
    , BI = {
    title: "Справка по прошивке"
}
    , HI = {
    events: {
        filter: "Фильтр:",
        placeHolder: "Пока нет событий",
        title: "События за 24ч"
    },
    fan: {
        title: "Охлаждение",
        fan: "Кулер",
        mode: "Режим",
        fanDuty: "Скорость"
    },
    memory: {
        cacheMem: "Кэшировано:",
        freemem: "Свободно:",
        fullMem: "ВСЕГО",
        inuse: "Используется",
        title: "Память"
    },
    monitoring: {
        errors: "Ошибки",
        hashrateAvg: "Средний хэшрейт",
        hashrateCurrent: "Текущий хэшрейт",
        hashrateIdeal: "Теоретич. хэшрейт",
        hashrateStock: "Стоковый хэшрейт",
        power: "Потребление",
        tempBoard: "Темп. плат",
        tempChips: "Темп. чипов",
        title: "Мониторинг"
    },
    network: {
        gateway: "Шлюз",
        hostname: "Имя хоста",
        labelIp: "IP-Адрес",
        labelMask: "Маска",
        mode: "Режим:",
        static: "Статика",
        title: "Статус сети"
    },
    pin: "Зафиксировать",
    quickSettings: {
        UIEffects: "Оптимизация интерфейса",
        disable: "Выключено",
        enable: "Включено",
        sidebarTheme: "Тема бокового меню",
        themeUI: "Тема интерфейса",
        title: "Быстрые действия"
    },
    systemInfo: {
        cgVersion: "CGMiner version",
        compileDate: "Дата сборки",
        filesystem: "File System Version",
        hardVersion: "Hardware Version",
        hostname: "Имя хоста",
        installationType: "Тип установки",
        minerFirmware: "Прошивка",
        buildName: "Имя сборки",
        buildUUID: "UUID сборки",
        minerType: "Модель",
        psuModel: "Модель БП",
        psuSerial: "Серийный номер БП",
        os: "OS",
        platform: "Платформа",
        serialNumber: "Серийный номер",
        title: "Системная информация"
    }
}
    , VI = {
    added: "Добавлено...",
    applied: "Перезапуск майнинга",
    autotuneReset: "Настройки профилей удалены",
    firmwareUpdate: "Обновление прошивки",
    keyDeleted: "Ключ удален",
    logsClear: "Лог успешно очищен",
    logsCopied: "Лог скопирован в буфер",
    logsNotCopied: "Невозможно скопировать лог в буфер",
    poolSwitch: "Пул успешно сменился",
    reboot: "Перезагрузка...",
    reset: "Сброс...",
    restart: "Перезапуск...",
    restore: "Обновление...",
    saved: "Настройки сохранены",
    start: "Запуск",
    stop: "Остановка майнинга..."
}
    , zI = "Н/Д"
    , WI = {
    action: {
        apply: "Применить",
        lockUI: "Заблокировать устройство",
        lockUIDialog: {
            button: "Заблокировать",
            message: "Устройство заблокировано!",
            text: "Настройки и параметры устройства будут неактивными для их редактирования",
            title: "Заблокировать устройство?"
        },
        reboot: "Полная перезагрузка",
        restart: "Перезапустить майнинг",
        restartDialog: {
            apply: {
                no: "Отмена",
                title: "Применить и перезапустить майнинг?",
                yes: "Да, перезапустить!"
            },
            reboot: {
                no: "Отмена",
                title: "Перезагрузить майнер?",
                yes: "Да, перезагрузить!"
            },
            restart: {
                no: "Отмена",
                title: "Перезапустить майнинг?",
                yes: "Да, перезапустить!"
            },
            start: {
                no: "Отмена",
                title: "Запустить майнинг?",
                yes: "Да, запустить!"
            },
            stop: {
                no: "Отмена",
                title: "Остановить майнинг?",
                yes: "Да, остановить!"
            }
        },
        save: "Сохранить",
        start: "Запустить майнинг",
        stopped: "Остановить майнинг",
        unlockUI: "Разблокировать",
        unlockUIDialog: {
            desc: "Без пароля доступен только мониторинг",
            label: "Введи пароль для получения полного доступа",
            tooIncorrectPassword: "Пароль введен неверно несколько раз.",
            tryAgain: "Пожалуйста, повторите попытку через",
            message: "Устройство разблокировано!",
            password: "Пароль",
            title: "Разблокировать устройство?"
        }
    },
    chipsNumber: "Нумерация чипов на платах",
    columnMode: "Схема окна обзора",
    gridMode: "Сетка ",
    infoBarTooltip: "Информационная панель",
    listMode: "Список"
}
    , UI = {
    noData: {
        actionText: "Необходимо дождаться запуска майнера",
        text: "Нет данных для отображения"
    },
    noWidgets: {
        actionText: "Выберете виджеты из меню для их отображения",
        text: "Нет виджетов для отображения"
    }
}
    , YI = {
    no: "Не сбрасывать",
    question: "Сбросить изменения?",
    yes: "Да, сбросить!"
}
    , XI = {
    404: "Страница не найдена",
    Advanced: "Расширенные",
    Cooling: "Охлаждение",
    Dashboard: "Обзор",
    General: "Общие",
    Mining: "Майнинг",
    Network: "Сеть",
    Others: "Прочее",
    Pools: "Пулы",
    Security: "Безопасность",
    Settings: "Настройки",
    System: "Система",
    performance: "Производительность"
}
    , jI = {
    advanced: {
        titleTab: "Расширенные",
        warningDescription: "Любые изменения в данном разделе вы делаете на свой страх и риск"
    },
    change: {
        button: "Сбросить"
    },
    cooling: {
        auto: "Авто",
        checkSpeed: "Проверка скорости кулеров",
        default: "по умолчанию",
        immersive: "Иммерсионный",
        labelMode: "Режим работы кулеров",
        manual: "Ручной",
        minFanCount: "Минимальное количество кулеров",
        minFanCountDesc: "Необходимо, если не штатное количество кулеров",
        targetTemp: "Целевая температура",
        fanDuty: "Скорость вращения",
        fanDutyRange: "Лимит скорости вращения кулеров",
        modeDesc: "Auto по умолчанию",
        silentMode: "Тихий режим при старте",
        title: "Управление кулерами",
        titleTab: "Охлаждение"
    },
    general: {
        backup: {
            backup: {
                button: "Создать архив",
                config: "backup",
                desk: "Нажми [Создать архив]  чтобы загрузить архив tar из текущих файлов конфигурации ",
                title: "Резервное копирование настроек"
            },
            collapse: "Свернуть панель",
            expand: "Раскрыть панель",
            reset: {
                button: "Сбросить",
                desk: "Чтобы сбросить прошивку в исходное состояние, нажми [Сбросить]",
                popup: {
                    message: "После сброса, майнер будет работать на заводских настройках",
                    no: "Отмена",
                    title: "Подтверди сброс настроек",
                    yes: "Да, сбросить!"
                },
                title: "Сброс настроек"
            },
            resetToStock: {
                button: "Сбросить на сток",
                desk: "После нажатия на [Сбросить на сток], майнер вернется на оригинальную прошивку после перезагрузки",
                popup: {
                    message: "После сброса, майнер будет работать на заводской прошивке",
                    no: "Отмена",
                    title: "Подтвердите сброс прошивки",
                    yes: "Да, сбросить!"
                },
                title: "Вернуться на стоковую прошивку"
            },
            restore: {
                button: "Восстановить",
                desk: "Чтобы восстановить файлы конфигурации, загрузи ранее созданный архив резервных копий",
                dialog: {
                    button: "Восстановить настройки",
                    title: "Восстановление настроек",
                    uploadText: "Выбрать файл настроек"
                },
                title: "Восстановление настроек"
            },
            title: "Бэкап и восстановление",
            titleDesc: "Инструменты для управление настройками"
        },
        chipsNumber: "Показывать номера чипов на платах",
        chipsNumberDesc: "Для удобства работы со схемой расположения чипов",
        enableUIEffects: "Оптимизация интерфейса",
        enableUIEffectsDesc: "Отключает анимацию и эффекты интерфейса",
        lang: {
            en: "English",
            fa: "فارْسِى",
            ru: "Русский"
        },
        regional: {
            sidebar: "Боковая панель",
            sidebarTheme: "Темная боковая панель",
            sidebarThemeDesc: "Применяется только в светлой теме",
            timezone: "Часовой пояс",
            timezoneDesc: "Влияет на время событий и логов устройства ",
            title: "Региональные настройки",
            uiLang: "Язык интерфейса",
            uiLangDesc: "По умолчанию используется язык браузера",
            uiSettings: "Внешний вид",
            uiTheme: "Тема интерфейса",
            uiThemeDesc: "Auto - использует тему операционной системы ",
            uiThemes: {
                auto: "Авто",
                dark: "Темная",
                light: "Светлая"
            }
        },
        titleTab: "Общие"
    },
    network: {
        dhcpDesc: "Автоматическая настройка сети",
        gateway: "Шлюз",
        hostname: "Имя хоста",
        hostnameDesc: "Отображается в заголовке браузера ",
        labelIp: "IP-Адрес",
        labelMask: "Маска",
        networkRestore: {
            note: "При ошибке новых сетевых параметров, вернет предыдущие настройки",
            title: "Выполнять проверку сетевых настроек"
        },
        networkTest: {
            button: "Тест сети",
            desk: "С другой стороны, разбавленное изрядной долей эмпатии, рациональное мышление говорит о возможностях новых предложений",
            dialog: {
                button: "Запуск",
                netFunction: "Сетевая утилита",
                noValue: "anthill.farm",
                nslookup: "Nslookup",
                ping: "Ping",
                testPage: "Хост",
                title: "Тестирование сети",
                traceroute: "Traceroute"
            },
            title: "Тест сетевого подключения"
        },
        title: "Настройка сети",
        titleTab: "Сеть"
    },
    others: {
        control: {
            checkChip: "Исправлять чипы с низким хэшрейтом",
            fixPeriod0: "Не задано",
            fixPeriod1: "Каждые пол часа",
            fixPeriod2: "Каждый час",
            fixPeriod3: "Каждые три часа",
            fixPeriod4: "Каждые 6 часов",
            fixPeriod5: "Каждые 12 часов",
            fixPeriod6: "Каждый день",
            maxRestartAttempts: "Макс. кол-во перезагрузок",
            minOperationalChains: "Минимальное количество работающих чейнов",
            minOperationalChainsDesc: "Остановить майнер, когда количество рабочих чейнов станет меньше",
            noValue: "Не задано",
            restart: "Перезапуск при низком хэшрейте",
            restartDesc: "Порог хэшрейта указывается вручную",
            tempOff: "Критическая температура чипов",
            tempOffDesc: "Рекомендованный диапазон 50-120°C, по умолчанию 90°C",
            title: "Контроль"
        },
        others: {
            checkBalanceDomains: "Проверять балансировку доменов",
            defaultValue: "ЗНАЧЕНИЕ ПО УМОЛЧАНИЮ",
            downscalePresetOnFailure: "Понижать профиль при ошибке",
            downscalePresetOnFailureDescription: "Автоматическое снижение профиля в случае перегрева или ошибки",
            isPowerSupplyModified: "Модифицированный БП [LC]",
            isPowerSupplyModifiedDesc: "Модифицированный блок питания позволяет выдавать большую мощность",
            isResumeMiningAfterReboot: "Продолжить майнинг после перезагрузки",
            maxStartupDelayTime: "Максимальное задержка перед запуском майнинга",
            maxStartupDelayTimeDesc: "Диапазон 0-300 с, по умолчанию: 0 с",
            nominal: "СБРОСИТЬ НА НОМИНАЛ:",
            nominalVolt: "НОМИНАЛЬНОЕ ЗНАЧЕНИЕ",
            offAdjustVoltageByTemp: "Адаптировать напряжение по температуре",
            offBreak: "Проверять целостность цепочек",
            offChips: "Предварительный прогрев чипов",
            offPreset: "Игнорировать минимальное напряжение из профиля",
            offQuickStart: "Быстрый запуск",
            offTempSensor: "Включить проверку темп. сенсоров",
            offVolt: "Проверять установки напряжения",
            quietMode: "Тихий режим",
            quietModeDescription: "Скорость кулеров на 50% при запуске или остановке устройства",
            seconds: "с",
            setDefault: "СБРОСИТЬ НА ПО УМОЛЧАНИЮ:",
            skipInvalidTempSensors: "Игнорировать нерабочие температурные сенсоры",
            ignoreChipTempSensors: "Игнорировать температурные сенсоры на чипах",
            startVoltOffset: "Повышать напряжения чипов на старте",
            title: "Прочее",
            tunerChipHashrateThreshold: "Порог хешрейта плохого чипа тюнера",
            autoChipThrottling: "Автоматическое регулирование мощности чипа"
        },
        titleTab: "Прочее"
    },
    performance: {
        advance_settings: {
            title: "Расширенные настройки"
        },
        autoProfile: {
            downProfile: "Понижать профиль",
            downProfileFan: "Если скорость кулеров выше",
            downProfileTemp: "Понижать если температура выше",
            downProfileTune: "При неудачном тюне",
            optionsHeader: "Опции автопереключения профилей",
            profileDownTemp: "Температура понижения профиля",
            profileDownTempRange: "Должно быть в диапазоне",
            profileUpTemp: "Температура повышения профиля",
            switch: "Автопереключение профилей",
            switchDescription: "Переключает в зависимости от температуры",
            upProfile: "Повышать профиль",
            upProfileFan: "Если скорость кулеров ниже",
            upProfileLimit: "Повышать не выше",
            upProfileLimitDescription: "Верхний предел повышения профиля",
            switcherMinProfile: "Понижать не ниже",
            switcherMinProfileDescription: "Нижний предел понижения профиля",
            upProfileTemp: "Повышать если температура ниже",
            watchTimer: "Время замера параметров",
            watchTimerDescription: "Должно быть в диапазоне 1-10 минут",
            switcherPowerDelta: "Допустимое превышение потребления",
            switcherPowerDeltaDesc: "от номинального, указанного в пресете",
            autochangeTopPreset: "Переопределять топ пресет",
            autochangeTopPresetDescription: "В случае ошибки понизить топ пресет до последнего стабильного",
            ignoreFanSpeed: "Игнорировать скорость кулеров",
            ignoreFanSpeedDescription: "Игнорирование скорости кулеров при понижении/повышении пресета"
        },
        board: {
            chipPopper: {
                chip: "Чип",
                chip_temp: "Темп. чипов",
                domainFreq: "Частота домена",
                errors: "Ошибки",
                freq: "Частота чипа",
                hashrate: "Хэшрейт",
                reset: "Сбросить настройки чипа",
                temperature: "Темп.",
                useGlobal: "Использовать частоту платы",
                usingGlobal: "Используется частота платы"
            },
            forAllBoard: "Применить ко всем платам",
            operations: "Операции",
            platePopper: {
                plateFrequency: "ЧАСТОТА ПЛАТЫ",
                plateVoltage: "НАПРЯЖЕНИЕ ПЛАТЫ",
                reset: "Cбросить частоту платы",
                useGlobal: "ИСПОЛЬЗОВАТЬ ГЛОБАЛЬНУЮ",
                usingGlobal: "ИСПОЛЬЗУЕТСЯ ГЛОБАЛЬНАЯ"
            },
            resetAllChain: "Сбросить все настройки",
            resetChipsToZero: "Сбросить настройки чипов",
            stockInfo: {
                title: "Стоковые данные"
            },
            switchOn: "Включена",
            title: "Плата",
            undoChanges: "Отменить изменения",
            view: {
                chip_temp: "Heatmap",
                errors: "Ошибки",
                freq: "Частоты",
                hashrate: "Хэшрейт",
                temperature: "Сенсоры",
                title: "Вид платы"
            }
        },
        freq: "ГЛОБАЛЬНАЯ ЧАСТОТА",
        nominal: "СБРОСИТЬ НА НОМИНАЛЬНОЕ:",
        nominalFreq: "НОМИНАЛЬНАЯ ЧАСТОТА",
        nominalVolt: "НОМИНАЛЬНОЕ НАПРЯЖЕНИЕ",
        profile: {
            attention: "* LC - Только для модифицированного БП",
            description: "Стандартный блок питания",
            descriptionAlt: "Модифицированный блок питания",
            limitlessProfile: "Без ограничений",
            longLabel: "Профиль разгона",
            noProfile: "Без профиля",
            shortLabel: "Профиль:",
            tuned: "настроен"
        },
        title: "Настройка разгона",
        titleTab: "Производительность",
        tuneDialog: {
            active: "текущий",
            markAll: "Выделить все",
            noData: "Нет настроенных профилей",
            reset: "Сбросить",
            resetAndRestart: "Сбросить и перезапустить",
            title: "Сброс настроек автотюна"
        },
        tunerLogs: "Лог тюнера",
        voltage: "ГЛОБАЛЬНОЕ НАПРЯЖЕНИЕ"
    },
    pools: {
        address: "Пул:",
        changeIndex: "Изменить порядок",
        desc: "Приоритет пулов управляется очередностью в списке, методом перетаскивания",
        name: "Воркер",
        password: "Пароль",
        saveIndex: "Сохранить порядок",
        title: "Список пулов",
        titleTab: "Пулы"
    },
    security: {
        api: {
            buttonAdd: "Добавить новый ключ",
            deleteConfirm: {
                desk: "После удаления, воспользоваться ключом не получится",
                no: "Отмена",
                title: "Удалить ключ?",
                yes: "Да, удалить!"
            },
            desk: "Описание для чего этот ключ нужен и как его использовать...",
            dialog: {
                description: "API ключ должен состоять строго из 32 символов. Описание ключа обязательное поле!",
                descriptionPlaceHolder: "не задано",
                keyPlaceHolder: "поле ввода ключа",
                labelDesc: "Описание ключа",
                labelKey: "API ключ",
                title: "Новый API ключ"
            },
            labelPort: "SSH порт",
            title: "API ключи"
        },
        password: {
            desk: "Изменяет пароль администратора для доступа к устройству",
            labelCurrPass: "Текущий пароль",
            labelNewPass: "Новый пароль",
            title: "Сменить пароль доступа"
        },
        titleTab: "Безопасность"
    }
}
    , GI = {
    Warranty: {
        button: "На гарантии",
        buttonActivate: "Активировать гарантию"
    },
    menu: {
        actions: "Функции",
        collapsedTitle: "Меню",
        dashboard: "Обзор",
        findMiner: "Найти майнер",
        integration: "Интеграции",
        mining: "Майнинг",
        settings: "Настройки",
        support: "Тех. поддержка",
        system: "Система",
        title: "Мониторинг",
        update: "Центр обновлений"
    }
}
    , qI = {
    collapse: "Свернуть логи",
    expand: "Развернуть логи",
    logs: {
        clearLogs: "Очистить",
        copyAll: "Скопировать лог",
        doClearLogs: "Очистить логи",
        markAll: "Выделить все",
        tabs: {
            autotune: "Автотюнинг",
            miner: "Майнер",
            status: "Статус",
            system: "Система"
        },
        title: "Логи"
    },
    model: "модель",
    releaseNotes: {
        placeHolder: {
            description: "Сервер данных релизов недоступен",
            header: "Нет данных о релизе"
        }
    },
    report: {
        button: "Отчет",
        desk: "С другой стороны, разбавленное изрядной долей эмпатии, рациональное мышление говорит о возможностях новых предложений",
        dialog: {
            back: "Еще раз",
            button: "Создать отчет",
            desc: "Чтобы помочь решить вашу проблему быстрее, вам необходимо создать диагностический отчет и отправить его нам. Подробно опишите суть проблемы и другую важную на ваш взгляд информацию ",
            download: "Скачать",
            issue: "Описание проблемы",
            report: "report",
            title: "Создать отчет"
        },
        title: "Диагностический отчет"
    },
    status: {
        "auto-tuning": "Автотюнинг",
        d: "д",
        disconnect: "Нет соединения",
        failure: "Ошибка",
        findMiner: "Поиск майнера",
        h: "ч",
        initializing: "Инициализация",
        m: "м",
        mining: "Майнинг",
        restarting: "Перезапуск",
        "shutting-down": "Останавливается",
        starting: "Запуск",
        stopped: "Остановлен"
    },
    version: "версия"
}
    , KI = {
    link: {
        homepage: "Официальный сайт",
        support: "Справка по прошивке",
        telegram: "Телеграмм канал"
    },
    tagSoon: "Скоро",
    title: "Техническая поддержка"
}
    , ZI = {
    activation: {
        activateConfirm: "Активировать гарантию сейчас?",
        errorUnable: "Не удалось активировать гарантию"
    },
    badge: "Недоступно на гарантии",
    modal: {
        agreeCheckbox: "Разблокировать все функции с потерей гарантии",
        buttonUnLock: "Разблокировать все функции",
        notReversible: "Внимание! Процесс не обратим!",
        p1: "Данное оборудование под гарантией сервисного центра. Разблокировка дополнительных функций возможна после окончания срока гарантии или вы можете разблокировать их прямо сейчас.",
        p2: "При разблокировки дополнительных функций - во время гарантийного срока , вы автоматически лишаетесь гарантийного обслуживания",
        subtitle: "Внимание гарантия!",
        title: "Внимание гарантия!",
        unlockWarranty: "Все функции разблокированы"
    }
}
    , JI = {
    Actions: LI,
    Confirm: MI,
    Dashboard: OI,
    Dialog: RI,
    Error404: NI,
    Errors: DI,
    Firmware: FI,
    Form: $I,
    HelpBar: BI,
    InfoBar: HI,
    Messages: VI,
    NA: zI,
    NavBar: WI,
    PlaceHolder: UI,
    ResetDialog: YI,
    Route: XI,
    Settings: jI,
    Sidebar: GI,
    StatusBar: qI,
    TechSupport: KI,
    Warranty: ZI
}
    , QI = {
    disable: "Вимкнути",
    enable: "Увімкнути",
    restart: "Перезапустити",
    start: "Запустити",
    stop: "Зупинити"
}
    , eP = {
    no: "НІ",
    warning: "Увага",
    yes: "OK"
}
    , tP = {
    best_share: {
        title: "BestShare"
    },
    boards: {
        NA: "Н/Д",
        allGood: "Всі чіпи стабільні",
        chipStatus: {
            grey: "Стабільні чіпи",
            orange: "Повільні чіпи",
            red: "Критичні чіпи",
            unknown: "Невідомо"
        },
        chipStatusTitle: "Статус чіпів",
        errors: "Помилки",
        freq: "Частота",
        power: "Споживання",
        status: {
            disabled: "Плата вимкнена",
            disconnected: "Плата відключена",
            initializing: "Ініціалізація",
            mining: "Майнінг",
            stopped: "Зупинена",
            unknown: "Невідомий"
        },
        tempBoard: "Температура плати",
        tempChips: "Температура",
        title: "Плата",
        noBoard: "Плата відсутня",
        undefinedChips: "Чіпи не визначені",
        volt: "Напруга"
    },
    chartChipTemp: {
        title: "Температура",
        chipTemp: "Температура",
        fanDuty: "Швидкість обертання"
    },
    chartHashrate: {
        title: "Хешрейт",
        hashrate: "Хешрейт",
        power: "Споживання",
        powerConsumption: "Споживання",
        watt: "Вт"
    },
    chartTest: {
        title: "ChartTest"
    },
    charts: {
        hours1: "1 г",
        hours12: "12 г",
        hours24: "24 г",
        hours3: "3 г",
        hours72: "72 г",
        range: "Діапазон:"
    },
    dev: {
        title: "DevFee"
    },
    editMode: {
        buttons: {
            cancel: "Вийти без збереження",
            exit: "Вийти без збереження",
            reset: "Скинути",
            save: "Готово",
            select: "Вибрати",
            widgets: "Віджети"
        },
        enterIcon: "Редагувати екран огляду",
        footer: {
            caption: "Режим редагування",
            hint: "віджети можна перетягувати, розтягувати та приховувати"
        },
        header: "Режим редагування",
        hideWidgetDialog: {
            cancel: "Скасувати",
            description: "Виберіть, на яких пристроях приховати цей віджет",
            header: "Приховати віджет?",
            submit: "Так, приховати!"
        },
        resetWidgetDialog: {
            cancel: "Скасувати",
            description: "Виберіть, на яких пристроях зробити скидання",
            header: "Скинути на типові налаштування?",
            submit: "Так, скинути!"
        },
        saveDialog: {
            cancel: "Ні",
            header: "Зберегти екран огляду?",
            submit: "Так, зберегти!"
        },
        transferDescription: "Після додавання потрібно перемістити вниз"
    },
    eff: {
        title: "Ефективність"
    },
    errors: {
        footer: "HW",
        title: "Помилки"
    },
    fans: {
        title: "Охолодження",
        fan: "Вентилятор",
        duty: "Швидкість",
        block: "Блок",
        temperature: "Температура",
        "inlet-outlet": "Вх.-Вих.",
        mode: "Режим:",
        auto: "Авто",
        manual: "Ручний",
        immersion: "Іммерсійний",
        missingCooler: {
            message: "У даній моделі не використовуються вентилятори",
            title: "Вентилятори відсутні"
        }
    },
    foundBlocks: {
        title: "FoundBlocks"
    },
    hashrate: {
        hashrateReal: "Поточ:",
        hashrateIdeal: "Теор:",
        shortTitle: "HR",
        title: "Хешрейт"
    },
    pools: {
        activate: "Перемкнути",
        active: "Активний",
        confirm: "Змінити активний пул?",
        disabled: "Вимкнений",
        message: "Пул буде змінений на: </br>",
        no: "Не змінювати",
        offline: "Офлайн",
        refund: "Повернення",
        rejecting: "Rejecting",
        status: "Статус",
        title: "Пули",
        unknown: "Невідомий",
        user: "користувач",
        working: "Робочий",
        yes: "Так, змінити!"
    },
    power: {
        desk: "Розрахункові дані",
        footer: "Вт",
        watt: "Вт",
        psu: "Блок живлення",
        title: "Споживання"
    },
    temp: {
        desk: "Плат:",
        footer: "°C | мін-макс",
        title: "Температура"
    },
    widgets: {
        Average_Hashrate: "Хешрейт",
        BestShare: "BestShare",
        Performance: "Продуктивність",
        ChartChiptemp: "Графік температури",
        ChartHashrate: "Графік хешрейту",
        ChartTest: "ChartTest",
        Coolers: "Охолодження",
        DEVFee: "DevFee",
        Efficiency: "Ефективність",
        Errors: "Помилки",
        FoundBlocks: "FoundBlocks",
        Plates: "Плати",
        Pools: "Пули",
        Power: "Споживання",
        Temperature: "Температура"
    },
    widgetsDialog: {
        selectAll: "Виділити все",
        title: "Віджети"
    }
}
    , sP = {
    cancel: "Скасувати",
    no: "Ні",
    save: "Зберегти",
    yes: "Так"
}
    , nP = {
    actionText: "Спробуйте оновити цю сторінку або перейти на іншу",
    text: "Сторінка не знайдена"
}
    , iP = {
    diff5: "Різниця температур повинна складати 5 або більше",
    wrongTopProfile: "Верхній профіль не може бути нижчим за поточний профіль",
    wrongMinProfile: "Мінімальний профіль не може бути вищим за поточний профіль",
    duplicate: "Вже існує",
    error: "Помилка",
    noLoop: "Дані не оновлюються",
    noLoopLogs: "Лог не оновлюється",
    noMethod: "Дані не оновилися",
    noSettings: "Помилка завантаження налаштувань майнера",
    noAutotunePresetData: "Помилка при отриманні пресетів автотюна",
    passNotSaved: "Пароль не збережено",
    someError: "Щось пішло не так",
    inputDiapason: "Значення повинно бути в діапазоні"
}
    , aP = {
    modal: {
        alertBeta: "Увага! Ця прошивка нестабільна і призначена тільки для тестів",
        releaseNote: "Що нового?",
        title: "Оновлення прошивки",
        titleFileName: "Файл прошивки:",
        update: "Оновлення",
        updateButton: "Оновити прошивку",
        updateButtonFlash: "Оновлення прошивки...",
        updateCheck: "Зберегти поточні налаштування",
        updateCheckNote: "Поточна конфігурація пристрою буде збережена після перепрошивки",
        updateText: "Перетягніть файл сюди або натисніть, щоб завантажити"
    },
    version: "Версія"
}
    , rP = {
    errorMessages: {
        invalidField: "Поле заповнено неправильно",
        invalidFieldWithExample: "Поле заповнено неправильно. Приклад: ",
        invalidLength: "Довжина {count} символів",
        invalidMaxLength: "Максимальна довжина {count} символів",
        invalidMinMaxValue: "Введене значення повинно бути в діапазоні: ",
        warningWorkerFormat: "Має нестандартний синтаксис",
        mismatch: "Паролі не співпадають",
        required: "Будь ласка, заповніть поле",
        wrongPassword: "Невірний пароль, спробуйте [admin] "
    }
}
    , oP = {
    title: "Довідка по прошивці"
}
    , lP = {
    events: {
        filter: "Фільтр:",
        placeHolder: "Поки немає подій",
        title: "Події за 24 години"
    },
    fan: {
        title: "Охолодження",
        fan: "Вентилятор",
        mode: "Режим",
        fanDuty: "Швидкість"
    },
    memory: {
        cacheMem: "Кешовано:",
        freemem: "Вільно:",
        fullMem: "ВСЬОГО",
        inuse: "Використовується",
        title: "Пам'ять"
    },
    monitoring: {
        errors: "Помилки",
        hashrateAvg: "Середній хешрейт",
        hashrateCurrent: "Поточний хешрейт",
        hashrateIdeal: "Теоретич. хешрейт",
        hashrateStock: "Стоковий хешрейт",
        power: "Споживання",
        tempBoard: "Темп. плат",
        tempChips: "Темп. чіпів",
        title: "Моніторинг"
    },
    network: {
        gateway: "Шлюз",
        hostname: "Ім'я хоста",
        labelIp: "IP-Адреса",
        labelMask: "Маска",
        mode: "Режим:",
        static: "Статика",
        title: "Стан мережі"
    },
    pin: "Зафіксувати",
    quickSettings: {
        UIEffects: "Оптимізація інтерфейсу",
        disable: "Вимкнено",
        enable: "Увімкнено",
        sidebarTheme: "Тема бокового меню",
        themeUI: "Тема інтерфейсу",
        title: "Швидкі дії"
    },
    systemInfo: {
        cgVersion: "Версія CGMiner",
        compileDate: "Дата збірки",
        filesystem: "Версія файлової системи",
        hardVersion: "Версія апаратної частини",
        hostname: "Ім'я хоста",
        installationType: "Тип встановлення",
        serialNumber: "Серійний номер",
        minerFirmware: "Прошивка",
        buildName: "Ім'я збірки",
        buildUUID: "UUID збірки",
        minerType: "Модель",
        psuModel: "Модель БЖ",
        psuSerial: "Серійний номер БЖ",
        os: "ОС",
        platform: "Платформа",
        title: "Системна інформація"
    }
}
    , cP = {
    added: "Додано...",
    applied: "Перезапуск майнінгу",
    autotuneReset: "Налаштування профілів скинуті",
    firmwareUpdate: "Оновлення прошивки",
    keyDeleted: "Ключ видалено",
    logsClear: "Лог успішно очищений",
    logsCopied: "Лог скопійовано в буфер",
    logsNotCopied: "Неможливо скопіювати лог в буфер",
    poolSwitch: "Пул успішно змінився",
    reboot: "Перезавантаження...",
    reset: "Скидання...",
    restart: "Перезапуск...",
    restore: "Оновлення...",
    saved: "Налаштування збережено",
    start: "Запуск",
    stop: "Зупинка майнінгу..."
}
    , uP = "Н/Д"
    , dP = {
    action: {
        apply: "Застосувати",
        lockUI: "Заблокувати пристрій",
        lockUIDialog: {
            button: "Заблокувати",
            message: "Пристрій заблоковано!",
            text: "Налаштування та параметри пристрою будуть неактивними для їх редагування",
            title: "Заблокувати пристрій?"
        },
        reboot: "Повне перезавантаження",
        restart: "Перезапустити майнінг",
        restartDialog: {
            apply: {
                no: "Скасувати",
                title: "Застосувати і перезапустити майнінг?",
                yes: "Так, перезапустити!"
            },
            reboot: {
                no: "Скасувати",
                title: "Перезавантажити майнер?",
                yes: "Так, перезавантажити!"
            },
            restart: {
                no: "Скасувати",
                title: "Перезапустити майнінг?",
                yes: "Так, перезапустити!"
            },
            start: {
                no: "Скасувати",
                title: "Запустити майнінг?",
                yes: "Так, запустити!"
            },
            stop: {
                no: "Скасувати",
                title: "Зупинити майнінг?",
                yes: "Так, зупинити!"
            }
        },
        save: "Зберегти",
        start: "Запустити майнінг",
        stopped: "Зупинити майнінг",
        unlockUI: "Розблокувати",
        unlockUIDialog: {
            desc: "Без пароля доступний лише моніторинг",
            label: "Введіть пароль для отримання повного доступу",
            tooIncorrectPassword: "Забагато спроб неправильного пароля.",
            tryAgain: "Спробуйте ще раз через",
            message: "Пристрій розблоковано!",
            password: "Пароль",
            title: "Розблокувати пристрій?"
        }
    },
    chipsNumber: "Нумерація чіпів на платах",
    columnMode: "Схема вікна огляду",
    gridMode: "Сітка",
    infoBarTooltip: "Інформаційна панель",
    listMode: "Список"
}
    , hP = {
    noData: {
        actionText: "Необхідно зачекати на запуск майнера",
        text: "Немає даних для відображення"
    },
    noWidgets: {
        actionText: "Виберіть віджети з меню для їх відображення",
        text: "Немає віджетів для відображення"
    }
}
    , fP = {
    no: "Не скидати",
    question: "Скинути зміни?",
    yes: "Так, скинути!"
}
    , pP = {
    404: "Сторінка не знайдена",
    Advanced: "Розширені",
    Cooling: "Охолодження",
    Dashboard: "Огляд",
    General: "Загальні",
    Mining: "Майнінг",
    Network: "Мережа",
    Others: "Інше",
    Pools: "Пули",
    Security: "Безпека",
    Settings: "Налаштування",
    System: "Система",
    performance: "Продуктивність"
}
    , gP = {
    advanced: {
        titleTab: "Розширені",
        warningDescription: "Будь-які зміни в даному розділі ви робите на свій страх і ризик"
    },
    change: {
        button: "Скинути"
    },
    cooling: {
        auto: "Авто",
        checkSpeed: "Перевірка швидкості вентиляторів",
        default: "за замовчуванням",
        immersive: "Іммерсійний",
        labelMode: "Режим роботи вентиляторів",
        manual: "Ручний",
        minFanCount: "Мінімальна кількість вентиляторів",
        minFanCountDesc: "Необхідно, якщо кількість вентиляторів нестандартна",
        targetTemp: "Цільова температура",
        fanDuty: "Швидкість обертання",
        fanDutyRange: "Обмежити швидкість вентиляторів",
        modeDesc: "Авто за замовчуванням",
        silentMode: "Тихий режим при старті",
        title: "Управління вентиляторами",
        titleTab: "Охолодження"
    },
    general: {
        backup: {
            backup: {
                button: "Створити архів",
                config: "backup",
                desk: "Натисніть [Створити архів], щоб завантажити архів tar з поточних файлів конфігурації",
                title: "Резервне копіювання налаштувань"
            },
            collapse: "Згорнути панель",
            expand: "Розгорнути панель",
            reset: {
                button: "Скинути",
                desk: "Щоб скинути прошивку до початкового стану, натисніть [Скинути]",
                popup: {
                    message: "Після скидання, майнер буде працювати на заводських налаштуваннях",
                    no: "Скасувати",
                    title: "Підтвердьте скидання налаштувань",
                    yes: "Так, скинути!"
                },
                title: "Скидання налаштувань"
            },
            resetToStock: {
                button: "Скинути на сток",
                desk: "Після натискання на [Скинути на сток], майнер повернеться до оригінальної прошивки після перезавантаження",
                popup: {
                    message: "Після скидання майнер буде працювати на заводській прошивці",
                    no: "Скасувати",
                    title: "Підтвердьте скидання прошивки",
                    yes: "Так, скинути!"
                },
                title: "Повернутися на стокову прошивку"
            },
            restore: {
                button: "Відновити",
                desk: "Щоб відновити файли конфігурації, завантажте раніше створений архів резервних копій",
                dialog: {
                    button: "Відновити налаштування",
                    title: "Відновлення налаштувань",
                    uploadText: "Вибрати файл налаштувань"
                },
                title: "Відновлення налаштувань"
            },
            title: "Бекап і відновлення",
            titleDesc: "Інструменти для управління налаштуваннями"
        },
        chipsNumber: "Показувати номера чипів на платах",
        chipsNumberDesc: "Для зручності роботи зі схемою розташування чипів",
        enableUIEffects: "Оптимізація інтерфейсу",
        enableUIEffectsDesc: "Вимикає анімацію та ефекти інтерфейсу",
        lang: {
            en: "English",
            fa: "فارْسِى",
            ru: "Русский",
            ua: "Україньска"
        },
        regional: {
            sidebar: "Бокова панель",
            sidebarTheme: "Темна бокова панель",
            sidebarThemeDesc: "Застосовується лише в світлій темі",
            timezone: "Часовий пояс",
            timezoneDesc: "Впливає на час подій і логів пристрою",
            title: "Регіональні налаштування",
            uiLang: "Мова інтерфейсу",
            uiLangDesc: "За початкову опцію використовується мова браузера",
            uiSettings: "Зовнішній вигляд",
            uiTheme: "Тема інтерфейсу",
            uiThemeDesc: "Auto - використовує тему операційної системи",
            uiThemes: {
                auto: "Авто",
                dark: "Темна",
                light: "Світла"
            }
        },
        titleTab: "Загальні"
    },
    network: {
        dhcpDesc: "Автоматичне налаштування мережі",
        gateway: "Шлюз",
        hostname: "Ім'я хоста",
        hostnameDesc: "Відображається в заголовку браузера",
        labelIp: "IP-Адреса",
        labelMask: "Маска",
        networkRestore: {
            note: "При помилці нових мережевих параметрів поверне попередні налаштування",
            title: "Виконувати перевірку мережевих налаштувань"
        },
        networkTest: {
            button: "Тест мережі",
            desk: "З іншого боку, розведене значною часткою емпатії, раціональне мислення говорить про можливості нових пропозицій",
            dialog: {
                button: "Запуск",
                netFunction: "Мережева утиліта",
                noValue: "anthill.farm",
                nslookup: "Nslookup",
                ping: "Ping",
                testPage: "Хост",
                title: "Тестування мережі",
                traceroute: "Traceroute"
            },
            title: "Тест мережевого підключення"
        },
        title: "Налаштування мережі",
        titleTab: "Мережа"
    },
    others: {
        control: {
            checkChip: "Виправляти чіпи з низьким хешрейтом",
            fixPeriod0: "Не задано",
            fixPeriod1: "Кожні півгодини",
            fixPeriod2: "Кожну годину",
            fixPeriod3: "Кожні три години",
            fixPeriod4: "Кожні 6 годин",
            fixPeriod5: "Кожні 12 годин",
            fixPeriod6: "Кожен день",
            maxRestartAttempts: "Макс. кількість перезавантажень",
            minOperationalChains: "Мінімальна кількість робочих чейнів",
            minOperationalChainsDesc: "Зупинити майнер, коли кількість робочих чейнів буде менша за",
            noValue: "Не задано",
            restart: "Перезапуск при низькому хешрейті",
            restartDesc: "Поріг хешрейту вказується вручну",
            tempOff: "Критична температура чіпів",
            tempOffDesc: "Рекомендований діапазон 50-120°C, за замовчуванням 90°C",
            title: "Контроль"
        },
        others: {
            defaultValue: "СТАНДАРТНЕ ЗНАЧЕННЯ",
            isPowerSupplyModified: "Модифікований БП [LC]",
            isPowerSupplyModifiedDesc: "Модифікований блок живлення дозволяє видачу більшої потужності",
            isResumeMiningAfterReboot: "Продовжити майнінг після перезавантаження",
            maxStartupDelayTime: "Максимальний час затримки перед запуском майнінгу",
            maxStartupDelayTimeDesc: "Діапазон 0-300 с, за замовчуванням: 0 с",
            nominal: "СКАСУВАТИ НА НОМІНАЛЬНУ:",
            nominalVolt: "НОМІНАЛЬНЕ ЗНАЧЕННЯ",
            offAdjustVoltageByTemp: "Адаптувати напругу за температурою",
            offBreak: "Перевіряти цілісність ланцюгів",
            offChips: "Попередній прогрів чіпів",
            offPreset: "Ігнорувати мінімальну напругу з профілю",
            offQuickStart: "Швидкий запуск",
            offTempSensor: "Увімкнути перевірку темп. сенсорів",
            checkBalanceDomains: "Перевіряти балансування доменів",
            offVolt: "Перевіряти налаштування напруги",
            quietMode: "Тихий режим",
            quietModeDescription: "Швидкість кулерів на 50% при запуску або зупинці пристрою",
            seconds: "с",
            setDefault: "СКАСУВАТИ НА СТАНДАРТНІ:",
            skipInvalidTempSensors: "Ігнорувати неробочі температурні сенсори",
            ignoreChipTempSensors: "Ігнорувати температурні сенсори на чіпах",
            downscalePresetOnFailure: "Знижувати профіль при помилці",
            downscalePresetOnFailureDescription: "Автоматичне зниження профілю у випадку перегріву або помилки",
            startVoltOffset: "Підвищувати напругу чіпів при старті",
            title: "Інше",
            tunerChipHashrateThreshold: "Поріг хешрейту поганого чіпа тюнера",
            autoChipThrottling: "Автоматичне регулювання потужності чіпа"
        },
        titleTab: "Інше"
    },
    performance: {
        advance_settings: {
            title: "Розширені налаштування"
        },
        autoProfile: {
            downProfile: "Знижувати профіль",
            downProfileFan: "Якщо швидкість кулерів вища",
            downProfileTemp: "Знижувати, якщо температура вища",
            downProfileTune: "При невдалому тюнінгу",
            optionsHeader: "Опції автоперемикання профілів",
            profileDownTemp: "Температура зниження профілю",
            profileDownTempRange: "Повинно бути в діапазоні",
            profileUpTemp: "Температура підняття профілю",
            switch: "Автоперемикання профілів",
            switchDescription: "Перемикає в залежності від температури",
            upProfile: "Підвищувати профіль",
            upProfileFan: "Якщо швидкість кулерів нижча",
            upProfileLimit: "Піднімати не вище",
            upProfileLimitDescription: "Верхня межа підняття профілю",
            upProfileTemp: "Піднімати, якщо температура нижча",
            watchTimer: "Час вимірювання параметрів",
            watchTimerDescription: "Повинно бути в діапазоні 1-10 хвилин",
            switcherPowerDelta: "Допустиме перевищення споживання",
            switcherPowerDeltaDesc: "від номінального, зазначеного у пресеті",
            autochangeTopPreset: "Перевизначати топ пресет",
            autochangeTopPresetDescription: "У разі помилки знизити топ пресет до останнього стабільного",
            ignoreFanSpeed: "Ігнорувати швидкість кулерів",
            ignoreFanSpeedDescription: "Ігнорування швидкості кулерів при зниженні/підвищенні пресету"
        },
        board: {
            chipPopper: {
                chip: "Чіп",
                domainFreq: "Частота домену",
                errors: "Помилки",
                freq: "Частота чіпа",
                hashrate: "Хешрейт",
                chip_temp: "Темп. чипів",
                reset: "Скинути налаштування чіпа",
                temperature: "Темп.",
                useGlobal: "Використовувати частоту плати",
                usingGlobal: "Використовується частота плати"
            },
            forAllBoard: "Застосувати до всіх плат",
            operations: "Операції",
            resetChipsToZero: "Скинути налаштування чіпів",
            resetAllChain: "Скинути всі налаштування",
            undoChanges: "Скасувати зміни",
            platePopper: {
                plateFrequency: "ЧАСТОТА ПЛАТИ",
                plateVoltage: "НАПРУГА ПЛАТИ",
                reset: "Скинути частоту плати",
                useGlobal: "ВИКОРИСТОВУВАТИ ГЛОБАЛЬНУ",
                usingGlobal: "ВИКОРИСТОВУЄТЬСЯ ГЛОБАЛЬНА"
            },
            switchOn: "Увімкнено",
            title: "Плата",
            view: {
                errors: "Помилки",
                freq: "Частоти",
                hashrate: "Хешрейт",
                chip_temp: "Heatmap",
                temperature: "Сенсори",
                title: "Вид плати"
            },
            stockInfo: {
                title: "Стокові дані"
            }
        },
        freq: "ГЛОБАЛЬНА ЧАСТОТА",
        nominal: "СКАСУВАТИ НА НОМІНАЛЬНУ:",
        nominalFreq: "НОМІНАЛЬНА ЧАСТОТА",
        nominalVolt: "НОМІНАЛЬНЕ НАПРУГА",
        profile: {
            attention: "* LC - Тільки для модифікованого БП",
            description: "Стандартний блок живлення",
            descriptionAlt: "Модифікований блок живлення",
            longLabel: "Профіль розгону",
            noProfile: "Без профілю",
            shortLabel: "Профіль:",
            tuned: "налаштовано",
            limitlessProfile: "Без обмежень"
        },
        title: "Налаштування розгону",
        titleTab: "Продуктивність",
        tuneDialog: {
            active: "поточний",
            markAll: "Виділити все",
            noData: "Немає налаштованих профілів",
            reset: "Скинути",
            resetAndRestart: "Скинути і перезапустити",
            title: "Скидання налаштувань автотюна"
        },
        tunerLogs: "Лог тюнера",
        voltage: "ГЛОБАЛЬНА НАПРУГА"
    },
    pools: {
        address: "Пул:",
        changeIndex: "Змінити порядок",
        desc: "Пріоритет пулів управляється порядком у списку, методом перетягування",
        name: "Воркер",
        password: "Пароль",
        saveIndex: "Зберегти порядок",
        title: "Список пулів",
        titleTab: "Пули"
    },
    security: {
        api: {
            buttonAdd: "Додати новий ключ",
            deleteConfirm: {
                desk: "Після видалення скористатися ключем не вдасться",
                no: "Відміна",
                title: "Видалити ключ?",
                yes: "Так, видалити!"
            },
            desk: "Опис для чого цей ключ потрібен і як його використовувати...",
            dialog: {
                description: "API ключ повинен складатися строго з 32 символів. Опис ключа -обов'язкове поле!",
                descriptionPlaceHolder: "не визначено",
                keyPlaceHolder: "поле введення ключа",
                labelDesc: "Опис ключа",
                labelKey: "API ключ",
                title: "Новий API ключ"
            },
            labelPort: "SSH порт",
            title: "Ключі API"
        },
        password: {
            desk: "Змінює пароль адміністратора для доступу до пристрою",
            labelCurrPass: "Поточний пароль",
            labelNewPass: "Новий пароль",
            title: "Змінити пароль доступу"
        },
        titleTab: "Безпека"
    }
}
    , mP = {
    Warranty: {
        button: "На гарантії",
        buttonActivate: "Активувати гарантію"
    },
    menu: {
        actions: "Функції",
        collapsedTitle: "Меню",
        dashboard: "Огляд",
        findMiner: "Знайти майнер",
        integration: "Інтеграції",
        mining: "Майнінг",
        settings: "Налаштування",
        support: "Тех. підтримка",
        system: "Система",
        title: "Моніторинг",
        update: "Центр оновлень"
    }
}
    , vP = {
    collapse: "Згорнути логи",
    expand: "Розгорнути логи",
    logs: {
        clearLogs: "Очистити",
        copyAll: "Скопіювати лог",
        doClearLogs: "Очистити логи",
        markAll: "Виділити все",
        tabs: {
            autotune: "Автотюнінг",
            miner: "Майнер",
            status: "Статус",
            system: "Система"
        },
        title: "Логи"
    },
    model: "модель",
    report: {
        button: "Звіт",
        desk: "З іншого боку, розбавлене значною долею емпатії, раціональне мислення говорить про можливості нових пропозицій",
        dialog: {
            back: "Ще раз",
            button: "Створити звіт",
            desc: "Щоб допомогти вирішити вашу проблему швидше, вам потрібно створити діагностичний звіт і відправити його нам. Детально опишіть суть проблеми та іншу важливу на ваш погляд інформацію",
            download: "Завантажити",
            issue: "Опис проблеми",
            report: "звіт",
            title: "Створити звіт"
        },
        title: "Діагностичний звіт"
    },
    releaseNotes: {
        placeHolder: {
            header: "Немає даних про реліз",
            description: "Сервер даних релізів недоступний"
        }
    },
    status: {
        "auto-tuning": "Автотюнінг",
        d: "д",
        disconnect: "Немає з'єднання",
        failure: "Помилка",
        findMiner: "Пошук майнера",
        h: "г",
        initializing: "Ініціалізація",
        m: "хв",
        mining: "Майнінг",
        restarting: "Перезапуск",
        "shutting-down": "Зупиняється",
        starting: "Запуск",
        stopped: "Зупинено"
    },
    version: "версія"
}
    , bP = {
    link: {
        homepage: "Офіційний сайт",
        support: "Довідка з прошивки",
        telegram: "Telegram канал"
    },
    tagSoon: "Незабаром",
    title: "Технічна підтримка"
}
    , yP = {
    activation: {
        activateConfirm: "Активувати гарантію зараз?",
        errorUnable: "Не вдалося активувати гарантію"
    },
    badge: "Недоступно на гарантії",
    modal: {
        agreeCheckbox: "Розблокувати всі функції з втратою гарантії",
        buttonUnLock: "Розблокувати всі функції",
        notReversible: "Увага! Процес незворотній!",
        p1: "Це обладнання під гарантією сервісного центру. Розблокування додаткових функцій можливо після закінчення терміну гарантії або ви можете розблокувати їх прямо зараз.",
        p2: "При розблокуванні додаткових функцій - під час гарантійного терміну, ви автоматично втрачаєте гарантійне обслуговування",
        subtitle: "Увага гарантія!",
        title: "Увага гарантія!",
        unlockWarranty: "Всі функції розблоковані"
    }
}
    , xP = {
    Actions: QI,
    Confirm: eP,
    Dashboard: tP,
    Dialog: sP,
    Error404: nP,
    Errors: iP,
    Firmware: aP,
    Form: rP,
    HelpBar: oP,
    InfoBar: lP,
    Messages: cP,
    NA: uP,
    NavBar: dP,
    PlaceHolder: hP,
    ResetDialog: fP,
    Route: pP,
    Settings: gP,
    Sidebar: mP,
    StatusBar: vP,
    TechSupport: bP,
    Warranty: yP
}
    , wP = {
    disable: "غير فعال",
    enable: "فعال",
    restart: "راه اندازي مجدد",
    start: "شروع",
    stop: "توقف"
}
    , SP = {
    no: "خير",
    warning: "اخطار",
    yes: "باشه"
}
    , _P = {
    best_share: {
        title: "بهترين سهام"
    },
    boards: {
        NA: "N/A",
        allGood: "تمامي چيپ ها در وضعيت نرمال هستند",
        chipStatus: {
            grey: "چيپ هاي پايدار",
            orange: "چيپ هاي ضعيف",
            red: "چيپ هاي بحراني",
            unknown: "ناشناخته"
        },
        chipStatusTitle: "وضعيت چيپ ها",
        errors: "ارور ها",
        freq: "فرکانس",
        power: "مصرف",
        status: {
            disabled: "غيرفعال شده",
            disconnected: "بدون تخته",
            initializing: "مقدار دهي اوليه",
            mining: "ماينينگ",
            stopped: "متوقف شده",
            unknown: "ناشناخته"
        },
        tempBoard: "دماي بوردها",
        tempChips: "دما",
        title: "هشبورد",
        noBoard: "بدون تخته",
        undefinedChips: "چيپ هاي تعريف نشده",
        volt: "ولتاژ"
    },
    chartChipTemp: {
        title: "دما",
        chipTemp: "دما",
        fanDuty: "سرعت"
    },
    chartHashrate: {
        title: "هشريت",
        hashrate: "هشريت",
        power: "قدرت",
        powerConsumption: "Power Consumption",
        watt: "W"
    },
    chartTest: {
        title: "نمودار تست"
    },
    charts: {
        hours1: "1 ساعته",
        hours12: "12 ساعته",
        hours24: "24 ساعته",
        hours3: "3 ساعته",
        hours72: "72 ساعته",
        range: "بازه:"
    },
    dev: {
        title: "DevFee"
    },
    editMode: {
        buttons: {
            cancel: "لغو کردن",
            exit: "بدون ذخيره کردن خارج شويد",
            reset: "پيش فرض ها",
            save: "ذخيره",
            select: "انتخاب",
            widgets: "ماژول ها"
        },
        enterIcon: "ويرايش طراحي داشبورد",
        footer: {
            caption: "حالت ويرايش طراحي",
            hint: "شما مي توانيد ماژول ها را,جابجا,مقايسه يا مخفي کنيد"
        },
        header: "ويرايش حالت",
        hideWidgetDialog: {
            cancel: "لغو کردن",
            description: "لطفا انتخاب کنيد کدام يک را مي خواهيد مخفي کنيد",
            header: "مخفي کردن ماژول ها؟",
            submit: "بله, مخفي کن"
        },
        resetWidgetDialog: {
            cancel: "لغو کردن",
            description: "لطفا انتخاب کنيد کدام يک به حالت پيش فرض بازگردد",
            header: "به طراحي پيش فرض اوليه بازگردد؟",
            submit: "بله, بازگردد"
        },
        saveDialog: {
            cancel: "خير",
            header: "طراحي داشبورد ذخيره شود؟",
            submit: "بله, ذخيره شود"
        },
        transferDescription: "پس از اضافه کردن، باید به سمت پایین حرکت کنید"
    },
    eff: {
        title: "کارايي"
    },
    errors: {
        footer: "HW",
        title: "ارورها"
    },
    fans: {
        title: "فن ها",
        fan: "فن",
        duty: "سرعت کاري فن ها",
        block: "Block",
        temperature: "دما",
        "inlet-outlet": "داخل-خارج",
        mode: "حالت:",
        auto: "خودکار",
        manual: "دستي",
        immersion: "حالت قوطه وري",
        missingCooler: {
            message: "اين مدل از خنک کننده استفاده نمي کند",
            title: "بدون خنک کننده"
        }
    },
    foundBlocks: {
        title: "بلاک هاي پيدا شده"
    },
    hashrate: {
        hashrateReal: "کنوني:",
        hashrateIdeal: "Theor:",
        shortTitle: "HR",
        title: "هشريت"
    },
    pools: {
        activate: "فعال شده",
        active: "فعال",
        confirm: "تغير استخر فعال؟",
        disabled: "غيرفعال شه",
        message: "استخر به اين حالت تغيير خواهد کرد:</br>",
        no: "تغير ندهيد",
        offline: "آفلاين",
        refund: "بازپرداخت",
        rejecting: "رد  شدن",
        status: "وضعيت",
        title: "استخرها",
        unknown: "ناشناخته",
        user: "نام کاربري",
        working: "زنده",
        yes: "بله, تغيير دهيد"
    },
    power: {
        desk: "داده برآورد شده",
        footer: "W",
        watt: "W",
        psu: "منبع تغذیه",
        title: "پاور"
    },
    temp: {
        desk: "بورد:",
        footer: "°C | کمترين-بيشترين",
        title: "دما"
    },
    widgets: {
        Average_Hashrate: "ميانگين هشريت",
        BestShare: "بهترين سهام",
        Performance: "کارایی",
        ChartChiptemp: "نمودار دما",
        ChartHashrate: "نمودار هشريت",
        ChartTest: "نمودار تست",
        Coolers: "فن ها",
        DEVFee: "DevFee",
        Efficiency: "کارايي",
        Errors: "ارورها",
        FoundBlocks: "بلاک پيدا شده",
        Plates: "بوردها",
        Pools: "استخرها",
        Power: "پاور",
        Temperature: "دما"
    },
    widgetsDialog: {
        selectAll: "انتخاب همه",
        title: "ماژول ها"
    }
}
    , kP = {
    cancel: "لغو",
    no: "خير",
    save: "ذخيره",
    yes: "بله"
}
    , CP = {
    actionText: "سعي کنيد اين را به روز يا به صفحه ديگري برويد",
    text: "صفحه مورد نظر يافت نشد"
}
    , AP = {
    duplicate: "سعي کنيد موارد تکراري اضافه کنيد",
    error: "ارور",
    noLoop: "داده به روز نمي باشد",
    noLoopLogs: "گزارش ها به روز نمي باشد",
    noMethod: "داده به روز نمي باشد",
    noSettings: "خطا در بارگیری تنظیمات ماینر",
    noAutotunePresetData: "خطا در تنظیم خودکار داده های از پیش تنظیم شده",
    passNotSaved: "پسوورد ذخيره نشد",
    someError: "مشکلي پيش آمده است",
    diff5: "تفاوت دما باید 5 یا بیشتر باشد",
    inputDiapason: "مقدار ورودی باید در دیاپاسون باشد"
}
    , EP = {
    modal: {
        alertBeta: "توجه!!! اين سيستم عامل در حال حاضر به طور کامل پايدار نيست و در حال تست مي باشد",
        releaseNote: "موارد جديد؟",
        title: "آپديت فريمور",
        titleFileName: "فايل فريمور",
        update: "آپديت",
        updateButton: "فلش ماينر",
        updateButtonFlash: "به روز رسانی سیستم عامل.",
        updateCheck: "تنظيمات کنوني ماينر حفظ شود",
        updateCheckNote: "تنظيمات کنوني ماينر بعد از فلش حفظ خواهد شد",
        updateText: "فايل را انتخاب و اينجا رها کنيد يا براي آپلود کليک کنيد"
    },
    version: "ورژن"
}
    , TP = {
    errorMessages: {
        invalidField: "فيلد نامعتبر است",
        invalidFieldWithExample: "فيلد به صورت نادرست پر شده است. براي مثال :",
        invalidLength: "حداقل تعداد کاراکتر {count} مي باشد",
        invalidMaxLength: "حداکثر تعداد کاراکتر {count} مي باشد",
        invalidMinMaxValue: "مقدار ورودی باید در محدوده باشد",
        warningWorkerFormat: "با استاندارد همخوانی ندارد",
        mismatch: "پسووردها يکسان نيست",
        required: "لطفا مقدار را وارد کنيد",
        wrongPassword: "پسوورد اشتباه است. لطفا گزينه ‹admin› را امتحان کنيد"
    }
}
    , IP = {
    title: "پشتيباني فريمور"
}
    , PP = {
    events: {
        filter: "فيلتر:",
        placeHolder: "تحولي موجود نيست",
        title: "رويدادهاي 24 ساعت گذشته"
    },
    fan: {
        title: "فن ها",
        fan: "فن",
        mode: "حالت",
        fanDuty: "فهرست"
    },
    memory: {
        cacheMem: "ذخيره شده:",
        freemem: "آزاد:",
        fullMem: "کل",
        inuse: "در حال استفاده",
        title: "مموري"
    },
    monitoring: {
        errors: "ارورها",
        hashrateAvg: "هشريت",
        hashrateCurrent: "هشريت کنوني",
        hashrateIdeal: "Theoretical hashrate",
        hashrateStock: "هش ریت سهام",
        power: "پاور",
        tempBoard: "دماي هشبورد",
        tempChips: "دماي چيپ ها",
        title: "مانيتورينگ"
    },
    network: {
        gateway: "Gateway",
        labelIp: "IP",
        labelMask: "Netmask",
        mode: "حالت:",
        static: "Static",
        title: "وضعيت شبکه"
    },
    pin: "سنجاق کردن",
    quickSettings: {
        UIEffects: "بهينه سازي رابط کاربري",
        disable: "غير فعال کردن",
        enable: "فعال کردن",
        sidebarTheme: "ظاهر منو کنار",
        themeUI: "ظاهر رابط کاربري",
        title: "اقدامات سريع"
    },
    systemInfo: {
        cgVersion: "CGMiner version",
        compileDate: "ساخته شد",
        filesystem: "نسخه فايل سيستم",
        hardVersion: "نسخه سخت افزار",
        hostname: "نام ميزبان",
        installationType: "نوع نصب",
        serialNumber: "شماره سریال",
        minerFirmware: "فريمور",
        buildName: "Build name",
        buildUUID: "Build UUID",
        psuModel: "مدل PSU",
        psuSerial: "شماره سریال PSU",
        minerType: "نوع ماينر",
        os: "سيستم عامل",
        platform: "پلتفرم",
        title: "اطلاعات سيستم"
    }
}
    , LP = {
    added: "اضافه شد...",
    applied: "راه اندازي مجدد ماينينگ",
    autotuneReset: "بازنشاني انجام شد",
    firmwareUpdate: "فريمور در حال بروز رساني مي باشد",
    keyDeleted: "کليد حذف شد",
    logsClear: "گزارش ها پاک شد",
    logsCopied: "گزارش ها در حافظه ذخيره شد",
    logsNotCopied: "عدم ذخيره گزارش ها در حافظه",
    poolSwitch: "استخر فعال تغيير کرد",
    reboot: "راه اندازي مجدد سخت افزار...",
    reset: "بازنشاني...",
    restart: "راه اندازي مجدد نرم افزار...",
    restore: "بازگرداندن...",
    saved: "تنظيمات ذخيره شد",
    start: "راه اندازي",
    stop: "در حال توقف ماينينگ..."
}
    , MP = "N/A"
    , OP = {
    action: {
        apply: "اعمال",
        lockResult: "ماينر با موفقيت قفل شد",
        lockUI: "قفل کردن ماينر",
        lockUIDialog: {
            button: "قفل کردن",
            message: "ماينر با موفقيت قفل شد",
            text: "تنظيمات و پارامترهاي دستگاه براي ويرايش آنها غيرفعال خواهند بود",
            title: "قفل کردن دستگاه؟"
        },
        reboot: "ريستارت سخت افزار",
        restart: "ريستارت نرم افزار",
        restartDialog: {
            apply: {
                no: "لغو کردن",
                title: "اعمال تنظيمات و ريستارت؟",
                yes: "بله , ريستارت کن"
            },
            reboot: {
                no: "لغو کردن",
                title: "ريستارت سخت افزار؟",
                yes: "بله , ريستارت کن"
            },
            restart: {
                no: "لغو کردن",
                title: "ريستارت ماينينگ؟",
                yes: "بله ريستارت کن"
            },
            start: {
                no: "لغو کردن",
                title: "شروع ماينينگ؟",
                yes: "بله , شروع کن"
            },
            stop: {
                no: "لغو کردن",
                title: "توقف ماينينگ؟",
                yes: "بله , متوقف کن"
            }
        },
        save: "ذخيره",
        start: "شروع ماينينگ",
        stopped: "توقف ماينينگ",
        unlockResult: "قفل ماينر باز شد",
        unlockUI: "بازکردن قفل ماينر",
        unlockUIDialog: {
            desc: "بدون وارد کردن پسوورد تنها مانيتورينگ قابل دسترس است",
            label: "براي دسترسي کامل به ماينر پسوورد خود را وارد کنيد",
            tooIncorrectPassword: "تعداد زیادی تلاش برای رمز عبور نادرست.",
            tryAgain: "لطفا دوباره سعی کنید در",
            message: "قفل ماينر باز شد",
            password: "پسوورد",
            title: "قفل کردن دستگاه؟"
        }
    },
    chipsNumber: "فهرست چيپ ها بر روي هشبورد",
    columnMode: "حالت نمايش داشبورد",
    gridMode: "شبکه ای ",
    infoBarTooltip: "نوار اطلاعات",
    listMode: "ليست"
}
    , RP = {
    noData: {
        actionText: "لطفا در هنگام راه اندازي مجدد ماينر شکيبا باشيد",
        text: "داده اي براي نمايش موجود نيست"
    },
    noWidgets: {
        actionText: "لطفا ماژول ها براي نمايش در داشبورد انتخاب کنيد",
        text: "ماژولي براي نمايش موجود نيست"
    }
}
    , NP = {
    no: "خير , مجدد تنظيم نکن",
    question: "تنظيم مجدد تغييرات؟",
    yes: "بله , مجدد تنظيم کن"
}
    , DP = {
    404: "صفحه مورد نظر يافت نشد",
    Advanced: "تنظيمات پيشرفته",
    Cooling: "تنظيمات دما و خ",
    Dashboard: "داشبورد",
    General: "عمومي",
    Mining: "ماينينگ",
    Network: "شبکه",
    Others: "ديگر",
    Pools: "استخر",
    Security: "امنيتي",
    Settings: "تنظيمات",
    System: "سيستم",
    performance: "کارايي پيشرفته"
}
    , FP = {
    advanced: {
        titleTab: "پيشرفته",
        warningDescription: "شما هرگونه تغيير و تنظيم در اين بخش را با مسئوليت خود انجام مي دهيد"
    },
    change: {
        button: "تنظيم مجدد"
    },
    cooling: {
        auto: "خودکار",
        checkSpeed: "بررسي و چک سرعت فن ها",
        default: "پيش فرض",
        immersive: "حالت غوطه وري",
        labelMode: "حالت خنک کننده",
        manual: "دستي",
        minFanCount: "حداقل تعداد فن",
        minFanCountDesc: "اگر تعداد فن ها مشخص نباشد ضروري مي باشد",
        targetTemp: "دماي هدف",
        fanDuty: "سرعت",
        fanDutyRange: "سرعت فن را محدود کنید",
        modeDesc: "خودکار به صورت پيش فرض",
        silentMode: "حالت فن بي صدا هنگام راه اندازي",
        title: "کنترل دما",
        titleTab: "خنک کنندگي"
    },
    general: {
        backup: {
            backup: {
                button: "ايجاد بايگاني",
                config: "پشتيبان",
                desk: "کليک  <strong> ايجاد بايگاني </strong> براي بارگذاري فايل بايگاني تنظيمات فعلي با فرمت tar ",
                title: "تنظيمات پشتيبان"
            },
            collapse: "حذف پنل",
            expand: "گسترش پنل",
            reset: {
                button: "تنظيم مجدد",
                desk: "براي بازنشاني مجدد فريمور , کليک کنيد<strong> تنظيم مجدد </strong>",
                popup: {
                    message: "بعد از تنظيم مجدد, ماينر با تنظيمات کارخانه ادامه کار خواهد داد",
                    no: "لغو کردن",
                    title: "تاييد بازگشت به تنظيمات کارخانه",
                    yes: "بله, مجدد تنظيم کردن"
                },
                title: "تنظيم مجدد"
            },
            resetToStock: {
                button: "بازگشت به فريمور کارخانه",
                desk: "براي بازگشت به فريمور کارخانه , کليک کنيد <strong> بازگشت به فريمور کارخانه </strong>",
                popup: {
                    message: "بعد از راه اندازي مجدد ماينر, با فريمور کارخانه اجرا خواهد شد",
                    no: "لغو کردن",
                    title: "تاييد بازگشت به فريمور کارخانه",
                    yes: "بله, بازگرد"
                },
                title: "بازگشت به فريمور کارخانه"
            },
            restore: {
                button: "بازگرداندن",
                desk: "براي بازگرداندن فايل هاي تنظيمات, مي توانيد فايل بايگاني ايجاد شده قبلي را بارگذاري کنيد",
                dialog: {
                    button: "بازگرداندن تنظيمات",
                    title: "بازگرداندن تنظيمات",
                    uploadText: "فايل تنظيمات را انتخاب کنيد"
                },
                title: "بازگرداندن تنظيمات"
            },
            title: "گرفتن و بازيابي پشتيبان",
            titleDesc: "ابزارها براي گرفتن و بازيابي پشتيبان تنظيمات دستگاه"
        },
        chipsNumber: "نمايش تعداد چيپ هاي هشبورد",
        chipsNumberDesc: "راحتي کار براي چيدمان بهتر چيپ ها",
        enableUIEffects: "بهينه سازي رابط کاربري",
        enableUIEffectsDesc: "غيرفعال کردن جلوه هاي انيميشني ظاهري ",
        lang: {
            en: "English",
            fa: "فارسي",
            ru: "Русский"
        },
        regional: {
            sidebar: "نوار کناري",
            sidebarTheme: "نوار کناري تيره",
            sidebarThemeDesc: "فقط براي ظاهر روشن اعمال مي شود",
            timezone: "منطقه زماني",
            timezoneDesc: "بر زمان نمايش رويدادها و گزارش ها تاثير خواهد گذاشت",
            title: "تنظيمات انتخاب منطقه",
            uiLang: "زبان رابط کاربري",
            uiLangDesc: "زبان پيش فرض مرورگر",
            uiSettings: "ظاهر",
            uiTheme: "Theme",
            uiThemeDesc: "خودکار - از تنظيمات سيستم عامل شما استفاده مي کند",
            uiThemes: {
                auto: "خودکار",
                dark: "تيره",
                light: "روشن"
            }
        },
        titleTab: "عمومي"
    },
    network: {
        dhcpDesc: "تنظيمات خودکار شبکه",
        gateway: "Gateway",
        hostname: "Hostname",
        hostnameDesc: "در عنوان مرورگر نمايش داده مي شود",
        labelIp: "IP Address",
        labelMask: "Mask",
        networkRestore: {
            note: "اگر تنظيمات جديد شبکه ناموفق باشد, به صورت خودکار تنظيمات قبلي اعمال خواهد شد",
            title: "بررسي تنظيمات شبکه"
        },
        networkTest: {
            button: "آزمايش شبکه",
            desk: "تفکر منطقي که با مقدار مناسبي از همفکري تلفيق شده است، از احتمالات پيشنهادهاي جديد صحبت مي کند.",
            dialog: {
                button: "شروع",
                netFunction: "ابزار شبکه",
                noValue: "anthill.farm",
                nslookup: "Nslookup",
                ping: "Ping",
                testPage: "Host",
                title: "آزمايش شبکه",
                traceroute: "Traceroute"
            },
            title: "آزمايش اتصال به شبکه"
        },
        title: "تنظيمات شبکه",
        titleTab: "شبکه"
    },
    others: {
        control: {
            checkChip: "تنظیم خودکار چیپ ها با بهره وری پایین تر",
            fixPeriod0: "غير فعال",
            fixPeriod1: "هر 30 دقيقه",
            fixPeriod2: "هر 1 ساعت",
            fixPeriod3: "هر 3 ساعت",
            fixPeriod4: "هر 6 ساعت",
            fixPeriod5: "هر 12 ساعت",
            fixPeriod6: "هر 1 روز",
            maxRestartAttempts: "حداکثر تعداد تلاش براي راه اندازي مجدد",
            minOperationalChains: "حداقل تعداد زنجیر کار",
            minOperationalChainsDesc: "اگر تعداد زنجیره‌های عملیاتی کمتر از این آستانه باشد، ماینر را به‌طور خودکار متوقف کنید",
            noValue: "تنظيم نشده",
            restart: "اگر هشريت کمتر از اين مقدار باشد, نرم افزار ماينر دوباره راه اندازي مي شود",
            restartDesc: "آستانه هشريت به صورت دستي تنظيم شود",
            tempOff: "دماي بحراني چيپ ها",
            tempOffDesc: "بازه پيشنهادي 50 تا 120 °C درجه سانتي گراد",
            title: "کنترل"
        },
        others: {
            defaultValue: "مقدار پيش فرض",
            isPowerSupplyModified: "پاور اصلاح شده است",
            isPowerSupplyModifiedDesc: "پاور اصلاح شده اين امکان را به شما مي دهد تا توان بيشتري دريافت کنيد",
            isResumeMiningAfterReboot: "پس از راه اندازي مجدد ماينينگ از سر گرفته شود",
            maxStartupDelayTime: "حداکثر زمان تاخیر قبل از راه اندازی ماینینگ",
            maxStartupDelayTimeDesc: "محدوده 0-300s، پیش فرض: 0s",
            nominal: "تنظیم مجدد به مقدار پیش فرض:",
            nominalVolt: "مقدار پیش فرض",
            offAdjustVoltageByTemp: "تطبيق ولتاژ با دما",
            offBreak: "بررسي عيب ها و يکپارچگي چيپ ها",
            offChips: "گرم کردن چيپ ها هنگام راه اندازي مجدد",
            offPreset: "حداقل ولتاژ پروفايل ها بررسي نشود",
            offQuickStart: "شروع سريع",
            offTempSensor: "روشن کردن بررسي دماي سنسورها",
            checkBalanceDomains: "بررسي تعادل ولتاژ دامين",
            offVolt: "بررسي تنظيمات ولتاژ",
            quietMode: "حالت بی صدا",
            quietModeDescription: "سرعت کولرها هنگام راه اندازی یا توقف دستگاه 50 درصد است",
            seconds: "s",
            setDefault: "تنظيم مجدد به پيش فرض:",
            skipInvalidTempSensors: "ناديده گرفتن سنسورهاي دماي معيوب",
            ignoreChipTempSensors: "سنسورهای دمای تراشه را نادیده بگیرید",
            downscalePresetOnFailure: "تنزل رتبه از پیش تعیین شده روی خطا",
            downscalePresetOnFailureDescription: "کاهش خودکار مشخصات در صورت گرم شدن بیش از حد ماینر یا خطای شکستن زنجیره",
            startVoltOffset: "ولتاژ جبران کننده هنگام راه اندازي",
            title: "ديگر",
            tunerChipHashrateThreshold: "تنظيم مجدد چيپ هاي ضعيف به اندازه",
            autoChipThrottling: "خنک کننده تراشه اتوماتیک"
        },
        titleTab: "ديگر"
    },
    performance: {
        advance_settings: {
            title: "تنظيمات پيشرفته"
        },
        autoProfile: {
            downProfile: "پروفايل پايين تر",
            downProfileFan: "اگر سرعت فن بالاتر است",
            downProfileTemp: "اگر دما بالاتر است",
            downProfileTune: "ناموفق در تنظيمات خودکار",
            optionsHeader: "گزینه های سوئیچینگ خودکار",
            profileDownTemp: "اگر دما بالا است پروفايل پايين تر انتخاب شود",
            profileDownTempRange: "باید در محدوده باشد",
            profileUpTemp: "اگر دما پايين است پروفايل بالاتر انتخاب شود",
            switch: "تعويض خودکار پروفايل",
            switchDescription: "بسته به دما سوئیچ می کند",
            upProfile: "پروفايل بالاتر",
            upProfileFan: "اگر سرعت فن پايين تر است",
            upProfileLimit: "تنظيمات پروفايل را بالاتر نبريد",
            upProfileLimitDescription: "حد بالایی ارتقاء نمایه",
            upProfileTemp: "اگر دما پايين تر است",
            watchTimer: "مدت زمان بررسی وضعیت",
            watchTimerDescription: "باید در محدوده 1-10 دقیقه باشد",
            switcherPowerDelta: "بیش از مصرف اسمی",
            switcherPowerDeltaDesc: "درصد ارزش تصوری"
        },
        board: {
            chipPopper: {
                chip: "چيپ",
                domainFreq: "فرکانس حلقه",
                errors: "ارورها",
                freq: "فرکانس",
                hashrate: "هشريت",
                chip_temp: "دمای تراشه",
                reset: "تنظيم مجدد تنظيمات چيپ",
                temperature: "دما",
                useGlobal: "از فرکانس حلقه استفاده کن",
                usingGlobal: "در حال استفاده از فرکانس حلفه"
            },
            forAllBoard: "براي همه هشبوردها اعمال شود",
            operations: "عمليات ها",
            resetChipsToZero: "تنظيم مجدد تنظيمات چيپ ها",
            resetAllChain: "تمام تنظیمات را بازنشانی کنید",
            undoChanges: "لغو تغييرات",
            platePopper: {
                plateFrequency: "فرکانس",
                plateVoltage: "ولتاژ",
                reset: "تنظيم مجدد فرکانس حلقه",
                useGlobal: "استفاده از تنظيمات کلي",
                usingGlobal: "در حال استفاده از تنظيمات کلي"
            },
            switchOff: "خاموش",
            switchOn: "روشن",
            title: "هشبورد",
            view: {
                errors: "ارورها",
                freq: "فرکانس",
                hashrate: "هشريت",
                chip_temp: "نقشه حرارت",
                temperature: "دما",
                title: "نمايش مشخصات چيپ"
            },
            stockInfo: {
                title: "داده های سهام"
            }
        },
        freq: "فرکانس پیش فرض",
        nominal: "تنظیم مجدد پیشفرض:",
        nominalFreq: "فرکانس پیش فرض",
        nominalVolt: "ولتاژ پیش فرض",
        profile: {
            attention: "* خنک شده توسط مايع - فقط براي پاور",
            longLabel: "پروفايل تنظيم خودکار:",
            noProfile: "غير فعال کردن",
            shortLabel: "پروفايل تنظيم خودکار",
            tuned: "تنظيم شده",
            limitlessProfile: "نامحدود"
        },
        title: "تنظيمات کارايي پيشرفته",
        titleTab: "کارايي پيشرفته",
        tuneDialog: {
            active: "فعال",
            markAll: "انتخاب همه",
            noData: "پروفايل تنظيم شده اي موجود نيست",
            reset: "تنظيم مجدد",
            resetAndRestart: "تنظيم و راه اندازي مجدد",
            title: "مديريت پروفايل"
        },
        tunerLogs: "گزارش ",
        voltage: "ولتاژ کلي"
    },
    pools: {
        address: "استخر:",
        changeIndex: "تغيير ترتيب استخر",
        desc: "شما مي توانيد ترتيب استخرهاي خود را با کشيدن و رها کردن مرتب کنيد",
        name: "ورکر",
        password: "پسوورد",
        saveIndex: "ترتيب ذخيره شود",
        title: "ليست استخر",
        titleTab: "استخر ها"
    },
    security: {
        api: {
            buttonAdd: "اضافه کردن کليد جديد",
            deleteConfirm: {
                desk: "بعد از حذف کليد ديگر قابل استفاده نخواهد بود",
                no: "خير",
                title: "حذف کليد؟",
                yes: "بله , پاک کن"
            },
            desk: "???????? ??? ???? ???? ???? ????? ? ??? ??? ????????????...",
            dialog: {
                description: "کليد حتما بايد شامل 32 کاراکتر باشد . توضيحات لازم است",
                descriptionPlaceHolder: "مديريت دسترسي از راه دور",
                keyPlaceHolder: "کليد خود را اينجا وارد کنيد",
                labelDesc: "توضيحات",
                labelKey: "کليد API",
                title: "کليد API جديد"
            },
            title: "کليد API"
        },
        password: {
            desk: "تغييز پسوورد يوزر دستگاه براي دسترسي به تنظيمات دستگاه",
            labelCurrPass: "پسوورد فعلي",
            labelNewPass: "پسوورد جديد",
            title: "تغيير پسوورد"
        },
        titleTab: "تنظيمات امنيتي"
    }
}
    , $P = {
    Warranty: {
        button: "گارانتي",
        buttonActivate: "فعال کردن گارانتي"
    },
    menu: {
        actions: "اقدامات",
        dashboard: "داشبورد",
        findMiner: "پيدا کردن دستگاه",
        integration: "ادغام",
        mining: "ماينينگ",
        settings: "تنظيمات",
        support: "پشتيباني فني",
        system: "سيستم",
        title: "مانيتورينگ",
        update: "آپديت فريمور"
    }
}
    , BP = {
    collapse: "کوچک کردن گزارش",
    expand: "باز کردن گزارش",
    logs: {
        clearLogs: "پاک کردن",
        copyAll: "کپي گزارش",
        doClearLogs: "پاک کردن گزارش",
        markAll: "انتخاب همه",
        tabs: {
            autotune: "تنظيمات خودکار",
            miner: "ماينر",
            status: "وضعيت",
            system: "سيستم"
        },
        title: "گزارش"
    },
    model: "مدل",
    report: {
        button: "ايجاد گزارش",
        desk: "تفکر منطقي که با مقدار مناسبي از همفکري تلفيق شده است، از احتمالات پيشنهادهاي جديد صحبت مي کند.",
        dialog: {
            back: "تلاش مجدد",
            button: "Create report",
            desc: "براي کمک به حل سريعتر مشکل خود، بايد يک گزارش تشخيصي ايجاد کنيد و آن را براي ما ارسال کنيد. اصل مشکل و ساير اطلاعات مهم را به تفصيل شرح دهيد",
            download: "دانلود",
            issue: "شرح مشکل ايجاد شده",
            report: "گزارش",
            title: "ايجاد گزارش"
        },
        title: "گزارش تشخيص"
    },
    releaseNotes: {
        placeHolder: {
            header: "جزئیات انتشار وجود ندارد",
            description: "سرور داده انتشار در دسترس نیست"
        }
    },
    status: {
        "auto-tuning": "تنظيم خودکار",
        d: "روز",
        disconnect: "ارتباط قطع شد",
        failure: "ارور",
        findMiner: "پيدا کردن ماينر",
        h: "ساعت",
        initializing: "مقدار دهي اوليه",
        m: "دقيقه",
        mining: "ماينينگ",
        restarting: "راه اندازي ",
        "shutting-down": "خاموش کردن",
        starting: "راه اندازي",
        stopped: "متوقف شده "
    },
    version: "نسخه"
}
    , HP = {
    link: {
        homepage: "صفحه اصلي",
        support: "پشتيباني فريمور",
        telegram: "کانال تلگرام"
    },
    tagSoon: "به زودي",
    title: "پشتيباني فني"
}
    , VP = {
    activation: {
        activateConfirm: "براي فعال کردن گارانتي اطمينان داريد؟",
        errorUnable: "گارانتي فعال نشد"
    },
    badge: "گارانتي موجود نيست",
    modal: {
        agreeCheckbox: "باز کردن تمامي عمکردها گارانتي دستگاه را از بين ميبرد",
        buttonUnLock: "تمام محدوديت ها را برداريد",
        notReversible: "توجه! اين عامل غير قابل برگشت مي باشد",
        p1: "اين تجهيزات داراي گارانتي مرکز خدمات هستند. باز کردن قفل عملکردهاي اضافي پس از اتمام دوره گارانتي امکان پذير است يا مي توانيد همين الان قفل آنها را باز کنيد",
        p2: "هنگام باز کردن قفل عملکردهاي اضافي, در طول دوره گارانتي، گارانتي به طور خودکار از بين مي رود",
        subtitle: "!هشدار گارانتي",
        title: "!هشدار گارانتي",
        unlockWarranty: "قفل تمامي تنظيمات باز شد"
    }
}
    , zP = {
    Actions: wP,
    Confirm: SP,
    Dashboard: _P,
    Dialog: kP,
    Error404: CP,
    Errors: AP,
    Firmware: EP,
    Form: TP,
    HelpBar: IP,
    InfoBar: PP,
    Messages: LP,
    NA: MP,
    NavBar: OP,
    PlaceHolder: RP,
    ResetDialog: NP,
    Route: DP,
    Settings: FP,
    Sidebar: $P,
    StatusBar: BP,
    TechSupport: HP,
    Warranty: VP
}
    , WP = {
    disable: "禁用",
    enable: "启用",
    restart: "重启",
    start: "启动",
    stop: "停止"
}
    , UP = {
    no: "否",
    warning: "警告",
    yes: "确定"
}
    , YP = {
    best_share: {
        title: "BestShare"
    },
    boards: {
        NA: "不适用",
        allGood: "所有芯片状态良好",
        chipStatus: {
            grey: "稳定芯片",
            orange: "缓慢芯片",
            red: "严重芯片",
            unknown: "未知"
        },
        chipStatusTitle: "芯片状态",
        errors: "错误",
        freq: "频率",
        power: "功耗",
        status: {
            disabled: "已禁用",
            disconnected: "已断开",
            initializing: "正在初始化",
            mining: "挖矿中",
            stopped: "已停止",
            unknown: "未知"
        },
        tempBoard: "电路板温度",
        tempChips: "温度",
        title: "电路板",
        noBoard: "没有板",
        undefinedChips: "未定义芯片",
        volt: "电压"
    },
    chartChipTemp: {
        title: "温度",
        chipTemp: "温度",
        fanDuty: "速度"
    },
    chartHashrate: {
        title: "哈希率",
        hashrate: "哈希率",
        power: "功耗",
        powerConsumption: "Power Consumption",
        watt: "W"
    },
    chartTest: {
        title: "ChartTest"
    },
    charts: {
        hours1: "1小时",
        hours12: "12小时",
        hours24: "24小时",
        hours3: "3小时",
        hours72: "72小时",
        range: "范围："
    },
    dev: {
        title: "开发者费用"
    },
    editMode: {
        buttons: {
            cancel: "取消",
            exit: "退出不保存",
            reset: "默认值",
            save: "保存",
            select: "保存选定",
            widgets: "小部件"
        },
        enterIcon: "编辑布局面板",
        footer: {
            caption: "布局编辑模式",
            hint: "您可以移动、缩放、隐藏小部件"
        },
        header: "编辑模式",
        hideWidgetDialog: {
            cancel: "取消",
            description: "选择在哪些设备上隐藏此小部件",
            header: "隐藏小部件？",
            submit: "是，隐藏！"
        },
        resetWidgetDialog: {
            cancel: "取消",
            description: "选择要重置的设备",
            header: "重置为默认布局？",
            submit: "是，重置！"
        },
        saveDialog: {
            cancel: "否",
            header: "保存面板布局吗？",
            submit: "是，保存！"
        },
        transferDescription: "添加后，您需要向下移动"
    },
    eff: {
        title: "效率"
    },
    errors: {
        footer: "硬件",
        title: "错误"
    },
    fans: {
        title: "风扇",
        fan: "风扇",
        duty: "风扇转速",
        block: "Block",
        temperature: "溫度",
        "inlet-outlet": "輸入輸出",
        mode: "模式：",
        auto: "自动",
        manual: "手动",
        immersion: "浸入式",
        missingCooler: {
            message: "此型号不使用散热器",
            title: "无散热器"
        }
    },
    foundBlocks: {
        title: "找到的区块"
    },
    hashrate: {
        hashrateReal: "当前：",
        hashrateIdeal: "Theor:",
        shortTitle: "HR",
        title: "哈希率"
    },
    pools: {
        activate: "激活",
        active: "活跃",
        confirm: "更改活跃矿池？",
        disabled: "已禁用",
        message: "矿池将更改为：</br>",
        no: "不更改",
        offline: "离线",
        refund: "退款",
        rejecting: "拒绝中",
        status: "状态",
        title: "矿池",
        unknown: "未知",
        user: "用户",
        working: "活跃",
        yes: "是，更改！"
    },
    power: {
        desk: "估计数据",
        footer: "瓦",
        watt: "瓦",
        psu: "电源",
        title: "功率"
    },
    temp: {
        desk: "电路板：",
        footer: "摄氏度 | 最小-最大",
        title: "温度"
    },
    widgets: {
        Average_Hashrate: "平均哈希率",
        BestShare: "BestShare",
        ChartChiptemp: "温度图表",
        ChartHashrate: "哈希率图表",
        ChartTest: "ChartTest",
        Coolers: "风扇",
        DEVFee: "开发者费用",
        Efficiency: "效率",
        Errors: "错误",
        FoundBlocks: "找到的区块",
        Performance: "性能",
        Plates: "电路板",
        Pools: "矿池",
        Power: "功率",
        Temperature: "温度"
    },
    widgetsDialog: {
        selectAll: "全选",
        title: "小部件"
    }
}
    , XP = {
    cancel: "取消",
    no: "否",
    save: "保存",
    yes: "是"
}
    , jP = {
    actionText: "尝试刷新此页面或切换到其他页面",
    text: "找不到页面"
}
    , GP = {
    diff5: "温度差异必须为5或更大",
    duplicate: "尝试添加重复项",
    error: "错误",
    inputDiapason: "输入值必须在范围内",
    noLoop: "数据未更新",
    noLoopLogs: "日志未更新",
    noMethod: "数据未更新",
    noSettings: "加载矿工设置时出错",
    noAutotunePresetData: "获取自动调谐预设数据时出错",
    passNotSaved: "密码未保存",
    someError: "出现问题"
}
    , qP = {
    modal: {
        alertBeta: "注意！此固件不稳定，仅用于测试。",
        releaseNote: "新功能？",
        title: "固件更新",
        titleFileName: "固件文件：",
        update: "更新",
        updateButton: "刷新矿机",
        updateButtonFlash: "固件更新中...",
        updateCheck: "保存当前矿机配置",
        updateCheckNote: "刷机后将保存设备的当前配置",
        updateText: "将文件拖放到此处或单击以上传"
    },
    version: "版本"
}
    , KP = {
    errorMessages: {
        invalidField: "字段无效",
        invalidFieldWithExample: "字段填写不正确。示例：",
        invalidLength: "长度为 {count} 个字符",
        invalidMaxLength: "最大长度为 {count} 个字符",
        invalidMinMaxValue: "输入值必须在范围内：",
        mismatch: "密码不匹配",
        required: "请输入值",
        warningWorkerFormat: "包含非标准字符",
        wrongPassword: "密码错误，请尝试 [admin]"
    }
}
    , ZP = {
    title: "固件帮助"
}
    , JP = {
    events: {
        filter: "筛选：",
        placeHolder: "无事件",
        title: "24小时内事件"
    },
    fan: {
        title: "风扇",
        fan: "风扇",
        mode: "模式",
        fanDuty: "速度"
    },
    memory: {
        cacheMem: "已缓存：",
        freemem: "空闲：",
        fullMem: "总计",
        inuse: "正在使用",
        title: "内存"
    },
    monitoring: {
        errors: "错误",
        hashrateAvg: "哈希率",
        hashrateCurrent: "当前哈希率",
        hashrateIdeal: "Theoretical hashrate",
        hashrateStock: "Stock hashrate",
        power: "功率",
        tempBoard: "温度. 电路板",
        tempChips: "温度. 芯片",
        title: "监控"
    },
    network: {
        gateway: "网关",
        hostname: "",
        labelIp: "IP",
        labelMask: "子网掩码",
        mode: "模式：",
        static: "静态",
        title: "网络状态"
    },
    pin: "引脚",
    quickSettings: {
        UIEffects: "UI 优化",
        disable: "禁用",
        enable: "启用",
        sidebarTheme: "侧边菜单主题",
        themeUI: "UI 主题",
        title: "快速操作"
    },
    systemInfo: {
        cgVersion: "CGMiner 版本",
        compileDate: "创建日期",
        filesystem: "文件系统版本",
        hardVersion: "硬件版本",
        hostname: "主机名",
        installationType: "安装类型",
        minerFirmware: "固件",
        buildName: "Build name",
        buildUUID: "Build UUID",
        minerType: "矿机类型",
        os: "操作系统",
        platform: "平台",
        psuModel: "PSU 型号",
        psuSerial: "PSU 序列号",
        serialNumber: "序列号",
        title: "系统信息"
    }
}
    , QP = {
    added: "已添加...",
    applied: "重启挖矿",
    autotuneReset: "重置完成",
    firmwareUpdate: "固件正在更新",
    keyDeleted: "密钥已删除",
    logsClear: "日志已清除",
    logsCopied: "日志已复制到剪贴板",
    logsNotCopied: "无法将日志复制到剪贴板",
    poolSwitch: "活跃矿池已更改",
    reboot: "正在重启...",
    reset: "正在重置...",
    restart: "正在重启...",
    restore: "正在恢复...",
    saved: "设置已保存",
    start: "启动",
    stop: "正在停止挖矿..."
}
    , eL = "N/A"
    , tL = {
    action: {
        apply: "应用",
        lockResult: "设备已成功锁定",
        lockUI: "锁定设备",
        lockUIDialog: {
            button: "锁定",
            message: "设备已成功锁定！",
            text: "设置和设备参数将被停用，无法编辑",
            title: "锁定设备？"
        },
        reboot: "重启",
        restart: "重启挖矿",
        restartDialog: {
            apply: {
                no: "取消",
                title: "应用并重启挖矿？",
                yes: "是，重启！"
            },
            reboot: {
                no: "取消",
                title: "重启矿机？",
                yes: "是，重启！"
            },
            restart: {
                no: "取消",
                title: "重启挖矿？",
                yes: "是，重启！"
            },
            start: {
                no: "取消",
                title: "开始挖矿？",
                yes: "是，开始！"
            },
            stop: {
                no: "取消",
                title: "停止挖矿？",
                yes: "是，停止！"
            }
        },
        save: "保存",
        start: "开始挖矿",
        stopped: "停止挖矿",
        unlockResult: "设备已解锁",
        unlockUI: "解锁",
        unlockUIDialog: {
            desc: "没有密码只能进行监控",
            label: "输入密码以获取完整访问权限",
            tooIncorrectPassword: "密码尝试错误次数过多。",
            tryAgain: "请重试",
            message: "设备已解锁！",
            password: "密码",
            title: "解锁设备？"
        }
    },
    chipsNumber: "板上芯片索引",
    columnMode: "仪表板显示模式",
    gridMode: "网格",
    infoBarTooltip: "信息栏",
    listMode: "列表"
}
    , sL = {
    noData: {
        actionText: "请等待矿机启动",
        text: "没有数据可显示"
    },
    noWidgets: {
        actionText: "请从仪表板菜单中选择要显示的小部件",
        text: "没有可显示的小部件"
    }
}
    , nL = {
    no: "不，不要重置",
    question: "重置更改？",
    yes: "是，重置"
}
    , iL = {
    404: "找不到页面",
    Advanced: "高级",
    Cooling: "散热",
    Dashboard: "仪表板",
    General: "常规",
    Mining: "挖矿",
    Network: "网络",
    Others: "其他",
    Pools: "矿池",
    Security: "安全",
    Settings: "设置",
    System: "系统",
    performance: "性能"
}
    , aL = {
    advanced: {
        titleTab: "高级",
        warningDescription: "您在此部分进行任何更改都需要自行承担风险"
    },
    change: {
        button: "重置"
    },
    cooling: {
        auto: "自动",
        checkSpeed: "正在检查散热器的速度",
        default: "默认",
        immersive: "浸入式",
        labelMode: "散热模式",
        manual: "手动",
        minFanCount: "最小风扇数量",
        minFanCountDesc: "如果散热器数量不正常，则需要",
        targetTemp: "目标温度",
        fanDuty: "速度",
        fanDutyRange: "限制風扇速度",
        modeDesc: "默认自动",
        silentMode: "启动时静音风扇模式",
        title: "温度控制",
        titleTab: "散热"
    },
    general: {
        backup: {
            backup: {
                button: "创建存档",
                config: "备份",
                desk: "点击“创建存档”以从当前配置文件加载 tar 存档",
                title: "备份设置"
            },
            collapse: "折叠面板",
            expand: "展开面板",
            reset: {
                button: "重置",
                desk: "要重置固件，请单击“重置”",
                popup: {
                    message: "重置后，矿机将使用出厂设置",
                    no: "取消",
                    title: "确认恢复出厂设置",
                    yes: "是，重置！"
                },
                title: "重置"
            },
            resetToStock: {
                button: "回滚到库存",
                desk: "要将固件重置为原始库存版本，请单击“回滚到库存”",
                popup: {
                    message: "重启后，矿机将使用库存固件",
                    no: "取消",
                    title: "确认回滚固件到库存",
                    yes: "是，回滚！"
                },
                title: "回滚到库存"
            },
            restore: {
                button: "恢复",
                desk: "要恢复配置文件，您可以下载先前创建的备份存档",
                dialog: {
                    button: "恢复设置",
                    title: "恢复设置",
                    uploadText: "选择设置文件"
                },
                title: "恢复设置"
            },
            title: "备份和恢复",
            titleDesc: "用于备份和恢复设备设置的工具"
        },
        chipsNumber: "在板上显示芯片编号",
        chipsNumberDesc: "为了方便使用芯片布局",
        enableUIEffects: "UI 优化",
        enableUIEffectsDesc: "禁用动画和界面效果",
        lang: {
            en: "英语",
            fa: "波斯语",
            ru: "俄语",
            ua: ""
        },
        regional: {
            sidebar: "侧边栏",
            sidebarTheme: "深色侧边栏",
            sidebarThemeDesc: "仅适用于浅色主题",
            timezone: "时区",
            timezoneDesc: "影响事件和设备日志的时间",
            title: "区域设置",
            uiLang: "界面语言",
            uiLangDesc: "默认浏览器语言",
            uiSettings: "外观",
            uiTheme: "主题",
            uiThemeDesc: "自动 - 使用操作系统的主题",
            uiThemes: {
                auto: "自动",
                dark: "深色",
                light: "浅色"
            }
        },
        titleTab: "常规"
    },
    network: {
        dhcpDesc: "自动网络设置",
        gateway: "网关",
        hostname: "主机名",
        hostnameDesc: "显示在浏览器标题中",
        labelIp: "IP 地址",
        labelMask: "掩码",
        networkRestore: {
            note: "如果新网络设置失败，它将返回之前的设置",
            title: "检查网络设置"
        },
        networkTest: {
            button: "测试网络",
            desk: "另一方面，掺杂了相当多的同情心，理性思维谈到的是新提案的可能性",
            dialog: {
                button: "开始",
                netFunction: "网络工具",
                noValue: "anthill.farm",
                nslookup: "域名解析",
                ping: "Ping",
                testPage: "主机",
                title: "网络测试",
                traceroute: "路由跟踪"
            },
            title: "网络连接测试"
        },
        title: "网络设置",
        titleTab: "网络"
    },
    others: {
        control: {
            checkChip: "自动修复低效芯片",
            fixPeriod0: "禁用",
            fixPeriod1: "每30分钟",
            fixPeriod2: "每小时",
            fixPeriod3: "每3小时",
            fixPeriod4: "每6小时",
            fixPeriod5: "每12小时",
            fixPeriod6: "每天",
            maxRestartAttempts: "最大重启尝试次数",
            minOperationalChains: "最小工作链数",
            minOperationalChainsDesc: "如果运行链的数量低于此阈值，则自动停止矿工",
            noValue: "未设置",
            restart: "如果哈希率低于此值，则重启挖矿",
            restartDesc: "哈希率阈值手动设置",
            tempOff: "芯片临界温度",
            tempOffDesc: "建议范围 50-120°C，默认值：90°C",
            title: "控制"
        },
        others: {
            checkBalanceDomains: "检查电压域平衡",
            defaultValue: "默认值",
            downscalePresetOnFailure: "故障时降级预设",
            downscalePresetOnFailureDescription: "在矿机过热或链断错误的情况下自动降级预设",
            isPowerSupplyModified: "电源已修改",
            isPowerSupplyModifiedDesc: "修改后的电源允许您提供更多电力",
            isResumeMiningAfterReboot: "重启后恢复挖矿",
            maxStartupDelayTime: "挖矿启动前的最大延迟时间",
            maxStartupDelayTimeDesc: "范围0-300秒，默认0秒",
            nominal: "重置为标称值：",
            nominalVolt: "标称值",
            offAdjustVoltageByTemp: "根据温度调整电压",
            offBreak: "检查链的完整性",
            offChips: "启动时预热芯片",
            offPreset: "忽略预设中的最小电压",
            offQuickStart: "快速启动",
            offTempSensor: "打开温度传感器检查",
            offVolt: "检查电压设置",
            quietMode: "静音模式",
            quietModeDescription: "启动或停止设备时，风扇速度降低50％",
            seconds: "s",
            setDefault: "重置为默认值：",
            skipInvalidTempSensors: "跳过损坏的温度传感器",
            ignoreChipTempSensors: "忽略芯片的温度传感器",
            startVoltOffset: "启动电压偏移",
            title: "其他",
            tunerChipHashrateThreshold: "调谐器坏芯片哈希率阈值",
            autoChipThrottling: "自动芯片限流"
        },
        titleTab: "其他"
    },
    performance: {
        advance_settings: {
            title: "高级设置"
        },
        autoProfile: {
            downProfile: "降低预设",
            downProfileFan: "如果散热器速度高于",
            downProfileTemp: "如果温度高于",
            downProfileTune: "自动调谐失败时",
            optionsHeader: "自动切换选项",
            profileDownTemp: "如果温度高于，则降低预设",
            profileDownTempRange: "必须在范围内",
            profileUpTemp: "如果温度低于，则提高预设",
            switch: "自动切换预设",
            switchDescription: "根据温度切换",
            upProfile: "提高预设",
            upProfileFan: "如果散热器速度低于",
            upProfileLimit: "不要将预设提高到",
            upProfileLimitDescription: "配置文件升级上限",
            upProfileTemp: "如果温度低于",
            watchTimer: "条件检查持续时间",
            watchTimerDescription: "应在1-10分钟范围内",
            switcherPowerDelta: "允许超额消耗",
            switcherPowerDeltaDesc: "名义价值的百分比",
            autochangeTopPreset: "发生错误时自动更改最高预设",
            autochangeTopPresetDescription: "如果未达到，最高预设将自动更改为最后达到的预设",
            ignoreFanSpeed: "忽略风扇转速",
            ignoreFanSpeedDescription: "作为降低预设的条件，仅考虑温度，忽略风扇速度"
        },
        board: {
            chipPopper: {
                chip: "芯片",
                chip_temp: "芯片温度",
                domainFreq: "域频率",
                errors: "错误",
                freq: "频率",
                hashrate: "哈希率",
                reset: "重置芯片设置",
                temperature: "温度",
                useGlobal: "使用链频率",
                usingGlobal: "使用链频率"
            },
            forAllBoard: "应用于所有板",
            operations: "操作",
            platePopper: {
                plateFrequency: "频率",
                plateVoltage: "电压",
                reset: "重置链频率",
                useGlobal: "使用全局",
                usingGlobal: "使用全局"
            },
            resetAllChain: "重置所有设置",
            resetChipsToZero: "重置芯片设置",
            stockInfo: {
                title: "库存信息"
            },
            switchOff: "关闭",
            switchOn: "启用",
            title: "电路板",
            undoChanges: "取消更改",
            view: {
                chip_temp: "热图",
                errors: "错误",
                freq: "频率",
                hashrate: "哈希率",
                temperature: "传感器",
                title: "电路板视图"
            }
        },
        freq: "全局频率",
        nominal: "重置为标称值：",
        nominalFreq: "标称频率",
        nominalVolt: "标称电压",
        profile: {
            attention: "* LC - 仅适用于电源",
            description: "标准电源",
            descriptionAlt: "修改后的电源",
            limitlessProfile: "无限",
            longLabel: "预设",
            noProfile: "禁用",
            shortLabel: "预设",
            tuned: "已调谐"
        },
        title: "性能设置",
        titleTab: "性能",
        tuneDialog: {
            active: "活跃",
            markAll: "全选",
            noData: "没有已调谐的配置文件",
            reset: "重置",
            resetAndRestart: "重置并重启",
            title: "配置文件管理"
        },
        tunerLogs: "调谐器日志",
        voltage: "全局电压"
    },
    pools: {
        address: "矿池：",
        changeIndex: "更改优先级",
        desc: "矿池的优先级由列表中的顺序控制，通过拖放方法",
        name: "矿工",
        password: "密码",
        saveIndex: "保存优先级",
        title: "矿池列表",
        titleTab: "矿池"
    },
    security: {
        api: {
            buttonAdd: "添加新密钥",
            deleteConfirm: {
                desk: "删除后，密钥将无法使用",
                no: "否",
                title: "删除密钥？",
                yes: "是，删除！"
            },
            desk: "说明这个密钥的用途以及如何使用它...",
            dialog: {
                description: "API 密钥必须严格为 32 个字符长。密钥描述是必需的！",
                descriptionPlaceHolder: "远程管理",
                keyPlaceHolder: "在此处输入您的密钥",
                labelDesc: "描述",
                labelKey: "API 密钥",
                title: "新的 API 密钥"
            },
            labelPort: "",
            title: "API 密钥"
        },
        password: {
            desk: "更改管理员密码以访问设备",
            labelCurrPass: "当前密码",
            labelNewPass: "新密码",
            title: "更改密码"
        },
        titleTab: "安全"
    }
}
    , rL = {
    Warranty: {
        button: "保修",
        buttonActivate: "激活保修"
    },
    menu: {
        actions: "操作",
        collapsedTitle: "菜单",
        dashboard: "仪表板",
        findMiner: "查找矿机",
        integration: "集成",
        mining: "挖矿",
        settings: "设置",
        support: "技术支持",
        system: "系统",
        title: "监控",
        update: "固件更新"
    }
}
    , oL = {
    collapse: "最小化日志",
    expand: "展开日志",
    logs: {
        clearLogs: "清除",
        copyAll: "复制日志",
        doClearLogs: "清除日志",
        markAll: "全选",
        tabs: {
            autotune: "自动调谐",
            miner: "矿机",
            status: "状态",
            system: "系统"
        },
        title: "日志"
    },
    model: "型号",
    releaseNotes: {
        placeHolder: {
            description: "版本数据服务器不可用",
            header: "无版本详情"
        }
    },
    report: {
        button: "创建报告",
        desk: "另一方面，掺杂了相当多的同情心，理性思维谈到的是新提案的可能性",
        dialog: {
            back: "重试",
            button: "创建报告",
            desc: "为了帮助您更快地解决问题，您需要创建一个诊断报告并发送给我们。请详细描述问题的本质以及您认为的其他重要信息。",
            download: "下载",
            issue: "问题描述",
            report: "报告",
            title: "创建报告"
        },
        title: "诊断报告"
    },
    status: {
        "auto-tuning": "自动调谐中",
        d: "天",
        disconnect: "已断开连接",
        failure: "错误",
        findMiner: "查找矿机",
        h: "小时",
        initializing: "正在初始化",
        m: "分钟",
        mining: "挖矿中",
        restarting: "正在重启",
        "shutting-down": "正在关机",
        starting: "正在启动",
        stopped: "已停止"
    },
    version: "版本"
}
    , lL = {
    link: {
        homepage: "主页",
        support: "固件帮助",
        telegram: "Telegram 频道"
    },
    tagSoon: "即将推出",
    title: "技术支持"
}
    , cL = {
    activation: {
        activateConfirm: "您确定要激活保修吗？",
        errorUnable: "无法激活保修"
    },
    badge: "保修不可用",
    modal: {
        agreeCheckbox: "解锁所有功能，但会失去保修",
        buttonUnLock: "移除所有限制",
        notReversible: "注意！此操作不可逆！",
        p1: "此设备在服务中心保修期内。解锁附加功能可以在保修期结束后进行，或者您可以立即解锁它们。",
        p2: "解锁附加功能时 - 在保修期内，您将自动失去保修服务",
        subtitle: "保修警告！",
        title: "保修警告！",
        unlockWarranty: "所有功能已解锁"
    }
}
    , uL = {
    Actions: WP,
    Confirm: UP,
    Dashboard: YP,
    Dialog: XP,
    Error404: jP,
    Errors: GP,
    Firmware: qP,
    Form: KP,
    HelpBar: ZP,
    InfoBar: JP,
    Messages: QP,
    NA: eL,
    NavBar: tL,
    PlaceHolder: sL,
    ResetDialog: nL,
    Route: iL,
    Settings: aL,
    Sidebar: rL,
    StatusBar: oL,
    TechSupport: lL,
    Warranty: cL
};
let Bi;
try {
    Bi = JSON.parse(localStorage.getItem("locale"))
} catch (e) {
    console.log(e)
}
const dL = new Set(["en", "ru", "ua", "fa", "zh"]);
Bi || (Bi = window.navigator ? window.navigator.language : "",
    Bi = Bi.substr(0, 2).toLowerCase(),
    Bi = dL.has(Bi) ? Bi : "en");
const Rt = JT({
    locale: Bi,
    legacy: !1,
    fallbackLocale: "en",
    globalInjection: !0,
    messages: {
        ru: JI,
        en: PI,
        ua: xP,
        fa: zP,
        zh: uL
    },
    pluralizationRules: {
        ru: hL
    }
});

function hL(e, t) {
    if (e === 0)
        return 0;
    const s = e > 10 && e < 20
        , a = e % 10 === 1;
    return t < 4 ? !s && a ? 1 : 2 : !s && a ? 1 : !s && e % 10 >= 2 && e % 10 <= 4 || t < 4 ? 2 : 3
}

function d1(e, t) {
    return function () {
        return e.apply(t, arguments)
    }
}

const {toString: fL} = Object.prototype
    , {getPrototypeOf: xp} = Object
    , Qu = (e => t => {
        const s = fL.call(t);
        return e[s] || (e[s] = s.slice(8, -1).toLowerCase())
    }
)(Object.create(null))
    , ki = e => (e = e.toLowerCase(),
    t => Qu(t) === e)
    , ed = e => t => typeof t === e
    , {isArray: Co} = Array
    , Il = ed("undefined");

function pL(e) {
    return e !== null && !Il(e) && e.constructor !== null && !Il(e.constructor) && Pn(e.constructor.isBuffer) && e.constructor.isBuffer(e)
}

const h1 = ki("ArrayBuffer");

function gL(e) {
    let t;
    return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && h1(e.buffer),
        t
}

const mL = ed("string")
    , Pn = ed("function")
    , f1 = ed("number")
    , td = e => e !== null && typeof e == "object"
    , vL = e => e === !0 || e === !1
    , Yc = e => {
    if (Qu(e) !== "object")
        return !1;
    const t = xp(e);
    return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e)
}
    , bL = ki("Date")
    , yL = ki("File")
    , xL = ki("Blob")
    , wL = ki("FileList")
    , SL = e => td(e) && Pn(e.pipe)
    , _L = e => {
    let t;
    return e && (typeof FormData == "function" && e instanceof FormData || Pn(e.append) && ((t = Qu(e)) === "formdata" || t === "object" && Pn(e.toString) && e.toString() === "[object FormData]"))
}
    , kL = ki("URLSearchParams")
    , CL = e => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");

function ec(e, t, {allOwnKeys: s = !1} = {}) {
    if (e === null || typeof e > "u")
        return;
    let a, o;
    if (typeof e != "object" && (e = [e]),
        Co(e))
        for (a = 0,
                 o = e.length; a < o; a++)
            t.call(null, e[a], a, e);
    else {
        const l = s ? Object.getOwnPropertyNames(e) : Object.keys(e)
            , u = l.length;
        let p;
        for (a = 0; a < u; a++)
            p = l[a],
                t.call(null, e[p], p, e)
    }
}

function p1(e, t) {
    t = t.toLowerCase();
    const s = Object.keys(e);
    let a = s.length, o;
    for (; a-- > 0;)
        if (o = s[a],
        t === o.toLowerCase())
            return o;
    return null
}

const g1 = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global
    , m1 = e => !Il(e) && e !== g1;

function Kh() {
    const {caseless: e} = m1(this) && this || {}
        , t = {}
        , s = (a, o) => {
            const l = e && p1(t, o) || o;
            Yc(t[l]) && Yc(a) ? t[l] = Kh(t[l], a) : Yc(a) ? t[l] = Kh({}, a) : Co(a) ? t[l] = a.slice() : t[l] = a
        }
    ;
    for (let a = 0, o = arguments.length; a < o; a++)
        arguments[a] && ec(arguments[a], s);
    return t
}

const AL = (e, t, s, {allOwnKeys: a} = {}) => (ec(t, (o, l) => {
            s && Pn(o) ? e[l] = d1(o, s) : e[l] = o
        }
        , {
            allOwnKeys: a
        }),
        e)
    , EL = e => (e.charCodeAt(0) === 65279 && (e = e.slice(1)),
        e)
    , TL = (e, t, s, a) => {
        e.prototype = Object.create(t.prototype, a),
            e.prototype.constructor = e,
            Object.defineProperty(e, "super", {
                value: t.prototype
            }),
        s && Object.assign(e.prototype, s)
    }
    , IL = (e, t, s, a) => {
        let o, l, u;
        const p = {};
        if (t = t || {},
        e == null)
            return t;
        do {
            for (o = Object.getOwnPropertyNames(e),
                     l = o.length; l-- > 0;)
                u = o[l],
                (!a || a(u, e, t)) && !p[u] && (t[u] = e[u],
                    p[u] = !0);
            e = s !== !1 && xp(e)
        } while (e && (!s || s(e, t)) && e !== Object.prototype);
        return t
    }
    , PL = (e, t, s) => {
        e = String(e),
        (s === void 0 || s > e.length) && (s = e.length),
            s -= t.length;
        const a = e.indexOf(t, s);
        return a !== -1 && a === s
    }
    , LL = e => {
        if (!e)
            return null;
        if (Co(e))
            return e;
        let t = e.length;
        if (!f1(t))
            return null;
        const s = new Array(t);
        for (; t-- > 0;)
            s[t] = e[t];
        return s
    }
    , ML = (e => t => e && t instanceof e)(typeof Uint8Array < "u" && xp(Uint8Array))
    , OL = (e, t) => {
        const a = (e && e[Symbol.iterator]).call(e);
        let o;
        for (; (o = a.next()) && !o.done;) {
            const l = o.value;
            t.call(e, l[0], l[1])
        }
    }
    , RL = (e, t) => {
        let s;
        const a = [];
        for (; (s = e.exec(t)) !== null;)
            a.push(s);
        return a
    }
    , NL = ki("HTMLFormElement")
    , DL = e => e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function (s, a, o) {
        return a.toUpperCase() + o
    })
    , tv = (({hasOwnProperty: e}) => (t, s) => e.call(t, s))(Object.prototype)
    , FL = ki("RegExp")
    , v1 = (e, t) => {
        const s = Object.getOwnPropertyDescriptors(e)
            , a = {};
        ec(s, (o, l) => {
                let u;
                (u = t(o, l, e)) !== !1 && (a[l] = u || o)
            }
        ),
            Object.defineProperties(e, a)
    }
    , $L = e => {
        v1(e, (t, s) => {
                if (Pn(e) && ["arguments", "caller", "callee"].indexOf(s) !== -1)
                    return !1;
                const a = e[s];
                if (Pn(a)) {
                    if (t.enumerable = !1,
                    "writable" in t) {
                        t.writable = !1;
                        return
                    }
                    t.set || (t.set = () => {
                            throw Error("Can not rewrite read-only method '" + s + "'")
                        }
                    )
                }
            }
        )
    }
    , BL = (e, t) => {
        const s = {}
            , a = o => {
                o.forEach(l => {
                        s[l] = !0
                    }
                )
            }
        ;
        return Co(e) ? a(e) : a(String(e).split(t)),
            s
    }
    , HL = () => {
    }
    , VL = (e, t) => (e = +e,
        Number.isFinite(e) ? e : t)
    , Xd = "abcdefghijklmnopqrstuvwxyz"
    , sv = "0123456789"
    , b1 = {
        DIGIT: sv,
        ALPHA: Xd,
        ALPHA_DIGIT: Xd + Xd.toUpperCase() + sv
    }
    , zL = (e = 16, t = b1.ALPHA_DIGIT) => {
        let s = "";
        const {length: a} = t;
        for (; e--;)
            s += t[Math.random() * a | 0];
        return s
    }
;

function WL(e) {
    return !!(e && Pn(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator])
}

const UL = e => {
    const t = new Array(10)
        , s = (a, o) => {
            if (td(a)) {
                if (t.indexOf(a) >= 0)
                    return;
                if (!("toJSON" in a)) {
                    t[o] = a;
                    const l = Co(a) ? [] : {};
                    return ec(a, (u, p) => {
                            const g = s(u, o + 1);
                            !Il(g) && (l[p] = g)
                        }
                    ),
                        t[o] = void 0,
                        l
                }
            }
            return a
        }
    ;
    return s(e, 0)
}
    , YL = ki("AsyncFunction")
    , XL = e => e && (td(e) || Pn(e)) && Pn(e.then) && Pn(e.catch)
    , Ve = {
    isArray: Co,
    isArrayBuffer: h1,
    isBuffer: pL,
    isFormData: _L,
    isArrayBufferView: gL,
    isString: mL,
    isNumber: f1,
    isBoolean: vL,
    isObject: td,
    isPlainObject: Yc,
    isUndefined: Il,
    isDate: bL,
    isFile: yL,
    isBlob: xL,
    isRegExp: FL,
    isFunction: Pn,
    isStream: SL,
    isURLSearchParams: kL,
    isTypedArray: ML,
    isFileList: wL,
    forEach: ec,
    merge: Kh,
    extend: AL,
    trim: CL,
    stripBOM: EL,
    inherits: TL,
    toFlatObject: IL,
    kindOf: Qu,
    kindOfTest: ki,
    endsWith: PL,
    toArray: LL,
    forEachEntry: OL,
    matchAll: RL,
    isHTMLForm: NL,
    hasOwnProperty: tv,
    hasOwnProp: tv,
    reduceDescriptors: v1,
    freezeMethods: $L,
    toObjectSet: BL,
    toCamelCase: DL,
    noop: HL,
    toFiniteNumber: VL,
    findKey: p1,
    global: g1,
    isContextDefined: m1,
    ALPHABET: b1,
    generateString: zL,
    isSpecCompliantForm: WL,
    toJSONObject: UL,
    isAsyncFn: YL,
    isThenable: XL
};

function Yt(e, t, s, a, o) {
    Error.call(this),
        Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack,
        this.message = e,
        this.name = "AxiosError",
    t && (this.code = t),
    s && (this.config = s),
    a && (this.request = a),
    o && (this.response = o)
}

Ve.inherits(Yt, Error, {
    toJSON: function () {
        return {
            message: this.message,
            name: this.name,
            description: this.description,
            number: this.number,
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            config: Ve.toJSONObject(this.config),
            code: this.code,
            status: this.response && this.response.status ? this.response.status : null
        }
    }
});
const y1 = Yt.prototype
    , x1 = {};
["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach(e => {
        x1[e] = {
            value: e
        }
    }
);
Object.defineProperties(Yt, x1);
Object.defineProperty(y1, "isAxiosError", {
    value: !0
});
Yt.from = (e, t, s, a, o, l) => {
    const u = Object.create(y1);
    return Ve.toFlatObject(e, u, function (g) {
        return g !== Error.prototype
    }, p => p !== "isAxiosError"),
        Yt.call(u, e.message, t, s, a, o),
        u.cause = e,
        u.name = e.name,
    l && Object.assign(u, l),
        u
}
;
const jL = null;

function Zh(e) {
    return Ve.isPlainObject(e) || Ve.isArray(e)
}

function w1(e) {
    return Ve.endsWith(e, "[]") ? e.slice(0, -2) : e
}

function nv(e, t, s) {
    return e ? e.concat(t).map(function (o, l) {
        return o = w1(o),
            !s && l ? "[" + o + "]" : o
    }).join(s ? "." : "") : t
}

function GL(e) {
    return Ve.isArray(e) && !e.some(Zh)
}

const qL = Ve.toFlatObject(Ve, {}, null, function (t) {
    return /^is[A-Z]/.test(t)
});

function sd(e, t, s) {
    if (!Ve.isObject(e))
        throw new TypeError("target must be an object");
    t = t || new FormData,
        s = Ve.toFlatObject(s, {
            metaTokens: !0,
            dots: !1,
            indexes: !1
        }, !1, function (A, R) {
            return !Ve.isUndefined(R[A])
        });
    const a = s.metaTokens
        , o = s.visitor || v
        , l = s.dots
        , u = s.indexes
        , g = (s.Blob || typeof Blob < "u" && Blob) && Ve.isSpecCompliantForm(t);
    if (!Ve.isFunction(o))
        throw new TypeError("visitor must be a function");

    function y(I) {
        if (I === null)
            return "";
        if (Ve.isDate(I))
            return I.toISOString();
        if (!g && Ve.isBlob(I))
            throw new Yt("Blob is not supported. Use a Buffer instead.");
        return Ve.isArrayBuffer(I) || Ve.isTypedArray(I) ? g && typeof Blob == "function" ? new Blob([I]) : Buffer.from(I) : I
    }

    function v(I, A, R) {
        let P = I;
        if (I && !R && typeof I == "object") {
            if (Ve.endsWith(A, "{}"))
                A = a ? A : A.slice(0, -2),
                    I = JSON.stringify(I);
            else if (Ve.isArray(I) && GL(I) || (Ve.isFileList(I) || Ve.endsWith(A, "[]")) && (P = Ve.toArray(I)))
                return A = w1(A),
                    P.forEach(function (O, F) {
                        !(Ve.isUndefined(O) || O === null) && t.append(u === !0 ? nv([A], F, l) : u === null ? A : A + "[]", y(O))
                    }),
                    !1
        }
        return Zh(I) ? !0 : (t.append(nv(R, A, l), y(I)),
            !1)
    }

    const w = []
        , C = Object.assign(qL, {
        defaultVisitor: v,
        convertValue: y,
        isVisitable: Zh
    });

    function T(I, A) {
        if (!Ve.isUndefined(I)) {
            if (w.indexOf(I) !== -1)
                throw Error("Circular reference detected in " + A.join("."));
            w.push(I),
                Ve.forEach(I, function (P, M) {
                    (!(Ve.isUndefined(P) || P === null) && o.call(t, P, Ve.isString(M) ? M.trim() : M, A, C)) === !0 && T(P, A ? A.concat(M) : [M])
                }),
                w.pop()
        }
    }

    if (!Ve.isObject(e))
        throw new TypeError("data must be an object");
    return T(e),
        t
}

function iv(e) {
    const t = {
        "!": "%21",
        "'": "%27",
        "(": "%28",
        ")": "%29",
        "~": "%7E",
        "%20": "+",
        "%00": "\0"
    };
    return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (a) {
        return t[a]
    })
}

function wp(e, t) {
    this._pairs = [],
    e && sd(e, this, t)
}

const S1 = wp.prototype;
S1.append = function (t, s) {
    this._pairs.push([t, s])
}
;
S1.toString = function (t) {
    const s = t ? function (a) {
            return t.call(this, a, iv)
        }
        : iv;
    return this._pairs.map(function (o) {
        return s(o[0]) + "=" + s(o[1])
    }, "").join("&")
}
;

function KL(e) {
    return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
}

function _1(e, t, s) {
    if (!t)
        return e;
    const a = s && s.encode || KL
        , o = s && s.serialize;
    let l;
    if (o ? l = o(t, s) : l = Ve.isURLSearchParams(t) ? t.toString() : new wp(t, s).toString(a),
        l) {
        const u = e.indexOf("#");
        u !== -1 && (e = e.slice(0, u)),
            e += (e.indexOf("?") === -1 ? "?" : "&") + l
    }
    return e
}

class ZL {
    constructor() {
        this.handlers = []
    }

    use(t, s, a) {
        return this.handlers.push({
            fulfilled: t,
            rejected: s,
            synchronous: a ? a.synchronous : !1,
            runWhen: a ? a.runWhen : null
        }),
        this.handlers.length - 1
    }

    eject(t) {
        this.handlers[t] && (this.handlers[t] = null)
    }

    clear() {
        this.handlers && (this.handlers = [])
    }

    forEach(t) {
        Ve.forEach(this.handlers, function (a) {
            a !== null && t(a)
        })
    }
}

const av = ZL
    , k1 = {
        silentJSONParsing: !0,
        forcedJSONParsing: !0,
        clarifyTimeoutError: !1
    }
    , JL = typeof URLSearchParams < "u" ? URLSearchParams : wp
    , QL = typeof FormData < "u" ? FormData : null
    , eM = typeof Blob < "u" ? Blob : null
    , tM = {
        isBrowser: !0,
        classes: {
            URLSearchParams: JL,
            FormData: QL,
            Blob: eM
        },
        protocols: ["http", "https", "file", "blob", "url", "data"]
    }
    , C1 = typeof window < "u" && typeof document < "u"
    ,
    sM = (e => C1 && ["ReactNative", "NativeScript", "NS"].indexOf(e) < 0)(typeof navigator < "u" && navigator.product)
    ,
    nM = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && typeof self.importScripts == "function"
    , iM = Object.freeze(Object.defineProperty({
        __proto__: null,
        hasBrowserEnv: C1,
        hasStandardBrowserEnv: sM,
        hasStandardBrowserWebWorkerEnv: nM
    }, Symbol.toStringTag, {
        value: "Module"
    }))
    , vi = {
        ...iM,
        ...tM
    };

function aM(e, t) {
    return sd(e, new vi.classes.URLSearchParams, Object.assign({
        visitor: function (s, a, o, l) {
            return vi.isNode && Ve.isBuffer(s) ? (this.append(a, s.toString("base64")),
                !1) : l.defaultVisitor.apply(this, arguments)
        }
    }, t))
}

function rM(e) {
    return Ve.matchAll(/\w+|\[(\w*)]/g, e).map(t => t[0] === "[]" ? "" : t[1] || t[0])
}

function oM(e) {
    const t = {}
        , s = Object.keys(e);
    let a;
    const o = s.length;
    let l;
    for (a = 0; a < o; a++)
        l = s[a],
            t[l] = e[l];
    return t
}

function A1(e) {
    function t(s, a, o, l) {
        let u = s[l++];
        if (u === "__proto__")
            return !0;
        const p = Number.isFinite(+u)
            , g = l >= s.length;
        return u = !u && Ve.isArray(o) ? o.length : u,
            g ? (Ve.hasOwnProp(o, u) ? o[u] = [o[u], a] : o[u] = a,
                !p) : ((!o[u] || !Ve.isObject(o[u])) && (o[u] = []),
            t(s, a, o[u], l) && Ve.isArray(o[u]) && (o[u] = oM(o[u])),
                !p)
    }

    if (Ve.isFormData(e) && Ve.isFunction(e.entries)) {
        const s = {};
        return Ve.forEachEntry(e, (a, o) => {
                t(rM(a), o, s, 0)
            }
        ),
            s
    }
    return null
}

function lM(e, t, s) {
    if (Ve.isString(e))
        try {
            return (t || JSON.parse)(e),
                Ve.trim(e)
        } catch (a) {
            if (a.name !== "SyntaxError")
                throw a
        }
    return (s || JSON.stringify)(e)
}

const Sp = {
    transitional: k1,
    adapter: ["xhr", "http"],
    transformRequest: [function (t, s) {
        const a = s.getContentType() || ""
            , o = a.indexOf("application/json") > -1
            , l = Ve.isObject(t);
        if (l && Ve.isHTMLForm(t) && (t = new FormData(t)),
            Ve.isFormData(t))
            return o ? JSON.stringify(A1(t)) : t;
        if (Ve.isArrayBuffer(t) || Ve.isBuffer(t) || Ve.isStream(t) || Ve.isFile(t) || Ve.isBlob(t))
            return t;
        if (Ve.isArrayBufferView(t))
            return t.buffer;
        if (Ve.isURLSearchParams(t))
            return s.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1),
                t.toString();
        let p;
        if (l) {
            if (a.indexOf("application/x-www-form-urlencoded") > -1)
                return aM(t, this.formSerializer).toString();
            if ((p = Ve.isFileList(t)) || a.indexOf("multipart/form-data") > -1) {
                const g = this.env && this.env.FormData;
                return sd(p ? {
                    "files[]": t
                } : t, g && new g, this.formSerializer)
            }
        }
        return l || o ? (s.setContentType("application/json", !1),
            lM(t)) : t
    }
    ],
    transformResponse: [function (t) {
        const s = this.transitional || Sp.transitional
            , a = s && s.forcedJSONParsing
            , o = this.responseType === "json";
        if (t && Ve.isString(t) && (a && !this.responseType || o)) {
            const u = !(s && s.silentJSONParsing) && o;
            try {
                return JSON.parse(t)
            } catch (p) {
                if (u)
                    throw p.name === "SyntaxError" ? Yt.from(p, Yt.ERR_BAD_RESPONSE, this, null, this.response) : p
            }
        }
        return t
    }
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
        FormData: vi.classes.FormData,
        Blob: vi.classes.Blob
    },
    validateStatus: function (t) {
        return t >= 200 && t < 300
    },
    headers: {
        common: {
            Accept: "application/json, text/plain, */*",
            "Content-Type": void 0
        }
    }
};
Ve.forEach(["delete", "get", "head", "post", "put", "patch"], e => {
        Sp.headers[e] = {}
    }
);
const _p = Sp
    ,
    cM = Ve.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"])
    , uM = e => {
        const t = {};
        let s, a, o;
        return e && e.split(`
`).forEach(function (u) {
            o = u.indexOf(":"),
                s = u.substring(0, o).trim().toLowerCase(),
                a = u.substring(o + 1).trim(),
            !(!s || t[s] && cM[s]) && (s === "set-cookie" ? t[s] ? t[s].push(a) : t[s] = [a] : t[s] = t[s] ? t[s] + ", " + a : a)
        }),
            t
    }
    , rv = Symbol("internals");

function Vo(e) {
    return e && String(e).trim().toLowerCase()
}

function Xc(e) {
    return e === !1 || e == null ? e : Ve.isArray(e) ? e.map(Xc) : String(e)
}

function dM(e) {
    const t = Object.create(null)
        , s = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
    let a;
    for (; a = s.exec(e);)
        t[a[1]] = a[2];
    return t
}

const hM = e => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());

function jd(e, t, s, a, o) {
    if (Ve.isFunction(a))
        return a.call(this, t, s);
    if (o && (t = s),
        !!Ve.isString(t)) {
        if (Ve.isString(a))
            return t.indexOf(a) !== -1;
        if (Ve.isRegExp(a))
            return a.test(t)
    }
}

function fM(e) {
    return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, s, a) => s.toUpperCase() + a)
}

function pM(e, t) {
    const s = Ve.toCamelCase(" " + t);
    ["get", "set", "has"].forEach(a => {
            Object.defineProperty(e, a + s, {
                value: function (o, l, u) {
                    return this[a].call(this, t, o, l, u)
                },
                configurable: !0
            })
        }
    )
}

let nd = class {
        constructor(t) {
            t && this.set(t)
        }

        set(t, s, a) {
            const o = this;

            function l(p, g, y) {
                const v = Vo(g);
                if (!v)
                    throw new Error("header name must be a non-empty string");
                const w = Ve.findKey(o, v);
                (!w || o[w] === void 0 || y === !0 || y === void 0 && o[w] !== !1) && (o[w || g] = Xc(p))
            }

            const u = (p, g) => Ve.forEach(p, (y, v) => l(y, v, g));
            return Ve.isPlainObject(t) || t instanceof this.constructor ? u(t, s) : Ve.isString(t) && (t = t.trim()) && !hM(t) ? u(uM(t), s) : t != null && l(s, t, a),
                this
        }

        get(t, s) {
            if (t = Vo(t),
                t) {
                const a = Ve.findKey(this, t);
                if (a) {
                    const o = this[a];
                    if (!s)
                        return o;
                    if (s === !0)
                        return dM(o);
                    if (Ve.isFunction(s))
                        return s.call(this, o, a);
                    if (Ve.isRegExp(s))
                        return s.exec(o);
                    throw new TypeError("parser must be boolean|regexp|function")
                }
            }
        }

        has(t, s) {
            if (t = Vo(t),
                t) {
                const a = Ve.findKey(this, t);
                return !!(a && this[a] !== void 0 && (!s || jd(this, this[a], a, s)))
            }
            return !1
        }

        delete(t, s) {
            const a = this;
            let o = !1;

            function l(u) {
                if (u = Vo(u),
                    u) {
                    const p = Ve.findKey(a, u);
                    p && (!s || jd(a, a[p], p, s)) && (delete a[p],
                        o = !0)
                }
            }

            return Ve.isArray(t) ? t.forEach(l) : l(t),
                o
        }

        clear(t) {
            const s = Object.keys(this);
            let a = s.length
                , o = !1;
            for (; a--;) {
                const l = s[a];
                (!t || jd(this, this[l], l, t, !0)) && (delete this[l],
                    o = !0)
            }
            return o
        }

        normalize(t) {
            const s = this
                , a = {};
            return Ve.forEach(this, (o, l) => {
                    const u = Ve.findKey(a, l);
                    if (u) {
                        s[u] = Xc(o),
                            delete s[l];
                        return
                    }
                    const p = t ? fM(l) : String(l).trim();
                    p !== l && delete s[l],
                        s[p] = Xc(o),
                        a[p] = !0
                }
            ),
                this
        }

        concat(...t) {
            return this.constructor.concat(this, ...t)
        }

        toJSON(t) {
            const s = Object.create(null);
            return Ve.forEach(this, (a, o) => {
                    a != null && a !== !1 && (s[o] = t && Ve.isArray(a) ? a.join(", ") : a)
                }
            ),
                s
        }

        [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]()
        }

        toString() {
            return Object.entries(this.toJSON()).map(([t, s]) => t + ": " + s).join(`
`)
        }

        get [Symbol.toStringTag]() {
            return "AxiosHeaders"
        }

        static from(t) {
            return t instanceof this ? t : new this(t)
        }

        static concat(t, ...s) {
            const a = new this(t);
            return s.forEach(o => a.set(o)),
                a
        }

        static accessor(t) {
            const a = (this[rv] = this[rv] = {
                accessors: {}
            }).accessors
                , o = this.prototype;

            function l(u) {
                const p = Vo(u);
                a[p] || (pM(o, u),
                    a[p] = !0)
            }

            return Ve.isArray(t) ? t.forEach(l) : l(t),
                this
        }
    }
;
nd.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
Ve.reduceDescriptors(nd.prototype, ({value: e}, t) => {
        let s = t[0].toUpperCase() + t.slice(1);
        return {
            get: () => e,
            set(a) {
                this[s] = a
            }
        }
    }
);
Ve.freezeMethods(nd);
const ji = nd;

function Gd(e, t) {
    const s = this || _p
        , a = t || s
        , o = ji.from(a.headers);
    let l = a.data;
    return Ve.forEach(e, function (p) {
        l = p.call(s, l, o.normalize(), t ? t.status : void 0)
    }),
        o.normalize(),
        l
}

function E1(e) {
    return !!(e && e.__CANCEL__)
}

function tc(e, t, s) {
    Yt.call(this, e ?? "canceled", Yt.ERR_CANCELED, t, s),
        this.name = "CanceledError"
}

Ve.inherits(tc, Yt, {
    __CANCEL__: !0
});

function gM(e, t, s) {
    const a = s.config.validateStatus;
    !s.status || !a || a(s.status) ? e(s) : t(new Yt("Request failed with status code " + s.status, [Yt.ERR_BAD_REQUEST, Yt.ERR_BAD_RESPONSE][Math.floor(s.status / 100) - 4], s.config, s.request, s))
}

const mM = vi.hasStandardBrowserEnv ? {
    write(e, t, s, a, o, l) {
        const u = [e + "=" + encodeURIComponent(t)];
        Ve.isNumber(s) && u.push("expires=" + new Date(s).toGMTString()),
        Ve.isString(a) && u.push("path=" + a),
        Ve.isString(o) && u.push("domain=" + o),
        l === !0 && u.push("secure"),
            document.cookie = u.join("; ")
    },
    read(e) {
        const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
        return t ? decodeURIComponent(t[3]) : null
    },
    remove(e) {
        this.write(e, "", Date.now() - 864e5)
    }
} : {
    write() {
    },
    read() {
        return null
    },
    remove() {
    }
};

function vM(e) {
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)
}

function bM(e, t) {
    return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e
}

function T1(e, t) {
    return e && !vM(t) ? bM(e, t) : t
}

const yM = vi.hasStandardBrowserEnv ? function () {
    const t = /(msie|trident)/i.test(navigator.userAgent)
        , s = document.createElement("a");
    let a;

    function o(l) {
        let u = l;
        return t && (s.setAttribute("href", u),
            u = s.href),
            s.setAttribute("href", u),
            {
                href: s.href,
                protocol: s.protocol ? s.protocol.replace(/:$/, "") : "",
                host: s.host,
                search: s.search ? s.search.replace(/^\?/, "") : "",
                hash: s.hash ? s.hash.replace(/^#/, "") : "",
                hostname: s.hostname,
                port: s.port,
                pathname: s.pathname.charAt(0) === "/" ? s.pathname : "/" + s.pathname
            }
    }

    return a = o(window.location.href),
        function (u) {
            const p = Ve.isString(u) ? o(u) : u;
            return p.protocol === a.protocol && p.host === a.host
        }
}() : function () {
    return function () {
        return !0
    }
}();

function xM(e) {
    const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
    return t && t[1] || ""
}

function wM(e, t) {
    e = e || 10;
    const s = new Array(e)
        , a = new Array(e);
    let o = 0, l = 0, u;
    return t = t !== void 0 ? t : 1e3,
        function (g) {
            const y = Date.now()
                , v = a[l];
            u || (u = y),
                s[o] = g,
                a[o] = y;
            let w = l
                , C = 0;
            for (; w !== o;)
                C += s[w++],
                    w = w % e;
            if (o = (o + 1) % e,
            o === l && (l = (l + 1) % e),
            y - u < t)
                return;
            const T = v && y - v;
            return T ? Math.round(C * 1e3 / T) : void 0
        }
}

function ov(e, t) {
    let s = 0;
    const a = wM(50, 250);
    return o => {
        const l = o.loaded
            , u = o.lengthComputable ? o.total : void 0
            , p = l - s
            , g = a(p)
            , y = l <= u;
        s = l;
        const v = {
            loaded: l,
            total: u,
            progress: u ? l / u : void 0,
            bytes: p,
            rate: g || void 0,
            estimated: g && u && y ? (u - l) / g : void 0,
            event: o
        };
        v[t ? "download" : "upload"] = !0,
            e(v)
    }
}

const SM = typeof XMLHttpRequest < "u"
    , _M = SM && function (e) {
    return new Promise(function (s, a) {
            let o = e.data;
            const l = ji.from(e.headers).normalize();
            let {responseType: u, withXSRFToken: p} = e, g;

            function y() {
                e.cancelToken && e.cancelToken.unsubscribe(g),
                e.signal && e.signal.removeEventListener("abort", g)
            }

            let v;
            if (Ve.isFormData(o)) {
                if (vi.hasStandardBrowserEnv || vi.hasStandardBrowserWebWorkerEnv)
                    l.setContentType(!1);
                else if ((v = l.getContentType()) !== !1) {
                    const [A, ...R] = v ? v.split(";").map(P => P.trim()).filter(Boolean) : [];
                    l.setContentType([A || "multipart/form-data", ...R].join("; "))
                }
            }
            let w = new XMLHttpRequest;
            if (e.auth) {
                const A = e.auth.username || ""
                    , R = e.auth.password ? unescape(encodeURIComponent(e.auth.password)) : "";
                l.set("Authorization", "Basic " + btoa(A + ":" + R))
            }
            const C = T1(e.baseURL, e.url);
            w.open(e.method.toUpperCase(), _1(C, e.params, e.paramsSerializer), !0),
                w.timeout = e.timeout;

            function T() {
                if (!w)
                    return;
                const A = ji.from("getAllResponseHeaders" in w && w.getAllResponseHeaders())
                    , P = {
                    data: !u || u === "text" || u === "json" ? w.responseText : w.response,
                    status: w.status,
                    statusText: w.statusText,
                    headers: A,
                    config: e,
                    request: w
                };
                gM(function (O) {
                    s(O),
                        y()
                }, function (O) {
                    a(O),
                        y()
                }, P),
                    w = null
            }

            if ("onloadend" in w ? w.onloadend = T : w.onreadystatechange = function () {
                !w || w.readyState !== 4 || w.status === 0 && !(w.responseURL && w.responseURL.indexOf("file:") === 0) || setTimeout(T)
            }
                ,
                w.onabort = function () {
                    w && (a(new Yt("Request aborted", Yt.ECONNABORTED, e, w)),
                        w = null)
                }
                ,
                w.onerror = function () {
                    a(new Yt("Network Error", Yt.ERR_NETWORK, e, w)),
                        w = null
                }
                ,
                w.ontimeout = function () {
                    let R = e.timeout ? "timeout of " + e.timeout + "ms exceeded" : "timeout exceeded";
                    const P = e.transitional || k1;
                    e.timeoutErrorMessage && (R = e.timeoutErrorMessage),
                        a(new Yt(R, P.clarifyTimeoutError ? Yt.ETIMEDOUT : Yt.ECONNABORTED, e, w)),
                        w = null
                }
                ,
            vi.hasStandardBrowserEnv && (p && Ve.isFunction(p) && (p = p(e)),
            p || p !== !1 && yM(C))) {
                const A = e.xsrfHeaderName && e.xsrfCookieName && mM.read(e.xsrfCookieName);
                A && l.set(e.xsrfHeaderName, A)
            }
            o === void 0 && l.setContentType(null),
            "setRequestHeader" in w && Ve.forEach(l.toJSON(), function (R, P) {
                w.setRequestHeader(P, R)
            }),
            Ve.isUndefined(e.withCredentials) || (w.withCredentials = !!e.withCredentials),
            u && u !== "json" && (w.responseType = e.responseType),
            typeof e.onDownloadProgress == "function" && w.addEventListener("progress", ov(e.onDownloadProgress, !0)),
            typeof e.onUploadProgress == "function" && w.upload && w.upload.addEventListener("progress", ov(e.onUploadProgress)),
            (e.cancelToken || e.signal) && (g = A => {
                w && (a(!A || A.type ? new tc(null, e, w) : A),
                    w.abort(),
                    w = null)
            }
                ,
            e.cancelToken && e.cancelToken.subscribe(g),
            e.signal && (e.signal.aborted ? g() : e.signal.addEventListener("abort", g)));
            const I = xM(C);
            if (I && vi.protocols.indexOf(I) === -1) {
                a(new Yt("Unsupported protocol " + I + ":", Yt.ERR_BAD_REQUEST, e));
                return
            }
            w.send(o || null)
        }
    )
}
    , Jh = {
    http: jL,
    xhr: _M
};
Ve.forEach(Jh, (e, t) => {
        if (e) {
            try {
                Object.defineProperty(e, "name", {
                    value: t
                })
            } catch {
            }
            Object.defineProperty(e, "adapterName", {
                value: t
            })
        }
    }
);
const lv = e => `- ${e}`
    , kM = e => Ve.isFunction(e) || e === null || e === !1
    , I1 = {
    getAdapter: e => {
        e = Ve.isArray(e) ? e : [e];
        const {length: t} = e;
        let s, a;
        const o = {};
        for (let l = 0; l < t; l++) {
            s = e[l];
            let u;
            if (a = s,
            !kM(s) && (a = Jh[(u = String(s)).toLowerCase()],
            a === void 0))
                throw new Yt(`Unknown adapter '${u}'`);
            if (a)
                break;
            o[u || "#" + l] = a
        }
        if (!a) {
            const l = Object.entries(o).map(([p, g]) => `adapter ${p} ` + (g === !1 ? "is not supported by the environment" : "is not available in the build"));
            let u = t ? l.length > 1 ? `since :
` + l.map(lv).join(`
`) : " " + lv(l[0]) : "as no adapter specified";
            throw new Yt("There is no suitable adapter to dispatch the request " + u, "ERR_NOT_SUPPORT")
        }
        return a
    }
    ,
    adapters: Jh
};

function qd(e) {
    if (e.cancelToken && e.cancelToken.throwIfRequested(),
    e.signal && e.signal.aborted)
        throw new tc(null, e)
}

function cv(e) {
    return qd(e),
        e.headers = ji.from(e.headers),
        e.data = Gd.call(e, e.transformRequest),
    ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1),
        I1.getAdapter(e.adapter || _p.adapter)(e).then(function (a) {
            return qd(e),
                a.data = Gd.call(e, e.transformResponse, a),
                a.headers = ji.from(a.headers),
                a
        }, function (a) {
            return E1(a) || (qd(e),
            a && a.response && (a.response.data = Gd.call(e, e.transformResponse, a.response),
                a.response.headers = ji.from(a.response.headers))),
                Promise.reject(a)
        })
}

const uv = e => e instanceof ji ? e.toJSON() : e;

function ro(e, t) {
    t = t || {};
    const s = {};

    function a(y, v, w) {
        return Ve.isPlainObject(y) && Ve.isPlainObject(v) ? Ve.merge.call({
            caseless: w
        }, y, v) : Ve.isPlainObject(v) ? Ve.merge({}, v) : Ve.isArray(v) ? v.slice() : v
    }

    function o(y, v, w) {
        if (Ve.isUndefined(v)) {
            if (!Ve.isUndefined(y))
                return a(void 0, y, w)
        } else
            return a(y, v, w)
    }

    function l(y, v) {
        if (!Ve.isUndefined(v))
            return a(void 0, v)
    }

    function u(y, v) {
        if (Ve.isUndefined(v)) {
            if (!Ve.isUndefined(y))
                return a(void 0, y)
        } else
            return a(void 0, v)
    }

    function p(y, v, w) {
        if (w in t)
            return a(y, v);
        if (w in e)
            return a(void 0, y)
    }

    const g = {
        url: l,
        method: l,
        data: l,
        baseURL: u,
        transformRequest: u,
        transformResponse: u,
        paramsSerializer: u,
        timeout: u,
        timeoutMessage: u,
        withCredentials: u,
        withXSRFToken: u,
        adapter: u,
        responseType: u,
        xsrfCookieName: u,
        xsrfHeaderName: u,
        onUploadProgress: u,
        onDownloadProgress: u,
        decompress: u,
        maxContentLength: u,
        maxBodyLength: u,
        beforeRedirect: u,
        transport: u,
        httpAgent: u,
        httpsAgent: u,
        cancelToken: u,
        socketPath: u,
        responseEncoding: u,
        validateStatus: p,
        headers: (y, v) => o(uv(y), uv(v), !0)
    };
    return Ve.forEach(Object.keys(Object.assign({}, e, t)), function (v) {
        const w = g[v] || o
            , C = w(e[v], t[v], v);
        Ve.isUndefined(C) && w !== p || (s[v] = C)
    }),
        s
}

const P1 = "1.6.7"
    , kp = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
        kp[e] = function (a) {
            return typeof a === e || "a" + (t < 1 ? "n " : " ") + e
        }
    }
);
const dv = {};
kp.transitional = function (t, s, a) {
    function o(l, u) {
        return "[Axios v" + P1 + "] Transitional option '" + l + "'" + u + (a ? ". " + a : "")
    }

    return (l, u, p) => {
        if (t === !1)
            throw new Yt(o(u, " has been removed" + (s ? " in " + s : "")), Yt.ERR_DEPRECATED);
        return s && !dv[u] && (dv[u] = !0,
            console.warn(o(u, " has been deprecated since v" + s + " and will be removed in the near future"))),
            t ? t(l, u, p) : !0
    }
}
;

function CM(e, t, s) {
    if (typeof e != "object")
        throw new Yt("options must be an object", Yt.ERR_BAD_OPTION_VALUE);
    const a = Object.keys(e);
    let o = a.length;
    for (; o-- > 0;) {
        const l = a[o]
            , u = t[l];
        if (u) {
            const p = e[l]
                , g = p === void 0 || u(p, l, e);
            if (g !== !0)
                throw new Yt("option " + l + " must be " + g, Yt.ERR_BAD_OPTION_VALUE);
            continue
        }
        if (s !== !0)
            throw new Yt("Unknown option " + l, Yt.ERR_BAD_OPTION)
    }
}

const Qh = {
    assertOptions: CM,
    validators: kp
}
    , oa = Qh.validators;
let bu = class {
        constructor(t) {
            this.defaults = t,
                this.interceptors = {
                    request: new av,
                    response: new av
                }
        }

        async request(t, s) {
            try {
                return await this._request(t, s)
            } catch (a) {
                if (a instanceof Error) {
                    let o;
                    Error.captureStackTrace ? Error.captureStackTrace(o = {}) : o = new Error;
                    const l = o.stack ? o.stack.replace(/^.+\n/, "") : "";
                    a.stack ? l && !String(a.stack).endsWith(l.replace(/^.+\n.+\n/, "")) && (a.stack += `
` + l) : a.stack = l
                }
                throw a
            }
        }

        _request(t, s) {
            typeof t == "string" ? (s = s || {},
                s.url = t) : s = t || {},
                s = ro(this.defaults, s);
            const {transitional: a, paramsSerializer: o, headers: l} = s;
            a !== void 0 && Qh.assertOptions(a, {
                silentJSONParsing: oa.transitional(oa.boolean),
                forcedJSONParsing: oa.transitional(oa.boolean),
                clarifyTimeoutError: oa.transitional(oa.boolean)
            }, !1),
            o != null && (Ve.isFunction(o) ? s.paramsSerializer = {
                serialize: o
            } : Qh.assertOptions(o, {
                encode: oa.function,
                serialize: oa.function
            }, !0)),
                s.method = (s.method || this.defaults.method || "get").toLowerCase();
            let u = l && Ve.merge(l.common, l[s.method]);
            l && Ve.forEach(["delete", "get", "head", "post", "put", "patch", "common"], I => {
                    delete l[I]
                }
            ),
                s.headers = ji.concat(u, l);
            const p = [];
            let g = !0;
            this.interceptors.request.forEach(function (A) {
                typeof A.runWhen == "function" && A.runWhen(s) === !1 || (g = g && A.synchronous,
                    p.unshift(A.fulfilled, A.rejected))
            });
            const y = [];
            this.interceptors.response.forEach(function (A) {
                y.push(A.fulfilled, A.rejected)
            });
            let v, w = 0, C;
            if (!g) {
                const I = [cv.bind(this), void 0];
                for (I.unshift.apply(I, p),
                         I.push.apply(I, y),
                         C = I.length,
                         v = Promise.resolve(s); w < C;)
                    v = v.then(I[w++], I[w++]);
                return v
            }
            C = p.length;
            let T = s;
            for (w = 0; w < C;) {
                const I = p[w++]
                    , A = p[w++];
                try {
                    T = I(T)
                } catch (R) {
                    A.call(this, R);
                    break
                }
            }
            try {
                v = cv.call(this, T)
            } catch (I) {
                return Promise.reject(I)
            }
            for (w = 0,
                     C = y.length; w < C;)
                v = v.then(y[w++], y[w++]);
            return v
        }

        getUri(t) {
            t = ro(this.defaults, t);
            const s = T1(t.baseURL, t.url);
            return _1(s, t.params, t.paramsSerializer)
        }
    }
;
Ve.forEach(["delete", "get", "head", "options"], function (t) {
    bu.prototype[t] = function (s, a) {
        return this.request(ro(a || {}, {
            method: t,
            url: s,
            data: (a || {}).data
        }))
    }
});
Ve.forEach(["post", "put", "patch"], function (t) {
    function s(a) {
        return function (l, u, p) {
            return this.request(ro(p || {}, {
                method: t,
                headers: a ? {
                    "Content-Type": "multipart/form-data"
                } : {},
                url: l,
                data: u
            }))
        }
    }

    bu.prototype[t] = s(),
        bu.prototype[t + "Form"] = s(!0)
});
const jc = bu;
let AM = class L1 {
        constructor(t) {
            if (typeof t != "function")
                throw new TypeError("executor must be a function.");
            let s;
            this.promise = new Promise(function (l) {
                    s = l
                }
            );
            const a = this;
            this.promise.then(o => {
                    if (!a._listeners)
                        return;
                    let l = a._listeners.length;
                    for (; l-- > 0;)
                        a._listeners[l](o);
                    a._listeners = null
                }
            ),
                this.promise.then = o => {
                    let l;
                    const u = new Promise(p => {
                            a.subscribe(p),
                                l = p
                        }
                    ).then(o);
                    return u.cancel = function () {
                        a.unsubscribe(l)
                    }
                        ,
                        u
                }
                ,
                t(function (l, u, p) {
                    a.reason || (a.reason = new tc(l, u, p),
                        s(a.reason))
                })
        }

        throwIfRequested() {
            if (this.reason)
                throw this.reason
        }

        subscribe(t) {
            if (this.reason) {
                t(this.reason);
                return
            }
            this._listeners ? this._listeners.push(t) : this._listeners = [t]
        }

        unsubscribe(t) {
            if (!this._listeners)
                return;
            const s = this._listeners.indexOf(t);
            s !== -1 && this._listeners.splice(s, 1)
        }

        static source() {
            let t;
            return {
                token: new L1(function (o) {
                        t = o
                    }
                ),
                cancel: t
            }
        }
    }
;
const EM = AM;

function TM(e) {
    return function (s) {
        return e.apply(null, s)
    }
}

function IM(e) {
    return Ve.isObject(e) && e.isAxiosError === !0
}

const ef = {
    Continue: 100,
    SwitchingProtocols: 101,
    Processing: 102,
    EarlyHints: 103,
    Ok: 200,
    Created: 201,
    Accepted: 202,
    NonAuthoritativeInformation: 203,
    NoContent: 204,
    ResetContent: 205,
    PartialContent: 206,
    MultiStatus: 207,
    AlreadyReported: 208,
    ImUsed: 226,
    MultipleChoices: 300,
    MovedPermanently: 301,
    Found: 302,
    SeeOther: 303,
    NotModified: 304,
    UseProxy: 305,
    Unused: 306,
    TemporaryRedirect: 307,
    PermanentRedirect: 308,
    BadRequest: 400,
    Unauthorized: 401,
    PaymentRequired: 402,
    Forbidden: 403,
    NotFound: 404,
    MethodNotAllowed: 405,
    NotAcceptable: 406,
    ProxyAuthenticationRequired: 407,
    RequestTimeout: 408,
    Conflict: 409,
    Gone: 410,
    LengthRequired: 411,
    PreconditionFailed: 412,
    PayloadTooLarge: 413,
    UriTooLong: 414,
    UnsupportedMediaType: 415,
    RangeNotSatisfiable: 416,
    ExpectationFailed: 417,
    ImATeapot: 418,
    MisdirectedRequest: 421,
    UnprocessableEntity: 422,
    Locked: 423,
    FailedDependency: 424,
    TooEarly: 425,
    UpgradeRequired: 426,
    PreconditionRequired: 428,
    TooManyRequests: 429,
    RequestHeaderFieldsTooLarge: 431,
    UnavailableForLegalReasons: 451,
    InternalServerError: 500,
    NotImplemented: 501,
    BadGateway: 502,
    ServiceUnavailable: 503,
    GatewayTimeout: 504,
    HttpVersionNotSupported: 505,
    VariantAlsoNegotiates: 506,
    InsufficientStorage: 507,
    LoopDetected: 508,
    NotExtended: 510,
    NetworkAuthenticationRequired: 511
};
Object.entries(ef).forEach(([e, t]) => {
        ef[t] = e
    }
);
const PM = ef;

function M1(e) {
    const t = new jc(e)
        , s = d1(jc.prototype.request, t);
    return Ve.extend(s, jc.prototype, t, {
        allOwnKeys: !0
    }),
        Ve.extend(s, t, null, {
            allOwnKeys: !0
        }),
        s.create = function (o) {
            return M1(ro(e, o))
        }
        ,
        s
}

const As = M1(_p);
As.Axios = jc;
As.CanceledError = tc;
As.CancelToken = EM;
As.isCancel = E1;
As.VERSION = P1;
As.toFormData = sd;
As.AxiosError = Yt;
As.Cancel = As.CanceledError;
As.all = function (t) {
    return Promise.all(t)
}
;
As.spread = TM;
As.isAxiosError = IM;
As.mergeConfig = ro;
As.AxiosHeaders = ji;
As.formToJSON = e => A1(Ve.isHTMLForm(e) ? new FormData(e) : e);
As.getAdapter = I1.getAdapter;
As.HttpStatusCode = PM;
As.default = As;
const Cp = As
    , {
    Axios: Lq,
    AxiosError: LM,
    CanceledError: Mq,
    isCancel: Oq,
    CancelToken: Rq,
    VERSION: Nq,
    all: Dq,
    Cancel: Fq,
    isAxiosError: $q,
    spread: Bq,
    toFormData: Hq,
    AxiosHeaders: Vq,
    HttpStatusCode: zq,
    formToJSON: Wq,
    getAdapter: Uq,
    mergeConfig: Yq
} = Cp
    , MM = "modulepreload"
    , OM = function (e) {
    return "/" + e
}
    , hv = {}
    , Wn = function (t, s, a) {
    let o = Promise.resolve();
    if (s && s.length > 0) {
        const l = document.getElementsByTagName("link");
        o = Promise.all(s.map(u => {
                if (u = OM(u),
                u in hv)
                    return;
                hv[u] = !0;
                const p = u.endsWith(".css")
                    , g = p ? '[rel="stylesheet"]' : "";
                if (!!a)
                    for (let w = l.length - 1; w >= 0; w--) {
                        const C = l[w];
                        if (C.href === u && (!p || C.rel === "stylesheet"))
                            return
                    }
                else if (document.querySelector(`link[href="${u}"]${g}`))
                    return;
                const v = document.createElement("link");
                if (v.rel = p ? "stylesheet" : MM,
                p || (v.as = "script",
                    v.crossOrigin = ""),
                    v.href = u,
                    document.head.appendChild(v),
                    p)
                    return new Promise((w, C) => {
                            v.addEventListener("load", w),
                                v.addEventListener("error", () => C(new Error(`Unable to preload CSS for ${u}`)))
                        }
                    )
            }
        ))
    }
    return o.then(() => t()).catch(l => {
            const u = new Event("vite:preloadError", {
                cancelable: !0
            });
            if (u.payload = l,
                window.dispatchEvent(u),
                !u.defaultPrevented)
                throw l
        }
    )
};
/*!
  * vue-router v4.3.0
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */
const Lr = typeof document < "u";

function RM(e) {
    return e.__esModule || e[Symbol.toStringTag] === "Module"
}

const Jt = Object.assign;

function Kd(e, t) {
    const s = {};
    for (const a in t) {
        const o = t[a];
        s[a] = si(o) ? o.map(e) : e(o)
    }
    return s
}

const tl = () => {
}
    , si = Array.isArray
    , O1 = /#/g
    , NM = /&/g
    , DM = /\//g
    , FM = /=/g
    , $M = /\?/g
    , R1 = /\+/g
    , BM = /%5B/g
    , HM = /%5D/g
    , N1 = /%5E/g
    , VM = /%60/g
    , D1 = /%7B/g
    , zM = /%7C/g
    , F1 = /%7D/g
    , WM = /%20/g;

function Ap(e) {
    return encodeURI("" + e).replace(zM, "|").replace(BM, "[").replace(HM, "]")
}

function UM(e) {
    return Ap(e).replace(D1, "{").replace(F1, "}").replace(N1, "^")
}

function tf(e) {
    return Ap(e).replace(R1, "%2B").replace(WM, "+").replace(O1, "%23").replace(NM, "%26").replace(VM, "`").replace(D1, "{").replace(F1, "}").replace(N1, "^")
}

function YM(e) {
    return tf(e).replace(FM, "%3D")
}

function XM(e) {
    return Ap(e).replace(O1, "%23").replace($M, "%3F")
}

function jM(e) {
    return e == null ? "" : XM(e).replace(DM, "%2F")
}

function Pl(e) {
    try {
        return decodeURIComponent("" + e)
    } catch {
    }
    return "" + e
}

const GM = /\/$/
    , qM = e => e.replace(GM, "");

function Zd(e, t, s = "/") {
    let a, o = {}, l = "", u = "";
    const p = t.indexOf("#");
    let g = t.indexOf("?");
    return p < g && p >= 0 && (g = -1),
    g > -1 && (a = t.slice(0, g),
        l = t.slice(g + 1, p > -1 ? p : t.length),
        o = e(l)),
    p > -1 && (a = a || t.slice(0, p),
        u = t.slice(p, t.length)),
        a = QM(a ?? t, s),
        {
            fullPath: a + (l && "?") + l + u,
            path: a,
            query: o,
            hash: Pl(u)
        }
}

function KM(e, t) {
    const s = t.query ? e(t.query) : "";
    return t.path + (s && "?") + s + (t.hash || "")
}

function fv(e, t) {
    return !t || !e.toLowerCase().startsWith(t.toLowerCase()) ? e : e.slice(t.length) || "/"
}

function ZM(e, t, s) {
    const a = t.matched.length - 1
        , o = s.matched.length - 1;
    return a > -1 && a === o && oo(t.matched[a], s.matched[o]) && $1(t.params, s.params) && e(t.query) === e(s.query) && t.hash === s.hash
}

function oo(e, t) {
    return (e.aliasOf || e) === (t.aliasOf || t)
}

function $1(e, t) {
    if (Object.keys(e).length !== Object.keys(t).length)
        return !1;
    for (const s in e)
        if (!JM(e[s], t[s]))
            return !1;
    return !0
}

function JM(e, t) {
    return si(e) ? pv(e, t) : si(t) ? pv(t, e) : e === t
}

function pv(e, t) {
    return si(t) ? e.length === t.length && e.every((s, a) => s === t[a]) : e.length === 1 && e[0] === t
}

function QM(e, t) {
    if (e.startsWith("/"))
        return e;
    if (!e)
        return t;
    const s = t.split("/")
        , a = e.split("/")
        , o = a[a.length - 1];
    (o === ".." || o === ".") && a.push("");
    let l = s.length - 1, u, p;
    for (u = 0; u < a.length; u++)
        if (p = a[u],
        p !== ".")
            if (p === "..")
                l > 1 && l--;
            else
                break;
    return s.slice(0, l).join("/") + "/" + a.slice(u).join("/")
}

var Ll;
(function (e) {
        e.pop = "pop",
            e.push = "push"
    }
)(Ll || (Ll = {}));
var sl;
(function (e) {
        e.back = "back",
            e.forward = "forward",
            e.unknown = ""
    }
)(sl || (sl = {}));

function eO(e) {
    if (!e)
        if (Lr) {
            const t = document.querySelector("base");
            e = t && t.getAttribute("href") || "/",
                e = e.replace(/^\w+:\/\/[^\/]+/, "")
        } else
            e = "/";
    return e[0] !== "/" && e[0] !== "#" && (e = "/" + e),
        qM(e)
}

const tO = /^[^#]+#/;

function sO(e, t) {
    return e.replace(tO, "#") + t
}

function nO(e, t) {
    const s = document.documentElement.getBoundingClientRect()
        , a = e.getBoundingClientRect();
    return {
        behavior: t.behavior,
        left: a.left - s.left - (t.left || 0),
        top: a.top - s.top - (t.top || 0)
    }
}

const id = () => ({
    left: window.scrollX,
    top: window.scrollY
});

function iO(e) {
    let t;
    if ("el" in e) {
        const s = e.el
            , a = typeof s == "string" && s.startsWith("#")
            , o = typeof s == "string" ? a ? document.getElementById(s.slice(1)) : document.querySelector(s) : s;
        if (!o)
            return;
        t = nO(o, e)
    } else
        t = e;
    "scrollBehavior" in document.documentElement.style ? window.scrollTo(t) : window.scrollTo(t.left != null ? t.left : window.scrollX, t.top != null ? t.top : window.scrollY)
}

function gv(e, t) {
    return (history.state ? history.state.position - t : -1) + e
}

const sf = new Map;

function aO(e, t) {
    sf.set(e, t)
}

function rO(e) {
    const t = sf.get(e);
    return sf.delete(e),
        t
}

let oO = () => location.protocol + "//" + location.host;

function B1(e, t) {
    const {pathname: s, search: a, hash: o} = t
        , l = e.indexOf("#");
    if (l > -1) {
        let p = o.includes(e.slice(l)) ? e.slice(l).length : 1
            , g = o.slice(p);
        return g[0] !== "/" && (g = "/" + g),
            fv(g, "")
    }
    return fv(s, e) + a + o
}

function lO(e, t, s, a) {
    let o = []
        , l = []
        , u = null;
    const p = ({state: C}) => {
            const T = B1(e, location)
                , I = s.value
                , A = t.value;
            let R = 0;
            if (C) {
                if (s.value = T,
                    t.value = C,
                u && u === I) {
                    u = null;
                    return
                }
                R = A ? C.position - A.position : 0
            } else
                a(T);
            o.forEach(P => {
                    P(s.value, I, {
                        delta: R,
                        type: Ll.pop,
                        direction: R ? R > 0 ? sl.forward : sl.back : sl.unknown
                    })
                }
            )
        }
    ;

    function g() {
        u = s.value
    }

    function y(C) {
        o.push(C);
        const T = () => {
                const I = o.indexOf(C);
                I > -1 && o.splice(I, 1)
            }
        ;
        return l.push(T),
            T
    }

    function v() {
        const {history: C} = window;
        C.state && C.replaceState(Jt({}, C.state, {
            scroll: id()
        }), "")
    }

    function w() {
        for (const C of l)
            C();
        l = [],
            window.removeEventListener("popstate", p),
            window.removeEventListener("beforeunload", v)
    }

    return window.addEventListener("popstate", p),
        window.addEventListener("beforeunload", v, {
            passive: !0
        }),
        {
            pauseListeners: g,
            listen: y,
            destroy: w
        }
}

function mv(e, t, s, a = !1, o = !1) {
    return {
        back: e,
        current: t,
        forward: s,
        replaced: a,
        position: window.history.length,
        scroll: o ? id() : null
    }
}

function cO(e) {
    const {history: t, location: s} = window
        , a = {
        value: B1(e, s)
    }
        , o = {
        value: t.state
    };
    o.value || l(a.value, {
        back: null,
        current: a.value,
        forward: null,
        position: t.length - 1,
        replaced: !0,
        scroll: null
    }, !0);

    function l(g, y, v) {
        const w = e.indexOf("#")
            , C = w > -1 ? (s.host && document.querySelector("base") ? e : e.slice(w)) + g : oO() + e + g;
        try {
            t[v ? "replaceState" : "pushState"](y, "", C),
                o.value = y
        } catch (T) {
            console.error(T),
                s[v ? "replace" : "assign"](C)
        }
    }

    function u(g, y) {
        const v = Jt({}, t.state, mv(o.value.back, g, o.value.forward, !0), y, {
            position: o.value.position
        });
        l(g, v, !0),
            a.value = g
    }

    function p(g, y) {
        const v = Jt({}, o.value, t.state, {
            forward: g,
            scroll: id()
        });
        l(v.current, v, !0);
        const w = Jt({}, mv(a.value, g, null), {
            position: v.position + 1
        }, y);
        l(g, w, !1),
            a.value = g
    }

    return {
        location: a,
        state: o,
        push: p,
        replace: u
    }
}

function uO(e) {
    e = eO(e);
    const t = cO(e)
        , s = lO(e, t.state, t.location, t.replace);

    function a(l, u = !0) {
        u || s.pauseListeners(),
            history.go(l)
    }

    const o = Jt({
        location: "",
        base: e,
        go: a,
        createHref: sO.bind(null, e)
    }, t, s);
    return Object.defineProperty(o, "location", {
        enumerable: !0,
        get: () => t.location.value
    }),
        Object.defineProperty(o, "state", {
            enumerable: !0,
            get: () => t.state.value
        }),
        o
}

function dO(e) {
    return typeof e == "string" || e && typeof e == "object"
}

function H1(e) {
    return typeof e == "string" || typeof e == "symbol"
}

const la = {
    path: "/",
    name: void 0,
    params: {},
    query: {},
    hash: "",
    fullPath: "/",
    matched: [],
    meta: {},
    redirectedFrom: void 0
}
    , V1 = Symbol("");
var vv;
(function (e) {
        e[e.aborted = 4] = "aborted",
            e[e.cancelled = 8] = "cancelled",
            e[e.duplicated = 16] = "duplicated"
    }
)(vv || (vv = {}));

function lo(e, t) {
    return Jt(new Error, {
        type: e,
        [V1]: !0
    }, t)
}

function Di(e, t) {
    return e instanceof Error && V1 in e && (t == null || !!(e.type & t))
}

const bv = "[^/]+?"
    , hO = {
    sensitive: !1,
    strict: !1,
    start: !0,
    end: !0
}
    , fO = /[.+*?^${}()[\]/\\]/g;

function pO(e, t) {
    const s = Jt({}, hO, t)
        , a = [];
    let o = s.start ? "^" : "";
    const l = [];
    for (const y of e) {
        const v = y.length ? [] : [90];
        s.strict && !y.length && (o += "/");
        for (let w = 0; w < y.length; w++) {
            const C = y[w];
            let T = 40 + (s.sensitive ? .25 : 0);
            if (C.type === 0)
                w || (o += "/"),
                    o += C.value.replace(fO, "\\$&"),
                    T += 40;
            else if (C.type === 1) {
                const {value: I, repeatable: A, optional: R, regexp: P} = C;
                l.push({
                    name: I,
                    repeatable: A,
                    optional: R
                });
                const M = P || bv;
                if (M !== bv) {
                    T += 10;
                    try {
                        new RegExp(`(${M})`)
                    } catch (F) {
                        throw new Error(`Invalid custom RegExp for param "${I}" (${M}): ` + F.message)
                    }
                }
                let O = A ? `((?:${M})(?:/(?:${M}))*)` : `(${M})`;
                w || (O = R && y.length < 2 ? `(?:/${O})` : "/" + O),
                R && (O += "?"),
                    o += O,
                    T += 20,
                R && (T += -8),
                A && (T += -20),
                M === ".*" && (T += -50)
            }
            v.push(T)
        }
        a.push(v)
    }
    if (s.strict && s.end) {
        const y = a.length - 1;
        a[y][a[y].length - 1] += .7000000000000001
    }
    s.strict || (o += "/?"),
        s.end ? o += "$" : s.strict && (o += "(?:/|$)");
    const u = new RegExp(o, s.sensitive ? "" : "i");

    function p(y) {
        const v = y.match(u)
            , w = {};
        if (!v)
            return null;
        for (let C = 1; C < v.length; C++) {
            const T = v[C] || ""
                , I = l[C - 1];
            w[I.name] = T && I.repeatable ? T.split("/") : T
        }
        return w
    }

    function g(y) {
        let v = ""
            , w = !1;
        for (const C of e) {
            (!w || !v.endsWith("/")) && (v += "/"),
                w = !1;
            for (const T of C)
                if (T.type === 0)
                    v += T.value;
                else if (T.type === 1) {
                    const {value: I, repeatable: A, optional: R} = T
                        , P = I in y ? y[I] : "";
                    if (si(P) && !A)
                        throw new Error(`Provided param "${I}" is an array but it is not repeatable (* or + modifiers)`);
                    const M = si(P) ? P.join("/") : P;
                    if (!M)
                        if (R)
                            C.length < 2 && (v.endsWith("/") ? v = v.slice(0, -1) : w = !0);
                        else
                            throw new Error(`Missing required param "${I}"`);
                    v += M
                }
        }
        return v || "/"
    }

    return {
        re: u,
        score: a,
        keys: l,
        parse: p,
        stringify: g
    }
}

function gO(e, t) {
    let s = 0;
    for (; s < e.length && s < t.length;) {
        const a = t[s] - e[s];
        if (a)
            return a;
        s++
    }
    return e.length < t.length ? e.length === 1 && e[0] === 80 ? -1 : 1 : e.length > t.length ? t.length === 1 && t[0] === 80 ? 1 : -1 : 0
}

function mO(e, t) {
    let s = 0;
    const a = e.score
        , o = t.score;
    for (; s < a.length && s < o.length;) {
        const l = gO(a[s], o[s]);
        if (l)
            return l;
        s++
    }
    if (Math.abs(o.length - a.length) === 1) {
        if (yv(a))
            return 1;
        if (yv(o))
            return -1
    }
    return o.length - a.length
}

function yv(e) {
    const t = e[e.length - 1];
    return e.length > 0 && t[t.length - 1] < 0
}

const vO = {
    type: 0,
    value: ""
}
    , bO = /[a-zA-Z0-9_]/;

function yO(e) {
    if (!e)
        return [[]];
    if (e === "/")
        return [[vO]];
    if (!e.startsWith("/"))
        throw new Error(`Invalid path "${e}"`);

    function t(T) {
        throw new Error(`ERR (${s})/"${y}": ${T}`)
    }

    let s = 0
        , a = s;
    const o = [];
    let l;

    function u() {
        l && o.push(l),
            l = []
    }

    let p = 0, g, y = "", v = "";

    function w() {
        y && (s === 0 ? l.push({
            type: 0,
            value: y
        }) : s === 1 || s === 2 || s === 3 ? (l.length > 1 && (g === "*" || g === "+") && t(`A repeatable param (${y}) must be alone in its segment. eg: '/:ids+.`),
            l.push({
                type: 1,
                value: y,
                regexp: v,
                repeatable: g === "*" || g === "+",
                optional: g === "*" || g === "?"
            })) : t("Invalid state to consume buffer"),
            y = "")
    }

    function C() {
        y += g
    }

    for (; p < e.length;) {
        if (g = e[p++],
        g === "\\" && s !== 2) {
            a = s,
                s = 4;
            continue
        }
        switch (s) {
            case 0:
                g === "/" ? (y && w(),
                    u()) : g === ":" ? (w(),
                    s = 1) : C();
                break;
            case 4:
                C(),
                    s = a;
                break;
            case 1:
                g === "(" ? s = 2 : bO.test(g) ? C() : (w(),
                    s = 0,
                g !== "*" && g !== "?" && g !== "+" && p--);
                break;
            case 2:
                g === ")" ? v[v.length - 1] == "\\" ? v = v.slice(0, -1) + g : s = 3 : v += g;
                break;
            case 3:
                w(),
                    s = 0,
                g !== "*" && g !== "?" && g !== "+" && p--,
                    v = "";
                break;
            default:
                t("Unknown state");
                break
        }
    }
    return s === 2 && t(`Unfinished custom RegExp for param "${y}"`),
        w(),
        u(),
        o
}

function xO(e, t, s) {
    const a = pO(yO(e.path), s)
        , o = Jt(a, {
        record: e,
        parent: t,
        children: [],
        alias: []
    });
    return t && !o.record.aliasOf == !t.record.aliasOf && t.children.push(o),
        o
}

function wO(e, t) {
    const s = []
        , a = new Map;
    t = Sv({
        strict: !1,
        end: !0,
        sensitive: !1
    }, t);

    function o(v) {
        return a.get(v)
    }

    function l(v, w, C) {
        const T = !C
            , I = SO(v);
        I.aliasOf = C && C.record;
        const A = Sv(t, v)
            , R = [I];
        if ("alias" in v) {
            const O = typeof v.alias == "string" ? [v.alias] : v.alias;
            for (const F of O)
                R.push(Jt({}, I, {
                    components: C ? C.record.components : I.components,
                    path: F,
                    aliasOf: C ? C.record : I
                }))
        }
        let P, M;
        for (const O of R) {
            const {path: F} = O;
            if (w && F[0] !== "/") {
                const $ = w.record.path
                    , V = $[$.length - 1] === "/" ? "" : "/";
                O.path = w.record.path + (F && V + F)
            }
            if (P = xO(O, w, A),
                C ? C.alias.push(P) : (M = M || P,
                M !== P && M.alias.push(P),
                T && v.name && !wv(P) && u(v.name)),
                I.children) {
                const $ = I.children;
                for (let V = 0; V < $.length; V++)
                    l($[V], P, C && C.children[V])
            }
            C = C || P,
            (P.record.components && Object.keys(P.record.components).length || P.record.name || P.record.redirect) && g(P)
        }
        return M ? () => {
                u(M)
            }
            : tl
    }

    function u(v) {
        if (H1(v)) {
            const w = a.get(v);
            w && (a.delete(v),
                s.splice(s.indexOf(w), 1),
                w.children.forEach(u),
                w.alias.forEach(u))
        } else {
            const w = s.indexOf(v);
            w > -1 && (s.splice(w, 1),
            v.record.name && a.delete(v.record.name),
                v.children.forEach(u),
                v.alias.forEach(u))
        }
    }

    function p() {
        return s
    }

    function g(v) {
        let w = 0;
        for (; w < s.length && mO(v, s[w]) >= 0 && (v.record.path !== s[w].record.path || !z1(v, s[w]));)
            w++;
        s.splice(w, 0, v),
        v.record.name && !wv(v) && a.set(v.record.name, v)
    }

    function y(v, w) {
        let C, T = {}, I, A;
        if ("name" in v && v.name) {
            if (C = a.get(v.name),
                !C)
                throw lo(1, {
                    location: v
                });
            A = C.record.name,
                T = Jt(xv(w.params, C.keys.filter(M => !M.optional).concat(C.parent ? C.parent.keys.filter(M => M.optional) : []).map(M => M.name)), v.params && xv(v.params, C.keys.map(M => M.name))),
                I = C.stringify(T)
        } else if (v.path != null)
            I = v.path,
                C = s.find(M => M.re.test(I)),
            C && (T = C.parse(I),
                A = C.record.name);
        else {
            if (C = w.name ? a.get(w.name) : s.find(M => M.re.test(w.path)),
                !C)
                throw lo(1, {
                    location: v,
                    currentLocation: w
                });
            A = C.record.name,
                T = Jt({}, w.params, v.params),
                I = C.stringify(T)
        }
        const R = [];
        let P = C;
        for (; P;)
            R.unshift(P.record),
                P = P.parent;
        return {
            name: A,
            path: I,
            params: T,
            matched: R,
            meta: kO(R)
        }
    }

    return e.forEach(v => l(v)),
        {
            addRoute: l,
            resolve: y,
            removeRoute: u,
            getRoutes: p,
            getRecordMatcher: o
        }
}

function xv(e, t) {
    const s = {};
    for (const a of t)
        a in e && (s[a] = e[a]);
    return s
}

function SO(e) {
    return {
        path: e.path,
        redirect: e.redirect,
        name: e.name,
        meta: e.meta || {},
        aliasOf: void 0,
        beforeEnter: e.beforeEnter,
        props: _O(e),
        children: e.children || [],
        instances: {},
        leaveGuards: new Set,
        updateGuards: new Set,
        enterCallbacks: {},
        components: "components" in e ? e.components || null : e.component && {
            default: e.component
        }
    }
}

function _O(e) {
    const t = {}
        , s = e.props || !1;
    if ("component" in e)
        t.default = s;
    else
        for (const a in e.components)
            t[a] = typeof s == "object" ? s[a] : s;
    return t
}

function wv(e) {
    for (; e;) {
        if (e.record.aliasOf)
            return !0;
        e = e.parent
    }
    return !1
}

function kO(e) {
    return e.reduce((t, s) => Jt(t, s.meta), {})
}

function Sv(e, t) {
    const s = {};
    for (const a in e)
        s[a] = a in t ? t[a] : e[a];
    return s
}

function z1(e, t) {
    return t.children.some(s => s === e || z1(e, s))
}

function CO(e) {
    const t = {};
    if (e === "" || e === "?")
        return t;
    const a = (e[0] === "?" ? e.slice(1) : e).split("&");
    for (let o = 0; o < a.length; ++o) {
        const l = a[o].replace(R1, " ")
            , u = l.indexOf("=")
            , p = Pl(u < 0 ? l : l.slice(0, u))
            , g = u < 0 ? null : Pl(l.slice(u + 1));
        if (p in t) {
            let y = t[p];
            si(y) || (y = t[p] = [y]),
                y.push(g)
        } else
            t[p] = g
    }
    return t
}

function _v(e) {
    let t = "";
    for (let s in e) {
        const a = e[s];
        if (s = YM(s),
        a == null) {
            a !== void 0 && (t += (t.length ? "&" : "") + s);
            continue
        }
        (si(a) ? a.map(l => l && tf(l)) : [a && tf(a)]).forEach(l => {
                l !== void 0 && (t += (t.length ? "&" : "") + s,
                l != null && (t += "=" + l))
            }
        )
    }
    return t
}

function AO(e) {
    const t = {};
    for (const s in e) {
        const a = e[s];
        a !== void 0 && (t[s] = si(a) ? a.map(o => o == null ? null : "" + o) : a == null ? a : "" + a)
    }
    return t
}

const EO = Symbol("")
    , kv = Symbol("")
    , Ep = Symbol("")
    , W1 = Symbol("")
    , nf = Symbol("");

function zo() {
    let e = [];

    function t(a) {
        return e.push(a),
            () => {
                const o = e.indexOf(a);
                o > -1 && e.splice(o, 1)
            }
    }

    function s() {
        e = []
    }

    return {
        add: t,
        list: () => e.slice(),
        reset: s
    }
}

function va(e, t, s, a, o, l = u => u()) {
    const u = a && (a.enterCallbacks[o] = a.enterCallbacks[o] || []);
    return () => new Promise((p, g) => {
            const y = C => {
                C === !1 ? g(lo(4, {
                    from: s,
                    to: t
                })) : C instanceof Error ? g(C) : dO(C) ? g(lo(2, {
                    from: t,
                    to: C
                })) : (u && a.enterCallbacks[o] === u && typeof C == "function" && u.push(C),
                    p())
            }
                , v = l(() => e.call(a && a.instances[o], t, s, y));
            let w = Promise.resolve(v);
            e.length < 3 && (w = w.then(y)),
                w.catch(C => g(C))
        }
    )
}

function Jd(e, t, s, a, o = l => l()) {
    const l = [];
    for (const u of e)
        for (const p in u.components) {
            let g = u.components[p];
            if (!(t !== "beforeRouteEnter" && !u.instances[p]))
                if (TO(g)) {
                    const v = (g.__vccOpts || g)[t];
                    v && l.push(va(v, s, a, u, p, o))
                } else {
                    let y = g();
                    l.push(() => y.then(v => {
                            if (!v)
                                return Promise.reject(new Error(`Couldn't resolve component "${p}" at "${u.path}"`));
                            const w = RM(v) ? v.default : v;
                            u.components[p] = w;
                            const T = (w.__vccOpts || w)[t];
                            return T && va(T, s, a, u, p, o)()
                        }
                    ))
                }
        }
    return l
}

function TO(e) {
    return typeof e == "object" || "displayName" in e || "props" in e || "__vccOpts" in e
}

function Cv(e) {
    const t = st(Ep)
        , s = st(W1)
        , a = re(() => t.resolve(D(e.to)))
        , o = re(() => {
            const {matched: g} = a.value
                , {length: y} = g
                , v = g[y - 1]
                , w = s.matched;
            if (!v || !w.length)
                return -1;
            const C = w.findIndex(oo.bind(null, v));
            if (C > -1)
                return C;
            const T = Av(g[y - 2]);
            return y > 1 && Av(v) === T && w[w.length - 1].path !== T ? w.findIndex(oo.bind(null, g[y - 2])) : C
        }
    )
        , l = re(() => o.value > -1 && MO(s.params, a.value.params))
        , u = re(() => o.value > -1 && o.value === s.matched.length - 1 && $1(s.params, a.value.params));

    function p(g = {}) {
        return LO(g) ? t[D(e.replace) ? "replace" : "push"](D(e.to)).catch(tl) : Promise.resolve()
    }

    return {
        route: a,
        href: re(() => a.value.href),
        isActive: l,
        isExactActive: u,
        navigate: p
    }
}

const IO = Ce({
    name: "RouterLink",
    compatConfig: {
        MODE: 3
    },
    props: {
        to: {
            type: [String, Object],
            required: !0
        },
        replace: Boolean,
        activeClass: String,
        exactActiveClass: String,
        custom: Boolean,
        ariaCurrentValue: {
            type: String,
            default: "page"
        }
    },
    useLink: Cv,
    setup(e, {slots: t}) {
        const s = ys(Cv(e))
            , {options: a} = st(Ep)
            , o = re(() => ({
            [Ev(e.activeClass, a.linkActiveClass, "router-link-active")]: s.isActive,
            [Ev(e.exactActiveClass, a.linkExactActiveClass, "router-link-exact-active")]: s.isExactActive
        }));
        return () => {
            const l = t.default && t.default(s);
            return e.custom ? l : jt("a", {
                "aria-current": s.isExactActive ? e.ariaCurrentValue : null,
                href: s.href,
                onClick: s.navigate,
                class: o.value
            }, l)
        }
    }
})
    , PO = IO;

function LO(e) {
    if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && !e.defaultPrevented && !(e.button !== void 0 && e.button !== 0)) {
        if (e.currentTarget && e.currentTarget.getAttribute) {
            const t = e.currentTarget.getAttribute("target");
            if (/\b_blank\b/i.test(t))
                return
        }
        return e.preventDefault && e.preventDefault(),
            !0
    }
}

function MO(e, t) {
    for (const s in t) {
        const a = t[s]
            , o = e[s];
        if (typeof a == "string") {
            if (a !== o)
                return !1
        } else if (!si(o) || o.length !== a.length || a.some((l, u) => l !== o[u]))
            return !1
    }
    return !0
}

function Av(e) {
    return e ? e.aliasOf ? e.aliasOf.path : e.path : ""
}

const Ev = (e, t, s) => e ?? t ?? s
    , OO = Ce({
    name: "RouterView",
    inheritAttrs: !1,
    props: {
        name: {
            type: String,
            default: "default"
        },
        route: Object
    },
    compatConfig: {
        MODE: 3
    },
    setup(e, {attrs: t, slots: s}) {
        const a = st(nf)
            , o = re(() => e.route || a.value)
            , l = st(kv, 0)
            , u = re(() => {
                let y = D(l);
                const {matched: v} = o.value;
                let w;
                for (; (w = v[y]) && !w.components;)
                    y++;
                return y
            }
        )
            , p = re(() => o.value.matched[u.value]);
        Xt(kv, re(() => u.value + 1)),
            Xt(EO, p),
            Xt(nf, o);
        const g = Se();
        return Ke(() => [g.value, p.value, e.name], ([y, v, w], [C, T, I]) => {
                v && (v.instances[w] = y,
                T && T !== v && y && y === C && (v.leaveGuards.size || (v.leaveGuards = T.leaveGuards),
                v.updateGuards.size || (v.updateGuards = T.updateGuards))),
                y && v && (!T || !oo(v, T) || !C) && (v.enterCallbacks[w] || []).forEach(A => A(y))
            }
            , {
                flush: "post"
            }),
            () => {
                const y = o.value
                    , v = e.name
                    , w = p.value
                    , C = w && w.components[v];
                if (!C)
                    return Tv(s.default, {
                        Component: C,
                        route: y
                    });
                const T = w.props[v]
                    , I = T ? T === !0 ? y.params : typeof T == "function" ? T(y) : T : null
                    , R = jt(C, Jt({}, I, t, {
                    onVnodeUnmounted: P => {
                        P.component.isUnmounted && (w.instances[v] = null)
                    }
                    ,
                    ref: g
                }));
                return Tv(s.default, {
                    Component: R,
                    route: y
                }) || R
            }
    }
});

function Tv(e, t) {
    if (!e)
        return null;
    const s = e(t);
    return s.length === 1 ? s[0] : s
}

const RO = OO;

function NO(e) {
    const t = wO(e.routes, e)
        , s = e.parseQuery || CO
        , a = e.stringifyQuery || _v
        , o = e.history
        , l = zo()
        , u = zo()
        , p = zo()
        , g = Bs(la);
    let y = la;
    Lr && e.scrollBehavior && "scrollRestoration" in history && (history.scrollRestoration = "manual");
    const v = Kd.bind(null, Pe => "" + Pe)
        , w = Kd.bind(null, jM)
        , C = Kd.bind(null, Pl);

    function T(Pe, Ae) {
        let Ne, He;
        return H1(Pe) ? (Ne = t.getRecordMatcher(Pe),
            He = Ae) : He = Pe,
            t.addRoute(He, Ne)
    }

    function I(Pe) {
        const Ae = t.getRecordMatcher(Pe);
        Ae && t.removeRoute(Ae)
    }

    function A() {
        return t.getRoutes().map(Pe => Pe.record)
    }

    function R(Pe) {
        return !!t.getRecordMatcher(Pe)
    }

    function P(Pe, Ae) {
        if (Ae = Jt({}, Ae || g.value),
        typeof Pe == "string") {
            const W = Zd(s, Pe, Ae.path)
                , ce = t.resolve({
                path: W.path
            }, Ae)
                , we = o.createHref(W.fullPath);
            return Jt(W, ce, {
                params: C(ce.params),
                hash: Pl(W.hash),
                redirectedFrom: void 0,
                href: we
            })
        }
        let Ne;
        if (Pe.path != null)
            Ne = Jt({}, Pe, {
                path: Zd(s, Pe.path, Ae.path).path
            });
        else {
            const W = Jt({}, Pe.params);
            for (const ce in W)
                W[ce] == null && delete W[ce];
            Ne = Jt({}, Pe, {
                params: w(W)
            }),
                Ae.params = w(Ae.params)
        }
        const He = t.resolve(Ne, Ae)
            , et = Pe.hash || "";
        He.params = v(C(He.params));
        const dt = KM(a, Jt({}, Pe, {
            hash: UM(et),
            path: He.path
        }))
            , Y = o.createHref(dt);
        return Jt({
            fullPath: dt,
            hash: et,
            query: a === _v ? AO(Pe.query) : Pe.query || {}
        }, He, {
            redirectedFrom: void 0,
            href: Y
        })
    }

    function M(Pe) {
        return typeof Pe == "string" ? Zd(s, Pe, g.value.path) : Jt({}, Pe)
    }

    function O(Pe, Ae) {
        if (y !== Pe)
            return lo(8, {
                from: Ae,
                to: Pe
            })
    }

    function F(Pe) {
        return G(Pe)
    }

    function $(Pe) {
        return F(Jt(M(Pe), {
            replace: !0
        }))
    }

    function V(Pe) {
        const Ae = Pe.matched[Pe.matched.length - 1];
        if (Ae && Ae.redirect) {
            const {redirect: Ne} = Ae;
            let He = typeof Ne == "function" ? Ne(Pe) : Ne;
            return typeof He == "string" && (He = He.includes("?") || He.includes("#") ? He = M(He) : {
                path: He
            },
                He.params = {}),
                Jt({
                    query: Pe.query,
                    hash: Pe.hash,
                    params: He.path != null ? {} : Pe.params
                }, He)
        }
    }

    function G(Pe, Ae) {
        const Ne = y = P(Pe)
            , He = g.value
            , et = Pe.state
            , dt = Pe.force
            , Y = Pe.replace === !0
            , W = V(Ne);
        if (W)
            return G(Jt(M(W), {
                state: typeof W == "object" ? Jt({}, et, W.state) : et,
                force: dt,
                replace: Y
            }), Ae || Ne);
        const ce = Ne;
        ce.redirectedFrom = Ae;
        let we;
        return !dt && ZM(a, He, Ne) && (we = lo(16, {
            to: ce,
            from: He
        }),
            Be(He, He, !0, !1)),
            (we ? Promise.resolve(we) : ne(ce, He)).catch(_e => Di(_e) ? Di(_e, 2) ? _e : Xe(_e) : fe(_e, ce, He)).then(_e => {
                    if (_e) {
                        if (Di(_e, 2))
                            return G(Jt({
                                replace: Y
                            }, M(_e.to), {
                                state: typeof _e.to == "object" ? Jt({}, et, _e.to.state) : et,
                                force: dt
                            }), Ae || ce)
                    } else
                        _e = oe(ce, He, !0, Y, et);
                    return le(ce, He, _e),
                        _e
                }
            )
    }

    function ie(Pe, Ae) {
        const Ne = O(Pe, Ae);
        return Ne ? Promise.reject(Ne) : Promise.resolve()
    }

    function te(Pe) {
        const Ae = ft.values().next().value;
        return Ae && typeof Ae.runWithContext == "function" ? Ae.runWithContext(Pe) : Pe()
    }

    function ne(Pe, Ae) {
        let Ne;
        const [He, et, dt] = DO(Pe, Ae);
        Ne = Jd(He.reverse(), "beforeRouteLeave", Pe, Ae);
        for (const W of He)
            W.leaveGuards.forEach(ce => {
                    Ne.push(va(ce, Pe, Ae))
                }
            );
        const Y = ie.bind(null, Pe, Ae);
        return Ne.push(Y),
            bt(Ne).then(() => {
                    Ne = [];
                    for (const W of l.list())
                        Ne.push(va(W, Pe, Ae));
                    return Ne.push(Y),
                        bt(Ne)
                }
            ).then(() => {
                    Ne = Jd(et, "beforeRouteUpdate", Pe, Ae);
                    for (const W of et)
                        W.updateGuards.forEach(ce => {
                                Ne.push(va(ce, Pe, Ae))
                            }
                        );
                    return Ne.push(Y),
                        bt(Ne)
                }
            ).then(() => {
                    Ne = [];
                    for (const W of dt)
                        if (W.beforeEnter)
                            if (si(W.beforeEnter))
                                for (const ce of W.beforeEnter)
                                    Ne.push(va(ce, Pe, Ae));
                            else
                                Ne.push(va(W.beforeEnter, Pe, Ae));
                    return Ne.push(Y),
                        bt(Ne)
                }
            ).then(() => (Pe.matched.forEach(W => W.enterCallbacks = {}),
                Ne = Jd(dt, "beforeRouteEnter", Pe, Ae, te),
                Ne.push(Y),
                bt(Ne))).then(() => {
                    Ne = [];
                    for (const W of u.list())
                        Ne.push(va(W, Pe, Ae));
                    return Ne.push(Y),
                        bt(Ne)
                }
            ).catch(W => Di(W, 8) ? W : Promise.reject(W))
    }

    function le(Pe, Ae, Ne) {
        p.list().forEach(He => te(() => He(Pe, Ae, Ne)))
    }

    function oe(Pe, Ae, Ne, He, et) {
        const dt = O(Pe, Ae);
        if (dt)
            return dt;
        const Y = Ae === la
            , W = Lr ? history.state : {};
        Ne && (He || Y ? o.replace(Pe.fullPath, Jt({
            scroll: Y && W && W.scroll
        }, et)) : o.push(Pe.fullPath, et)),
            g.value = Pe,
            Be(Pe, Ae, Ne, Y),
            Xe()
    }

    let ve;

    function be() {
        ve || (ve = o.listen((Pe, Ae, Ne) => {
                if (!mt.listening)
                    return;
                const He = P(Pe)
                    , et = V(He);
                if (et) {
                    G(Jt(et, {
                        replace: !0
                    }), He).catch(tl);
                    return
                }
                y = He;
                const dt = g.value;
                Lr && aO(gv(dt.fullPath, Ne.delta), id()),
                    ne(He, dt).catch(Y => Di(Y, 12) ? Y : Di(Y, 2) ? (G(Y.to, He).then(W => {
                            Di(W, 20) && !Ne.delta && Ne.type === Ll.pop && o.go(-1, !1)
                        }
                    ).catch(tl),
                        Promise.reject()) : (Ne.delta && o.go(-Ne.delta, !1),
                        fe(Y, He, dt))).then(Y => {
                            Y = Y || oe(He, dt, !1),
                            Y && (Ne.delta && !Di(Y, 8) ? o.go(-Ne.delta, !1) : Ne.type === Ll.pop && Di(Y, 20) && o.go(-1, !1)),
                                le(He, dt, Y)
                        }
                    ).catch(tl)
            }
        ))
    }

    let de = zo(), J = zo(), ue;

    function fe(Pe, Ae, Ne) {
        Xe(Pe);
        const He = J.list();
        return He.length ? He.forEach(et => et(Pe, Ae, Ne)) : console.error(Pe),
            Promise.reject(Pe)
    }

    function Me() {
        return ue && g.value !== la ? Promise.resolve() : new Promise((Pe, Ae) => {
                de.add([Pe, Ae])
            }
        )
    }

    function Xe(Pe) {
        return ue || (ue = !Pe,
            be(),
            de.list().forEach(([Ae, Ne]) => Pe ? Ne(Pe) : Ae()),
            de.reset()),
            Pe
    }

    function Be(Pe, Ae, Ne, He) {
        const {scrollBehavior: et} = e;
        if (!Lr || !et)
            return Promise.resolve();
        const dt = !Ne && rO(gv(Pe.fullPath, 0)) || (He || !Ne) && history.state && history.state.scroll || null;
        return xt().then(() => et(Pe, Ae, dt)).then(Y => Y && iO(Y)).catch(Y => fe(Y, Pe, Ae))
    }

    const je = Pe => o.go(Pe);
    let tt;
    const ft = new Set
        , mt = {
        currentRoute: g,
        listening: !0,
        addRoute: T,
        removeRoute: I,
        hasRoute: R,
        getRoutes: A,
        resolve: P,
        options: e,
        push: F,
        replace: $,
        go: je,
        back: () => je(-1),
        forward: () => je(1),
        beforeEach: l.add,
        beforeResolve: u.add,
        afterEach: p.add,
        onError: J.add,
        isReady: Me,
        install(Pe) {
            const Ae = this;
            Pe.component("RouterLink", PO),
                Pe.component("RouterView", RO),
                Pe.config.globalProperties.$router = Ae,
                Object.defineProperty(Pe.config.globalProperties, "$route", {
                    enumerable: !0,
                    get: () => D(g)
                }),
            Lr && !tt && g.value === la && (tt = !0,
                F(o.location).catch(et => {
                    }
                ));
            const Ne = {};
            for (const et in la)
                Object.defineProperty(Ne, et, {
                    get: () => g.value[et],
                    enumerable: !0
                });
            Pe.provide(Ep, Ae),
                Pe.provide(W1, Bu(Ne)),
                Pe.provide(nf, g);
            const He = Pe.unmount;
            ft.add(Pe),
                Pe.unmount = function () {
                    ft.delete(Pe),
                    ft.size < 1 && (y = la,
                    ve && ve(),
                        ve = null,
                        g.value = la,
                        tt = !1,
                        ue = !1),
                        He()
                }
        }
    };

    function bt(Pe) {
        return Pe.reduce((Ae, Ne) => Ae.then(() => te(Ne)), Promise.resolve())
    }

    return mt
}

function DO(e, t) {
    const s = []
        , a = []
        , o = []
        , l = Math.max(t.matched.length, e.matched.length);
    for (let u = 0; u < l; u++) {
        const p = t.matched[u];
        p && (e.matched.find(y => oo(y, p)) ? a.push(p) : s.push(p));
        const g = e.matched[u];
        g && (t.matched.find(y => oo(y, g)) || o.push(g))
    }
    return [s, a, o]
}

let af = [{
    path: "/",
    name: "home",
    redirect: "/dashboard"
}, {
    path: "/dashboard",
    name: "Dashboard",
    component: () => Wn(() => import("./Dashboard-7_jkI_rk.js"), __vite__mapDeps([0, 1, 2])),
    meta: {
        title: "Dashboard"
    },
    async beforeEnter(e, t, s) {
        var a;
        await gs.dispatch("ui/getCustomLayoutIfItNotLoaded"),
        (a = e.query) != null && a.token && gs.dispatch("auth/unlockFromToolkit", e.query.token).then(() => Jn.replace({
            query: null
        })),
            await gs.dispatch("summary/status"),
            s()
    }
}, {
    path: "/system",
    meta: {
        title: "System",
        headingLabel: "System",
        needAuth: !0
    },
    component: () => Wn(() => import("./system-4zdFywmZ.js"), __vite__mapDeps([3, 4, 5])),
    children: [{
        path: "",
        name: "System",
        redirect: {
            name: "general"
        }
    }, {
        path: "general",
        name: "general",
        meta: {
            title: "General",
            useParentHeading: !0
        },
        component: () => Wn(() => import("./general-8HNVskfS.js"), __vite__mapDeps([6, 7]))
    }, {
        path: "security",
        name: "security",
        meta: {
            title: "Security",
            useParentHeading: !0
        },
        component: () => Wn(() => import("./security-1bRaH1E4.js"), __vite__mapDeps([]))
    }, {
        path: "network",
        name: "network",
        meta: {
            title: "Network",
            useParentHeading: !0
        },
        component: () => Wn(() => import("./network-PEGtjIUT.js"), __vite__mapDeps([8, 9, 10, 11]))
    }]
}, {
    path: "/mining",
    meta: {
        title: "Mining",
        headingLabel: "Mining",
        needAuth: !0
    },
    component: () => Wn(() => import("./mining-6d9gho7_.js"), __vite__mapDeps([12, 4, 5])),
    children: [{
        path: "",
        name: "Mining",
        redirect: {
            name: "pools"
        }
    }, {
        path: "pools",
        name: "pools",
        meta: {
            title: "Pools",
            useParentHeading: !0
        },
        component: () => Wn(() => import("./pools-j1YebX0M.js"), __vite__mapDeps([13, 9, 10, 14]))
    }, {
        path: "cooling",
        name: "cooling",
        meta: {
            title: "Cooling",
            useParentHeading: !0
        },
        component: () => Wn(() => import("./cooling-gEgQ1-l_.js"), __vite__mapDeps([15, 16, 17, 18]))
    }, {
        path: "performance",
        name: "performance",
        meta: {
            title: "performance",
            useParentHeading: !0
        },
        component: () => Wn(() => import("./performance-ToWW4_RL.js"), __vite__mapDeps([19, 16, 17, 1, 20]))
    }, {
        path: "advanced",
        name: "advanced",
        meta: {
            title: "Advanced",
            useParentHeading: !0
        },
        component: () => Wn(() => import("./advanced-2hmipNn5.js"), __vite__mapDeps([21, 16, 17]))
    }]
}];
af = [...af, {
    path: "/:pathMatch(.*)*",
    component: () => Wn(() => import("./404-gvVmCxhM.js"), __vite__mapDeps([22, 18])),
    meta: {
        title: "404",
        needAuth: !1
    }
}];
const Jn = NO({
    history: uO(),
    base: "/api/v1",
    routes: af
});
Jn.onError((e, t) => {
        (e.message.includes("Failed to fetch dynamically imported module") || e.message.includes("Importing a module script failed")) && (t != null && t.fullPath ? window.location = t.fullPath : window.location.reload())
    }
);
Jn.beforeEach((e, t, s) => {
        let a = "";
        for (let o of e.matched)
            o.meta.title && (a += " / " + Rt.global.t("Route." + o.meta.title));
        gs.commit("summary/titlePath", a),
            gs.dispatch("ui/hideInfobar"),
            gs.commit("ui/editLayout", !1),
            e.matched.some(o => o.meta.needAuth) && !gs.state.auth.isAuth ? (gs.commit("ui/dialogUnLockIsVisible", !0),
                gs.commit("auth/redirect", e.fullPath)) : s()
    }
);
var FO = {
    VITE_APP_INSTALL_TYPE: "nand",
    VITE_APP_BUILD: "6cf07eed",
    VITE_APP_COLOR_SCHEME: "anthill",
    VITE_APP_PROD_SUB_PATH: "/",
    VITE_APP_MINER_MODEL: "s19pro",
    VITE_APP_PLATFORM: "xil",
    VITE_APP_BASE_URL: "/api/v1",
    VITE_APP_BUILDER_API_URL: "https://partner.anthill.farm",
    VITE_APP_FIRMWARE_VERSION: "1.2.6",
    BASE_URL: "/",
    MODE: "production",
    DEV: !1,
    PROD: !0,
    SSR: !1
};
let rf = "";
const $O = FO
    , di = e => $O["VITE_APP_PROXY_" + e] || "";
di("FULL_URL") ? rf = `${di("FULL_URL")}` : di("PROTOCOL") && di("MODEL_NAME") && di("URL") && di("PORT") && (rf = `${di("PROTOCOL") || "http"}://${di("MODEL_NAME")}.${di("URL")}:${di("PORT")}`);
const BO = rf;
var HO = {
    VITE_APP_INSTALL_TYPE: "nand",
    VITE_APP_BUILD: "6cf07eed",
    VITE_APP_COLOR_SCHEME: "anthill",
    VITE_APP_PROD_SUB_PATH: "/",
    VITE_APP_MINER_MODEL: "s19pro",
    VITE_APP_PLATFORM: "xil",
    VITE_APP_BASE_URL: "/api/v1",
    VITE_APP_BUILDER_API_URL: "https://partner.anthill.farm",
    VITE_APP_FIRMWARE_VERSION: "1.2.6",
    BASE_URL: "/",
    MODE: "production",
    DEV: !1,
    PROD: !0,
    SSR: !1
};
const Gt = Cp.create({
    baseURL: "/api/v1"
});
HO.NODE_ENV === "development" && (Gt.defaults.headers.common["X-Proxy-Host"] = BO.slice(7));
const VO = "https://partner.anthill.farm".includes("https://")
    , zO = `${VO ? "" : "https://"}https://partner.anthill.farm`
    , U1 = Cp.create({
    method: "GET",
    baseURL: `${zO}/api/client/releases-notes`
});
Gt.interceptors.request.use(e => (gs.state.auth.isAuth && (e.headers.Authorization = "Bearer " + gs.state.auth.token),
    e), e => Promise.reject(e));
Gt.interceptors.response.use(e => e, e => {
        if (e.response) {
            const t = gs.state.route.path;
            switch (e.response.status) {
                case 401:
                    t !== "/" && t !== "/dashboard" && Jn.push("/"),
                        gs.commit("ui/dialogUnLockIsVisible", !0),
                        gs.dispatch("auth/silentLock");
                    break;
                case 400:
                case 500:
                    e.response.data && console.error(e.response.data);
                    break
            }
        }
        return Promise.reject(e)
    }
);
const Y1 = Symbol()
    , nl = "el"
    , WO = "is-"
    , za = (e, t, s, a, o) => {
        let l = `${e}-${t}`;
        return s && (l += `-${s}`),
        a && (l += `__${a}`),
        o && (l += `--${o}`),
            l
    }
    , X1 = Symbol("namespaceContextKey")
    , Tp = e => {
        const t = e || (Et() ? st(X1, Se(nl)) : Se(nl));
        return re(() => D(t) || nl)
    }
    , rt = (e, t) => {
        const s = Tp(t);
        return {
            namespace: s,
            b: (A = "") => za(s.value, e, A, "", ""),
            e: A => A ? za(s.value, e, "", A, "") : "",
            m: A => A ? za(s.value, e, "", "", A) : "",
            be: (A, R) => A && R ? za(s.value, e, A, R, "") : "",
            em: (A, R) => A && R ? za(s.value, e, "", A, R) : "",
            bm: (A, R) => A && R ? za(s.value, e, A, "", R) : "",
            bem: (A, R, P) => A && R && P ? za(s.value, e, A, R, P) : "",
            is: (A, ...R) => {
                const P = R.length >= 1 ? R[0] : !0;
                return A && P ? `${WO}${A}` : ""
            }
            ,
            cssVar: A => {
                const R = {};
                for (const P in A)
                    A[P] && (R[`--${s.value}-${P}`] = A[P]);
                return R
            }
            ,
            cssVarName: A => `--${s.value}-${A}`,
            cssVarBlock: A => {
                const R = {};
                for (const P in A)
                    A[P] && (R[`--${s.value}-${e}-${P}`] = A[P]);
                return R
            }
            ,
            cssVarBlockName: A => `--${s.value}-${e}-${A}`
        }
    }
;
var UO = typeof global == "object" && global && global.Object === Object && global;
const j1 = UO;
var YO = typeof self == "object" && self && self.Object === Object && self
    , XO = j1 || YO || Function("return this")();
const oi = XO;
var jO = oi.Symbol;
const On = jO;
var G1 = Object.prototype
    , GO = G1.hasOwnProperty
    , qO = G1.toString
    , Wo = On ? On.toStringTag : void 0;

function KO(e) {
    var t = GO.call(e, Wo)
        , s = e[Wo];
    try {
        e[Wo] = void 0;
        var a = !0
    } catch {
    }
    var o = qO.call(e);
    return a && (t ? e[Wo] = s : delete e[Wo]),
        o
}

var ZO = Object.prototype
    , JO = ZO.toString;

function QO(e) {
    return JO.call(e)
}

var eR = "[object Null]"
    , tR = "[object Undefined]"
    , Iv = On ? On.toStringTag : void 0;

function Ao(e) {
    return e == null ? e === void 0 ? tR : eR : Iv && Iv in Object(e) ? KO(e) : QO(e)
}

function Pa(e) {
    return e != null && typeof e == "object"
}

var sR = "[object Symbol]";

function ad(e) {
    return typeof e == "symbol" || Pa(e) && Ao(e) == sR
}

function nR(e, t) {
    for (var s = -1, a = e == null ? 0 : e.length, o = Array(a); ++s < a;)
        o[s] = t(e[s], s, e);
    return o
}

var iR = Array.isArray;
const Rn = iR;
var aR = 1 / 0
    , Pv = On ? On.prototype : void 0
    , Lv = Pv ? Pv.toString : void 0;

function q1(e) {
    if (typeof e == "string")
        return e;
    if (Rn(e))
        return nR(e, q1) + "";
    if (ad(e))
        return Lv ? Lv.call(e) : "";
    var t = e + "";
    return t == "0" && 1 / e == -aR ? "-0" : t
}

var rR = /\s/;

function oR(e) {
    for (var t = e.length; t-- && rR.test(e.charAt(t));)
        ;
    return t
}

var lR = /^\s+/;

function cR(e) {
    return e && e.slice(0, oR(e) + 1).replace(lR, "")
}

function ni(e) {
    var t = typeof e;
    return e != null && (t == "object" || t == "function")
}

var Mv = NaN
    , uR = /^[-+]0x[0-9a-f]+$/i
    , dR = /^0b[01]+$/i
    , hR = /^0o[0-7]+$/i
    , fR = parseInt;

function of(e) {
    if (typeof e == "number")
        return e;
    if (ad(e))
        return Mv;
    if (ni(e)) {
        var t = typeof e.valueOf == "function" ? e.valueOf() : e;
        e = ni(t) ? t + "" : t
    }
    if (typeof e != "string")
        return e === 0 ? e : +e;
    e = cR(e);
    var s = dR.test(e);
    return s || hR.test(e) ? fR(e.slice(2), s ? 2 : 8) : uR.test(e) ? Mv : +e
}

var Ov = 1 / 0
    , pR = 17976931348623157e292;

function gR(e) {
    if (!e)
        return e === 0 ? e : 0;
    if (e = of(e),
    e === Ov || e === -Ov) {
        var t = e < 0 ? -1 : 1;
        return t * pR
    }
    return e === e ? e : 0
}

function mR(e) {
    var t = gR(e)
        , s = t % 1;
    return t === t ? s ? t - s : t : 0
}

function K1(e) {
    return e
}

var vR = "[object AsyncFunction]"
    , bR = "[object Function]"
    , yR = "[object GeneratorFunction]"
    , xR = "[object Proxy]";

function Z1(e) {
    if (!ni(e))
        return !1;
    var t = Ao(e);
    return t == bR || t == yR || t == vR || t == xR
}

var wR = oi["__core-js_shared__"];
const Qd = wR;
var Rv = function () {
    var e = /[^.]+$/.exec(Qd && Qd.keys && Qd.keys.IE_PROTO || "");
    return e ? "Symbol(src)_1." + e : ""
}();

function SR(e) {
    return !!Rv && Rv in e
}

var _R = Function.prototype
    , kR = _R.toString;

function pr(e) {
    if (e != null) {
        try {
            return kR.call(e)
        } catch {
        }
        try {
            return e + ""
        } catch {
        }
    }
    return ""
}

var CR = /[\\^$.*+?()[\]{}|]/g
    , AR = /^\[object .+?Constructor\]$/
    , ER = Function.prototype
    , TR = Object.prototype
    , IR = ER.toString
    , PR = TR.hasOwnProperty
    ,
    LR = RegExp("^" + IR.call(PR).replace(CR, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");

function MR(e) {
    if (!ni(e) || SR(e))
        return !1;
    var t = Z1(e) ? LR : AR;
    return t.test(pr(e))
}

function OR(e, t) {
    return e == null ? void 0 : e[t]
}

function gr(e, t) {
    var s = OR(e, t);
    return MR(s) ? s : void 0
}

var RR = gr(oi, "WeakMap");
const lf = RR;
var Nv = Object.create
    , NR = function () {
    function e() {
    }

    return function (t) {
        if (!ni(t))
            return {};
        if (Nv)
            return Nv(t);
        e.prototype = t;
        var s = new e;
        return e.prototype = void 0,
            s
    }
}();
const DR = NR;

function FR(e, t, s) {
    switch (s.length) {
        case 0:
            return e.call(t);
        case 1:
            return e.call(t, s[0]);
        case 2:
            return e.call(t, s[0], s[1]);
        case 3:
            return e.call(t, s[0], s[1], s[2])
    }
    return e.apply(t, s)
}

function $R(e, t) {
    var s = -1
        , a = e.length;
    for (t || (t = Array(a)); ++s < a;)
        t[s] = e[s];
    return t
}

var BR = 800
    , HR = 16
    , VR = Date.now;

function zR(e) {
    var t = 0
        , s = 0;
    return function () {
        var a = VR()
            , o = HR - (a - s);
        if (s = a,
        o > 0) {
            if (++t >= BR)
                return arguments[0]
        } else
            t = 0;
        return e.apply(void 0, arguments)
    }
}

function WR(e) {
    return function () {
        return e
    }
}

var UR = function () {
    try {
        var e = gr(Object, "defineProperty");
        return e({}, "", {}),
            e
    } catch {
    }
}();
const yu = UR;
var YR = yu ? function (e, t) {
        return yu(e, "toString", {
            configurable: !0,
            enumerable: !1,
            value: WR(t),
            writable: !0
        })
    }
    : K1;
const XR = YR;
var jR = zR(XR);
const GR = jR;

function qR(e, t) {
    for (var s = -1, a = e == null ? 0 : e.length; ++s < a && t(e[s], s, e) !== !1;)
        ;
    return e
}

function KR(e, t, s, a) {
    for (var o = e.length, l = s + (a ? 1 : -1); a ? l-- : ++l < o;)
        if (t(e[l], l, e))
            return l;
    return -1
}

var ZR = 9007199254740991
    , JR = /^(?:0|[1-9]\d*)$/;

function Ip(e, t) {
    var s = typeof e;
    return t = t ?? ZR,
    !!t && (s == "number" || s != "symbol" && JR.test(e)) && e > -1 && e % 1 == 0 && e < t
}

function J1(e, t, s) {
    t == "__proto__" && yu ? yu(e, t, {
        configurable: !0,
        enumerable: !0,
        value: s,
        writable: !0
    }) : e[t] = s
}

function Pp(e, t) {
    return e === t || e !== e && t !== t
}

var QR = Object.prototype
    , eN = QR.hasOwnProperty;

function Lp(e, t, s) {
    var a = e[t];
    (!(eN.call(e, t) && Pp(a, s)) || s === void 0 && !(t in e)) && J1(e, t, s)
}

function rd(e, t, s, a) {
    var o = !s;
    s || (s = {});
    for (var l = -1, u = t.length; ++l < u;) {
        var p = t[l]
            , g = a ? a(s[p], e[p], p, s, e) : void 0;
        g === void 0 && (g = e[p]),
            o ? J1(s, p, g) : Lp(s, p, g)
    }
    return s
}

var Dv = Math.max;

function tN(e, t, s) {
    return t = Dv(t === void 0 ? e.length - 1 : t, 0),
        function () {
            for (var a = arguments, o = -1, l = Dv(a.length - t, 0), u = Array(l); ++o < l;)
                u[o] = a[t + o];
            o = -1;
            for (var p = Array(t + 1); ++o < t;)
                p[o] = a[o];
            return p[t] = s(u),
                FR(e, this, p)
        }
}

var sN = 9007199254740991;

function Mp(e) {
    return typeof e == "number" && e > -1 && e % 1 == 0 && e <= sN
}

function Q1(e) {
    return e != null && Mp(e.length) && !Z1(e)
}

var nN = Object.prototype;

function Op(e) {
    var t = e && e.constructor
        , s = typeof t == "function" && t.prototype || nN;
    return e === s
}

function iN(e, t) {
    for (var s = -1, a = Array(e); ++s < e;)
        a[s] = t(s);
    return a
}

var aN = "[object Arguments]";

function Fv(e) {
    return Pa(e) && Ao(e) == aN
}

var ew = Object.prototype
    , rN = ew.hasOwnProperty
    , oN = ew.propertyIsEnumerable
    , lN = Fv(function () {
        return arguments
    }()) ? Fv : function (e) {
        return Pa(e) && rN.call(e, "callee") && !oN.call(e, "callee")
    }
;
const Rp = lN;

function cN() {
    return !1
}

var tw = typeof exports == "object" && exports && !exports.nodeType && exports
    , $v = tw && typeof module == "object" && module && !module.nodeType && module
    , uN = $v && $v.exports === tw
    , Bv = uN ? oi.Buffer : void 0
    , dN = Bv ? Bv.isBuffer : void 0
    , hN = dN || cN;
const xu = hN;
var fN = "[object Arguments]"
    , pN = "[object Array]"
    , gN = "[object Boolean]"
    , mN = "[object Date]"
    , vN = "[object Error]"
    , bN = "[object Function]"
    , yN = "[object Map]"
    , xN = "[object Number]"
    , wN = "[object Object]"
    , SN = "[object RegExp]"
    , _N = "[object Set]"
    , kN = "[object String]"
    , CN = "[object WeakMap]"
    , AN = "[object ArrayBuffer]"
    , EN = "[object DataView]"
    , TN = "[object Float32Array]"
    , IN = "[object Float64Array]"
    , PN = "[object Int8Array]"
    , LN = "[object Int16Array]"
    , MN = "[object Int32Array]"
    , ON = "[object Uint8Array]"
    , RN = "[object Uint8ClampedArray]"
    , NN = "[object Uint16Array]"
    , DN = "[object Uint32Array]"
    , ds = {};
ds[TN] = ds[IN] = ds[PN] = ds[LN] = ds[MN] = ds[ON] = ds[RN] = ds[NN] = ds[DN] = !0;
ds[fN] = ds[pN] = ds[AN] = ds[gN] = ds[EN] = ds[mN] = ds[vN] = ds[bN] = ds[yN] = ds[xN] = ds[wN] = ds[SN] = ds[_N] = ds[kN] = ds[CN] = !1;

function FN(e) {
    return Pa(e) && Mp(e.length) && !!ds[Ao(e)]
}

function Np(e) {
    return function (t) {
        return e(t)
    }
}

var sw = typeof exports == "object" && exports && !exports.nodeType && exports
    , il = sw && typeof module == "object" && module && !module.nodeType && module
    , $N = il && il.exports === sw
    , eh = $N && j1.process
    , BN = function () {
    try {
        var e = il && il.require && il.require("util").types;
        return e || eh && eh.binding && eh.binding("util")
    } catch {
    }
}();
const co = BN;
var Hv = co && co.isTypedArray
    , HN = Hv ? Np(Hv) : FN;
const nw = HN;
var VN = Object.prototype
    , zN = VN.hasOwnProperty;

function iw(e, t) {
    var s = Rn(e)
        , a = !s && Rp(e)
        , o = !s && !a && xu(e)
        , l = !s && !a && !o && nw(e)
        , u = s || a || o || l
        , p = u ? iN(e.length, String) : []
        , g = p.length;
    for (var y in e)
        (t || zN.call(e, y)) && !(u && (y == "length" || o && (y == "offset" || y == "parent") || l && (y == "buffer" || y == "byteLength" || y == "byteOffset") || Ip(y, g))) && p.push(y);
    return p
}

function aw(e, t) {
    return function (s) {
        return e(t(s))
    }
}

var WN = aw(Object.keys, Object);
const UN = WN;
var YN = Object.prototype
    , XN = YN.hasOwnProperty;

function jN(e) {
    if (!Op(e))
        return UN(e);
    var t = [];
    for (var s in Object(e))
        XN.call(e, s) && s != "constructor" && t.push(s);
    return t
}

function od(e) {
    return Q1(e) ? iw(e) : jN(e)
}

function GN(e) {
    var t = [];
    if (e != null)
        for (var s in Object(e))
            t.push(s);
    return t
}

var qN = Object.prototype
    , KN = qN.hasOwnProperty;

function ZN(e) {
    if (!ni(e))
        return GN(e);
    var t = Op(e)
        , s = [];
    for (var a in e)
        a == "constructor" && (t || !KN.call(e, a)) || s.push(a);
    return s
}

function Dp(e) {
    return Q1(e) ? iw(e, !0) : ZN(e)
}

var JN = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/
    , QN = /^\w*$/;

function Fp(e, t) {
    if (Rn(e))
        return !1;
    var s = typeof e;
    return s == "number" || s == "symbol" || s == "boolean" || e == null || ad(e) ? !0 : QN.test(e) || !JN.test(e) || t != null && e in Object(t)
}

var eD = gr(Object, "create");
const Ml = eD;

function tD() {
    this.__data__ = Ml ? Ml(null) : {},
        this.size = 0
}

function sD(e) {
    var t = this.has(e) && delete this.__data__[e];
    return this.size -= t ? 1 : 0,
        t
}

var nD = "__lodash_hash_undefined__"
    , iD = Object.prototype
    , aD = iD.hasOwnProperty;

function rD(e) {
    var t = this.__data__;
    if (Ml) {
        var s = t[e];
        return s === nD ? void 0 : s
    }
    return aD.call(t, e) ? t[e] : void 0
}

var oD = Object.prototype
    , lD = oD.hasOwnProperty;

function cD(e) {
    var t = this.__data__;
    return Ml ? t[e] !== void 0 : lD.call(t, e)
}

var uD = "__lodash_hash_undefined__";

function dD(e, t) {
    var s = this.__data__;
    return this.size += this.has(e) ? 0 : 1,
        s[e] = Ml && t === void 0 ? uD : t,
        this
}

function ir(e) {
    var t = -1
        , s = e == null ? 0 : e.length;
    for (this.clear(); ++t < s;) {
        var a = e[t];
        this.set(a[0], a[1])
    }
}

ir.prototype.clear = tD;
ir.prototype.delete = sD;
ir.prototype.get = rD;
ir.prototype.has = cD;
ir.prototype.set = dD;

function hD() {
    this.__data__ = [],
        this.size = 0
}

function ld(e, t) {
    for (var s = e.length; s--;)
        if (Pp(e[s][0], t))
            return s;
    return -1
}

var fD = Array.prototype
    , pD = fD.splice;

function gD(e) {
    var t = this.__data__
        , s = ld(t, e);
    if (s < 0)
        return !1;
    var a = t.length - 1;
    return s == a ? t.pop() : pD.call(t, s, 1),
        --this.size,
        !0
}

function mD(e) {
    var t = this.__data__
        , s = ld(t, e);
    return s < 0 ? void 0 : t[s][1]
}

function vD(e) {
    return ld(this.__data__, e) > -1
}

function bD(e, t) {
    var s = this.__data__
        , a = ld(s, e);
    return a < 0 ? (++this.size,
        s.push([e, t])) : s[a][1] = t,
        this
}

function Qi(e) {
    var t = -1
        , s = e == null ? 0 : e.length;
    for (this.clear(); ++t < s;) {
        var a = e[t];
        this.set(a[0], a[1])
    }
}

Qi.prototype.clear = hD;
Qi.prototype.delete = gD;
Qi.prototype.get = mD;
Qi.prototype.has = vD;
Qi.prototype.set = bD;
var yD = gr(oi, "Map");
const Ol = yD;

function xD() {
    this.size = 0,
        this.__data__ = {
            hash: new ir,
            map: new (Ol || Qi),
            string: new ir
        }
}

function wD(e) {
    var t = typeof e;
    return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null
}

function cd(e, t) {
    var s = e.__data__;
    return wD(t) ? s[typeof t == "string" ? "string" : "hash"] : s.map
}

function SD(e) {
    var t = cd(this, e).delete(e);
    return this.size -= t ? 1 : 0,
        t
}

function _D(e) {
    return cd(this, e).get(e)
}

function kD(e) {
    return cd(this, e).has(e)
}

function CD(e, t) {
    var s = cd(this, e)
        , a = s.size;
    return s.set(e, t),
        this.size += s.size == a ? 0 : 1,
        this
}

function ea(e) {
    var t = -1
        , s = e == null ? 0 : e.length;
    for (this.clear(); ++t < s;) {
        var a = e[t];
        this.set(a[0], a[1])
    }
}

ea.prototype.clear = xD;
ea.prototype.delete = SD;
ea.prototype.get = _D;
ea.prototype.has = kD;
ea.prototype.set = CD;
var AD = "Expected a function";

function $p(e, t) {
    if (typeof e != "function" || t != null && typeof t != "function")
        throw new TypeError(AD);
    var s = function () {
        var a = arguments
            , o = t ? t.apply(this, a) : a[0]
            , l = s.cache;
        if (l.has(o))
            return l.get(o);
        var u = e.apply(this, a);
        return s.cache = l.set(o, u) || l,
            u
    };
    return s.cache = new ($p.Cache || ea),
        s
}

$p.Cache = ea;
var ED = 500;

function TD(e) {
    var t = $p(e, function (a) {
        return s.size === ED && s.clear(),
            a
    })
        , s = t.cache;
    return t
}

var ID = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g
    , PD = /\\(\\)?/g
    , LD = TD(function (e) {
    var t = [];
    return e.charCodeAt(0) === 46 && t.push(""),
        e.replace(ID, function (s, a, o, l) {
            t.push(o ? l.replace(PD, "$1") : a || s)
        }),
        t
});
const MD = LD;

function OD(e) {
    return e == null ? "" : q1(e)
}

function ud(e, t) {
    return Rn(e) ? e : Fp(e, t) ? [e] : MD(OD(e))
}

var RD = 1 / 0;

function sc(e) {
    if (typeof e == "string" || ad(e))
        return e;
    var t = e + "";
    return t == "0" && 1 / e == -RD ? "-0" : t
}

function Bp(e, t) {
    t = ud(t, e);
    for (var s = 0, a = t.length; e != null && s < a;)
        e = e[sc(t[s++])];
    return s && s == a ? e : void 0
}

function Yi(e, t, s) {
    var a = e == null ? void 0 : Bp(e, t);
    return a === void 0 ? s : a
}

function Hp(e, t) {
    for (var s = -1, a = t.length, o = e.length; ++s < a;)
        e[o + s] = t[s];
    return e
}

var Vv = On ? On.isConcatSpreadable : void 0;

function ND(e) {
    return Rn(e) || Rp(e) || !!(Vv && e && e[Vv])
}

function rw(e, t, s, a, o) {
    var l = -1
        , u = e.length;
    for (s || (s = ND),
         o || (o = []); ++l < u;) {
        var p = e[l];
        t > 0 && s(p) ? t > 1 ? rw(p, t - 1, s, a, o) : Hp(o, p) : a || (o[o.length] = p)
    }
    return o
}

function DD(e) {
    var t = e == null ? 0 : e.length;
    return t ? rw(e, 1) : []
}

function FD(e) {
    return GR(tN(e, void 0, DD), e + "")
}

var $D = aw(Object.getPrototypeOf, Object);
const ow = $D;

function An() {
    if (!arguments.length)
        return [];
    var e = arguments[0];
    return Rn(e) ? e : [e]
}

function BD() {
    this.__data__ = new Qi,
        this.size = 0
}

function HD(e) {
    var t = this.__data__
        , s = t.delete(e);
    return this.size = t.size,
        s
}

function VD(e) {
    return this.__data__.get(e)
}

function zD(e) {
    return this.__data__.has(e)
}

var WD = 200;

function UD(e, t) {
    var s = this.__data__;
    if (s instanceof Qi) {
        var a = s.__data__;
        if (!Ol || a.length < WD - 1)
            return a.push([e, t]),
                this.size = ++s.size,
                this;
        s = this.__data__ = new ea(a)
    }
    return s.set(e, t),
        this.size = s.size,
        this
}

function yi(e) {
    var t = this.__data__ = new Qi(e);
    this.size = t.size
}

yi.prototype.clear = BD;
yi.prototype.delete = HD;
yi.prototype.get = VD;
yi.prototype.has = zD;
yi.prototype.set = UD;

function YD(e, t) {
    return e && rd(t, od(t), e)
}

function XD(e, t) {
    return e && rd(t, Dp(t), e)
}

var lw = typeof exports == "object" && exports && !exports.nodeType && exports
    , zv = lw && typeof module == "object" && module && !module.nodeType && module
    , jD = zv && zv.exports === lw
    , Wv = jD ? oi.Buffer : void 0
    , Uv = Wv ? Wv.allocUnsafe : void 0;

function GD(e, t) {
    if (t)
        return e.slice();
    var s = e.length
        , a = Uv ? Uv(s) : new e.constructor(s);
    return e.copy(a),
        a
}

function qD(e, t) {
    for (var s = -1, a = e == null ? 0 : e.length, o = 0, l = []; ++s < a;) {
        var u = e[s];
        t(u, s, e) && (l[o++] = u)
    }
    return l
}

function cw() {
    return []
}

var KD = Object.prototype
    , ZD = KD.propertyIsEnumerable
    , Yv = Object.getOwnPropertySymbols
    , JD = Yv ? function (e) {
        return e == null ? [] : (e = Object(e),
            qD(Yv(e), function (t) {
                return ZD.call(e, t)
            }))
    }
    : cw;
const Vp = JD;

function QD(e, t) {
    return rd(e, Vp(e), t)
}

var eF = Object.getOwnPropertySymbols
    , tF = eF ? function (e) {
        for (var t = []; e;)
            Hp(t, Vp(e)),
                e = ow(e);
        return t
    }
    : cw;
const uw = tF;

function sF(e, t) {
    return rd(e, uw(e), t)
}

function dw(e, t, s) {
    var a = t(e);
    return Rn(e) ? a : Hp(a, s(e))
}

function cf(e) {
    return dw(e, od, Vp)
}

function nF(e) {
    return dw(e, Dp, uw)
}

var iF = gr(oi, "DataView");
const uf = iF;
var aF = gr(oi, "Promise");
const df = aF;
var rF = gr(oi, "Set");
const hf = rF;
var Xv = "[object Map]"
    , oF = "[object Object]"
    , jv = "[object Promise]"
    , Gv = "[object Set]"
    , qv = "[object WeakMap]"
    , Kv = "[object DataView]"
    , lF = pr(uf)
    , cF = pr(Ol)
    , uF = pr(df)
    , dF = pr(hf)
    , hF = pr(lf)
    , Wa = Ao;
(uf && Wa(new uf(new ArrayBuffer(1))) != Kv || Ol && Wa(new Ol) != Xv || df && Wa(df.resolve()) != jv || hf && Wa(new hf) != Gv || lf && Wa(new lf) != qv) && (Wa = function (e) {
        var t = Ao(e)
            , s = t == oF ? e.constructor : void 0
            , a = s ? pr(s) : "";
        if (a)
            switch (a) {
                case lF:
                    return Kv;
                case cF:
                    return Xv;
                case uF:
                    return jv;
                case dF:
                    return Gv;
                case hF:
                    return qv
            }
        return t
    }
);
const Rl = Wa;
var fF = Object.prototype
    , pF = fF.hasOwnProperty;

function gF(e) {
    var t = e.length
        , s = new e.constructor(t);
    return t && typeof e[0] == "string" && pF.call(e, "index") && (s.index = e.index,
        s.input = e.input),
        s
}

var mF = oi.Uint8Array;
const wu = mF;

function zp(e) {
    var t = new e.constructor(e.byteLength);
    return new wu(t).set(new wu(e)),
        t
}

function vF(e, t) {
    var s = t ? zp(e.buffer) : e.buffer;
    return new e.constructor(s, e.byteOffset, e.byteLength)
}

var bF = /\w*$/;

function yF(e) {
    var t = new e.constructor(e.source, bF.exec(e));
    return t.lastIndex = e.lastIndex,
        t
}

var Zv = On ? On.prototype : void 0
    , Jv = Zv ? Zv.valueOf : void 0;

function xF(e) {
    return Jv ? Object(Jv.call(e)) : {}
}

function wF(e, t) {
    var s = t ? zp(e.buffer) : e.buffer;
    return new e.constructor(s, e.byteOffset, e.length)
}

var SF = "[object Boolean]"
    , _F = "[object Date]"
    , kF = "[object Map]"
    , CF = "[object Number]"
    , AF = "[object RegExp]"
    , EF = "[object Set]"
    , TF = "[object String]"
    , IF = "[object Symbol]"
    , PF = "[object ArrayBuffer]"
    , LF = "[object DataView]"
    , MF = "[object Float32Array]"
    , OF = "[object Float64Array]"
    , RF = "[object Int8Array]"
    , NF = "[object Int16Array]"
    , DF = "[object Int32Array]"
    , FF = "[object Uint8Array]"
    , $F = "[object Uint8ClampedArray]"
    , BF = "[object Uint16Array]"
    , HF = "[object Uint32Array]";

function VF(e, t, s) {
    var a = e.constructor;
    switch (t) {
        case PF:
            return zp(e);
        case SF:
        case _F:
            return new a(+e);
        case LF:
            return vF(e, s);
        case MF:
        case OF:
        case RF:
        case NF:
        case DF:
        case FF:
        case $F:
        case BF:
        case HF:
            return wF(e, s);
        case kF:
            return new a;
        case CF:
        case TF:
            return new a(e);
        case AF:
            return yF(e);
        case EF:
            return new a;
        case IF:
            return xF(e)
    }
}

function zF(e) {
    return typeof e.constructor == "function" && !Op(e) ? DR(ow(e)) : {}
}

var WF = "[object Map]";

function UF(e) {
    return Pa(e) && Rl(e) == WF
}

var Qv = co && co.isMap
    , YF = Qv ? Np(Qv) : UF;
const XF = YF;
var jF = "[object Set]";

function GF(e) {
    return Pa(e) && Rl(e) == jF
}

var eb = co && co.isSet
    , qF = eb ? Np(eb) : GF;
const KF = qF;
var ZF = 1
    , JF = 2
    , QF = 4
    , hw = "[object Arguments]"
    , e$ = "[object Array]"
    , t$ = "[object Boolean]"
    , s$ = "[object Date]"
    , n$ = "[object Error]"
    , fw = "[object Function]"
    , i$ = "[object GeneratorFunction]"
    , a$ = "[object Map]"
    , r$ = "[object Number]"
    , pw = "[object Object]"
    , o$ = "[object RegExp]"
    , l$ = "[object Set]"
    , c$ = "[object String]"
    , u$ = "[object Symbol]"
    , d$ = "[object WeakMap]"
    , h$ = "[object ArrayBuffer]"
    , f$ = "[object DataView]"
    , p$ = "[object Float32Array]"
    , g$ = "[object Float64Array]"
    , m$ = "[object Int8Array]"
    , v$ = "[object Int16Array]"
    , b$ = "[object Int32Array]"
    , y$ = "[object Uint8Array]"
    , x$ = "[object Uint8ClampedArray]"
    , w$ = "[object Uint16Array]"
    , S$ = "[object Uint32Array]"
    , as = {};
as[hw] = as[e$] = as[h$] = as[f$] = as[t$] = as[s$] = as[p$] = as[g$] = as[m$] = as[v$] = as[b$] = as[a$] = as[r$] = as[pw] = as[o$] = as[l$] = as[c$] = as[u$] = as[y$] = as[x$] = as[w$] = as[S$] = !0;
as[n$] = as[fw] = as[d$] = !1;

function al(e, t, s, a, o, l) {
    var u, p = t & ZF, g = t & JF, y = t & QF;
    if (s && (u = o ? s(e, a, o, l) : s(e)),
    u !== void 0)
        return u;
    if (!ni(e))
        return e;
    var v = Rn(e);
    if (v) {
        if (u = gF(e),
            !p)
            return $R(e, u)
    } else {
        var w = Rl(e)
            , C = w == fw || w == i$;
        if (xu(e))
            return GD(e, p);
        if (w == pw || w == hw || C && !o) {
            if (u = g || C ? {} : zF(e),
                !p)
                return g ? sF(e, XD(u, e)) : QD(e, YD(u, e))
        } else {
            if (!as[w])
                return o ? e : {};
            u = VF(e, w, p)
        }
    }
    l || (l = new yi);
    var T = l.get(e);
    if (T)
        return T;
    l.set(e, u),
        KF(e) ? e.forEach(function (R) {
            u.add(al(R, t, s, R, e, l))
        }) : XF(e) && e.forEach(function (R, P) {
            u.set(P, al(R, t, s, P, e, l))
        });
    var I = y ? g ? nF : cf : g ? Dp : od
        , A = v ? void 0 : I(e);
    return qR(A || e, function (R, P) {
        A && (P = R,
            R = e[P]),
            Lp(u, P, al(R, t, s, P, e, l))
    }),
        u
}

var _$ = 4;

function tb(e) {
    return al(e, _$)
}

var k$ = 1
    , C$ = 4;

function sb(e) {
    return al(e, k$ | C$)
}

var A$ = "__lodash_hash_undefined__";

function E$(e) {
    return this.__data__.set(e, A$),
        this
}

function T$(e) {
    return this.__data__.has(e)
}

function Su(e) {
    var t = -1
        , s = e == null ? 0 : e.length;
    for (this.__data__ = new ea; ++t < s;)
        this.add(e[t])
}

Su.prototype.add = Su.prototype.push = E$;
Su.prototype.has = T$;

function I$(e, t) {
    for (var s = -1, a = e == null ? 0 : e.length; ++s < a;)
        if (t(e[s], s, e))
            return !0;
    return !1
}

function P$(e, t) {
    return e.has(t)
}

var L$ = 1
    , M$ = 2;

function gw(e, t, s, a, o, l) {
    var u = s & L$
        , p = e.length
        , g = t.length;
    if (p != g && !(u && g > p))
        return !1;
    var y = l.get(e)
        , v = l.get(t);
    if (y && v)
        return y == t && v == e;
    var w = -1
        , C = !0
        , T = s & M$ ? new Su : void 0;
    for (l.set(e, t),
             l.set(t, e); ++w < p;) {
        var I = e[w]
            , A = t[w];
        if (a)
            var R = u ? a(A, I, w, t, e, l) : a(I, A, w, e, t, l);
        if (R !== void 0) {
            if (R)
                continue;
            C = !1;
            break
        }
        if (T) {
            if (!I$(t, function (P, M) {
                if (!P$(T, M) && (I === P || o(I, P, s, a, l)))
                    return T.push(M)
            })) {
                C = !1;
                break
            }
        } else if (!(I === A || o(I, A, s, a, l))) {
            C = !1;
            break
        }
    }
    return l.delete(e),
        l.delete(t),
        C
}

function O$(e) {
    var t = -1
        , s = Array(e.size);
    return e.forEach(function (a, o) {
        s[++t] = [o, a]
    }),
        s
}

function R$(e) {
    var t = -1
        , s = Array(e.size);
    return e.forEach(function (a) {
        s[++t] = a
    }),
        s
}

var N$ = 1
    , D$ = 2
    , F$ = "[object Boolean]"
    , $$ = "[object Date]"
    , B$ = "[object Error]"
    , H$ = "[object Map]"
    , V$ = "[object Number]"
    , z$ = "[object RegExp]"
    , W$ = "[object Set]"
    , U$ = "[object String]"
    , Y$ = "[object Symbol]"
    , X$ = "[object ArrayBuffer]"
    , j$ = "[object DataView]"
    , nb = On ? On.prototype : void 0
    , th = nb ? nb.valueOf : void 0;

function G$(e, t, s, a, o, l, u) {
    switch (s) {
        case j$:
            if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
                return !1;
            e = e.buffer,
                t = t.buffer;
        case X$:
            return !(e.byteLength != t.byteLength || !l(new wu(e), new wu(t)));
        case F$:
        case $$:
        case V$:
            return Pp(+e, +t);
        case B$:
            return e.name == t.name && e.message == t.message;
        case z$:
        case U$:
            return e == t + "";
        case H$:
            var p = O$;
        case W$:
            var g = a & N$;
            if (p || (p = R$),
            e.size != t.size && !g)
                return !1;
            var y = u.get(e);
            if (y)
                return y == t;
            a |= D$,
                u.set(e, t);
            var v = gw(p(e), p(t), a, o, l, u);
            return u.delete(e),
                v;
        case Y$:
            if (th)
                return th.call(e) == th.call(t)
    }
    return !1
}

var q$ = 1
    , K$ = Object.prototype
    , Z$ = K$.hasOwnProperty;

function J$(e, t, s, a, o, l) {
    var u = s & q$
        , p = cf(e)
        , g = p.length
        , y = cf(t)
        , v = y.length;
    if (g != v && !u)
        return !1;
    for (var w = g; w--;) {
        var C = p[w];
        if (!(u ? C in t : Z$.call(t, C)))
            return !1
    }
    var T = l.get(e)
        , I = l.get(t);
    if (T && I)
        return T == t && I == e;
    var A = !0;
    l.set(e, t),
        l.set(t, e);
    for (var R = u; ++w < g;) {
        C = p[w];
        var P = e[C]
            , M = t[C];
        if (a)
            var O = u ? a(M, P, C, t, e, l) : a(P, M, C, e, t, l);
        if (!(O === void 0 ? P === M || o(P, M, s, a, l) : O)) {
            A = !1;
            break
        }
        R || (R = C == "constructor")
    }
    if (A && !R) {
        var F = e.constructor
            , $ = t.constructor;
        F != $ && "constructor" in e && "constructor" in t && !(typeof F == "function" && F instanceof F && typeof $ == "function" && $ instanceof $) && (A = !1)
    }
    return l.delete(e),
        l.delete(t),
        A
}

var Q$ = 1
    , ib = "[object Arguments]"
    , ab = "[object Array]"
    , Tc = "[object Object]"
    , e4 = Object.prototype
    , rb = e4.hasOwnProperty;

function t4(e, t, s, a, o, l) {
    var u = Rn(e)
        , p = Rn(t)
        , g = u ? ab : Rl(e)
        , y = p ? ab : Rl(t);
    g = g == ib ? Tc : g,
        y = y == ib ? Tc : y;
    var v = g == Tc
        , w = y == Tc
        , C = g == y;
    if (C && xu(e)) {
        if (!xu(t))
            return !1;
        u = !0,
            v = !1
    }
    if (C && !v)
        return l || (l = new yi),
            u || nw(e) ? gw(e, t, s, a, o, l) : G$(e, t, g, s, a, o, l);
    if (!(s & Q$)) {
        var T = v && rb.call(e, "__wrapped__")
            , I = w && rb.call(t, "__wrapped__");
        if (T || I) {
            var A = T ? e.value() : e
                , R = I ? t.value() : t;
            return l || (l = new yi),
                o(A, R, s, a, l)
        }
    }
    return C ? (l || (l = new yi),
        J$(e, t, s, a, o, l)) : !1
}

function dd(e, t, s, a, o) {
    return e === t ? !0 : e == null || t == null || !Pa(e) && !Pa(t) ? e !== e && t !== t : t4(e, t, s, a, dd, o)
}

var s4 = 1
    , n4 = 2;

function i4(e, t, s, a) {
    var o = s.length
        , l = o
        , u = !a;
    if (e == null)
        return !l;
    for (e = Object(e); o--;) {
        var p = s[o];
        if (u && p[2] ? p[1] !== e[p[0]] : !(p[0] in e))
            return !1
    }
    for (; ++o < l;) {
        p = s[o];
        var g = p[0]
            , y = e[g]
            , v = p[1];
        if (u && p[2]) {
            if (y === void 0 && !(g in e))
                return !1
        } else {
            var w = new yi;
            if (a)
                var C = a(y, v, g, e, t, w);
            if (!(C === void 0 ? dd(v, y, s4 | n4, a, w) : C))
                return !1
        }
    }
    return !0
}

function mw(e) {
    return e === e && !ni(e)
}

function a4(e) {
    for (var t = od(e), s = t.length; s--;) {
        var a = t[s]
            , o = e[a];
        t[s] = [a, o, mw(o)]
    }
    return t
}

function vw(e, t) {
    return function (s) {
        return s == null ? !1 : s[e] === t && (t !== void 0 || e in Object(s))
    }
}

function r4(e) {
    var t = a4(e);
    return t.length == 1 && t[0][2] ? vw(t[0][0], t[0][1]) : function (s) {
        return s === e || i4(s, e, t)
    }
}

function o4(e, t) {
    return e != null && t in Object(e)
}

function l4(e, t, s) {
    t = ud(t, e);
    for (var a = -1, o = t.length, l = !1; ++a < o;) {
        var u = sc(t[a]);
        if (!(l = e != null && s(e, u)))
            break;
        e = e[u]
    }
    return l || ++a != o ? l : (o = e == null ? 0 : e.length,
    !!o && Mp(o) && Ip(u, o) && (Rn(e) || Rp(e)))
}

function bw(e, t) {
    return e != null && l4(e, t, o4)
}

var c4 = 1
    , u4 = 2;

function d4(e, t) {
    return Fp(e) && mw(t) ? vw(sc(e), t) : function (s) {
        var a = Yi(s, e);
        return a === void 0 && a === t ? bw(s, e) : dd(t, a, c4 | u4)
    }
}

function h4(e) {
    return function (t) {
        return t == null ? void 0 : t[e]
    }
}

function f4(e) {
    return function (t) {
        return Bp(t, e)
    }
}

function p4(e) {
    return Fp(e) ? h4(sc(e)) : f4(e)
}

function g4(e) {
    return typeof e == "function" ? e : e == null ? K1 : typeof e == "object" ? Rn(e) ? d4(e[0], e[1]) : r4(e) : p4(e)
}

var m4 = function () {
    return oi.Date.now()
};
const sh = m4;
var v4 = "Expected a function"
    , b4 = Math.max
    , y4 = Math.min;

function x4(e, t, s) {
    var a, o, l, u, p, g, y = 0, v = !1, w = !1, C = !0;
    if (typeof e != "function")
        throw new TypeError(v4);
    t = of(t) || 0,
    ni(s) && (v = !!s.leading,
        w = "maxWait" in s,
        l = w ? b4(of(s.maxWait) || 0, t) : l,
        C = "trailing" in s ? !!s.trailing : C);

    function T(V) {
        var G = a
            , ie = o;
        return a = o = void 0,
            y = V,
            u = e.apply(ie, G),
            u
    }

    function I(V) {
        return y = V,
            p = setTimeout(P, t),
            v ? T(V) : u
    }

    function A(V) {
        var G = V - g
            , ie = V - y
            , te = t - G;
        return w ? y4(te, l - ie) : te
    }

    function R(V) {
        var G = V - g
            , ie = V - y;
        return g === void 0 || G >= t || G < 0 || w && ie >= l
    }

    function P() {
        var V = sh();
        if (R(V))
            return M(V);
        p = setTimeout(P, A(V))
    }

    function M(V) {
        return p = void 0,
            C && a ? T(V) : (a = o = void 0,
                u)
    }

    function O() {
        p !== void 0 && clearTimeout(p),
            y = 0,
            a = g = o = p = void 0
    }

    function F() {
        return p === void 0 ? u : M(sh())
    }

    function $() {
        var V = sh()
            , G = R(V);
        if (a = arguments,
            o = this,
            g = V,
            G) {
            if (p === void 0)
                return I(g);
            if (w)
                return clearTimeout(p),
                    p = setTimeout(P, t),
                    T(g)
        }
        return p === void 0 && (p = setTimeout(P, t)),
            u
    }

    return $.cancel = O,
        $.flush = F,
        $
}

var w4 = Math.max
    , S4 = Math.min;

function _4(e, t, s) {
    var a = e == null ? 0 : e.length;
    if (!a)
        return -1;
    var o = a - 1;
    return s !== void 0 && (o = mR(s),
        o = s < 0 ? w4(a + o, 0) : S4(o, a - 1)),
        KR(e, g4(t), o, !0)
}

function _u(e) {
    for (var t = -1, s = e == null ? 0 : e.length, a = {}; ++t < s;) {
        var o = e[t];
        a[o[0]] = o[1]
    }
    return a
}

function Za(e, t) {
    return dd(e, t)
}

function qi(e) {
    return e == null
}

function yw(e) {
    return e === void 0
}

function xw(e, t, s, a) {
    if (!ni(e))
        return e;
    t = ud(t, e);
    for (var o = -1, l = t.length, u = l - 1, p = e; p != null && ++o < l;) {
        var g = sc(t[o])
            , y = s;
        if (g === "__proto__" || g === "constructor" || g === "prototype")
            return e;
        if (o != u) {
            var v = p[g];
            y = a ? a(v, g, p) : void 0,
            y === void 0 && (y = ni(v) ? v : Ip(t[o + 1]) ? [] : {})
        }
        Lp(p, g, y),
            p = p[g]
    }
    return e
}

function k4(e, t, s) {
    for (var a = -1, o = t.length, l = {}; ++a < o;) {
        var u = t[a]
            , p = Bp(e, u);
        s(p, u) && xw(l, ud(u, e), p)
    }
    return l
}

function C4(e, t) {
    return k4(e, t, function (s, a) {
        return bw(e, a)
    })
}

var A4 = FD(function (e, t) {
    return e == null ? {} : C4(e, t)
});
const ww = A4;

function E4(e, t, s) {
    return e == null ? e : xw(e, t, s)
}

const jn = e => e === void 0
    , zs = e => typeof e == "boolean"
    , ts = e => typeof e == "number"
    , Qn = e => typeof Element > "u" ? !1 : e instanceof Element
    , Nl = e => qi(e)
    , T4 = e => pt(e) ? !Number.isNaN(Number(e)) : !1;
var I4 = Object.defineProperty
    , P4 = Object.defineProperties
    , L4 = Object.getOwnPropertyDescriptors
    , ob = Object.getOwnPropertySymbols
    , M4 = Object.prototype.hasOwnProperty
    , O4 = Object.prototype.propertyIsEnumerable
    , lb = (e, t, s) => t in e ? I4(e, t, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: s
}) : e[t] = s
    , R4 = (e, t) => {
    for (var s in t || (t = {}))
        M4.call(t, s) && lb(e, s, t[s]);
    if (ob)
        for (var s of ob(t))
            O4.call(t, s) && lb(e, s, t[s]);
    return e
}
    , N4 = (e, t) => P4(e, L4(t));

function ff(e, t) {
    var s;
    const a = Bs();
    return So(() => {
            a.value = e()
        }
        , N4(R4({}, t), {
            flush: (s = t == null ? void 0 : t.flush) != null ? s : "sync"
        })),
        Zi(a)
}

var cb;
const cs = typeof window < "u"
    , D4 = e => typeof e < "u"
    , F4 = e => typeof e == "function"
    , $4 = e => typeof e == "string"
    , ku = () => {
    }
    ,
    pf = cs && ((cb = window == null ? void 0 : window.navigator) == null ? void 0 : cb.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);

function Dl(e) {
    return typeof e == "function" ? e() : D(e)
}

function B4(e, t) {
    function s(...a) {
        return new Promise((o, l) => {
                Promise.resolve(e(() => t.apply(this, a), {
                    fn: t,
                    thisArg: this,
                    args: a
                })).then(o).catch(l)
            }
        )
    }

    return s
}

function H4(e, t = {}) {
    let s, a, o = ku;
    const l = p => {
            clearTimeout(p),
                o(),
                o = ku
        }
    ;
    return p => {
        const g = Dl(e)
            , y = Dl(t.maxWait);
        return s && l(s),
            g <= 0 || y !== void 0 && y <= 0 ? (a && (l(a),
                a = null),
                Promise.resolve(p())) : new Promise((v, w) => {
                    o = t.rejectOnCancel ? w : v,
                    y && !a && (a = setTimeout(() => {
                            s && l(s),
                                a = null,
                                v(p())
                        }
                        , y)),
                        s = setTimeout(() => {
                                a && l(a),
                                    a = null,
                                    v(p())
                            }
                            , g)
                }
            )
    }
}

function V4(e) {
    return e
}

function nc(e) {
    return Ru() ? (Nu(e),
        !0) : !1
}

function z4(e, t = 200, s = {}) {
    return B4(H4(t, s), e)
}

function W4(e, t = 200, s = {}) {
    const a = Se(e.value)
        , o = z4(() => {
            a.value = e.value
        }
        , t, s);
    return Ke(e, () => o()),
        a
}

function U4(e, t = !0) {
    Et() ? $t(e) : t ? e() : xt(e)
}

function Fl(e, t, s = {}) {
    const {immediate: a = !0} = s
        , o = Se(!1);
    let l = null;

    function u() {
        l && (clearTimeout(l),
            l = null)
    }

    function p() {
        o.value = !1,
            u()
    }

    function g(...y) {
        u(),
            o.value = !0,
            l = setTimeout(() => {
                    o.value = !1,
                        l = null,
                        e(...y)
                }
                , Dl(t))
    }

    return a && (o.value = !0,
    cs && g()),
        nc(p),
        {
            isPending: Zi(o),
            start: g,
            stop: p
        }
}

function Xi(e) {
    var t;
    const s = Dl(e);
    return (t = s == null ? void 0 : s.$el) != null ? t : s
}

const ic = cs ? window : void 0
    , Y4 = cs ? window.document : void 0;

function cn(...e) {
    let t, s, a, o;
    if ($4(e[0]) || Array.isArray(e[0]) ? ([s, a, o] = e,
        t = ic) : [t, s, a, o] = e,
        !t)
        return ku;
    Array.isArray(s) || (s = [s]),
    Array.isArray(a) || (a = [a]);
    const l = []
        , u = () => {
            l.forEach(v => v()),
                l.length = 0
        }
        , p = (v, w, C, T) => (v.addEventListener(w, C, T),
            () => v.removeEventListener(w, C, T))
        , g = Ke(() => [Xi(t), Dl(o)], ([v, w]) => {
                u(),
                v && l.push(...s.flatMap(C => a.map(T => p(v, C, T, w))))
            }
            , {
                immediate: !0,
                flush: "post"
            })
        , y = () => {
            g(),
                u()
        }
    ;
    return nc(y),
        y
}

let ub = !1;

function X4(e, t, s = {}) {
    const {window: a = ic, ignore: o = [], capture: l = !0, detectIframe: u = !1} = s;
    if (!a)
        return;
    pf && !ub && (ub = !0,
        Array.from(a.document.body.children).forEach(C => C.addEventListener("click", ku)));
    let p = !0;
    const g = C => o.some(T => {
            if (typeof T == "string")
                return Array.from(a.document.querySelectorAll(T)).some(I => I === C.target || C.composedPath().includes(I));
            {
                const I = Xi(T);
                return I && (C.target === I || C.composedPath().includes(I))
            }
        }
    )
        , v = [cn(a, "click", C => {
            const T = Xi(e);
            if (!(!T || T === C.target || C.composedPath().includes(T))) {
                if (C.detail === 0 && (p = !g(C)),
                    !p) {
                    p = !0;
                    return
                }
                t(C)
            }
        }
        , {
            passive: !0,
            capture: l
        }), cn(a, "pointerdown", C => {
            const T = Xi(e);
            T && (p = !C.composedPath().includes(T) && !g(C))
        }
        , {
            passive: !0
        }), u && cn(a, "blur", C => {
            var T;
            const I = Xi(e);
            ((T = a.document.activeElement) == null ? void 0 : T.tagName) === "IFRAME" && !(I != null && I.contains(a.document.activeElement)) && t(C)
        }
    )].filter(Boolean);
    return () => v.forEach(C => C())
}

function Sw(e, t = !1) {
    const s = Se()
        , a = () => s.value = !!e();
    return a(),
        U4(a, t),
        s
}

function j4(e) {
    return JSON.parse(JSON.stringify(e))
}

const db = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}
    , hb = "__vueuse_ssr_handlers__";
db[hb] = db[hb] || {};

function G4({document: e = Y4} = {}) {
    if (!e)
        return Se("visible");
    const t = Se(e.visibilityState);
    return cn(e, "visibilitychange", () => {
            t.value = e.visibilityState
        }
    ),
        t
}

var fb = Object.getOwnPropertySymbols
    , q4 = Object.prototype.hasOwnProperty
    , K4 = Object.prototype.propertyIsEnumerable
    , Z4 = (e, t) => {
        var s = {};
        for (var a in e)
            q4.call(e, a) && t.indexOf(a) < 0 && (s[a] = e[a]);
        if (e != null && fb)
            for (var a of fb(e))
                t.indexOf(a) < 0 && K4.call(e, a) && (s[a] = e[a]);
        return s
    }
;

function sn(e, t, s = {}) {
    const a = s
        , {window: o = ic} = a
        , l = Z4(a, ["window"]);
    let u;
    const p = Sw(() => o && "ResizeObserver" in o)
        , g = () => {
            u && (u.disconnect(),
                u = void 0)
        }
        , y = Ke(() => Xi(e), w => {
                g(),
                p.value && o && w && (u = new ResizeObserver(t),
                    u.observe(w, l))
            }
            , {
                immediate: !0,
                flush: "post"
            })
        , v = () => {
            g(),
                y()
        }
    ;
    return nc(v),
        {
            isSupported: p,
            stop: v
        }
}

var pb = Object.getOwnPropertySymbols
    , J4 = Object.prototype.hasOwnProperty
    , Q4 = Object.prototype.propertyIsEnumerable
    , e3 = (e, t) => {
        var s = {};
        for (var a in e)
            J4.call(e, a) && t.indexOf(a) < 0 && (s[a] = e[a]);
        if (e != null && pb)
            for (var a of pb(e))
                t.indexOf(a) < 0 && Q4.call(e, a) && (s[a] = e[a]);
        return s
    }
;

function t3(e, t, s = {}) {
    const a = s
        , {window: o = ic} = a
        , l = e3(a, ["window"]);
    let u;
    const p = Sw(() => o && "MutationObserver" in o)
        , g = () => {
            u && (u.disconnect(),
                u = void 0)
        }
        , y = Ke(() => Xi(e), w => {
                g(),
                p.value && o && w && (u = new MutationObserver(t),
                    u.observe(w, l))
            }
            , {
                immediate: !0
            })
        , v = () => {
            g(),
                y()
        }
    ;
    return nc(v),
        {
            isSupported: p,
            stop: v
        }
}

var gb;
(function (e) {
        e.UP = "UP",
            e.RIGHT = "RIGHT",
            e.DOWN = "DOWN",
            e.LEFT = "LEFT",
            e.NONE = "NONE"
    }
)(gb || (gb = {}));
var s3 = Object.defineProperty
    , mb = Object.getOwnPropertySymbols
    , n3 = Object.prototype.hasOwnProperty
    , i3 = Object.prototype.propertyIsEnumerable
    , vb = (e, t, s) => t in e ? s3(e, t, {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: s
    }) : e[t] = s
    , a3 = (e, t) => {
        for (var s in t || (t = {}))
            n3.call(t, s) && vb(e, s, t[s]);
        if (mb)
            for (var s of mb(t))
                i3.call(t, s) && vb(e, s, t[s]);
        return e
    }
;
const r3 = {
    easeInSine: [.12, 0, .39, 0],
    easeOutSine: [.61, 1, .88, 1],
    easeInOutSine: [.37, 0, .63, 1],
    easeInQuad: [.11, 0, .5, 0],
    easeOutQuad: [.5, 1, .89, 1],
    easeInOutQuad: [.45, 0, .55, 1],
    easeInCubic: [.32, 0, .67, 0],
    easeOutCubic: [.33, 1, .68, 1],
    easeInOutCubic: [.65, 0, .35, 1],
    easeInQuart: [.5, 0, .75, 0],
    easeOutQuart: [.25, 1, .5, 1],
    easeInOutQuart: [.76, 0, .24, 1],
    easeInQuint: [.64, 0, .78, 0],
    easeOutQuint: [.22, 1, .36, 1],
    easeInOutQuint: [.83, 0, .17, 1],
    easeInExpo: [.7, 0, .84, 0],
    easeOutExpo: [.16, 1, .3, 1],
    easeInOutExpo: [.87, 0, .13, 1],
    easeInCirc: [.55, 0, 1, .45],
    easeOutCirc: [0, .55, .45, 1],
    easeInOutCirc: [.85, 0, .15, 1],
    easeInBack: [.36, 0, .66, -.56],
    easeOutBack: [.34, 1.56, .64, 1],
    easeInOutBack: [.68, -.6, .32, 1.6]
};
a3({
    linear: V4
}, r3);

function o3(e, t, s, a = {}) {
    var o, l, u;
    const {clone: p = !1, passive: g = !1, eventName: y, deep: v = !1, defaultValue: w} = a
        , C = Et()
        ,
        T = s || (C == null ? void 0 : C.emit) || ((o = C == null ? void 0 : C.$emit) == null ? void 0 : o.bind(C)) || ((u = (l = C == null ? void 0 : C.proxy) == null ? void 0 : l.$emit) == null ? void 0 : u.bind(C == null ? void 0 : C.proxy));
    let I = y;
    t || (t = "modelValue"),
        I = y || I || `update:${t.toString()}`;
    const A = P => p ? F4(p) ? p(P) : j4(P) : P
        , R = () => D4(e[t]) ? A(e[t]) : w;
    if (g) {
        const P = R()
            , M = Se(P);
        return Ke(() => e[t], O => M.value = A(O)),
            Ke(M, O => {
                    (O !== e[t] || v) && T(I, O)
                }
                , {
                    deep: v
                }),
            M
    } else
        return re({
            get() {
                return R()
            },
            set(P) {
                T(I, P)
            }
        })
}

function l3({window: e = ic} = {}) {
    if (!e)
        return Se(!1);
    const t = Se(e.document.hasFocus());
    return cn(e, "blur", () => {
            t.value = !1
        }
    ),
        cn(e, "focus", () => {
                t.value = !0
            }
        ),
        t
}

class c3 extends Error {
    constructor(t) {
        super(t),
            this.name = "ElementPlusError"
    }
}

function hn(e, t) {
    throw new c3(`[${e}] ${t}`)
}

function Xq(e, t) {
}

const bb = {
        current: 0
    }
    , yb = Se(0)
    , _w = 2e3
    , xb = Symbol("elZIndexContextKey")
    , kw = Symbol("zIndexContextKey")
    , Wp = e => {
        const t = Et() ? st(xb, bb) : bb
            , s = e || (Et() ? st(kw, void 0) : void 0)
            , a = re(() => {
                const u = D(s);
                return ts(u) ? u : _w
            }
        )
            , o = re(() => a.value + yb.value)
            , l = () => (t.current++,
            yb.value = t.current,
            o.value);
        return !cs && st(xb),
            {
                initialZIndex: a,
                currentZIndex: o,
                nextZIndex: l
            }
    }
;
var u3 = {
    name: "en",
    el: {
        breadcrumb: {
            label: "Breadcrumb"
        },
        colorpicker: {
            confirm: "OK",
            clear: "Clear",
            defaultLabel: "color picker",
            description: "current color is {color}. press enter to select a new color.",
            alphaLabel: "pick alpha value"
        },
        datepicker: {
            now: "Now",
            today: "Today",
            cancel: "Cancel",
            clear: "Clear",
            confirm: "OK",
            dateTablePrompt: "Use the arrow keys and enter to select the day of the month",
            monthTablePrompt: "Use the arrow keys and enter to select the month",
            yearTablePrompt: "Use the arrow keys and enter to select the year",
            selectedDate: "Selected date",
            selectDate: "Select date",
            selectTime: "Select time",
            startDate: "Start Date",
            startTime: "Start Time",
            endDate: "End Date",
            endTime: "End Time",
            prevYear: "Previous Year",
            nextYear: "Next Year",
            prevMonth: "Previous Month",
            nextMonth: "Next Month",
            year: "",
            month1: "January",
            month2: "February",
            month3: "March",
            month4: "April",
            month5: "May",
            month6: "June",
            month7: "July",
            month8: "August",
            month9: "September",
            month10: "October",
            month11: "November",
            month12: "December",
            week: "week",
            weeks: {
                sun: "Sun",
                mon: "Mon",
                tue: "Tue",
                wed: "Wed",
                thu: "Thu",
                fri: "Fri",
                sat: "Sat"
            },
            weeksFull: {
                sun: "Sunday",
                mon: "Monday",
                tue: "Tuesday",
                wed: "Wednesday",
                thu: "Thursday",
                fri: "Friday",
                sat: "Saturday"
            },
            months: {
                jan: "Jan",
                feb: "Feb",
                mar: "Mar",
                apr: "Apr",
                may: "May",
                jun: "Jun",
                jul: "Jul",
                aug: "Aug",
                sep: "Sep",
                oct: "Oct",
                nov: "Nov",
                dec: "Dec"
            }
        },
        inputNumber: {
            decrease: "decrease number",
            increase: "increase number"
        },
        select: {
            loading: "Loading",
            noMatch: "No matching data",
            noData: "No data",
            placeholder: "Select"
        },
        mention: {
            loading: "Loading"
        },
        dropdown: {
            toggleDropdown: "Toggle Dropdown"
        },
        cascader: {
            noMatch: "No matching data",
            loading: "Loading",
            placeholder: "Select",
            noData: "No data"
        },
        pagination: {
            goto: "Go to",
            pagesize: "/page",
            total: "Total {total}",
            pageClassifier: "",
            page: "Page",
            prev: "Go to previous page",
            next: "Go to next page",
            currentPage: "page {pager}",
            prevPages: "Previous {pager} pages",
            nextPages: "Next {pager} pages",
            deprecationWarning: "Deprecated usages detected, please refer to the el-pagination documentation for more details"
        },
        dialog: {
            close: "Close this dialog"
        },
        drawer: {
            close: "Close this dialog"
        },
        messagebox: {
            title: "Message",
            confirm: "OK",
            cancel: "Cancel",
            error: "Illegal input",
            close: "Close this dialog"
        },
        upload: {
            deleteTip: "press delete to remove",
            delete: "Delete",
            preview: "Preview",
            continue: "Continue"
        },
        slider: {
            defaultLabel: "slider between {min} and {max}",
            defaultRangeStartLabel: "pick start value",
            defaultRangeEndLabel: "pick end value"
        },
        table: {
            emptyText: "No Data",
            confirmFilter: "Confirm",
            resetFilter: "Reset",
            clearFilter: "All",
            sumText: "Sum"
        },
        tour: {
            next: "Next",
            previous: "Previous",
            finish: "Finish"
        },
        tree: {
            emptyText: "No Data"
        },
        transfer: {
            noMatch: "No matching data",
            noData: "No data",
            titles: ["List 1", "List 2"],
            filterPlaceholder: "Enter keyword",
            noCheckedFormat: "{total} items",
            hasCheckedFormat: "{checked}/{total} checked"
        },
        image: {
            error: "FAILED"
        },
        pageHeader: {
            title: "Back"
        },
        popconfirm: {
            confirmButtonText: "Yes",
            cancelButtonText: "No"
        },
        carousel: {
            leftArrow: "Carousel arrow left",
            rightArrow: "Carousel arrow right",
            indicator: "Carousel switch to index {index}"
        }
    }
};
const d3 = e => (t, s) => h3(t, s, D(e))
    , h3 = (e, t, s) => Yi(s, e, e).replace(/\{(\w+)\}/g, (a, o) => {
        var l;
        return `${(l = t == null ? void 0 : t[o]) != null ? l : `{${o}}`}`
    }
)
    , f3 = e => {
    const t = re(() => D(e).name)
        , s = Qt(e) ? e : Se(e);
    return {
        lang: t,
        locale: s,
        t: d3(e)
    }
}
    , Cw = Symbol("localeContextKey")
    , ac = e => {
    const t = e || st(Cw, Se());
    return f3(re(() => t.value || u3))
}
    , Aw = "__epPropKey"
    , Ye = e => e
    , p3 = e => At(e) && !!e[Aw]
    , hd = (e, t) => {
    if (!At(e) || p3(e))
        return e;
    const {values: s, required: a, default: o, type: l, validator: u} = e
        , g = {
        type: l,
        required: !!a,
        validator: s || u ? y => {
                let v = !1
                    , w = [];
                if (s && (w = Array.from(s),
                Wt(e, "default") && w.push(o),
                v || (v = w.includes(y))),
                u && (v || (v = u(y))),
                !v && w.length > 0) {
                    const C = [...new Set(w)].map(T => JSON.stringify(T)).join(", ");
                    K0(`Invalid prop: validation failed${t ? ` for prop "${t}"` : ""}. Expected one of [${C}], got value ${JSON.stringify(y)}.`)
                }
                return v
            }
            : void 0,
        [Aw]: !0
    };
    return Wt(e, "default") && (g.default = o),
        g
}
    , gt = e => _u(Object.entries(e).map(([t, s]) => [t, hd(s, t)]))
    , rc = ["", "default", "small", "large"]
    , mr = hd({
    type: String,
    values: rc,
    required: !1
})
    , Ew = Symbol("size")
    , g3 = () => {
    const e = st(Ew, {});
    return re(() => D(e.size) || "")
}
    , Tw = Symbol("emptyValuesContextKey")
    , m3 = ["", void 0, null]
    , v3 = void 0
    , b3 = gt({
    emptyValues: Array,
    valueOnClear: {
        type: [String, Number, Boolean, Function],
        default: void 0,
        validator: e => nt(e) ? !e() : !e
    }
})
    , y3 = (e, t) => {
    const s = Et() ? st(Tw, Se({})) : Se({})
        , a = re(() => e.emptyValues || s.value.emptyValues || m3)
        ,
        o = re(() => nt(e.valueOnClear) ? e.valueOnClear() : e.valueOnClear !== void 0 ? e.valueOnClear : nt(s.value.valueOnClear) ? s.value.valueOnClear() : s.value.valueOnClear !== void 0 ? s.value.valueOnClear : t !== void 0 ? t : v3)
        , l = u => a.value.includes(u);
    return a.value.includes(o.value),
        {
            emptyValues: a,
            valueOnClear: o,
            isEmptyValue: l
        }
}
    , gf = e => Object.keys(e)
    , x3 = e => Object.entries(e)
    , nh = (e, t, s) => ({
    get value() {
        return Yi(e, t, s)
    },
    set value(a) {
        E4(e, t, a)
    }
})
    , Cu = Se();

function fd(e, t = void 0) {
    const s = Et() ? st(Y1, Cu) : Cu;
    return e ? re(() => {
            var a, o;
            return (o = (a = s.value) == null ? void 0 : a[e]) != null ? o : t
        }
    ) : s
}

function Up(e, t) {
    const s = fd()
        , a = rt(e, re(() => {
            var p;
            return ((p = s.value) == null ? void 0 : p.namespace) || nl
        }
    ))
        , o = ac(re(() => {
            var p;
            return (p = s.value) == null ? void 0 : p.locale
        }
    ))
        , l = Wp(re(() => {
            var p;
            return ((p = s.value) == null ? void 0 : p.zIndex) || _w
        }
    ))
        , u = re(() => {
            var p;
            return D(t) || ((p = s.value) == null ? void 0 : p.size) || ""
        }
    );
    return w3(re(() => D(s) || {})),
        {
            ns: a,
            locale: o,
            zIndex: l,
            size: u
        }
}

const w3 = (e, t, s = !1) => {
    var a;
    const o = !!Et()
        , l = o ? fd() : void 0
        , u = (a = t == null ? void 0 : t.provide) != null ? a : o ? Xt : void 0;
    if (!u)
        return;
    const p = re(() => {
            const g = D(e);
            return l != null && l.value ? S3(l.value, g) : g
        }
    );
    return u(Y1, p),
        u(Cw, re(() => p.value.locale)),
        u(X1, re(() => p.value.namespace)),
        u(kw, re(() => p.value.zIndex)),
        u(Ew, {
            size: re(() => p.value.size || "")
        }),
        u(Tw, re(() => ({
            emptyValues: p.value.emptyValues,
            valueOnClear: p.value.valueOnClear
        }))),
    (s || !Cu.value) && (Cu.value = p.value),
        p
}
    , S3 = (e, t) => {
    const s = [...new Set([...gf(e), ...gf(t)])]
        , a = {};
    for (const o of s)
        a[o] = t[o] !== void 0 ? t[o] : e[o];
    return a
}
    , ms = "update:modelValue"
    , wn = "change"
    , $l = "input";
var ot = (e, t) => {
        const s = e.__vccOpts || e;
        for (const [a, o] of t)
            s[a] = o;
        return s
    }
;
const Iw = (e = "") => e.split(" ").filter(t => !!t.trim())
    , mf = (e, t) => {
        if (!e || !t)
            return !1;
        if (t.includes(" "))
            throw new Error("className should not contain space.");
        return e.classList.contains(t)
    }
    , Ua = (e, t) => {
        !e || !t.trim() || e.classList.add(...Iw(t))
    }
    , _a = (e, t) => {
        !e || !t.trim() || e.classList.remove(...Iw(t))
    }
    , Mr = (e, t) => {
        var s;
        if (!cs || !e || !t)
            return "";
        let a = Ds(t);
        a === "float" && (a = "cssFloat");
        try {
            const o = e.style[a];
            if (o)
                return o;
            const l = (s = document.defaultView) == null ? void 0 : s.getComputedStyle(e, "");
            return l ? l[a] : ""
        } catch {
            return e.style[a]
        }
    }
;

function Sn(e, t = "px") {
    if (!e)
        return "";
    if (ts(e) || T4(e))
        return `${e}${t}`;
    if (pt(e))
        return e
}

let Ic;
const _3 = e => {
        var t;
        if (!cs)
            return 0;
        if (Ic !== void 0)
            return Ic;
        const s = document.createElement("div");
        s.className = `${e}-scrollbar__wrap`,
            s.style.visibility = "hidden",
            s.style.width = "100px",
            s.style.position = "absolute",
            s.style.top = "-9999px",
            document.body.appendChild(s);
        const a = s.offsetWidth;
        s.style.overflow = "scroll";
        const o = document.createElement("div");
        o.style.width = "100%",
            s.appendChild(o);
        const l = o.offsetWidth;
        return (t = s.parentNode) == null || t.removeChild(s),
            Ic = a - l,
            Ic
    }
;

function k3(e, t) {
    if (!cs)
        return;
    if (!t) {
        e.scrollTop = 0;
        return
    }
    const s = [];
    let a = t.offsetParent;
    for (; a !== null && e !== a && e.contains(a);)
        s.push(a),
            a = a.offsetParent;
    const o = t.offsetTop + s.reduce((g, y) => g + y.offsetTop, 0)
        , l = o + t.offsetHeight
        , u = e.scrollTop
        , p = u + e.clientHeight;
    o < u ? e.scrollTop = o : l > p && (e.scrollTop = l - e.clientHeight)
}

const Zt = (e, t) => {
    if (e.install = s => {
        for (const a of [e, ...Object.values(t ?? {})])
            s.component(a.name, a)
    }
        ,
        t)
        for (const [s, a] of Object.entries(t))
            e[s] = a;
    return e
}
    , C3 = (e, t) => (e.install = s => {
    e._context = s._context,
        s.config.globalProperties[t] = e
}
    ,
    e)
    , A3 = (e, t) => (e.install = s => {
    s.directive(t, e)
}
    ,
    e)
    , Os = e => (e.install = Ht,
    e)
    , E3 = gt({
    size: {
        type: Ye([Number, String])
    },
    color: {
        type: String
    }
})
    , T3 = Ce({
    name: "ElIcon",
    inheritAttrs: !1
})
    , I3 = Ce({
    ...T3,
    props: E3,
    setup(e) {
        const t = e
            , s = rt("icon")
            , a = re(() => {
                const {size: o, color: l} = t;
                return !o && !l ? {} : {
                    fontSize: jn(o) ? void 0 : Sn(o),
                    "--color": l
                }
            }
        );
        return (o, l) => (Z(),
            ye("i", vs({
                class: D(s).b(),
                style: D(a)
            }, o.$attrs), [De(o.$slots, "default")], 16))
    }
});
var P3 = ot(I3, [["__file", "icon.vue"]]);
const Mt = Zt(P3);
/*! Element Plus Icons Vue v2.3.1 */
var L3 = Ce({
    name: "ArrowDown",
    __name: "arrow-down",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M831.872 340.864 512 652.672 192.128 340.864a30.592 30.592 0 0 0-42.752 0 29.12 29.12 0 0 0 0 41.6L489.664 714.24a32 32 0 0 0 44.672 0l340.288-331.712a29.12 29.12 0 0 0 0-41.728 30.592 30.592 0 0 0-42.752 0z"
            })]))
    }
})
    , Yp = L3
    , M3 = Ce({
    name: "ArrowLeft",
    __name: "arrow-left",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M609.408 149.376 277.76 489.6a32 32 0 0 0 0 44.672l331.648 340.352a29.12 29.12 0 0 0 41.728 0 30.592 30.592 0 0 0 0-42.752L339.264 511.936l311.872-319.872a30.592 30.592 0 0 0 0-42.688 29.12 29.12 0 0 0-41.728 0z"
            })]))
    }
})
    , O3 = M3
    , R3 = Ce({
    name: "ArrowRight",
    __name: "arrow-right",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M340.864 149.312a30.592 30.592 0 0 0 0 42.752L652.736 512 340.864 831.872a30.592 30.592 0 0 0 0 42.752 29.12 29.12 0 0 0 41.728 0L714.24 534.336a32 32 0 0 0 0-44.672L382.592 149.376a29.12 29.12 0 0 0-41.728 0z"
            })]))
    }
})
    , Pw = R3
    , N3 = Ce({
    name: "ArrowUp",
    __name: "arrow-up",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "m488.832 344.32-339.84 356.672a32 32 0 0 0 0 44.16l.384.384a29.44 29.44 0 0 0 42.688 0l320-335.872 319.872 335.872a29.44 29.44 0 0 0 42.688 0l.384-.384a32 32 0 0 0 0-44.16L535.168 344.32a32 32 0 0 0-46.336 0"
            })]))
    }
})
    , jq = N3
    , D3 = Ce({
    name: "Check",
    __name: "check",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M406.656 706.944 195.84 496.256a32 32 0 1 0-45.248 45.248l256 256 512-512a32 32 0 0 0-45.248-45.248L406.592 706.944z"
            })]))
    }
})
    , Lw = D3
    , F3 = Ce({
    name: "CircleCheck",
    __name: "circle-check",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768m0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
            }), U("path", {
                fill: "currentColor",
                d: "M745.344 361.344a32 32 0 0 1 45.312 45.312l-288 288a32 32 0 0 1-45.312 0l-160-160a32 32 0 1 1 45.312-45.312L480 626.752l265.344-265.408z"
            })]))
    }
})
    , Xp = F3
    , $3 = Ce({
    name: "CircleCloseFilled",
    __name: "circle-close-filled",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m0 393.664L407.936 353.6a38.4 38.4 0 1 0-54.336 54.336L457.664 512 353.6 616.064a38.4 38.4 0 1 0 54.336 54.336L512 566.336 616.064 670.4a38.4 38.4 0 1 0 54.336-54.336L566.336 512 670.4 407.936a38.4 38.4 0 1 0-54.336-54.336z"
            })]))
    }
})
    , Mw = $3
    , B3 = Ce({
    name: "CircleClose",
    __name: "circle-close",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "m466.752 512-90.496-90.496a32 32 0 0 1 45.248-45.248L512 466.752l90.496-90.496a32 32 0 1 1 45.248 45.248L557.248 512l90.496 90.496a32 32 0 1 1-45.248 45.248L512 557.248l-90.496 90.496a32 32 0 0 1-45.248-45.248z"
            }), U("path", {
                fill: "currentColor",
                d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768m0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
            })]))
    }
})
    , pd = B3
    , H3 = Ce({
    name: "Close",
    __name: "close",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M764.288 214.592 512 466.88 259.712 214.592a31.936 31.936 0 0 0-45.12 45.12L466.752 512 214.528 764.224a31.936 31.936 0 1 0 45.12 45.184L512 557.184l252.288 252.288a31.936 31.936 0 0 0 45.12-45.12L557.12 512.064l252.288-252.352a31.936 31.936 0 1 0-45.12-45.184z"
            })]))
    }
})
    , ar = H3
    , V3 = Ce({
    name: "Delete",
    __name: "delete",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M160 256H96a32 32 0 0 1 0-64h256V95.936a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32V192h256a32 32 0 1 1 0 64h-64v672a32 32 0 0 1-32 32H192a32 32 0 0 1-32-32zm448-64v-64H416v64zM224 896h576V256H224zm192-128a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32m192 0a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32"
            })]))
    }
})
    , z3 = V3
    , W3 = Ce({
    name: "Document",
    __name: "document",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M832 384H576V128H192v768h640zm-26.496-64L640 154.496V320zM160 64h480l256 256v608a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32m160 448h384v64H320zm0-192h160v64H320zm0 384h384v64H320z"
            })]))
    }
})
    , U3 = W3
    , Y3 = Ce({
    name: "Hide",
    __name: "hide",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M876.8 156.8c0-9.6-3.2-16-9.6-22.4-6.4-6.4-12.8-9.6-22.4-9.6-9.6 0-16 3.2-22.4 9.6L736 220.8c-64-32-137.6-51.2-224-60.8-160 16-288 73.6-377.6 176C44.8 438.4 0 496 0 512s48 73.6 134.4 176c22.4 25.6 44.8 48 73.6 67.2l-86.4 89.6c-6.4 6.4-9.6 12.8-9.6 22.4 0 9.6 3.2 16 9.6 22.4 6.4 6.4 12.8 9.6 22.4 9.6 9.6 0 16-3.2 22.4-9.6l704-710.4c3.2-6.4 6.4-12.8 6.4-22.4Zm-646.4 528c-76.8-70.4-128-128-153.6-172.8 28.8-48 80-105.6 153.6-172.8C304 272 400 230.4 512 224c64 3.2 124.8 19.2 176 44.8l-54.4 54.4C598.4 300.8 560 288 512 288c-64 0-115.2 22.4-160 64s-64 96-64 160c0 48 12.8 89.6 35.2 124.8L256 707.2c-9.6-6.4-19.2-16-25.6-22.4Zm140.8-96c-12.8-22.4-19.2-48-19.2-76.8 0-44.8 16-83.2 48-112 32-28.8 67.2-48 112-48 28.8 0 54.4 6.4 73.6 19.2zM889.599 336c-12.8-16-28.8-28.8-41.6-41.6l-48 48c73.6 67.2 124.8 124.8 150.4 169.6-28.8 48-80 105.6-153.6 172.8-73.6 67.2-172.8 108.8-284.8 115.2-51.2-3.2-99.2-12.8-140.8-28.8l-48 48c57.6 22.4 118.4 38.4 188.8 44.8 160-16 288-73.6 377.6-176C979.199 585.6 1024 528 1024 512s-48.001-73.6-134.401-176Z"
            }), U("path", {
                fill: "currentColor",
                d: "M511.998 672c-12.8 0-25.6-3.2-38.4-6.4l-51.2 51.2c28.8 12.8 57.6 19.2 89.6 19.2 64 0 115.2-22.4 160-64 41.6-41.6 64-96 64-160 0-32-6.4-64-19.2-89.6l-51.2 51.2c3.2 12.8 6.4 25.6 6.4 38.4 0 44.8-16 83.2-48 112-32 28.8-67.2 48-112 48Z"
            })]))
    }
})
    , X3 = Y3
    , j3 = Ce({
    name: "InfoFilled",
    __name: "info-filled",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M512 64a448 448 0 1 1 0 896.064A448 448 0 0 1 512 64m67.2 275.072c33.28 0 60.288-23.104 60.288-57.344s-27.072-57.344-60.288-57.344c-33.28 0-60.16 23.104-60.16 57.344s26.88 57.344 60.16 57.344M590.912 699.2c0-6.848 2.368-24.64 1.024-34.752l-52.608 60.544c-10.88 11.456-24.512 19.392-30.912 17.28a12.992 12.992 0 0 1-8.256-14.72l87.68-276.992c7.168-35.136-12.544-67.2-54.336-71.296-44.096 0-108.992 44.736-148.48 101.504 0 6.784-1.28 23.68.064 33.792l52.544-60.608c10.88-11.328 23.552-19.328 29.952-17.152a12.8 12.8 0 0 1 7.808 16.128L388.48 728.576c-10.048 32.256 8.96 63.872 55.04 71.04 67.84 0 107.904-43.648 147.456-100.416z"
            })]))
    }
})
    , Ow = j3
    , G3 = Ce({
    name: "Loading",
    __name: "loading",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32m0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32m448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32m-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32M195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0m-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"
            })]))
    }
})
    , Bl = G3
    , q3 = Ce({
    name: "Minus",
    __name: "minus",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M128 544h768a32 32 0 1 0 0-64H128a32 32 0 0 0 0 64"
            })]))
    }
})
    , Gq = q3
    , K3 = Ce({
    name: "More",
    __name: "more",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M176 416a112 112 0 1 0 0 224 112 112 0 0 0 0-224m0 64a48 48 0 1 1 0 96 48 48 0 0 1 0-96m336-64a112 112 0 1 1 0 224 112 112 0 0 1 0-224m0 64a48 48 0 1 0 0 96 48 48 0 0 0 0-96m336-64a112 112 0 1 1 0 224 112 112 0 0 1 0-224m0 64a48 48 0 1 0 0 96 48 48 0 0 0 0-96"
            })]))
    }
})
    , Z3 = K3
    , J3 = Ce({
    name: "PictureFilled",
    __name: "picture-filled",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M96 896a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h832a32 32 0 0 1 32 32v704a32 32 0 0 1-32 32zm315.52-228.48-68.928-68.928a32 32 0 0 0-45.248 0L128 768.064h778.688l-242.112-290.56a32 32 0 0 0-49.216 0L458.752 665.408a32 32 0 0 1-47.232 2.112M256 384a96 96 0 1 0 192.064-.064A96 96 0 0 0 256 384"
            })]))
    }
})
    , qq = J3
    , Q3 = Ce({
    name: "Plus",
    __name: "plus",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M480 480V128a32 32 0 0 1 64 0v352h352a32 32 0 1 1 0 64H544v352a32 32 0 1 1-64 0V544H128a32 32 0 0 1 0-64z"
            })]))
    }
})
    , e8 = Q3
    , t8 = Ce({
    name: "SuccessFilled",
    __name: "success-filled",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m-55.808 536.384-99.52-99.584a38.4 38.4 0 1 0-54.336 54.336l126.72 126.72a38.272 38.272 0 0 0 54.336 0l262.4-262.464a38.4 38.4 0 1 0-54.272-54.336z"
            })]))
    }
})
    , Rw = t8
    , s8 = Ce({
    name: "View",
    __name: "view",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M512 160c320 0 512 352 512 352S832 864 512 864 0 512 0 512s192-352 512-352m0 64c-225.28 0-384.128 208.064-436.8 288 52.608 79.872 211.456 288 436.8 288 225.28 0 384.128-208.064 436.8-288-52.608-79.872-211.456-288-436.8-288zm0 64a224 224 0 1 1 0 448 224 224 0 0 1 0-448m0 64a160.192 160.192 0 0 0-160 160c0 88.192 71.744 160 160 160s160-71.808 160-160-71.744-160-160-160"
            })]))
    }
})
    , n8 = s8
    , i8 = Ce({
    name: "WarningFilled",
    __name: "warning-filled",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m0 192a58.432 58.432 0 0 0-58.24 63.744l23.36 256.384a35.072 35.072 0 0 0 69.76 0l23.296-256.384A58.432 58.432 0 0 0 512 256m0 512a51.2 51.2 0 1 0 0-102.4 51.2 51.2 0 0 0 0 102.4"
            })]))
    }
})
    , jp = i8
    , a8 = Ce({
    name: "ZoomIn",
    __name: "zoom-in",
    setup(e) {
        return (t, s) => (Z(),
            ye("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 1024 1024"
            }, [U("path", {
                fill: "currentColor",
                d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704m-32-384v-96a32 32 0 0 1 64 0v96h96a32 32 0 0 1 0 64h-96v96a32 32 0 0 1-64 0v-96h-96a32 32 0 0 1 0-64z"
            })]))
    }
})
    , r8 = a8;
const Cs = Ye([String, Object, Function])
    , o8 = {
    Close: ar
}
    , Gp = {
    Close: ar,
    SuccessFilled: Rw,
    InfoFilled: Ow,
    WarningFilled: jp,
    CircleCloseFilled: Mw
}
    , uo = {
    success: Rw,
    warning: jp,
    error: Mw,
    info: Ow
}
    , Nw = {
    validating: Bl,
    success: Xp,
    error: pd
}
    , l8 = ["light", "dark"]
    , c8 = gt({
    title: {
        type: String,
        default: ""
    },
    description: {
        type: String,
        default: ""
    },
    type: {
        type: String,
        values: gf(uo),
        default: "info"
    },
    closable: {
        type: Boolean,
        default: !0
    },
    closeText: {
        type: String,
        default: ""
    },
    showIcon: Boolean,
    center: Boolean,
    effect: {
        type: String,
        values: l8,
        default: "light"
    }
})
    , u8 = {
    close: e => e instanceof MouseEvent
}
    , d8 = Ce({
    name: "ElAlert"
})
    , h8 = Ce({
    ...d8,
    props: c8,
    emits: u8,
    setup(e, {emit: t}) {
        const s = e
            , {Close: a} = Gp
            , o = _i()
            , l = rt("alert")
            , u = Se(!0)
            , p = re(() => uo[s.type])
            , g = re(() => !!(s.description || o.default))
            , y = v => {
                u.value = !1,
                    t("close", v)
            }
        ;
        return (v, w) => (Z(),
            Te(fn, {
                name: D(l).b("fade"),
                persisted: ""
            }, {
                default: se(() => [_t(U("div", {
                    class: he([D(l).b(), D(l).m(v.type), D(l).is("center", v.center), D(l).is(v.effect)]),
                    role: "alert"
                }, [v.showIcon && (v.$slots.icon || D(p)) ? (Z(),
                    Te(D(Mt), {
                        key: 0,
                        class: he([D(l).e("icon"), {
                            [D(l).is("big")]: D(g)
                        }])
                    }, {
                        default: se(() => [De(v.$slots, "icon", {}, () => [(Z(),
                            Te(Vt(D(p))))])]),
                        _: 3
                    }, 8, ["class"])) : ke("v-if", !0), U("div", {
                    class: he(D(l).e("content"))
                }, [v.title || v.$slots.title ? (Z(),
                    ye("span", {
                        key: 0,
                        class: he([D(l).e("title"), {
                            "with-description": D(g)
                        }])
                    }, [De(v.$slots, "title", {}, () => [at(me(v.title), 1)])], 2)) : ke("v-if", !0), D(g) ? (Z(),
                    ye("p", {
                        key: 1,
                        class: he(D(l).e("description"))
                    }, [De(v.$slots, "default", {}, () => [at(me(v.description), 1)])], 2)) : ke("v-if", !0), v.closable ? (Z(),
                    ye(Ct, {
                        key: 2
                    }, [v.closeText ? (Z(),
                        ye("div", {
                            key: 0,
                            class: he([D(l).e("close-btn"), D(l).is("customed")]),
                            onClick: y
                        }, me(v.closeText), 3)) : (Z(),
                        Te(D(Mt), {
                            key: 1,
                            class: he(D(l).e("close-btn")),
                            onClick: y
                        }, {
                            default: se(() => [ae(D(a))]),
                            _: 1
                        }, 8, ["class"]))], 64)) : ke("v-if", !0)], 2)], 2), [[ss, u.value]])]),
                _: 3
            }, 8, ["name"]))
    }
});
var f8 = ot(h8, [["__file", "alert.vue"]]);
const qp = Zt(f8)
    , p8 = () => cs && /firefox/i.test(window.navigator.userAgent);
let rn;
const g8 = {
        height: "0",
        visibility: "hidden",
        overflow: p8() ? "" : "hidden",
        position: "absolute",
        "z-index": "-1000",
        top: "0",
        right: "0"
    }
    ,
    m8 = ["letter-spacing", "line-height", "padding-top", "padding-bottom", "font-family", "font-weight", "font-size", "text-rendering", "text-transform", "width", "text-indent", "padding-left", "padding-right", "border-width", "box-sizing"];

function v8(e) {
    const t = window.getComputedStyle(e)
        , s = t.getPropertyValue("box-sizing")
        ,
        a = Number.parseFloat(t.getPropertyValue("padding-bottom")) + Number.parseFloat(t.getPropertyValue("padding-top"))
        ,
        o = Number.parseFloat(t.getPropertyValue("border-bottom-width")) + Number.parseFloat(t.getPropertyValue("border-top-width"));
    return {
        contextStyle: m8.map(u => [u, t.getPropertyValue(u)]),
        paddingSize: a,
        borderSize: o,
        boxSizing: s
    }
}

function wb(e, t = 1, s) {
    var a;
    rn || (rn = document.createElement("textarea"),
        document.body.appendChild(rn));
    const {paddingSize: o, borderSize: l, boxSizing: u, contextStyle: p} = v8(e);
    p.forEach(([w, C]) => rn == null ? void 0 : rn.style.setProperty(w, C)),
        Object.entries(g8).forEach(([w, C]) => rn == null ? void 0 : rn.style.setProperty(w, C, "important")),
        rn.value = e.value || e.placeholder || "";
    let g = rn.scrollHeight;
    const y = {};
    u === "border-box" ? g = g + l : u === "content-box" && (g = g - o),
        rn.value = "";
    const v = rn.scrollHeight - o;
    if (ts(t)) {
        let w = v * t;
        u === "border-box" && (w = w + o + l),
            g = Math.max(w, g),
            y.minHeight = `${w}px`
    }
    if (ts(s)) {
        let w = v * s;
        u === "border-box" && (w = w + o + l),
            g = Math.min(w, g)
    }
    return y.height = `${g}px`,
    (a = rn.parentNode) == null || a.removeChild(rn),
        rn = void 0,
        y
}

const bn = e => e
    , b8 = gt({
        ariaLabel: String,
        ariaOrientation: {
            type: String,
            values: ["horizontal", "vertical", "undefined"]
        },
        ariaControls: String
    })
    , ta = e => ww(b8, e)
    , y8 = gt({
        id: {
            type: String,
            default: void 0
        },
        size: mr,
        disabled: Boolean,
        modelValue: {
            type: Ye([String, Number, Object]),
            default: ""
        },
        maxlength: {
            type: [String, Number]
        },
        minlength: {
            type: [String, Number]
        },
        type: {
            type: String,
            default: "text"
        },
        resize: {
            type: String,
            values: ["none", "both", "horizontal", "vertical"]
        },
        autosize: {
            type: Ye([Boolean, Object]),
            default: !1
        },
        autocomplete: {
            type: String,
            default: "off"
        },
        formatter: {
            type: Function
        },
        parser: {
            type: Function
        },
        placeholder: {
            type: String
        },
        form: {
            type: String
        },
        readonly: Boolean,
        clearable: Boolean,
        showPassword: Boolean,
        showWordLimit: Boolean,
        suffixIcon: {
            type: Cs
        },
        prefixIcon: {
            type: Cs
        },
        containerRole: {
            type: String,
            default: void 0
        },
        tabindex: {
            type: [String, Number],
            default: 0
        },
        validateEvent: {
            type: Boolean,
            default: !0
        },
        inputStyle: {
            type: Ye([Object, Array, String]),
            default: () => bn({})
        },
        autofocus: Boolean,
        rows: {
            type: Number,
            default: 2
        },
        ...ta(["ariaLabel"])
    })
    , x8 = {
        [ms]: e => pt(e),
        input: e => pt(e),
        change: e => pt(e),
        focus: e => e instanceof FocusEvent,
        blur: e => e instanceof FocusEvent,
        clear: () => !0,
        mouseleave: e => e instanceof MouseEvent,
        mouseenter: e => e instanceof MouseEvent,
        keydown: e => e instanceof Event,
        compositionstart: e => e instanceof CompositionEvent,
        compositionupdate: e => e instanceof CompositionEvent,
        compositionend: e => e instanceof CompositionEvent
    }
    , w8 = ["class", "style"]
    , S8 = /^on[A-Z]/
    , _8 = (e = {}) => {
        const {excludeListeners: t = !1, excludeKeys: s} = e
            , a = re(() => ((s == null ? void 0 : s.value) || []).concat(w8))
            , o = Et();
        return re(o ? () => {
                var l;
                return _u(Object.entries((l = o.proxy) == null ? void 0 : l.$attrs).filter(([u]) => !a.value.includes(u) && !(t && S8.test(u))))
            }
            : () => ({}))
    }
    , Eo = Symbol("formContextKey")
    , rr = Symbol("formItemContextKey")
    , Sb = {
        prefix: Math.floor(Math.random() * 1e4),
        current: 0
    }
    , k8 = Symbol("elIdInjection")
    , Dw = () => Et() ? st(k8, Sb) : Sb
    , Nn = e => {
        const t = Dw()
            , s = Tp();
        return ff(() => D(e) || `${s.value}-id-${t.prefix}-${t.current++}`)
    }
    , Na = () => {
        const e = st(Eo, void 0)
            , t = st(rr, void 0);
        return {
            form: e,
            formItem: t
        }
    }
    , To = (e, {formItemContext: t, disableIdGeneration: s, disableIdManagement: a}) => {
        s || (s = Se(!1)),
        a || (a = Se(!1));
        const o = Se();
        let l;
        const u = re(() => {
                var p;
                return !!(!(e.label || e.ariaLabel) && t && t.inputIds && ((p = t.inputIds) == null ? void 0 : p.length) <= 1)
            }
        );
        return $t(() => {
                l = Ke([ks(e, "id"), s], ([p, g]) => {
                        const y = p ?? (g ? void 0 : Nn().value);
                        y !== o.value && (t != null && t.removeInputId && (o.value && t.removeInputId(o.value),
                        !(a != null && a.value) && !g && y && t.addInputId(y)),
                            o.value = y)
                    }
                    , {
                        immediate: !0
                    })
            }
        ),
            hr(() => {
                    l && l(),
                    t != null && t.removeInputId && o.value && t.removeInputId(o.value)
                }
            ),
            {
                isLabeledByFormItem: u,
                inputId: o
            }
    }
    , Fw = e => {
        const t = Et();
        return re(() => {
                var s, a;
                return (a = (s = t == null ? void 0 : t.proxy) == null ? void 0 : s.$props) == null ? void 0 : a[e]
            }
        )
    }
    , ii = (e, t = {}) => {
        const s = Se(void 0)
            , a = t.prop ? s : Fw("size")
            , o = t.global ? s : g3()
            , l = t.form ? {
            size: void 0
        } : st(Eo, void 0)
            , u = t.formItem ? {
            size: void 0
        } : st(rr, void 0);
        return re(() => a.value || D(e) || (u == null ? void 0 : u.size) || (l == null ? void 0 : l.size) || o.value || "")
    }
    , Ci = e => {
        const t = Fw("disabled")
            , s = st(Eo, void 0);
        return re(() => t.value || D(e) || (s == null ? void 0 : s.disabled) || !1)
    }
;

function $w(e, {beforeFocus: t, afterFocus: s, beforeBlur: a, afterBlur: o} = {}) {
    const l = Et()
        , {emit: u} = l
        , p = Bs()
        , g = Se(!1)
        , y = C => {
            nt(t) && t(C) || g.value || (g.value = !0,
                u("focus", C),
            s == null || s())
        }
        , v = C => {
            var T;
            nt(a) && a(C) || C.relatedTarget && ((T = p.value) != null && T.contains(C.relatedTarget)) || (g.value = !1,
                u("blur", C),
            o == null || o())
        }
        , w = () => {
            var C, T;
            (C = p.value) != null && C.contains(document.activeElement) && p.value !== document.activeElement || (T = e.value) == null || T.focus()
        }
    ;
    return Ke(p, C => {
            C && C.setAttribute("tabindex", "-1")
        }
    ),
        cn(p, "focus", y, !0),
        cn(p, "blur", v, !0),
        cn(p, "click", w, !0),
        {
            isFocused: g,
            wrapperRef: p,
            handleFocus: y,
            handleBlur: v
        }
}

const C8 = e => /([\uAC00-\uD7AF\u3130-\u318F])+/gi.test(e);

function Bw({afterComposition: e, emit: t}) {
    const s = Se(!1)
        , a = p => {
            t == null || t("compositionstart", p),
                s.value = !0
        }
        , o = p => {
            var g;
            t == null || t("compositionupdate", p);
            const y = (g = p.target) == null ? void 0 : g.value
                , v = y[y.length - 1] || "";
            s.value = !C8(v)
        }
        , l = p => {
            t == null || t("compositionend", p),
            s.value && (s.value = !1,
                xt(() => e(p)))
        }
    ;
    return {
        isComposing: s,
        handleComposition: p => {
            p.type === "compositionend" ? l(p) : o(p)
        }
        ,
        handleCompositionStart: a,
        handleCompositionUpdate: o,
        handleCompositionEnd: l
    }
}

function A8(e) {
    let t;

    function s() {
        if (e.value == null)
            return;
        const {selectionStart: o, selectionEnd: l, value: u} = e.value;
        if (o == null || l == null)
            return;
        const p = u.slice(0, Math.max(0, o))
            , g = u.slice(Math.max(0, l));
        t = {
            selectionStart: o,
            selectionEnd: l,
            value: u,
            beforeTxt: p,
            afterTxt: g
        }
    }

    function a() {
        if (e.value == null || t == null)
            return;
        const {value: o} = e.value
            , {beforeTxt: l, afterTxt: u, selectionStart: p} = t;
        if (l == null || u == null || p == null)
            return;
        let g = o.length;
        if (o.endsWith(u))
            g = o.length - u.length;
        else if (o.startsWith(l))
            g = l.length;
        else {
            const y = l[p - 1]
                , v = o.indexOf(y, p - 1);
            v !== -1 && (g = v + 1)
        }
        e.value.setSelectionRange(g, g)
    }

    return [s, a]
}

const E8 = "ElInput"
    , T8 = Ce({
    name: E8,
    inheritAttrs: !1
})
    , I8 = Ce({
    ...T8,
    props: y8,
    emits: x8,
    setup(e, {expose: t, emit: s}) {
        const a = e
            , o = p0()
            , l = _8()
            , u = _i()
            ,
            p = re(() => [a.type === "textarea" ? A.b() : I.b(), I.m(C.value), I.is("disabled", T.value), I.is("exceed", je.value), {
                [I.b("group")]: u.prepend || u.append,
                [I.m("prefix")]: u.prefix || a.prefixIcon,
                [I.m("suffix")]: u.suffix || a.suffixIcon || a.clearable || a.showPassword,
                [I.bm("suffix", "password-clear")]: fe.value && Me.value,
                [I.b("hidden")]: a.type === "hidden"
            }, o.class])
            , g = re(() => [I.e("wrapper"), I.is("focus", ie.value)])
            , {form: y, formItem: v} = Na()
            , {inputId: w} = To(a, {
                formItemContext: v
            })
            , C = ii()
            , T = Ci()
            , I = rt("input")
            , A = rt("textarea")
            , R = Bs()
            , P = Bs()
            , M = Se(!1)
            , O = Se(!1)
            , F = Se()
            , $ = Bs(a.inputStyle)
            , V = re(() => R.value || P.value)
            , {wrapperRef: G, isFocused: ie, handleFocus: te, handleBlur: ne} = $w(V, {
                beforeFocus() {
                    return T.value
                },
                afterBlur() {
                    var Ee;
                    a.validateEvent && ((Ee = v == null ? void 0 : v.validate) == null || Ee.call(v, "blur").catch(ze => void 0))
                }
            })
            , le = re(() => {
                    var Ee;
                    return (Ee = y == null ? void 0 : y.statusIcon) != null ? Ee : !1
                }
            )
            , oe = re(() => (v == null ? void 0 : v.validateState) || "")
            , ve = re(() => oe.value && Nw[oe.value])
            , be = re(() => O.value ? n8 : X3)
            , de = re(() => [o.style])
            , J = re(() => [a.inputStyle, $.value, {
                resize: a.resize
            }])
            , ue = re(() => qi(a.modelValue) ? "" : String(a.modelValue))
            , fe = re(() => a.clearable && !T.value && !a.readonly && !!ue.value && (ie.value || M.value))
            , Me = re(() => a.showPassword && !T.value && !!ue.value && (!!ue.value || ie.value))
            ,
            Xe = re(() => a.showWordLimit && !!a.maxlength && (a.type === "text" || a.type === "textarea") && !T.value && !a.readonly && !a.showPassword)
            , Be = re(() => ue.value.length)
            , je = re(() => !!Xe.value && Be.value > Number(a.maxlength))
            ,
            tt = re(() => !!u.suffix || !!a.suffixIcon || fe.value || a.showPassword || Xe.value || !!oe.value && le.value)
            , [ft, mt] = A8(R);
        sn(P, Ee => {
                if (Ae(),
                !Xe.value || a.resize !== "both")
                    return;
                const ze = Ee[0]
                    , {width: xe} = ze.contentRect;
                F.value = {
                    right: `calc(100% - ${xe + 15 + 6}px)`
                }
            }
        );
        const bt = () => {
                const {type: Ee, autosize: ze} = a;
                if (!(!cs || Ee !== "textarea" || !P.value))
                    if (ze) {
                        const xe = At(ze) ? ze.minRows : void 0
                            , Re = At(ze) ? ze.maxRows : void 0
                            , lt = wb(P.value, xe, Re);
                        $.value = {
                            overflowY: "hidden",
                            ...lt
                        },
                            xt(() => {
                                    P.value.offsetHeight,
                                        $.value = lt
                                }
                            )
                    } else
                        $.value = {
                            minHeight: wb(P.value).minHeight
                        }
            }
            , Ae = (Ee => {
                    let ze = !1;
                    return () => {
                        var xe;
                        if (ze || !a.autosize)
                            return;
                        ((xe = P.value) == null ? void 0 : xe.offsetParent) === null || (Ee(),
                            ze = !0)
                    }
                }
            )(bt)
            , Ne = () => {
                const Ee = V.value
                    , ze = a.formatter ? a.formatter(ue.value) : ue.value;
                !Ee || Ee.value === ze || (Ee.value = ze)
            }
            , He = async Ee => {
                ft();
                let {value: ze} = Ee.target;
                if (a.formatter && a.parser && (ze = a.parser(ze)),
                    !dt.value) {
                    if (ze === ue.value) {
                        Ne();
                        return
                    }
                    s(ms, ze),
                        s($l, ze),
                        await xt(),
                        Ne(),
                        mt()
                }
            }
            , et = Ee => {
                let {value: ze} = Ee.target;
                a.formatter && a.parser && (ze = a.parser(ze)),
                    s(wn, ze)
            }
            , {isComposing: dt, handleCompositionStart: Y, handleCompositionUpdate: W, handleCompositionEnd: ce} = Bw({
                emit: s,
                afterComposition: He
            })
            , we = () => {
                ft(),
                    O.value = !O.value,
                    setTimeout(mt)
            }
            , _e = () => {
                var Ee;
                return (Ee = V.value) == null ? void 0 : Ee.focus()
            }
            , Oe = () => {
                var Ee;
                return (Ee = V.value) == null ? void 0 : Ee.blur()
            }
            , qe = Ee => {
                M.value = !1,
                    s("mouseleave", Ee)
            }
            , We = Ee => {
                M.value = !0,
                    s("mouseenter", Ee)
            }
            , Ge = Ee => {
                s("keydown", Ee)
            }
            , Ue = () => {
                var Ee;
                (Ee = V.value) == null || Ee.select()
            }
            , ht = () => {
                s(ms, ""),
                    s(wn, ""),
                    s("clear"),
                    s($l, "")
            }
        ;
        return Ke(() => a.modelValue, () => {
                var Ee;
                xt(() => bt()),
                a.validateEvent && ((Ee = v == null ? void 0 : v.validate) == null || Ee.call(v, "change").catch(ze => void 0))
            }
        ),
            Ke(ue, () => Ne()),
            Ke(() => a.type, async () => {
                    await xt(),
                        Ne(),
                        bt()
                }
            ),
            $t(() => {
                    !a.formatter && a.parser,
                        Ne(),
                        xt(bt)
                }
            ),
            t({
                input: R,
                textarea: P,
                ref: V,
                textareaStyle: J,
                autosize: ks(a, "autosize"),
                isComposing: dt,
                focus: _e,
                blur: Oe,
                select: Ue,
                clear: ht,
                resizeTextarea: bt
            }),
            (Ee, ze) => (Z(),
                ye("div", {
                    class: he([D(p), {
                        [D(I).bm("group", "append")]: Ee.$slots.append,
                        [D(I).bm("group", "prepend")]: Ee.$slots.prepend
                    }]),
                    style: kt(D(de)),
                    onMouseenter: We,
                    onMouseleave: qe
                }, [ke(" input "), Ee.type !== "textarea" ? (Z(),
                    ye(Ct, {
                        key: 0
                    }, [ke(" prepend slot "), Ee.$slots.prepend ? (Z(),
                        ye("div", {
                            key: 0,
                            class: he(D(I).be("group", "prepend"))
                        }, [De(Ee.$slots, "prepend")], 2)) : ke("v-if", !0), U("div", {
                        ref_key: "wrapperRef",
                        ref: G,
                        class: he(D(g))
                    }, [ke(" prefix slot "), Ee.$slots.prefix || Ee.prefixIcon ? (Z(),
                        ye("span", {
                            key: 0,
                            class: he(D(I).e("prefix"))
                        }, [U("span", {
                            class: he(D(I).e("prefix-inner"))
                        }, [De(Ee.$slots, "prefix"), Ee.prefixIcon ? (Z(),
                            Te(D(Mt), {
                                key: 0,
                                class: he(D(I).e("icon"))
                            }, {
                                default: se(() => [(Z(),
                                    Te(Vt(Ee.prefixIcon)))]),
                                _: 1
                            }, 8, ["class"])) : ke("v-if", !0)], 2)], 2)) : ke("v-if", !0), U("input", vs({
                        id: D(w),
                        ref_key: "input",
                        ref: R,
                        class: D(I).e("inner")
                    }, D(l), {
                        minlength: Ee.minlength,
                        maxlength: Ee.maxlength,
                        type: Ee.showPassword ? O.value ? "text" : "password" : Ee.type,
                        disabled: D(T),
                        readonly: Ee.readonly,
                        autocomplete: Ee.autocomplete,
                        tabindex: Ee.tabindex,
                        "aria-label": Ee.ariaLabel,
                        placeholder: Ee.placeholder,
                        style: Ee.inputStyle,
                        form: Ee.form,
                        autofocus: Ee.autofocus,
                        role: Ee.containerRole,
                        onCompositionstart: D(Y),
                        onCompositionupdate: D(W),
                        onCompositionend: D(ce),
                        onInput: He,
                        onChange: et,
                        onKeydown: Ge
                    }), null, 16, ["id", "minlength", "maxlength", "type", "disabled", "readonly", "autocomplete", "tabindex", "aria-label", "placeholder", "form", "autofocus", "role", "onCompositionstart", "onCompositionupdate", "onCompositionend"]), ke(" suffix slot "), D(tt) ? (Z(),
                        ye("span", {
                            key: 1,
                            class: he(D(I).e("suffix"))
                        }, [U("span", {
                            class: he(D(I).e("suffix-inner"))
                        }, [!D(fe) || !D(Me) || !D(Xe) ? (Z(),
                            ye(Ct, {
                                key: 0
                            }, [De(Ee.$slots, "suffix"), Ee.suffixIcon ? (Z(),
                                Te(D(Mt), {
                                    key: 0,
                                    class: he(D(I).e("icon"))
                                }, {
                                    default: se(() => [(Z(),
                                        Te(Vt(Ee.suffixIcon)))]),
                                    _: 1
                                }, 8, ["class"])) : ke("v-if", !0)], 64)) : ke("v-if", !0), D(fe) ? (Z(),
                            Te(D(Mt), {
                                key: 1,
                                class: he([D(I).e("icon"), D(I).e("clear")]),
                                onMousedown: Ot(D(Ht), ["prevent"]),
                                onClick: ht
                            }, {
                                default: se(() => [ae(D(pd))]),
                                _: 1
                            }, 8, ["class", "onMousedown"])) : ke("v-if", !0), D(Me) ? (Z(),
                            Te(D(Mt), {
                                key: 2,
                                class: he([D(I).e("icon"), D(I).e("password")]),
                                onClick: we
                            }, {
                                default: se(() => [(Z(),
                                    Te(Vt(D(be))))]),
                                _: 1
                            }, 8, ["class"])) : ke("v-if", !0), D(Xe) ? (Z(),
                            ye("span", {
                                key: 3,
                                class: he(D(I).e("count"))
                            }, [U("span", {
                                class: he(D(I).e("count-inner"))
                            }, me(D(Be)) + " / " + me(Ee.maxlength), 3)], 2)) : ke("v-if", !0), D(oe) && D(ve) && D(le) ? (Z(),
                            Te(D(Mt), {
                                key: 4,
                                class: he([D(I).e("icon"), D(I).e("validateIcon"), D(I).is("loading", D(oe) === "validating")])
                            }, {
                                default: se(() => [(Z(),
                                    Te(Vt(D(ve))))]),
                                _: 1
                            }, 8, ["class"])) : ke("v-if", !0)], 2)], 2)) : ke("v-if", !0)], 2), ke(" append slot "), Ee.$slots.append ? (Z(),
                        ye("div", {
                            key: 1,
                            class: he(D(I).be("group", "append"))
                        }, [De(Ee.$slots, "append")], 2)) : ke("v-if", !0)], 64)) : (Z(),
                    ye(Ct, {
                        key: 1
                    }, [ke(" textarea "), U("textarea", vs({
                        id: D(w),
                        ref_key: "textarea",
                        ref: P,
                        class: [D(A).e("inner"), D(I).is("focus", D(ie))]
                    }, D(l), {
                        minlength: Ee.minlength,
                        maxlength: Ee.maxlength,
                        tabindex: Ee.tabindex,
                        disabled: D(T),
                        readonly: Ee.readonly,
                        autocomplete: Ee.autocomplete,
                        style: D(J),
                        "aria-label": Ee.ariaLabel,
                        placeholder: Ee.placeholder,
                        form: Ee.form,
                        autofocus: Ee.autofocus,
                        rows: Ee.rows,
                        role: Ee.containerRole,
                        onCompositionstart: D(Y),
                        onCompositionupdate: D(W),
                        onCompositionend: D(ce),
                        onInput: He,
                        onFocus: D(te),
                        onBlur: D(ne),
                        onChange: et,
                        onKeydown: Ge
                    }), null, 16, ["id", "minlength", "maxlength", "tabindex", "disabled", "readonly", "autocomplete", "aria-label", "placeholder", "form", "autofocus", "rows", "role", "onCompositionstart", "onCompositionupdate", "onCompositionend", "onFocus", "onBlur"]), D(Xe) ? (Z(),
                        ye("span", {
                            key: 0,
                            style: kt(F.value),
                            class: he(D(I).e("count"))
                        }, me(D(Be)) + " / " + me(Ee.maxlength), 7)) : ke("v-if", !0)], 64))], 38))
    }
});
var P8 = ot(I8, [["__file", "input.vue"]]);
const Kp = Zt(P8)
    , kr = 4
    , L8 = {
    vertical: {
        offset: "offsetHeight",
        scroll: "scrollTop",
        scrollSize: "scrollHeight",
        size: "height",
        key: "vertical",
        axis: "Y",
        client: "clientY",
        direction: "top"
    },
    horizontal: {
        offset: "offsetWidth",
        scroll: "scrollLeft",
        scrollSize: "scrollWidth",
        size: "width",
        key: "horizontal",
        axis: "X",
        client: "clientX",
        direction: "left"
    }
}
    , M8 = ({move: e, size: t, bar: s}) => ({
    [s.size]: t,
    transform: `translate${s.axis}(${e}%)`
})
    , Zp = Symbol("scrollbarContextKey")
    , O8 = gt({
    vertical: Boolean,
    size: String,
    move: Number,
    ratio: {
        type: Number,
        required: !0
    },
    always: Boolean
})
    , R8 = "Thumb"
    , N8 = Ce({
    __name: "thumb",
    props: O8,
    setup(e) {
        const t = e
            , s = st(Zp)
            , a = rt("scrollbar");
        s || hn(R8, "can not inject scrollbar context");
        const o = Se()
            , l = Se()
            , u = Se({})
            , p = Se(!1);
        let g = !1
            , y = !1
            , v = cs ? document.onselectstart : null;
        const w = re(() => L8[t.vertical ? "vertical" : "horizontal"])
            , C = re(() => M8({
                size: t.size,
                move: t.move,
                bar: w.value
            }))
            ,
            T = re(() => o.value[w.value.offset] ** 2 / s.wrapElement[w.value.scrollSize] / t.ratio / l.value[w.value.offset])
            , I = V => {
                var G;
                if (V.stopPropagation(),
                V.ctrlKey || [1, 2].includes(V.button))
                    return;
                (G = window.getSelection()) == null || G.removeAllRanges(),
                    R(V);
                const ie = V.currentTarget;
                ie && (u.value[w.value.axis] = ie[w.value.offset] - (V[w.value.client] - ie.getBoundingClientRect()[w.value.direction]))
            }
            , A = V => {
                if (!l.value || !o.value || !s.wrapElement)
                    return;
                const G = Math.abs(V.target.getBoundingClientRect()[w.value.direction] - V[w.value.client])
                    , ie = l.value[w.value.offset] / 2
                    , te = (G - ie) * 100 * T.value / o.value[w.value.offset];
                s.wrapElement[w.value.scroll] = te * s.wrapElement[w.value.scrollSize] / 100
            }
            , R = V => {
                V.stopImmediatePropagation(),
                    g = !0,
                    document.addEventListener("mousemove", P),
                    document.addEventListener("mouseup", M),
                    v = document.onselectstart,
                    document.onselectstart = () => !1
            }
            , P = V => {
                if (!o.value || !l.value || g === !1)
                    return;
                const G = u.value[w.value.axis];
                if (!G)
                    return;
                const ie = (o.value.getBoundingClientRect()[w.value.direction] - V[w.value.client]) * -1
                    , te = l.value[w.value.offset] - G
                    , ne = (ie - te) * 100 * T.value / o.value[w.value.offset];
                s.wrapElement[w.value.scroll] = ne * s.wrapElement[w.value.scrollSize] / 100
            }
            , M = () => {
                g = !1,
                    u.value[w.value.axis] = 0,
                    document.removeEventListener("mousemove", P),
                    document.removeEventListener("mouseup", M),
                    $(),
                y && (p.value = !1)
            }
            , O = () => {
                y = !1,
                    p.value = !!t.size
            }
            , F = () => {
                y = !0,
                    p.value = g
            }
        ;
        us(() => {
                $(),
                    document.removeEventListener("mouseup", M)
            }
        );
        const $ = () => {
                document.onselectstart !== v && (document.onselectstart = v)
            }
        ;
        return cn(ks(s, "scrollbarElement"), "mousemove", O),
            cn(ks(s, "scrollbarElement"), "mouseleave", F),
            (V, G) => (Z(),
                Te(fn, {
                    name: D(a).b("fade"),
                    persisted: ""
                }, {
                    default: se(() => [_t(U("div", {
                        ref_key: "instance",
                        ref: o,
                        class: he([D(a).e("bar"), D(a).is(D(w).key)]),
                        onMousedown: A
                    }, [U("div", {
                        ref_key: "thumb",
                        ref: l,
                        class: he(D(a).e("thumb")),
                        style: kt(D(C)),
                        onMousedown: I
                    }, null, 38)], 34), [[ss, V.always || p.value]])]),
                    _: 1
                }, 8, ["name"]))
    }
});
var _b = ot(N8, [["__file", "thumb.vue"]]);
const D8 = gt({
    always: {
        type: Boolean,
        default: !0
    },
    minSize: {
        type: Number,
        required: !0
    }
})
    , F8 = Ce({
    __name: "bar",
    props: D8,
    setup(e, {expose: t}) {
        const s = e
            , a = st(Zp)
            , o = Se(0)
            , l = Se(0)
            , u = Se("")
            , p = Se("")
            , g = Se(1)
            , y = Se(1);
        return t({
            handleScroll: C => {
                if (C) {
                    const T = C.offsetHeight - kr
                        , I = C.offsetWidth - kr;
                    l.value = C.scrollTop * 100 / T * g.value,
                        o.value = C.scrollLeft * 100 / I * y.value
                }
            }
            ,
            update: () => {
                const C = a == null ? void 0 : a.wrapElement;
                if (!C)
                    return;
                const T = C.offsetHeight - kr
                    , I = C.offsetWidth - kr
                    , A = T ** 2 / C.scrollHeight
                    , R = I ** 2 / C.scrollWidth
                    , P = Math.max(A, s.minSize)
                    , M = Math.max(R, s.minSize);
                g.value = A / (T - A) / (P / (T - P)),
                    y.value = R / (I - R) / (M / (I - M)),
                    p.value = P + kr < T ? `${P}px` : "",
                    u.value = M + kr < I ? `${M}px` : ""
            }
        }),
            (C, T) => (Z(),
                ye(Ct, null, [ae(_b, {
                    move: o.value,
                    ratio: y.value,
                    size: u.value,
                    always: C.always
                }, null, 8, ["move", "ratio", "size", "always"]), ae(_b, {
                    move: l.value,
                    ratio: g.value,
                    size: p.value,
                    vertical: "",
                    always: C.always
                }, null, 8, ["move", "ratio", "size", "always"])], 64))
    }
});
var $8 = ot(F8, [["__file", "bar.vue"]]);
const B8 = gt({
    height: {
        type: [String, Number],
        default: ""
    },
    maxHeight: {
        type: [String, Number],
        default: ""
    },
    native: {
        type: Boolean,
        default: !1
    },
    wrapStyle: {
        type: Ye([String, Object, Array]),
        default: ""
    },
    wrapClass: {
        type: [String, Array],
        default: ""
    },
    viewClass: {
        type: [String, Array],
        default: ""
    },
    viewStyle: {
        type: [String, Array, Object],
        default: ""
    },
    noresize: Boolean,
    tag: {
        type: String,
        default: "div"
    },
    always: Boolean,
    minSize: {
        type: Number,
        default: 20
    },
    tabindex: {
        type: [String, Number],
        default: void 0
    },
    id: String,
    role: String,
    ...ta(["ariaLabel", "ariaOrientation"])
})
    , H8 = {
    scroll: ({scrollTop: e, scrollLeft: t}) => [e, t].every(ts)
}
    , V8 = "ElScrollbar"
    , z8 = Ce({
    name: V8
})
    , W8 = Ce({
    ...z8,
    props: B8,
    emits: H8,
    setup(e, {expose: t, emit: s}) {
        const a = e
            , o = rt("scrollbar");
        let l, u, p = 0, g = 0;
        const y = Se()
            , v = Se()
            , w = Se()
            , C = Se()
            , T = re(() => {
                    const $ = {};
                    return a.height && ($.height = Sn(a.height)),
                    a.maxHeight && ($.maxHeight = Sn(a.maxHeight)),
                        [a.wrapStyle, $]
                }
            )
            , I = re(() => [a.wrapClass, o.e("wrap"), {
                [o.em("wrap", "hidden-default")]: !a.native
            }])
            , A = re(() => [o.e("view"), a.viewClass])
            , R = () => {
                var $;
                v.value && (($ = C.value) == null || $.handleScroll(v.value),
                    p = v.value.scrollTop,
                    g = v.value.scrollLeft,
                    s("scroll", {
                        scrollTop: v.value.scrollTop,
                        scrollLeft: v.value.scrollLeft
                    }))
            }
        ;

        function P($, V) {
            At($) ? v.value.scrollTo($) : ts($) && ts(V) && v.value.scrollTo($, V)
        }

        const M = $ => {
                ts($) && (v.value.scrollTop = $)
            }
            , O = $ => {
                ts($) && (v.value.scrollLeft = $)
            }
            , F = () => {
                var $;
                ($ = C.value) == null || $.update()
            }
        ;
        return Ke(() => a.noresize, $ => {
                $ ? (l == null || l(),
                u == null || u()) : ({stop: l} = sn(w, F),
                    u = cn("resize", F))
            }
            , {
                immediate: !0
            }),
            Ke(() => [a.maxHeight, a.height], () => {
                    a.native || xt(() => {
                            var $;
                            F(),
                            v.value && (($ = C.value) == null || $.handleScroll(v.value))
                        }
                    )
                }
            ),
            Xt(Zp, ys({
                scrollbarElement: y,
                wrapElement: v
            })),
            Gf(() => {
                    v.value && (v.value.scrollTop = p,
                        v.value.scrollLeft = g)
                }
            ),
            $t(() => {
                    a.native || xt(() => {
                            F()
                        }
                    )
                }
            ),
            dr(() => F()),
            t({
                wrapRef: v,
                update: F,
                scrollTo: P,
                setScrollTop: M,
                setScrollLeft: O,
                handleScroll: R
            }),
            ($, V) => (Z(),
                ye("div", {
                    ref_key: "scrollbarRef",
                    ref: y,
                    class: he(D(o).b())
                }, [U("div", {
                    ref_key: "wrapRef",
                    ref: v,
                    class: he(D(I)),
                    style: kt(D(T)),
                    tabindex: $.tabindex,
                    onScroll: R
                }, [(Z(),
                    Te(Vt($.tag), {
                        id: $.id,
                        ref_key: "resizeRef",
                        ref: w,
                        class: he(D(A)),
                        style: kt($.viewStyle),
                        role: $.role,
                        "aria-label": $.ariaLabel,
                        "aria-orientation": $.ariaOrientation
                    }, {
                        default: se(() => [De($.$slots, "default")]),
                        _: 3
                    }, 8, ["id", "class", "style", "role", "aria-label", "aria-orientation"]))], 46, ["tabindex"]), $.native ? ke("v-if", !0) : (Z(),
                    Te($8, {
                        key: 0,
                        ref_key: "barRef",
                        ref: C,
                        always: $.always,
                        "min-size": $.minSize
                    }, null, 8, ["always", "min-size"]))], 2))
    }
});
var U8 = ot(W8, [["__file", "scrollbar.vue"]]);
const Jp = Zt(U8)
    , Qp = Symbol("popper")
    , Hw = Symbol("popperContent")
    , Vw = ["dialog", "grid", "group", "listbox", "menu", "navigation", "tooltip", "tree"]
    , zw = gt({
    role: {
        type: String,
        values: Vw,
        default: "tooltip"
    }
})
    , Y8 = Ce({
    name: "ElPopper",
    inheritAttrs: !1
})
    , X8 = Ce({
    ...Y8,
    props: zw,
    setup(e, {expose: t}) {
        const s = e
            , a = Se()
            , o = Se()
            , l = Se()
            , u = Se()
            , p = re(() => s.role)
            , g = {
            triggerRef: a,
            popperInstanceRef: o,
            contentRef: l,
            referenceRef: u,
            role: p
        };
        return t(g),
            Xt(Qp, g),
            (y, v) => De(y.$slots, "default")
    }
});
var j8 = ot(X8, [["__file", "popper.vue"]]);
const Ww = gt({
    arrowOffset: {
        type: Number,
        default: 5
    }
})
    , G8 = Ce({
    name: "ElPopperArrow",
    inheritAttrs: !1
})
    , q8 = Ce({
    ...G8,
    props: Ww,
    setup(e, {expose: t}) {
        const s = e
            , a = rt("popper")
            , {arrowOffset: o, arrowRef: l, arrowStyle: u} = st(Hw, void 0);
        return Ke(() => s.arrowOffset, p => {
                o.value = p
            }
        ),
            us(() => {
                    l.value = void 0
                }
            ),
            t({
                arrowRef: l
            }),
            (p, g) => (Z(),
                ye("span", {
                    ref_key: "arrowRef",
                    ref: l,
                    class: he(D(a).e("arrow")),
                    style: kt(D(u)),
                    "data-popper-arrow": ""
                }, null, 6))
    }
});
var K8 = ot(q8, [["__file", "arrow.vue"]]);
const Uw = gt({
        virtualRef: {
            type: Ye(Object)
        },
        virtualTriggering: Boolean,
        onMouseenter: {
            type: Ye(Function)
        },
        onMouseleave: {
            type: Ye(Function)
        },
        onClick: {
            type: Ye(Function)
        },
        onKeydown: {
            type: Ye(Function)
        },
        onFocus: {
            type: Ye(Function)
        },
        onBlur: {
            type: Ye(Function)
        },
        onContextmenu: {
            type: Ye(Function)
        },
        id: String,
        open: Boolean
    })
    , Yw = Symbol("elForwardRef")
    , Z8 = e => {
        Xt(Yw, {
            setForwardRef: s => {
                e.value = s
            }
        })
    }
    , J8 = e => ({
        mounted(t) {
            e(t)
        },
        updated(t) {
            e(t)
        },
        unmounted() {
            e(null)
        }
    })
    ,
    Q8 = 'a[href],button:not([disabled]),button:not([hidden]),:not([tabindex="-1"]),input:not([disabled]),input:not([type="hidden"]),select:not([disabled]),textarea:not([disabled])'
    , e5 = e => getComputedStyle(e).position === "fixed" ? !1 : e.offsetParent !== null
    , kb = e => Array.from(e.querySelectorAll(Q8)).filter(t => Au(t) && e5(t))
    , Au = e => {
        if (e.tabIndex > 0 || e.tabIndex === 0 && e.getAttribute("tabIndex") !== null)
            return !0;
        if (e.tabIndex < 0 || e.hasAttribute("disabled") || e.getAttribute("aria-disabled") === "true")
            return !1;
        switch (e.nodeName) {
            case "A":
                return !!e.href && e.rel !== "ignore";
            case "INPUT":
                return !(e.type === "hidden" || e.type === "file");
            case "BUTTON":
            case "SELECT":
            case "TEXTAREA":
                return !0;
            default:
                return !1
        }
    }
    , Gc = function (e, t, ...s) {
        let a;
        t.includes("mouse") || t.includes("click") ? a = "MouseEvents" : t.includes("key") ? a = "KeyboardEvent" : a = "HTMLEvents";
        const o = document.createEvent(a);
        return o.initEvent(t, ...s),
            e.dispatchEvent(o),
            e
    }
    , t5 = "ElOnlyChild"
    , Xw = Ce({
        name: t5,
        setup(e, {slots: t, attrs: s}) {
            var a;
            const o = st(Yw)
                , l = J8((a = o == null ? void 0 : o.setForwardRef) != null ? a : Ht);
            return () => {
                var u;
                const p = (u = t.default) == null ? void 0 : u.call(t, s);
                if (!p || p.length > 1)
                    return null;
                const g = jw(p);
                return g ? _t(ti(g, s), [[l]]) : null
            }
        }
    });

function jw(e) {
    if (!e)
        return null;
    const t = e;
    for (const s of t) {
        if (At(s))
            switch (s.type) {
                case ws:
                    continue;
                case Kn:
                case "svg":
                    return Cb(s);
                case Ct:
                    return jw(s.children);
                default:
                    return s
            }
        return Cb(s)
    }
    return null
}

function Cb(e) {
    const t = rt("only-child");
    return ae("span", {
        class: t.e("content")
    }, [e])
}

const s5 = Ce({
    name: "ElPopperTrigger",
    inheritAttrs: !1
})
    , n5 = Ce({
    ...s5,
    props: Uw,
    setup(e, {expose: t}) {
        const s = e
            , {role: a, triggerRef: o} = st(Qp, void 0);
        Z8(o);
        const l = re(() => p.value ? s.id : void 0)
            , u = re(() => {
                if (a && a.value === "tooltip")
                    return s.open && s.id ? s.id : void 0
            }
        )
            , p = re(() => {
                if (a && a.value !== "tooltip")
                    return a.value
            }
        )
            , g = re(() => p.value ? `${s.open}` : void 0);
        let y;
        const v = ["onMouseenter", "onMouseleave", "onClick", "onKeydown", "onFocus", "onBlur", "onContextmenu"];
        return $t(() => {
                Ke(() => s.virtualRef, w => {
                        w && (o.value = Xi(w))
                    }
                    , {
                        immediate: !0
                    }),
                    Ke(o, (w, C) => {
                            y == null || y(),
                                y = void 0,
                            Qn(w) && (v.forEach(T => {
                                    var I;
                                    const A = s[T];
                                    A && (w.addEventListener(T.slice(2).toLowerCase(), A),
                                    (I = C == null ? void 0 : C.removeEventListener) == null || I.call(C, T.slice(2).toLowerCase(), A))
                                }
                            ),
                            Au(w) && (y = Ke([l, u, p, g], T => {
                                    ["aria-controls", "aria-describedby", "aria-haspopup", "aria-expanded"].forEach((I, A) => {
                                            qi(T[A]) ? w.removeAttribute(I) : w.setAttribute(I, T[A])
                                        }
                                    )
                                }
                                , {
                                    immediate: !0
                                }))),
                            Qn(C) && Au(C) && ["aria-controls", "aria-describedby", "aria-haspopup", "aria-expanded"].forEach(T => C.removeAttribute(T))
                        }
                        , {
                            immediate: !0
                        })
            }
        ),
            us(() => {
                    if (y == null || y(),
                        y = void 0,
                    o.value && Qn(o.value)) {
                        const w = o.value;
                        v.forEach(C => {
                                const T = s[C];
                                T && w.removeEventListener(C.slice(2).toLowerCase(), T)
                            }
                        ),
                            o.value = void 0
                    }
                }
            ),
            t({
                triggerRef: o
            }),
            (w, C) => w.virtualTriggering ? ke("v-if", !0) : (Z(),
                Te(D(Xw), vs({
                    key: 0
                }, w.$attrs, {
                    "aria-controls": D(l),
                    "aria-describedby": D(u),
                    "aria-expanded": D(g),
                    "aria-haspopup": D(p)
                }), {
                    default: se(() => [De(w.$slots, "default")]),
                    _: 3
                }, 16, ["aria-controls", "aria-describedby", "aria-expanded", "aria-haspopup"]))
    }
});
var i5 = ot(n5, [["__file", "trigger.vue"]]);
const ih = "focus-trap.focus-after-trapped"
    , ah = "focus-trap.focus-after-released"
    , a5 = "focus-trap.focusout-prevented"
    , Ab = {
    cancelable: !0,
    bubbles: !1
}
    , r5 = {
    cancelable: !0,
    bubbles: !1
}
    , Eb = "focusAfterTrapped"
    , Tb = "focusAfterReleased"
    , eg = Symbol("elFocusTrap")
    , tg = Se()
    , gd = Se(0)
    , sg = Se(0);
let Pc = 0;
const Gw = e => {
        const t = []
            , s = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, {
            acceptNode: a => {
                const o = a.tagName === "INPUT" && a.type === "hidden";
                return a.disabled || a.hidden || o ? NodeFilter.FILTER_SKIP : a.tabIndex >= 0 || a === document.activeElement ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP
            }
        });
        for (; s.nextNode();)
            t.push(s.currentNode);
        return t
    }
    , Ib = (e, t) => {
        for (const s of e)
            if (!o5(s, t))
                return s
    }
    , o5 = (e, t) => {
        if (getComputedStyle(e).visibility === "hidden")
            return !0;
        for (; e;) {
            if (t && e === t)
                return !1;
            if (getComputedStyle(e).display === "none")
                return !0;
            e = e.parentElement
        }
        return !1
    }
    , l5 = e => {
        const t = Gw(e)
            , s = Ib(t, e)
            , a = Ib(t.reverse(), e);
        return [s, a]
    }
    , c5 = e => e instanceof HTMLInputElement && "select" in e
    , Hi = (e, t) => {
        if (e && e.focus) {
            const s = document.activeElement;
            let a = !1;
            Qn(e) && !Au(e) && !e.getAttribute("tabindex") && (e.setAttribute("tabindex", "-1"),
                a = !0),
                e.focus({
                    preventScroll: !0
                }),
                sg.value = window.performance.now(),
            e !== s && c5(e) && t && e.select(),
            Qn(e) && a && e.removeAttribute("tabindex")
        }
    }
;

function Pb(e, t) {
    const s = [...e]
        , a = e.indexOf(t);
    return a !== -1 && s.splice(a, 1),
        s
}

const u5 = () => {
    let e = [];
    return {
        push: a => {
            const o = e[0];
            o && a !== o && o.pause(),
                e = Pb(e, a),
                e.unshift(a)
        }
        ,
        remove: a => {
            var o, l;
            e = Pb(e, a),
            (l = (o = e[0]) == null ? void 0 : o.resume) == null || l.call(o)
        }
    }
}
    , d5 = (e, t = !1) => {
    const s = document.activeElement;
    for (const a of e)
        if (Hi(a, t),
        document.activeElement !== s)
            return
}
    , Lb = u5()
    , h5 = () => gd.value > sg.value
    , Lc = () => {
    tg.value = "pointer",
        gd.value = window.performance.now()
}
    , Mb = () => {
    tg.value = "keyboard",
        gd.value = window.performance.now()
}
    , f5 = () => ($t(() => {
        Pc === 0 && (document.addEventListener("mousedown", Lc),
            document.addEventListener("touchstart", Lc),
            document.addEventListener("keydown", Mb)),
            Pc++
    }
),
    us(() => {
            Pc--,
            Pc <= 0 && (document.removeEventListener("mousedown", Lc),
                document.removeEventListener("touchstart", Lc),
                document.removeEventListener("keydown", Mb))
        }
    ),
    {
        focusReason: tg,
        lastUserFocusTimestamp: gd,
        lastAutomatedFocusTimestamp: sg
    })
    , Mc = e => new CustomEvent(a5, {
    ...r5,
    detail: e
})
    , wt = {
    tab: "Tab",
    enter: "Enter",
    space: "Space",
    left: "ArrowLeft",
    up: "ArrowUp",
    right: "ArrowRight",
    down: "ArrowDown",
    esc: "Escape",
    delete: "Delete",
    backspace: "Backspace",
    numpadEnter: "NumpadEnter",
    pageUp: "PageUp",
    pageDown: "PageDown",
    home: "Home",
    end: "End"
};
let Or = [];
const Ob = e => {
    e.code === wt.esc && Or.forEach(t => t(e))
}
    , p5 = e => {
    $t(() => {
            Or.length === 0 && document.addEventListener("keydown", Ob),
            cs && Or.push(e)
        }
    ),
        us(() => {
                Or = Or.filter(t => t !== e),
                Or.length === 0 && cs && document.removeEventListener("keydown", Ob)
            }
        )
}
    , g5 = Ce({
    name: "ElFocusTrap",
    inheritAttrs: !1,
    props: {
        loop: Boolean,
        trapped: Boolean,
        focusTrapEl: Object,
        focusStartEl: {
            type: [Object, String],
            default: "first"
        }
    },
    emits: [Eb, Tb, "focusin", "focusout", "focusout-prevented", "release-requested"],
    setup(e, {emit: t}) {
        const s = Se();
        let a, o;
        const {focusReason: l} = f5();
        p5(I => {
                e.trapped && !u.paused && t("release-requested", I)
            }
        );
        const u = {
                paused: !1,
                pause() {
                    this.paused = !0
                },
                resume() {
                    this.paused = !1
                }
            }
            , p = I => {
                if (!e.loop && !e.trapped || u.paused)
                    return;
                const {code: A, altKey: R, ctrlKey: P, metaKey: M, currentTarget: O, shiftKey: F} = I
                    , {loop: $} = e
                    , V = A === wt.tab && !R && !P && !M
                    , G = document.activeElement;
                if (V && G) {
                    const ie = O
                        , [te, ne] = l5(ie);
                    if (te && ne) {
                        if (!F && G === ne) {
                            const oe = Mc({
                                focusReason: l.value
                            });
                            t("focusout-prevented", oe),
                            oe.defaultPrevented || (I.preventDefault(),
                            $ && Hi(te, !0))
                        } else if (F && [te, ie].includes(G)) {
                            const oe = Mc({
                                focusReason: l.value
                            });
                            t("focusout-prevented", oe),
                            oe.defaultPrevented || (I.preventDefault(),
                            $ && Hi(ne, !0))
                        }
                    } else if (G === ie) {
                        const oe = Mc({
                            focusReason: l.value
                        });
                        t("focusout-prevented", oe),
                        oe.defaultPrevented || I.preventDefault()
                    }
                }
            }
        ;
        Xt(eg, {
            focusTrapRef: s,
            onKeydown: p
        }),
            Ke(() => e.focusTrapEl, I => {
                    I && (s.value = I)
                }
                , {
                    immediate: !0
                }),
            Ke([s], ([I], [A]) => {
                    I && (I.addEventListener("keydown", p),
                        I.addEventListener("focusin", v),
                        I.addEventListener("focusout", w)),
                    A && (A.removeEventListener("keydown", p),
                        A.removeEventListener("focusin", v),
                        A.removeEventListener("focusout", w))
                }
            );
        const g = I => {
                t(Eb, I)
            }
            , y = I => t(Tb, I)
            , v = I => {
                const A = D(s);
                if (!A)
                    return;
                const R = I.target
                    , P = I.relatedTarget
                    , M = R && A.contains(R);
                e.trapped || P && A.contains(P) || (a = P),
                M && t("focusin", I),
                !u.paused && e.trapped && (M ? o = R : Hi(o, !0))
            }
            , w = I => {
                const A = D(s);
                if (!(u.paused || !A))
                    if (e.trapped) {
                        const R = I.relatedTarget;
                        !qi(R) && !A.contains(R) && setTimeout(() => {
                                if (!u.paused && e.trapped) {
                                    const P = Mc({
                                        focusReason: l.value
                                    });
                                    t("focusout-prevented", P),
                                    P.defaultPrevented || Hi(o, !0)
                                }
                            }
                            , 0)
                    } else {
                        const R = I.target;
                        R && A.contains(R) || t("focusout", I)
                    }
            }
        ;

        async function C() {
            await xt();
            const I = D(s);
            if (I) {
                Lb.push(u);
                const A = I.contains(document.activeElement) ? a : document.activeElement;
                if (a = A,
                    !I.contains(A)) {
                    const P = new Event(ih, Ab);
                    I.addEventListener(ih, g),
                        I.dispatchEvent(P),
                    P.defaultPrevented || xt(() => {
                            let M = e.focusStartEl;
                            pt(M) || (Hi(M),
                            document.activeElement !== M && (M = "first")),
                            M === "first" && d5(Gw(I), !0),
                            (document.activeElement === A || M === "container") && Hi(I)
                        }
                    )
                }
            }
        }

        function T() {
            const I = D(s);
            if (I) {
                I.removeEventListener(ih, g);
                const A = new CustomEvent(ah, {
                    ...Ab,
                    detail: {
                        focusReason: l.value
                    }
                });
                I.addEventListener(ah, y),
                    I.dispatchEvent(A),
                !A.defaultPrevented && (l.value == "keyboard" || !h5() || I.contains(document.activeElement)) && Hi(a ?? document.body),
                    I.removeEventListener(ah, y),
                    Lb.remove(u)
            }
        }

        return $t(() => {
                e.trapped && C(),
                    Ke(() => e.trapped, I => {
                            I ? C() : T()
                        }
                    )
            }
        ),
            us(() => {
                    e.trapped && T(),
                    s.value && (s.value.removeEventListener("keydown", p),
                        s.value.removeEventListener("focusin", v),
                        s.value.removeEventListener("focusout", w),
                        s.value = void 0)
                }
            ),
            {
                onKeydown: p
            }
    }
});

function m5(e, t, s, a, o, l) {
    return De(e.$slots, "default", {
        handleKeydown: e.onKeydown
    })
}

var ng = ot(g5, [["render", m5], ["__file", "focus-trap.vue"]])
    , un = "top"
    , Dn = "bottom"
    , Fn = "right"
    , dn = "left"
    , ig = "auto"
    , oc = [un, Dn, Fn, dn]
    , ho = "start"
    , Hl = "end"
    , v5 = "clippingParents"
    , qw = "viewport"
    , Uo = "popper"
    , b5 = "reference"
    , Rb = oc.reduce(function (e, t) {
    return e.concat([t + "-" + ho, t + "-" + Hl])
}, [])
    , md = [].concat(oc, [ig]).reduce(function (e, t) {
    return e.concat([t, t + "-" + ho, t + "-" + Hl])
}, [])
    , y5 = "beforeRead"
    , x5 = "read"
    , w5 = "afterRead"
    , S5 = "beforeMain"
    , _5 = "main"
    , k5 = "afterMain"
    , C5 = "beforeWrite"
    , A5 = "write"
    , E5 = "afterWrite"
    , T5 = [y5, x5, w5, S5, _5, k5, C5, A5, E5];

function Si(e) {
    return e ? (e.nodeName || "").toLowerCase() : null
}

function li(e) {
    if (e == null)
        return window;
    if (e.toString() !== "[object Window]") {
        var t = e.ownerDocument;
        return t && t.defaultView || window
    }
    return e
}

function fo(e) {
    var t = li(e).Element;
    return e instanceof t || e instanceof Element
}

function Ln(e) {
    var t = li(e).HTMLElement;
    return e instanceof t || e instanceof HTMLElement
}

function ag(e) {
    if (typeof ShadowRoot > "u")
        return !1;
    var t = li(e).ShadowRoot;
    return e instanceof t || e instanceof ShadowRoot
}

function I5(e) {
    var t = e.state;
    Object.keys(t.elements).forEach(function (s) {
        var a = t.styles[s] || {}
            , o = t.attributes[s] || {}
            , l = t.elements[s];
        !Ln(l) || !Si(l) || (Object.assign(l.style, a),
            Object.keys(o).forEach(function (u) {
                var p = o[u];
                p === !1 ? l.removeAttribute(u) : l.setAttribute(u, p === !0 ? "" : p)
            }))
    })
}

function P5(e) {
    var t = e.state
        , s = {
        popper: {
            position: t.options.strategy,
            left: "0",
            top: "0",
            margin: "0"
        },
        arrow: {
            position: "absolute"
        },
        reference: {}
    };
    return Object.assign(t.elements.popper.style, s.popper),
        t.styles = s,
    t.elements.arrow && Object.assign(t.elements.arrow.style, s.arrow),
        function () {
            Object.keys(t.elements).forEach(function (a) {
                var o = t.elements[a]
                    , l = t.attributes[a] || {}
                    , u = Object.keys(t.styles.hasOwnProperty(a) ? t.styles[a] : s[a])
                    , p = u.reduce(function (g, y) {
                    return g[y] = "",
                        g
                }, {});
                !Ln(o) || !Si(o) || (Object.assign(o.style, p),
                    Object.keys(l).forEach(function (g) {
                        o.removeAttribute(g)
                    }))
            })
        }
}

var Kw = {
    name: "applyStyles",
    enabled: !0,
    phase: "write",
    fn: I5,
    effect: P5,
    requires: ["computeStyles"]
};

function xi(e) {
    return e.split("-")[0]
}

var Ja = Math.max
    , Eu = Math.min
    , po = Math.round;

function go(e, t) {
    t === void 0 && (t = !1);
    var s = e.getBoundingClientRect()
        , a = 1
        , o = 1;
    if (Ln(e) && t) {
        var l = e.offsetHeight
            , u = e.offsetWidth;
        u > 0 && (a = po(s.width) / u || 1),
        l > 0 && (o = po(s.height) / l || 1)
    }
    return {
        width: s.width / a,
        height: s.height / o,
        top: s.top / o,
        right: s.right / a,
        bottom: s.bottom / o,
        left: s.left / a,
        x: s.left / a,
        y: s.top / o
    }
}

function rg(e) {
    var t = go(e)
        , s = e.offsetWidth
        , a = e.offsetHeight;
    return Math.abs(t.width - s) <= 1 && (s = t.width),
    Math.abs(t.height - a) <= 1 && (a = t.height),
        {
            x: e.offsetLeft,
            y: e.offsetTop,
            width: s,
            height: a
        }
}

function Zw(e, t) {
    var s = t.getRootNode && t.getRootNode();
    if (e.contains(t))
        return !0;
    if (s && ag(s)) {
        var a = t;
        do {
            if (a && e.isSameNode(a))
                return !0;
            a = a.parentNode || a.host
        } while (a)
    }
    return !1
}

function Ki(e) {
    return li(e).getComputedStyle(e)
}

function L5(e) {
    return ["table", "td", "th"].indexOf(Si(e)) >= 0
}

function Da(e) {
    return ((fo(e) ? e.ownerDocument : e.document) || window.document).documentElement
}

function vd(e) {
    return Si(e) === "html" ? e : e.assignedSlot || e.parentNode || (ag(e) ? e.host : null) || Da(e)
}

function Nb(e) {
    return !Ln(e) || Ki(e).position === "fixed" ? null : e.offsetParent
}

function M5(e) {
    var t = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1
        , s = navigator.userAgent.indexOf("Trident") !== -1;
    if (s && Ln(e)) {
        var a = Ki(e);
        if (a.position === "fixed")
            return null
    }
    var o = vd(e);
    for (ag(o) && (o = o.host); Ln(o) && ["html", "body"].indexOf(Si(o)) < 0;) {
        var l = Ki(o);
        if (l.transform !== "none" || l.perspective !== "none" || l.contain === "paint" || ["transform", "perspective"].indexOf(l.willChange) !== -1 || t && l.willChange === "filter" || t && l.filter && l.filter !== "none")
            return o;
        o = o.parentNode
    }
    return null
}

function lc(e) {
    for (var t = li(e), s = Nb(e); s && L5(s) && Ki(s).position === "static";)
        s = Nb(s);
    return s && (Si(s) === "html" || Si(s) === "body" && Ki(s).position === "static") ? t : s || M5(e) || t
}

function og(e) {
    return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y"
}

function rl(e, t, s) {
    return Ja(e, Eu(t, s))
}

function O5(e, t, s) {
    var a = rl(e, t, s);
    return a > s ? s : a
}

function Jw() {
    return {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
    }
}

function Qw(e) {
    return Object.assign({}, Jw(), e)
}

function eS(e, t) {
    return t.reduce(function (s, a) {
        return s[a] = e,
            s
    }, {})
}

var R5 = function (e, t) {
    return e = typeof e == "function" ? e(Object.assign({}, t.rects, {
        placement: t.placement
    })) : e,
        Qw(typeof e != "number" ? e : eS(e, oc))
};

function N5(e) {
    var t, s = e.state, a = e.name, o = e.options, l = s.elements.arrow, u = s.modifiersData.popperOffsets,
        p = xi(s.placement), g = og(p), y = [dn, Fn].indexOf(p) >= 0, v = y ? "height" : "width";
    if (!(!l || !u)) {
        var w = R5(o.padding, s)
            , C = rg(l)
            , T = g === "y" ? un : dn
            , I = g === "y" ? Dn : Fn
            , A = s.rects.reference[v] + s.rects.reference[g] - u[g] - s.rects.popper[v]
            , R = u[g] - s.rects.reference[g]
            , P = lc(l)
            , M = P ? g === "y" ? P.clientHeight || 0 : P.clientWidth || 0 : 0
            , O = A / 2 - R / 2
            , F = w[T]
            , $ = M - C[v] - w[I]
            , V = M / 2 - C[v] / 2 + O
            , G = rl(F, V, $)
            , ie = g;
        s.modifiersData[a] = (t = {},
            t[ie] = G,
            t.centerOffset = G - V,
            t)
    }
}

function D5(e) {
    var t = e.state
        , s = e.options
        , a = s.element
        , o = a === void 0 ? "[data-popper-arrow]" : a;
    o != null && (typeof o == "string" && (o = t.elements.popper.querySelector(o),
        !o) || !Zw(t.elements.popper, o) || (t.elements.arrow = o))
}

var F5 = {
    name: "arrow",
    enabled: !0,
    phase: "main",
    fn: N5,
    effect: D5,
    requires: ["popperOffsets"],
    requiresIfExists: ["preventOverflow"]
};

function mo(e) {
    return e.split("-")[1]
}

var $5 = {
    top: "auto",
    right: "auto",
    bottom: "auto",
    left: "auto"
};

function B5(e) {
    var t = e.x
        , s = e.y
        , a = window
        , o = a.devicePixelRatio || 1;
    return {
        x: po(t * o) / o || 0,
        y: po(s * o) / o || 0
    }
}

function Db(e) {
    var t, s = e.popper, a = e.popperRect, o = e.placement, l = e.variation, u = e.offsets, p = e.position,
        g = e.gpuAcceleration, y = e.adaptive, v = e.roundOffsets, w = e.isFixed, C = u.x, T = C === void 0 ? 0 : C,
        I = u.y, A = I === void 0 ? 0 : I, R = typeof v == "function" ? v({
            x: T,
            y: A
        }) : {
            x: T,
            y: A
        };
    T = R.x,
        A = R.y;
    var P = u.hasOwnProperty("x")
        , M = u.hasOwnProperty("y")
        , O = dn
        , F = un
        , $ = window;
    if (y) {
        var V = lc(s)
            , G = "clientHeight"
            , ie = "clientWidth";
        if (V === li(s) && (V = Da(s),
        Ki(V).position !== "static" && p === "absolute" && (G = "scrollHeight",
            ie = "scrollWidth")),
            V = V,
        o === un || (o === dn || o === Fn) && l === Hl) {
            F = Dn;
            var te = w && V === $ && $.visualViewport ? $.visualViewport.height : V[G];
            A -= te - a.height,
                A *= g ? 1 : -1
        }
        if (o === dn || (o === un || o === Dn) && l === Hl) {
            O = Fn;
            var ne = w && V === $ && $.visualViewport ? $.visualViewport.width : V[ie];
            T -= ne - a.width,
                T *= g ? 1 : -1
        }
    }
    var le = Object.assign({
        position: p
    }, y && $5)
        , oe = v === !0 ? B5({
        x: T,
        y: A
    }) : {
        x: T,
        y: A
    };
    if (T = oe.x,
        A = oe.y,
        g) {
        var ve;
        return Object.assign({}, le, (ve = {},
            ve[F] = M ? "0" : "",
            ve[O] = P ? "0" : "",
            ve.transform = ($.devicePixelRatio || 1) <= 1 ? "translate(" + T + "px, " + A + "px)" : "translate3d(" + T + "px, " + A + "px, 0)",
            ve))
    }
    return Object.assign({}, le, (t = {},
        t[F] = M ? A + "px" : "",
        t[O] = P ? T + "px" : "",
        t.transform = "",
        t))
}

function H5(e) {
    var t = e.state
        , s = e.options
        , a = s.gpuAcceleration
        , o = a === void 0 ? !0 : a
        , l = s.adaptive
        , u = l === void 0 ? !0 : l
        , p = s.roundOffsets
        , g = p === void 0 ? !0 : p
        , y = {
        placement: xi(t.placement),
        variation: mo(t.placement),
        popper: t.elements.popper,
        popperRect: t.rects.popper,
        gpuAcceleration: o,
        isFixed: t.options.strategy === "fixed"
    };
    t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, Db(Object.assign({}, y, {
        offsets: t.modifiersData.popperOffsets,
        position: t.options.strategy,
        adaptive: u,
        roundOffsets: g
    })))),
    t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, Db(Object.assign({}, y, {
        offsets: t.modifiersData.arrow,
        position: "absolute",
        adaptive: !1,
        roundOffsets: g
    })))),
        t.attributes.popper = Object.assign({}, t.attributes.popper, {
            "data-popper-placement": t.placement
        })
}

var tS = {
    name: "computeStyles",
    enabled: !0,
    phase: "beforeWrite",
    fn: H5,
    data: {}
}
    , Oc = {
    passive: !0
};

function V5(e) {
    var t = e.state
        , s = e.instance
        , a = e.options
        , o = a.scroll
        , l = o === void 0 ? !0 : o
        , u = a.resize
        , p = u === void 0 ? !0 : u
        , g = li(t.elements.popper)
        , y = [].concat(t.scrollParents.reference, t.scrollParents.popper);
    return l && y.forEach(function (v) {
        v.addEventListener("scroll", s.update, Oc)
    }),
    p && g.addEventListener("resize", s.update, Oc),
        function () {
            l && y.forEach(function (v) {
                v.removeEventListener("scroll", s.update, Oc)
            }),
            p && g.removeEventListener("resize", s.update, Oc)
        }
}

var sS = {
    name: "eventListeners",
    enabled: !0,
    phase: "write",
    fn: function () {
    },
    effect: V5,
    data: {}
}
    , z5 = {
    left: "right",
    right: "left",
    bottom: "top",
    top: "bottom"
};

function qc(e) {
    return e.replace(/left|right|bottom|top/g, function (t) {
        return z5[t]
    })
}

var W5 = {
    start: "end",
    end: "start"
};

function Fb(e) {
    return e.replace(/start|end/g, function (t) {
        return W5[t]
    })
}

function lg(e) {
    var t = li(e)
        , s = t.pageXOffset
        , a = t.pageYOffset;
    return {
        scrollLeft: s,
        scrollTop: a
    }
}

function cg(e) {
    return go(Da(e)).left + lg(e).scrollLeft
}

function U5(e) {
    var t = li(e)
        , s = Da(e)
        , a = t.visualViewport
        , o = s.clientWidth
        , l = s.clientHeight
        , u = 0
        , p = 0;
    return a && (o = a.width,
        l = a.height,
    /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (u = a.offsetLeft,
        p = a.offsetTop)),
        {
            width: o,
            height: l,
            x: u + cg(e),
            y: p
        }
}

function Y5(e) {
    var t, s = Da(e), a = lg(e), o = (t = e.ownerDocument) == null ? void 0 : t.body,
        l = Ja(s.scrollWidth, s.clientWidth, o ? o.scrollWidth : 0, o ? o.clientWidth : 0),
        u = Ja(s.scrollHeight, s.clientHeight, o ? o.scrollHeight : 0, o ? o.clientHeight : 0),
        p = -a.scrollLeft + cg(e), g = -a.scrollTop;
    return Ki(o || s).direction === "rtl" && (p += Ja(s.clientWidth, o ? o.clientWidth : 0) - l),
        {
            width: l,
            height: u,
            x: p,
            y: g
        }
}

function ug(e) {
    var t = Ki(e)
        , s = t.overflow
        , a = t.overflowX
        , o = t.overflowY;
    return /auto|scroll|overlay|hidden/.test(s + o + a)
}

function nS(e) {
    return ["html", "body", "#document"].indexOf(Si(e)) >= 0 ? e.ownerDocument.body : Ln(e) && ug(e) ? e : nS(vd(e))
}

function ol(e, t) {
    var s;
    t === void 0 && (t = []);
    var a = nS(e)
        , o = a === ((s = e.ownerDocument) == null ? void 0 : s.body)
        , l = li(a)
        , u = o ? [l].concat(l.visualViewport || [], ug(a) ? a : []) : a
        , p = t.concat(u);
    return o ? p : p.concat(ol(vd(u)))
}

function vf(e) {
    return Object.assign({}, e, {
        left: e.x,
        top: e.y,
        right: e.x + e.width,
        bottom: e.y + e.height
    })
}

function X5(e) {
    var t = go(e);
    return t.top = t.top + e.clientTop,
        t.left = t.left + e.clientLeft,
        t.bottom = t.top + e.clientHeight,
        t.right = t.left + e.clientWidth,
        t.width = e.clientWidth,
        t.height = e.clientHeight,
        t.x = t.left,
        t.y = t.top,
        t
}

function $b(e, t) {
    return t === qw ? vf(U5(e)) : fo(t) ? X5(t) : vf(Y5(Da(e)))
}

function j5(e) {
    var t = ol(vd(e))
        , s = ["absolute", "fixed"].indexOf(Ki(e).position) >= 0
        , a = s && Ln(e) ? lc(e) : e;
    return fo(a) ? t.filter(function (o) {
        return fo(o) && Zw(o, a) && Si(o) !== "body"
    }) : []
}

function G5(e, t, s) {
    var a = t === "clippingParents" ? j5(e) : [].concat(t)
        , o = [].concat(a, [s])
        , l = o[0]
        , u = o.reduce(function (p, g) {
        var y = $b(e, g);
        return p.top = Ja(y.top, p.top),
            p.right = Eu(y.right, p.right),
            p.bottom = Eu(y.bottom, p.bottom),
            p.left = Ja(y.left, p.left),
            p
    }, $b(e, l));
    return u.width = u.right - u.left,
        u.height = u.bottom - u.top,
        u.x = u.left,
        u.y = u.top,
        u
}

function iS(e) {
    var t = e.reference, s = e.element, a = e.placement, o = a ? xi(a) : null, l = a ? mo(a) : null,
        u = t.x + t.width / 2 - s.width / 2, p = t.y + t.height / 2 - s.height / 2, g;
    switch (o) {
        case un:
            g = {
                x: u,
                y: t.y - s.height
            };
            break;
        case Dn:
            g = {
                x: u,
                y: t.y + t.height
            };
            break;
        case Fn:
            g = {
                x: t.x + t.width,
                y: p
            };
            break;
        case dn:
            g = {
                x: t.x - s.width,
                y: p
            };
            break;
        default:
            g = {
                x: t.x,
                y: t.y
            }
    }
    var y = o ? og(o) : null;
    if (y != null) {
        var v = y === "y" ? "height" : "width";
        switch (l) {
            case ho:
                g[y] = g[y] - (t[v] / 2 - s[v] / 2);
                break;
            case Hl:
                g[y] = g[y] + (t[v] / 2 - s[v] / 2);
                break
        }
    }
    return g
}

function Vl(e, t) {
    t === void 0 && (t = {});
    var s = t
        , a = s.placement
        , o = a === void 0 ? e.placement : a
        , l = s.boundary
        , u = l === void 0 ? v5 : l
        , p = s.rootBoundary
        , g = p === void 0 ? qw : p
        , y = s.elementContext
        , v = y === void 0 ? Uo : y
        , w = s.altBoundary
        , C = w === void 0 ? !1 : w
        , T = s.padding
        , I = T === void 0 ? 0 : T
        , A = Qw(typeof I != "number" ? I : eS(I, oc))
        , R = v === Uo ? b5 : Uo
        , P = e.rects.popper
        , M = e.elements[C ? R : v]
        , O = G5(fo(M) ? M : M.contextElement || Da(e.elements.popper), u, g)
        , F = go(e.elements.reference)
        , $ = iS({
        reference: F,
        element: P,
        strategy: "absolute",
        placement: o
    })
        , V = vf(Object.assign({}, P, $))
        , G = v === Uo ? V : F
        , ie = {
        top: O.top - G.top + A.top,
        bottom: G.bottom - O.bottom + A.bottom,
        left: O.left - G.left + A.left,
        right: G.right - O.right + A.right
    }
        , te = e.modifiersData.offset;
    if (v === Uo && te) {
        var ne = te[o];
        Object.keys(ie).forEach(function (le) {
            var oe = [Fn, Dn].indexOf(le) >= 0 ? 1 : -1
                , ve = [un, Dn].indexOf(le) >= 0 ? "y" : "x";
            ie[le] += ne[ve] * oe
        })
    }
    return ie
}

function q5(e, t) {
    t === void 0 && (t = {});
    var s = t
        , a = s.placement
        , o = s.boundary
        , l = s.rootBoundary
        , u = s.padding
        , p = s.flipVariations
        , g = s.allowedAutoPlacements
        , y = g === void 0 ? md : g
        , v = mo(a)
        , w = v ? p ? Rb : Rb.filter(function (I) {
        return mo(I) === v
    }) : oc
        , C = w.filter(function (I) {
        return y.indexOf(I) >= 0
    });
    C.length === 0 && (C = w);
    var T = C.reduce(function (I, A) {
        return I[A] = Vl(e, {
            placement: A,
            boundary: o,
            rootBoundary: l,
            padding: u
        })[xi(A)],
            I
    }, {});
    return Object.keys(T).sort(function (I, A) {
        return T[I] - T[A]
    })
}

function K5(e) {
    if (xi(e) === ig)
        return [];
    var t = qc(e);
    return [Fb(e), t, Fb(t)]
}

function Z5(e) {
    var t = e.state
        , s = e.options
        , a = e.name;
    if (!t.modifiersData[a]._skip) {
        for (var o = s.mainAxis, l = o === void 0 ? !0 : o, u = s.altAxis, p = u === void 0 ? !0 : u, g = s.fallbackPlacements, y = s.padding, v = s.boundary, w = s.rootBoundary, C = s.altBoundary, T = s.flipVariations, I = T === void 0 ? !0 : T, A = s.allowedAutoPlacements, R = t.options.placement, P = xi(R), M = P === R, O = g || (M || !I ? [qc(R)] : K5(R)), F = [R].concat(O).reduce(function (ft, mt) {
            return ft.concat(xi(mt) === ig ? q5(t, {
                placement: mt,
                boundary: v,
                rootBoundary: w,
                padding: y,
                flipVariations: I,
                allowedAutoPlacements: A
            }) : mt)
        }, []), $ = t.rects.reference, V = t.rects.popper, G = new Map, ie = !0, te = F[0], ne = 0; ne < F.length; ne++) {
            var le = F[ne]
                , oe = xi(le)
                , ve = mo(le) === ho
                , be = [un, Dn].indexOf(oe) >= 0
                , de = be ? "width" : "height"
                , J = Vl(t, {
                placement: le,
                boundary: v,
                rootBoundary: w,
                altBoundary: C,
                padding: y
            })
                , ue = be ? ve ? Fn : dn : ve ? Dn : un;
            $[de] > V[de] && (ue = qc(ue));
            var fe = qc(ue)
                , Me = [];
            if (l && Me.push(J[oe] <= 0),
            p && Me.push(J[ue] <= 0, J[fe] <= 0),
                Me.every(function (ft) {
                    return ft
                })) {
                te = le,
                    ie = !1;
                break
            }
            G.set(le, Me)
        }
        if (ie)
            for (var Xe = I ? 3 : 1, Be = function (ft) {
                var mt = F.find(function (bt) {
                    var Pe = G.get(bt);
                    if (Pe)
                        return Pe.slice(0, ft).every(function (Ae) {
                            return Ae
                        })
                });
                if (mt)
                    return te = mt,
                        "break"
            }, je = Xe; je > 0; je--) {
                var tt = Be(je);
                if (tt === "break")
                    break
            }
        t.placement !== te && (t.modifiersData[a]._skip = !0,
            t.placement = te,
            t.reset = !0)
    }
}

var J5 = {
    name: "flip",
    enabled: !0,
    phase: "main",
    fn: Z5,
    requiresIfExists: ["offset"],
    data: {
        _skip: !1
    }
};

function Bb(e, t, s) {
    return s === void 0 && (s = {
        x: 0,
        y: 0
    }),
        {
            top: e.top - t.height - s.y,
            right: e.right - t.width + s.x,
            bottom: e.bottom - t.height + s.y,
            left: e.left - t.width - s.x
        }
}

function Hb(e) {
    return [un, Fn, Dn, dn].some(function (t) {
        return e[t] >= 0
    })
}

function Q5(e) {
    var t = e.state
        , s = e.name
        , a = t.rects.reference
        , o = t.rects.popper
        , l = t.modifiersData.preventOverflow
        , u = Vl(t, {
        elementContext: "reference"
    })
        , p = Vl(t, {
        altBoundary: !0
    })
        , g = Bb(u, a)
        , y = Bb(p, o, l)
        , v = Hb(g)
        , w = Hb(y);
    t.modifiersData[s] = {
        referenceClippingOffsets: g,
        popperEscapeOffsets: y,
        isReferenceHidden: v,
        hasPopperEscaped: w
    },
        t.attributes.popper = Object.assign({}, t.attributes.popper, {
            "data-popper-reference-hidden": v,
            "data-popper-escaped": w
        })
}

var e6 = {
    name: "hide",
    enabled: !0,
    phase: "main",
    requiresIfExists: ["preventOverflow"],
    fn: Q5
};

function t6(e, t, s) {
    var a = xi(e)
        , o = [dn, un].indexOf(a) >= 0 ? -1 : 1
        , l = typeof s == "function" ? s(Object.assign({}, t, {
        placement: e
    })) : s
        , u = l[0]
        , p = l[1];
    return u = u || 0,
        p = (p || 0) * o,
        [dn, Fn].indexOf(a) >= 0 ? {
            x: p,
            y: u
        } : {
            x: u,
            y: p
        }
}

function s6(e) {
    var t = e.state
        , s = e.options
        , a = e.name
        , o = s.offset
        , l = o === void 0 ? [0, 0] : o
        , u = md.reduce(function (v, w) {
        return v[w] = t6(w, t.rects, l),
            v
    }, {})
        , p = u[t.placement]
        , g = p.x
        , y = p.y;
    t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += g,
        t.modifiersData.popperOffsets.y += y),
        t.modifiersData[a] = u
}

var n6 = {
    name: "offset",
    enabled: !0,
    phase: "main",
    requires: ["popperOffsets"],
    fn: s6
};

function i6(e) {
    var t = e.state
        , s = e.name;
    t.modifiersData[s] = iS({
        reference: t.rects.reference,
        element: t.rects.popper,
        strategy: "absolute",
        placement: t.placement
    })
}

var aS = {
    name: "popperOffsets",
    enabled: !0,
    phase: "read",
    fn: i6,
    data: {}
};

function a6(e) {
    return e === "x" ? "y" : "x"
}

function r6(e) {
    var t = e.state
        , s = e.options
        , a = e.name
        , o = s.mainAxis
        , l = o === void 0 ? !0 : o
        , u = s.altAxis
        , p = u === void 0 ? !1 : u
        , g = s.boundary
        , y = s.rootBoundary
        , v = s.altBoundary
        , w = s.padding
        , C = s.tether
        , T = C === void 0 ? !0 : C
        , I = s.tetherOffset
        , A = I === void 0 ? 0 : I
        , R = Vl(t, {
        boundary: g,
        rootBoundary: y,
        padding: w,
        altBoundary: v
    })
        , P = xi(t.placement)
        , M = mo(t.placement)
        , O = !M
        , F = og(P)
        , $ = a6(F)
        , V = t.modifiersData.popperOffsets
        , G = t.rects.reference
        , ie = t.rects.popper
        , te = typeof A == "function" ? A(Object.assign({}, t.rects, {
        placement: t.placement
    })) : A
        , ne = typeof te == "number" ? {
        mainAxis: te,
        altAxis: te
    } : Object.assign({
        mainAxis: 0,
        altAxis: 0
    }, te)
        , le = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null
        , oe = {
        x: 0,
        y: 0
    };
    if (V) {
        if (l) {
            var ve, be = F === "y" ? un : dn, de = F === "y" ? Dn : Fn, J = F === "y" ? "height" : "width", ue = V[F],
                fe = ue + R[be], Me = ue - R[de], Xe = T ? -ie[J] / 2 : 0, Be = M === ho ? G[J] : ie[J],
                je = M === ho ? -ie[J] : -G[J], tt = t.elements.arrow, ft = T && tt ? rg(tt) : {
                    width: 0,
                    height: 0
                }, mt = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : Jw(),
                bt = mt[be], Pe = mt[de], Ae = rl(0, G[J], ft[J]),
                Ne = O ? G[J] / 2 - Xe - Ae - bt - ne.mainAxis : Be - Ae - bt - ne.mainAxis,
                He = O ? -G[J] / 2 + Xe + Ae + Pe + ne.mainAxis : je + Ae + Pe + ne.mainAxis,
                et = t.elements.arrow && lc(t.elements.arrow),
                dt = et ? F === "y" ? et.clientTop || 0 : et.clientLeft || 0 : 0,
                Y = (ve = le == null ? void 0 : le[F]) != null ? ve : 0, W = ue + Ne - Y - dt, ce = ue + He - Y,
                we = rl(T ? Eu(fe, W) : fe, ue, T ? Ja(Me, ce) : Me);
            V[F] = we,
                oe[F] = we - ue
        }
        if (p) {
            var _e, Oe = F === "x" ? un : dn, qe = F === "x" ? Dn : Fn, We = V[$], Ge = $ === "y" ? "height" : "width",
                Ue = We + R[Oe], ht = We - R[qe], Ee = [un, dn].indexOf(P) !== -1,
                ze = (_e = le == null ? void 0 : le[$]) != null ? _e : 0,
                xe = Ee ? Ue : We - G[Ge] - ie[Ge] - ze + ne.altAxis,
                Re = Ee ? We + G[Ge] + ie[Ge] - ze - ne.altAxis : ht,
                lt = T && Ee ? O5(xe, We, Re) : rl(T ? xe : Ue, We, T ? Re : ht);
            V[$] = lt,
                oe[$] = lt - We
        }
        t.modifiersData[a] = oe
    }
}

var o6 = {
    name: "preventOverflow",
    enabled: !0,
    phase: "main",
    fn: r6,
    requiresIfExists: ["offset"]
};

function l6(e) {
    return {
        scrollLeft: e.scrollLeft,
        scrollTop: e.scrollTop
    }
}

function c6(e) {
    return e === li(e) || !Ln(e) ? lg(e) : l6(e)
}

function u6(e) {
    var t = e.getBoundingClientRect()
        , s = po(t.width) / e.offsetWidth || 1
        , a = po(t.height) / e.offsetHeight || 1;
    return s !== 1 || a !== 1
}

function d6(e, t, s) {
    s === void 0 && (s = !1);
    var a = Ln(t)
        , o = Ln(t) && u6(t)
        , l = Da(t)
        , u = go(e, o)
        , p = {
        scrollLeft: 0,
        scrollTop: 0
    }
        , g = {
        x: 0,
        y: 0
    };
    return (a || !a && !s) && ((Si(t) !== "body" || ug(l)) && (p = c6(t)),
        Ln(t) ? (g = go(t, !0),
            g.x += t.clientLeft,
            g.y += t.clientTop) : l && (g.x = cg(l))),
        {
            x: u.left + p.scrollLeft - g.x,
            y: u.top + p.scrollTop - g.y,
            width: u.width,
            height: u.height
        }
}

function h6(e) {
    var t = new Map
        , s = new Set
        , a = [];
    e.forEach(function (l) {
        t.set(l.name, l)
    });

    function o(l) {
        s.add(l.name);
        var u = [].concat(l.requires || [], l.requiresIfExists || []);
        u.forEach(function (p) {
            if (!s.has(p)) {
                var g = t.get(p);
                g && o(g)
            }
        }),
            a.push(l)
    }

    return e.forEach(function (l) {
        s.has(l.name) || o(l)
    }),
        a
}

function f6(e) {
    var t = h6(e);
    return T5.reduce(function (s, a) {
        return s.concat(t.filter(function (o) {
            return o.phase === a
        }))
    }, [])
}

function p6(e) {
    var t;
    return function () {
        return t || (t = new Promise(function (s) {
                Promise.resolve().then(function () {
                    t = void 0,
                        s(e())
                })
            }
        )),
            t
    }
}

function g6(e) {
    var t = e.reduce(function (s, a) {
        var o = s[a.name];
        return s[a.name] = o ? Object.assign({}, o, a, {
            options: Object.assign({}, o.options, a.options),
            data: Object.assign({}, o.data, a.data)
        }) : a,
            s
    }, {});
    return Object.keys(t).map(function (s) {
        return t[s]
    })
}

var Vb = {
    placement: "bottom",
    modifiers: [],
    strategy: "absolute"
};

function zb() {
    for (var e = arguments.length, t = new Array(e), s = 0; s < e; s++)
        t[s] = arguments[s];
    return !t.some(function (a) {
        return !(a && typeof a.getBoundingClientRect == "function")
    })
}

function dg(e) {
    e === void 0 && (e = {});
    var t = e
        , s = t.defaultModifiers
        , a = s === void 0 ? [] : s
        , o = t.defaultOptions
        , l = o === void 0 ? Vb : o;
    return function (u, p, g) {
        g === void 0 && (g = l);
        var y = {
            placement: "bottom",
            orderedModifiers: [],
            options: Object.assign({}, Vb, l),
            modifiersData: {},
            elements: {
                reference: u,
                popper: p
            },
            attributes: {},
            styles: {}
        }
            , v = []
            , w = !1
            , C = {
            state: y,
            setOptions: function (A) {
                var R = typeof A == "function" ? A(y.options) : A;
                I(),
                    y.options = Object.assign({}, l, y.options, R),
                    y.scrollParents = {
                        reference: fo(u) ? ol(u) : u.contextElement ? ol(u.contextElement) : [],
                        popper: ol(p)
                    };
                var P = f6(g6([].concat(a, y.options.modifiers)));
                return y.orderedModifiers = P.filter(function (M) {
                    return M.enabled
                }),
                    T(),
                    C.update()
            },
            forceUpdate: function () {
                if (!w) {
                    var A = y.elements
                        , R = A.reference
                        , P = A.popper;
                    if (zb(R, P)) {
                        y.rects = {
                            reference: d6(R, lc(P), y.options.strategy === "fixed"),
                            popper: rg(P)
                        },
                            y.reset = !1,
                            y.placement = y.options.placement,
                            y.orderedModifiers.forEach(function (ie) {
                                return y.modifiersData[ie.name] = Object.assign({}, ie.data)
                            });
                        for (var M = 0; M < y.orderedModifiers.length; M++) {
                            if (y.reset === !0) {
                                y.reset = !1,
                                    M = -1;
                                continue
                            }
                            var O = y.orderedModifiers[M]
                                , F = O.fn
                                , $ = O.options
                                , V = $ === void 0 ? {} : $
                                , G = O.name;
                            typeof F == "function" && (y = F({
                                state: y,
                                options: V,
                                name: G,
                                instance: C
                            }) || y)
                        }
                    }
                }
            },
            update: p6(function () {
                return new Promise(function (A) {
                        C.forceUpdate(),
                            A(y)
                    }
                )
            }),
            destroy: function () {
                I(),
                    w = !0
            }
        };
        if (!zb(u, p))
            return C;
        C.setOptions(g).then(function (A) {
            !w && g.onFirstUpdate && g.onFirstUpdate(A)
        });

        function T() {
            y.orderedModifiers.forEach(function (A) {
                var R = A.name
                    , P = A.options
                    , M = P === void 0 ? {} : P
                    , O = A.effect;
                if (typeof O == "function") {
                    var F = O({
                        state: y,
                        name: R,
                        instance: C,
                        options: M
                    })
                        , $ = function () {
                    };
                    v.push(F || $)
                }
            })
        }

        function I() {
            v.forEach(function (A) {
                return A()
            }),
                v = []
        }

        return C
    }
}

dg();
var m6 = [sS, aS, tS, Kw];
dg({
    defaultModifiers: m6
});
var v6 = [sS, aS, tS, Kw, n6, J5, o6, F5, e6]
    , b6 = dg({
    defaultModifiers: v6
});
const y6 = ["fixed", "absolute"]
    , x6 = gt({
        boundariesPadding: {
            type: Number,
            default: 0
        },
        fallbackPlacements: {
            type: Ye(Array),
            default: void 0
        },
        gpuAcceleration: {
            type: Boolean,
            default: !0
        },
        offset: {
            type: Number,
            default: 12
        },
        placement: {
            type: String,
            values: md,
            default: "bottom"
        },
        popperOptions: {
            type: Ye(Object),
            default: () => ({})
        },
        strategy: {
            type: String,
            values: y6,
            default: "absolute"
        }
    })
    , rS = gt({
        ...x6,
        id: String,
        style: {
            type: Ye([String, Array, Object])
        },
        className: {
            type: Ye([String, Array, Object])
        },
        effect: {
            type: Ye(String),
            default: "dark"
        },
        visible: Boolean,
        enterable: {
            type: Boolean,
            default: !0
        },
        pure: Boolean,
        focusOnShow: {
            type: Boolean,
            default: !1
        },
        trapping: {
            type: Boolean,
            default: !1
        },
        popperClass: {
            type: Ye([String, Array, Object])
        },
        popperStyle: {
            type: Ye([String, Array, Object])
        },
        referenceEl: {
            type: Ye(Object)
        },
        triggerTargetEl: {
            type: Ye(Object)
        },
        stopPopperMouseEvent: {
            type: Boolean,
            default: !0
        },
        virtualTriggering: Boolean,
        zIndex: Number,
        ...ta(["ariaLabel"])
    })
    , w6 = {
        mouseenter: e => e instanceof MouseEvent,
        mouseleave: e => e instanceof MouseEvent,
        focus: () => !0,
        blur: () => !0,
        close: () => !0
    }
    , S6 = (e, t) => {
        const s = Se(!1)
            , a = Se();
        return {
            focusStartRef: a,
            trapped: s,
            onFocusAfterReleased: y => {
                var v;
                ((v = y.detail) == null ? void 0 : v.focusReason) !== "pointer" && (a.value = "first",
                    t("blur"))
            }
            ,
            onFocusAfterTrapped: () => {
                t("focus")
            }
            ,
            onFocusInTrap: y => {
                e.visible && !s.value && (y.target && (a.value = y.target),
                    s.value = !0)
            }
            ,
            onFocusoutPrevented: y => {
                e.trapping || (y.detail.focusReason === "pointer" && y.preventDefault(),
                    s.value = !1)
            }
            ,
            onReleaseRequested: () => {
                s.value = !1,
                    t("close")
            }
        }
    }
    , _6 = (e, t = []) => {
        const {placement: s, strategy: a, popperOptions: o} = e
            , l = {
            placement: s,
            strategy: a,
            ...o,
            modifiers: [...C6(e), ...t]
        };
        return A6(l, o == null ? void 0 : o.modifiers),
            l
    }
    , k6 = e => {
        if (cs)
            return Xi(e)
    }
;

function C6(e) {
    const {offset: t, gpuAcceleration: s, fallbackPlacements: a} = e;
    return [{
        name: "offset",
        options: {
            offset: [0, t ?? 12]
        }
    }, {
        name: "preventOverflow",
        options: {
            padding: {
                top: 2,
                bottom: 2,
                left: 5,
                right: 5
            }
        }
    }, {
        name: "flip",
        options: {
            padding: 5,
            fallbackPlacements: a
        }
    }, {
        name: "computeStyles",
        options: {
            gpuAcceleration: s
        }
    }]
}

function A6(e, t) {
    t && (e.modifiers = [...e.modifiers, ...t ?? []])
}

const E6 = (e, t, s = {}) => {
        const a = {
                name: "updateState",
                enabled: !0,
                phase: "write",
                fn: ({state: g}) => {
                    const y = T6(g);
                    Object.assign(u.value, y)
                }
                ,
                requires: ["computeStyles"]
            }
            , o = re(() => {
                    const {onFirstUpdate: g, placement: y, strategy: v, modifiers: w} = D(s);
                    return {
                        onFirstUpdate: g,
                        placement: y || "bottom",
                        strategy: v || "absolute",
                        modifiers: [...w || [], a, {
                            name: "applyStyles",
                            enabled: !1
                        }]
                    }
                }
            )
            , l = Bs()
            , u = Se({
                styles: {
                    popper: {
                        position: D(o).strategy,
                        left: "0",
                        top: "0"
                    },
                    arrow: {
                        position: "absolute"
                    }
                },
                attributes: {}
            })
            , p = () => {
                l.value && (l.value.destroy(),
                    l.value = void 0)
            }
        ;
        return Ke(o, g => {
                const y = D(l);
                y && y.setOptions(g)
            }
            , {
                deep: !0
            }),
            Ke([e, t], ([g, y]) => {
                    p(),
                    !(!g || !y) && (l.value = b6(g, y, D(o)))
                }
            ),
            us(() => {
                    p()
                }
            ),
            {
                state: re(() => {
                        var g;
                        return {
                            ...((g = D(l)) == null ? void 0 : g.state) || {}
                        }
                    }
                ),
                styles: re(() => D(u).styles),
                attributes: re(() => D(u).attributes),
                update: () => {
                    var g;
                    return (g = D(l)) == null ? void 0 : g.update()
                }
                ,
                forceUpdate: () => {
                    var g;
                    return (g = D(l)) == null ? void 0 : g.forceUpdate()
                }
                ,
                instanceRef: re(() => D(l))
            }
    }
;

function T6(e) {
    const t = Object.keys(e.elements)
        , s = _u(t.map(o => [o, e.styles[o] || {}]))
        , a = _u(t.map(o => [o, e.attributes[o]]));
    return {
        styles: s,
        attributes: a
    }
}

const I6 = 0
    , P6 = e => {
    const {popperInstanceRef: t, contentRef: s, triggerRef: a, role: o} = st(Qp, void 0)
        , l = Se()
        , u = Se()
        , p = re(() => ({
        name: "eventListeners",
        enabled: !!e.visible
    }))
        , g = re(() => {
            var P;
            const M = D(l)
                , O = (P = D(u)) != null ? P : I6;
            return {
                name: "arrow",
                enabled: !yw(M),
                options: {
                    element: M,
                    padding: O
                }
            }
        }
    )
        , y = re(() => ({
        onFirstUpdate: () => {
            I()
        }
        ,
        ..._6(e, [D(g), D(p)])
    }))
        , v = re(() => k6(e.referenceEl) || D(a))
        , {attributes: w, state: C, styles: T, update: I, forceUpdate: A, instanceRef: R} = E6(v, s, y);
    return Ke(R, P => t.value = P),
        $t(() => {
                Ke(() => {
                        var P;
                        return (P = D(v)) == null ? void 0 : P.getBoundingClientRect()
                    }
                    , () => {
                        I()
                    }
                )
            }
        ),
        {
            attributes: w,
            arrowRef: l,
            contentRef: s,
            instanceRef: R,
            state: C,
            styles: T,
            role: o,
            forceUpdate: A,
            update: I
        }
}
    , L6 = (e, {attributes: t, styles: s, role: a}) => {
    const {nextZIndex: o} = Wp()
        , l = rt("popper")
        , u = re(() => D(t).popper)
        , p = Se(ts(e.zIndex) ? e.zIndex : o())
        , g = re(() => [l.b(), l.is("pure", e.pure), l.is(e.effect), e.popperClass])
        , y = re(() => [{
        zIndex: D(p)
    }, D(s).popper, e.popperStyle || {}])
        , v = re(() => a.value === "dialog" ? "false" : void 0)
        , w = re(() => D(s).arrow || {});
    return {
        ariaModal: v,
        arrowStyle: w,
        contentAttrs: u,
        contentClass: g,
        contentStyle: y,
        contentZIndex: p,
        updateZIndex: () => {
            p.value = ts(e.zIndex) ? e.zIndex : o()
        }
    }
}
    , M6 = Ce({
    name: "ElPopperContent"
})
    , O6 = Ce({
    ...M6,
    props: rS,
    emits: w6,
    setup(e, {expose: t, emit: s}) {
        const a = e
            , {
            focusStartRef: o,
            trapped: l,
            onFocusAfterReleased: u,
            onFocusAfterTrapped: p,
            onFocusInTrap: g,
            onFocusoutPrevented: y,
            onReleaseRequested: v
        } = S6(a, s)
            , {attributes: w, arrowRef: C, contentRef: T, styles: I, instanceRef: A, role: R, update: P} = P6(a)
            , {
            ariaModal: M,
            arrowStyle: O,
            contentAttrs: F,
            contentClass: $,
            contentStyle: V,
            updateZIndex: G
        } = L6(a, {
            styles: I,
            attributes: w,
            role: R
        })
            , ie = st(rr, void 0)
            , te = Se();
        Xt(Hw, {
            arrowStyle: O,
            arrowRef: C,
            arrowOffset: te
        }),
        ie && Xt(rr, {
            ...ie,
            addInputId: Ht,
            removeInputId: Ht
        });
        let ne;
        const le = (ve = !0) => {
                P(),
                ve && G()
            }
            , oe = () => {
                le(!1),
                    a.visible && a.focusOnShow ? l.value = !0 : a.visible === !1 && (l.value = !1)
            }
        ;
        return $t(() => {
                Ke(() => a.triggerTargetEl, (ve, be) => {
                        ne == null || ne(),
                            ne = void 0;
                        const de = D(ve || T.value)
                            , J = D(be || T.value);
                        Qn(de) && (ne = Ke([R, () => a.ariaLabel, M, () => a.id], ue => {
                                ["role", "aria-label", "aria-modal", "id"].forEach((fe, Me) => {
                                        qi(ue[Me]) ? de.removeAttribute(fe) : de.setAttribute(fe, ue[Me])
                                    }
                                )
                            }
                            , {
                                immediate: !0
                            })),
                        J !== de && Qn(J) && ["role", "aria-label", "aria-modal", "id"].forEach(ue => {
                                J.removeAttribute(ue)
                            }
                        )
                    }
                    , {
                        immediate: !0
                    }),
                    Ke(() => a.visible, oe, {
                        immediate: !0
                    })
            }
        ),
            us(() => {
                    ne == null || ne(),
                        ne = void 0
                }
            ),
            t({
                popperContentRef: T,
                popperInstanceRef: A,
                updatePopper: le,
                contentStyle: V
            }),
            (ve, be) => (Z(),
                ye("div", vs({
                    ref_key: "contentRef",
                    ref: T
                }, D(F), {
                    style: D(V),
                    class: D($),
                    tabindex: "-1",
                    onMouseenter: de => ve.$emit("mouseenter", de),
                    onMouseleave: de => ve.$emit("mouseleave", de)
                }), [ae(D(ng), {
                    trapped: D(l),
                    "trap-on-focus-in": !0,
                    "focus-trap-el": D(T),
                    "focus-start-el": D(o),
                    onFocusAfterTrapped: D(p),
                    onFocusAfterReleased: D(u),
                    onFocusin: D(g),
                    onFocusoutPrevented: D(y),
                    onReleaseRequested: D(v)
                }, {
                    default: se(() => [De(ve.$slots, "default")]),
                    _: 3
                }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusin", "onFocusoutPrevented", "onReleaseRequested"])], 16, ["onMouseenter", "onMouseleave"]))
    }
});
var R6 = ot(O6, [["__file", "content.vue"]]);
const N6 = Zt(j8)
    , hg = Symbol("elTooltip");

function Wb() {
    let e;
    const t = (a, o) => {
        s(),
            e = window.setTimeout(a, o)
    }
        , s = () => window.clearTimeout(e);
    return nc(() => s()),
        {
            registerTimeout: t,
            cancelTimeout: s
        }
}

const D6 = gt({
        showAfter: {
            type: Number,
            default: 0
        },
        hideAfter: {
            type: Number,
            default: 200
        },
        autoClose: {
            type: Number,
            default: 0
        }
    })
    , F6 = ({showAfter: e, hideAfter: t, autoClose: s, open: a, close: o}) => {
        const {registerTimeout: l} = Wb()
            , {registerTimeout: u, cancelTimeout: p} = Wb();
        return {
            onOpen: v => {
                l(() => {
                        a(v);
                        const w = D(s);
                        ts(w) && w > 0 && u(() => {
                                o(v)
                            }
                            , w)
                    }
                    , D(e))
            }
            ,
            onClose: v => {
                p(),
                    l(() => {
                            o(v)
                        }
                        , D(t))
            }
        }
    }
    , mn = gt({
        ...D6,
        ...rS,
        appendTo: {
            type: Ye([String, Object])
        },
        content: {
            type: String,
            default: ""
        },
        rawContent: Boolean,
        persistent: Boolean,
        visible: {
            type: Ye(Boolean),
            default: null
        },
        transition: String,
        teleported: {
            type: Boolean,
            default: !0
        },
        disabled: Boolean,
        ...ta(["ariaLabel"])
    })
    , zl = gt({
        ...Uw,
        disabled: Boolean,
        trigger: {
            type: Ye([String, Array]),
            default: "hover"
        },
        triggerKeys: {
            type: Ye(Array),
            default: () => [wt.enter, wt.numpadEnter, wt.space]
        }
    })
    , $6 = hd({
        type: Ye(Boolean),
        default: null
    })
    , B6 = hd({
        type: Ye(Function)
    })
    , oS = e => {
        const t = `update:${e}`
            , s = `onUpdate:${e}`
            , a = [t]
            , o = {
            [e]: $6,
            [s]: B6
        };
        return {
            useModelToggle: ({
                                 indicator: u,
                                 toggleReason: p,
                                 shouldHideWhenRouteChanges: g,
                                 shouldProceed: y,
                                 onShow: v,
                                 onHide: w
                             }) => {
                const C = Et()
                    , {emit: T} = C
                    , I = C.props
                    , A = re(() => nt(I[s]))
                    , R = re(() => I[e] === null)
                    , P = G => {
                        u.value !== !0 && (u.value = !0,
                        p && (p.value = G),
                        nt(v) && v(G))
                    }
                    , M = G => {
                        u.value !== !1 && (u.value = !1,
                        p && (p.value = G),
                        nt(w) && w(G))
                    }
                    , O = G => {
                        if (I.disabled === !0 || nt(y) && !y())
                            return;
                        const ie = A.value && cs;
                        ie && T(t, !0),
                        (R.value || !ie) && P(G)
                    }
                    , F = G => {
                        if (I.disabled === !0 || !cs)
                            return;
                        const ie = A.value && cs;
                        ie && T(t, !1),
                        (R.value || !ie) && M(G)
                    }
                    , $ = G => {
                        zs(G) && (I.disabled && G ? A.value && T(t, !1) : u.value !== G && (G ? P() : M()))
                    }
                    , V = () => {
                        u.value ? F() : O()
                    }
                ;
                return Ke(() => I[e], $),
                g && C.appContext.config.globalProperties.$route !== void 0 && Ke(() => ({
                        ...C.proxy.$route
                    }), () => {
                        g.value && u.value && F()
                    }
                ),
                    $t(() => {
                            $(I[e])
                        }
                    ),
                    {
                        hide: F,
                        show: O,
                        toggle: V,
                        hasUpdateHandler: A
                    }
            }
            ,
            useModelToggleProps: o,
            useModelToggleEmits: a
        }
    }
;
oS("modelValue");
const {useModelToggleProps: H6, useModelToggleEmits: V6, useModelToggle: z6} = oS("visible")
    , W6 = gt({
    ...zw,
    ...H6,
    ...mn,
    ...zl,
    ...Ww,
    showArrow: {
        type: Boolean,
        default: !0
    }
})
    , U6 = [...V6, "before-show", "before-hide", "show", "hide", "open", "close"]
    , Y6 = (e, t) => Ze(e) ? e.includes(t) : e === t
    , Cr = (e, t, s) => a => {
    Y6(D(e), t) && s(a)
}
    , _s = (e, t, {checkForDefaultPrevented: s = !0} = {}) => o => {
    const l = e == null ? void 0 : e(o);
    if (s === !1 || !l)
        return t == null ? void 0 : t(o)
}
    , Ub = e => t => t.pointerType === "mouse" ? e(t) : void 0
    , X6 = Ce({
    name: "ElTooltipTrigger"
})
    , j6 = Ce({
    ...X6,
    props: zl,
    setup(e, {expose: t}) {
        const s = e
            , a = rt("tooltip")
            , {controlled: o, id: l, open: u, onOpen: p, onClose: g, onToggle: y} = st(hg, void 0)
            , v = Se(null)
            , w = () => {
            if (D(o) || s.disabled)
                return !0
        }
            , C = ks(s, "trigger")
            , T = _s(w, Cr(C, "hover", p))
            , I = _s(w, Cr(C, "hover", g))
            , A = _s(w, Cr(C, "click", F => {
                F.button === 0 && y(F)
            }
        ))
            , R = _s(w, Cr(C, "focus", p))
            , P = _s(w, Cr(C, "focus", g))
            , M = _s(w, Cr(C, "contextmenu", F => {
                F.preventDefault(),
                    y(F)
            }
        ))
            , O = _s(w, F => {
                const {code: $} = F;
                s.triggerKeys.includes($) && (F.preventDefault(),
                    y(F))
            }
        );
        return t({
            triggerRef: v
        }),
            (F, $) => (Z(),
                Te(D(i5), {
                    id: D(l),
                    "virtual-ref": F.virtualRef,
                    open: D(u),
                    "virtual-triggering": F.virtualTriggering,
                    class: he(D(a).e("trigger")),
                    onBlur: D(P),
                    onClick: D(A),
                    onContextmenu: D(M),
                    onFocus: D(R),
                    onMouseenter: D(T),
                    onMouseleave: D(I),
                    onKeydown: D(O)
                }, {
                    default: se(() => [De(F.$slots, "default")]),
                    _: 3
                }, 8, ["id", "virtual-ref", "open", "virtual-triggering", "class", "onBlur", "onClick", "onContextmenu", "onFocus", "onMouseenter", "onMouseleave", "onKeydown"]))
    }
});
var G6 = ot(j6, [["__file", "trigger.vue"]]);
const q6 = gt({
    to: {
        type: Ye([String, Object]),
        required: !0
    },
    disabled: Boolean
})
    , K6 = Ce({
    __name: "teleport",
    props: q6,
    setup(e) {
        return (t, s) => t.disabled ? De(t.$slots, "default", {
            key: 0
        }) : (Z(),
            Te(t0, {
                key: 1,
                to: t.to
            }, [De(t.$slots, "default")], 8, ["to"]))
    }
});
var Z6 = ot(K6, [["__file", "teleport.vue"]]);
const lS = Zt(Z6)
    , cS = () => {
    const e = Tp()
        , t = Dw()
        , s = re(() => `${e.value}-popper-container-${t.prefix}`)
        , a = re(() => `#${s.value}`);
    return {
        id: s,
        selector: a
    }
}
    , J6 = e => {
    const t = document.createElement("div");
    return t.id = e,
        document.body.appendChild(t),
        t
}
    , Q6 = () => {
    const {id: e, selector: t} = cS();
    return ql(() => {
            cs && (document.body.querySelector(t.value) || J6(e.value))
        }
    ),
        {
            id: e,
            selector: t
        }
}
    , eB = Ce({
    name: "ElTooltipContent",
    inheritAttrs: !1
})
    , tB = Ce({
    ...eB,
    props: mn,
    setup(e, {expose: t}) {
        const s = e
            , {selector: a} = cS()
            , o = rt("tooltip")
            , l = Se();
        let u;
        const {
            controlled: p,
            id: g,
            open: y,
            trigger: v,
            onClose: w,
            onOpen: C,
            onShow: T,
            onHide: I,
            onBeforeShow: A,
            onBeforeHide: R
        } = st(hg, void 0)
            , P = re(() => s.transition || `${o.namespace.value}-fade-in-linear`)
            , M = re(() => s.persistent);
        us(() => {
                u == null || u()
            }
        );
        const O = re(() => D(M) ? !0 : D(y))
            , F = re(() => s.disabled ? !1 : D(y))
            , $ = re(() => s.appendTo || a.value)
            , V = re(() => {
                    var ue;
                    return (ue = s.style) != null ? ue : {}
                }
            )
            , G = Se(!0)
            , ie = () => {
                I(),
                J() && Hi(document.body),
                    G.value = !0
            }
            , te = () => {
                if (D(p))
                    return !0
            }
            , ne = _s(te, () => {
                    s.enterable && D(v) === "hover" && C()
                }
            )
            , le = _s(te, () => {
                    D(v) === "hover" && w()
                }
            )
            , oe = () => {
                var ue, fe;
                (fe = (ue = l.value) == null ? void 0 : ue.updatePopper) == null || fe.call(ue),
                A == null || A()
            }
            , ve = () => {
                R == null || R()
            }
            , be = () => {
                T(),
                    u = X4(re(() => {
                                var ue;
                                return (ue = l.value) == null ? void 0 : ue.popperContentRef
                            }
                        ), () => {
                            if (D(p))
                                return;
                            D(v) !== "hover" && w()
                        }
                    )
            }
            , de = () => {
                s.virtualTriggering || w()
            }
            , J = ue => {
                var fe;
                const Me = (fe = l.value) == null ? void 0 : fe.popperContentRef
                    , Xe = (ue == null ? void 0 : ue.relatedTarget) || document.activeElement;
                return Me == null ? void 0 : Me.contains(Xe)
            }
        ;
        return Ke(() => D(y), ue => {
                ue ? G.value = !1 : u == null || u()
            }
            , {
                flush: "post"
            }),
            Ke(() => s.content, () => {
                    var ue, fe;
                    (fe = (ue = l.value) == null ? void 0 : ue.updatePopper) == null || fe.call(ue)
                }
            ),
            t({
                contentRef: l,
                isFocusInsideContent: J
            }),
            (ue, fe) => (Z(),
                Te(D(lS), {
                    disabled: !ue.teleported,
                    to: D($)
                }, {
                    default: se(() => [ae(fn, {
                        name: D(P),
                        onAfterLeave: ie,
                        onBeforeEnter: oe,
                        onAfterEnter: be,
                        onBeforeLeave: ve
                    }, {
                        default: se(() => [D(O) ? _t((Z(),
                            Te(D(R6), vs({
                                key: 0,
                                id: D(g),
                                ref_key: "contentRef",
                                ref: l
                            }, ue.$attrs, {
                                "aria-label": ue.ariaLabel,
                                "aria-hidden": G.value,
                                "boundaries-padding": ue.boundariesPadding,
                                "fallback-placements": ue.fallbackPlacements,
                                "gpu-acceleration": ue.gpuAcceleration,
                                offset: ue.offset,
                                placement: ue.placement,
                                "popper-options": ue.popperOptions,
                                strategy: ue.strategy,
                                effect: ue.effect,
                                enterable: ue.enterable,
                                pure: ue.pure,
                                "popper-class": ue.popperClass,
                                "popper-style": [ue.popperStyle, D(V)],
                                "reference-el": ue.referenceEl,
                                "trigger-target-el": ue.triggerTargetEl,
                                visible: D(F),
                                "z-index": ue.zIndex,
                                onMouseenter: D(ne),
                                onMouseleave: D(le),
                                onBlur: de,
                                onClose: D(w)
                            }), {
                                default: se(() => [De(ue.$slots, "default")]),
                                _: 3
                            }, 16, ["id", "aria-label", "aria-hidden", "boundaries-padding", "fallback-placements", "gpu-acceleration", "offset", "placement", "popper-options", "strategy", "effect", "enterable", "pure", "popper-class", "popper-style", "reference-el", "trigger-target-el", "visible", "z-index", "onMouseenter", "onMouseleave", "onClose"])), [[ss, D(F)]]) : ke("v-if", !0)]),
                        _: 3
                    }, 8, ["name"])]),
                    _: 3
                }, 8, ["disabled", "to"]))
    }
});
var sB = ot(tB, [["__file", "content.vue"]]);
const nB = Ce({
    name: "ElTooltip"
})
    , iB = Ce({
    ...nB,
    props: W6,
    emits: U6,
    setup(e, {expose: t, emit: s}) {
        const a = e;
        Q6();
        const o = Nn()
            , l = Se()
            , u = Se()
            , p = () => {
            var P;
            const M = D(l);
            M && ((P = M.popperInstanceRef) == null || P.update())
        }
            , g = Se(!1)
            , y = Se()
            , {show: v, hide: w, hasUpdateHandler: C} = z6({
            indicator: g,
            toggleReason: y
        })
            , {onOpen: T, onClose: I} = F6({
            showAfter: ks(a, "showAfter"),
            hideAfter: ks(a, "hideAfter"),
            autoClose: ks(a, "autoClose"),
            open: v,
            close: w
        })
            , A = re(() => zs(a.visible) && !C.value);
        Xt(hg, {
            controlled: A,
            id: o,
            open: Zi(g),
            trigger: ks(a, "trigger"),
            onOpen: P => {
                T(P)
            }
            ,
            onClose: P => {
                I(P)
            }
            ,
            onToggle: P => {
                D(g) ? I(P) : T(P)
            }
            ,
            onShow: () => {
                s("show", y.value)
            }
            ,
            onHide: () => {
                s("hide", y.value)
            }
            ,
            onBeforeShow: () => {
                s("before-show", y.value)
            }
            ,
            onBeforeHide: () => {
                s("before-hide", y.value)
            }
            ,
            updatePopper: p
        }),
            Ke(() => a.disabled, P => {
                    P && g.value && (g.value = !1)
                }
            );
        const R = P => {
                var M;
                return (M = u.value) == null ? void 0 : M.isFocusInsideContent(P)
            }
        ;
        return qf(() => g.value && w()),
            t({
                popperRef: l,
                contentRef: u,
                isFocusInsideContent: R,
                updatePopper: p,
                onOpen: T,
                onClose: I,
                hide: w
            }),
            (P, M) => (Z(),
                Te(D(N6), {
                    ref_key: "popperRef",
                    ref: l,
                    role: P.role
                }, {
                    default: se(() => [ae(G6, {
                        disabled: P.disabled,
                        trigger: P.trigger,
                        "trigger-keys": P.triggerKeys,
                        "virtual-ref": P.virtualRef,
                        "virtual-triggering": P.virtualTriggering
                    }, {
                        default: se(() => [P.$slots.default ? De(P.$slots, "default", {
                            key: 0
                        }) : ke("v-if", !0)]),
                        _: 3
                    }, 8, ["disabled", "trigger", "trigger-keys", "virtual-ref", "virtual-triggering"]), ae(sB, {
                        ref_key: "contentRef",
                        ref: u,
                        "aria-label": P.ariaLabel,
                        "boundaries-padding": P.boundariesPadding,
                        content: P.content,
                        disabled: P.disabled,
                        effect: P.effect,
                        enterable: P.enterable,
                        "fallback-placements": P.fallbackPlacements,
                        "hide-after": P.hideAfter,
                        "gpu-acceleration": P.gpuAcceleration,
                        offset: P.offset,
                        persistent: P.persistent,
                        "popper-class": P.popperClass,
                        "popper-style": P.popperStyle,
                        placement: P.placement,
                        "popper-options": P.popperOptions,
                        pure: P.pure,
                        "raw-content": P.rawContent,
                        "reference-el": P.referenceEl,
                        "trigger-target-el": P.triggerTargetEl,
                        "show-after": P.showAfter,
                        strategy: P.strategy,
                        teleported: P.teleported,
                        transition: P.transition,
                        "virtual-triggering": P.virtualTriggering,
                        "z-index": P.zIndex,
                        "append-to": P.appendTo
                    }, {
                        default: se(() => [De(P.$slots, "content", {}, () => [P.rawContent ? (Z(),
                            ye("span", {
                                key: 0,
                                innerHTML: P.content
                            }, null, 8, ["innerHTML"])) : (Z(),
                            ye("span", {
                                key: 1
                            }, me(P.content), 1))]), P.showArrow ? (Z(),
                            Te(D(K8), {
                                key: 0,
                                "arrow-offset": P.arrowOffset
                            }, null, 8, ["arrow-offset"])) : ke("v-if", !0)]),
                        _: 3
                    }, 8, ["aria-label", "boundaries-padding", "content", "disabled", "effect", "enterable", "fallback-placements", "hide-after", "gpu-acceleration", "offset", "persistent", "popper-class", "popper-style", "placement", "popper-options", "pure", "raw-content", "reference-el", "trigger-target-el", "show-after", "strategy", "teleported", "transition", "virtual-triggering", "z-index", "append-to"])]),
                    _: 3
                }, 8, ["role"]))
    }
});
var aB = ot(iB, [["__file", "tooltip.vue"]]);
const Ai = Zt(aB)
    , rB = gt({
    value: {
        type: [String, Number],
        default: ""
    },
    max: {
        type: Number,
        default: 99
    },
    isDot: Boolean,
    hidden: Boolean,
    type: {
        type: String,
        values: ["primary", "success", "warning", "info", "danger"],
        default: "danger"
    },
    showZero: {
        type: Boolean,
        default: !0
    },
    color: String,
    badgeStyle: {
        type: Ye([String, Object, Array])
    },
    offset: {
        type: Ye(Array),
        default: [0, 0]
    },
    badgeClass: {
        type: String
    }
})
    , oB = Ce({
    name: "ElBadge"
})
    , lB = Ce({
    ...oB,
    props: rB,
    setup(e, {expose: t}) {
        const s = e
            , a = rt("badge")
            ,
            o = re(() => s.isDot ? "" : ts(s.value) && ts(s.max) ? s.max < s.value ? `${s.max}+` : `${s.value}` : `${s.value}`)
            , l = re(() => {
                    var u, p, g, y, v;
                    return [{
                        backgroundColor: s.color,
                        marginRight: Sn(-((p = (u = s.offset) == null ? void 0 : u[0]) != null ? p : 0)),
                        marginTop: Sn((y = (g = s.offset) == null ? void 0 : g[1]) != null ? y : 0)
                    }, (v = s.badgeStyle) != null ? v : {}]
                }
            );
        return t({
            content: o
        }),
            (u, p) => (Z(),
                ye("div", {
                    class: he(D(a).b())
                }, [De(u.$slots, "default"), ae(fn, {
                    name: `${D(a).namespace.value}-zoom-in-center`,
                    persisted: ""
                }, {
                    default: se(() => [_t(U("sup", {
                        class: he([D(a).e("content"), D(a).em("content", u.type), D(a).is("fixed", !!u.$slots.default), D(a).is("dot", u.isDot), D(a).is("hide-zero", !u.showZero && s.value === 0), u.badgeClass]),
                        style: kt(D(l))
                    }, [De(u.$slots, "content", {
                        value: D(o)
                    }, () => [at(me(D(o)), 1)])], 6), [[ss, !u.hidden && (D(o) || u.isDot || u.$slots.content)]])]),
                    _: 3
                }, 8, ["name"])], 2))
    }
});
var cB = ot(lB, [["__file", "badge.vue"]]);
const uB = Zt(cB)
    , uS = Symbol("buttonGroupContextKey")
    , Yr = ({from: e, replacement: t, scope: s, version: a, ref: o, type: l = "API"}, u) => {
    Ke(() => D(u), p => {
        }
        , {
            immediate: !0
        })
}
    , dB = (e, t) => {
    Yr({
        from: "type.text",
        replacement: "link",
        version: "3.0.0",
        scope: "props",
        ref: "https://element-plus.org/en-US/component/button.html#button-attributes"
    }, re(() => e.type === "text"));
    const s = st(uS, void 0)
        , a = fd("button")
        , {form: o} = Na()
        , l = ii(re(() => s == null ? void 0 : s.size))
        , u = Ci()
        , p = Se()
        , g = _i()
        , y = re(() => e.type || (s == null ? void 0 : s.type) || "")
        , v = re(() => {
            var I, A, R;
            return (R = (A = e.autoInsertSpace) != null ? A : (I = a.value) == null ? void 0 : I.autoInsertSpace) != null ? R : !1
        }
    )
        , w = re(() => e.tag === "button" ? {
        ariaDisabled: u.value || e.loading,
        disabled: u.value || e.loading,
        autofocus: e.autofocus,
        type: e.nativeType
    } : {})
        , C = re(() => {
            var I;
            const A = (I = g.default) == null ? void 0 : I.call(g);
            if (v.value && (A == null ? void 0 : A.length) === 1) {
                const R = A[0];
                if ((R == null ? void 0 : R.type) === Kn) {
                    const P = R.children;
                    return new RegExp("^\\p{Unified_Ideograph}{2}$", "u").test(P.trim())
                }
            }
            return !1
        }
    );
    return {
        _disabled: u,
        _size: l,
        _type: y,
        _ref: p,
        _props: w,
        shouldAddSpace: C,
        handleClick: I => {
            if (u.value || e.loading) {
                I.stopPropagation();
                return
            }
            e.nativeType === "reset" && (o == null || o.resetFields()),
                t("click", I)
        }
    }
}
    , hB = ["default", "primary", "success", "warning", "info", "danger", "text", ""]
    , fB = ["button", "submit", "reset"]
    , bf = gt({
    size: mr,
    disabled: Boolean,
    type: {
        type: String,
        values: hB,
        default: ""
    },
    icon: {
        type: Cs
    },
    nativeType: {
        type: String,
        values: fB,
        default: "button"
    },
    loading: Boolean,
    loadingIcon: {
        type: Cs,
        default: () => Bl
    },
    plain: Boolean,
    text: Boolean,
    link: Boolean,
    bg: Boolean,
    autofocus: Boolean,
    round: Boolean,
    circle: Boolean,
    color: String,
    dark: Boolean,
    autoInsertSpace: {
        type: Boolean,
        default: void 0
    },
    tag: {
        type: Ye([String, Object]),
        default: "button"
    }
})
    , pB = {
    click: e => e instanceof MouseEvent
};

function Ws(e, t) {
    gB(e) && (e = "100%");
    var s = mB(e);
    return e = t === 360 ? e : Math.min(t, Math.max(0, parseFloat(e))),
    s && (e = parseInt(String(e * t), 10) / 100),
        Math.abs(e - t) < 1e-6 ? 1 : (t === 360 ? e = (e < 0 ? e % t + t : e % t) / parseFloat(String(t)) : e = e % t / parseFloat(String(t)),
            e)
}

function Rc(e) {
    return Math.min(1, Math.max(0, e))
}

function gB(e) {
    return typeof e == "string" && e.indexOf(".") !== -1 && parseFloat(e) === 1
}

function mB(e) {
    return typeof e == "string" && e.indexOf("%") !== -1
}

function dS(e) {
    return e = parseFloat(e),
    (isNaN(e) || e < 0 || e > 1) && (e = 1),
        e
}

function Nc(e) {
    return e <= 1 ? "".concat(Number(e) * 100, "%") : e
}

function Ya(e) {
    return e.length === 1 ? "0" + e : String(e)
}

function vB(e, t, s) {
    return {
        r: Ws(e, 255) * 255,
        g: Ws(t, 255) * 255,
        b: Ws(s, 255) * 255
    }
}

function Yb(e, t, s) {
    e = Ws(e, 255),
        t = Ws(t, 255),
        s = Ws(s, 255);
    var a = Math.max(e, t, s)
        , o = Math.min(e, t, s)
        , l = 0
        , u = 0
        , p = (a + o) / 2;
    if (a === o)
        u = 0,
            l = 0;
    else {
        var g = a - o;
        switch (u = p > .5 ? g / (2 - a - o) : g / (a + o),
            a) {
            case e:
                l = (t - s) / g + (t < s ? 6 : 0);
                break;
            case t:
                l = (s - e) / g + 2;
                break;
            case s:
                l = (e - t) / g + 4;
                break
        }
        l /= 6
    }
    return {
        h: l,
        s: u,
        l: p
    }
}

function rh(e, t, s) {
    return s < 0 && (s += 1),
    s > 1 && (s -= 1),
        s < 1 / 6 ? e + (t - e) * (6 * s) : s < 1 / 2 ? t : s < 2 / 3 ? e + (t - e) * (2 / 3 - s) * 6 : e
}

function bB(e, t, s) {
    var a, o, l;
    if (e = Ws(e, 360),
        t = Ws(t, 100),
        s = Ws(s, 100),
    t === 0)
        o = s,
            l = s,
            a = s;
    else {
        var u = s < .5 ? s * (1 + t) : s + t - s * t
            , p = 2 * s - u;
        a = rh(p, u, e + 1 / 3),
            o = rh(p, u, e),
            l = rh(p, u, e - 1 / 3)
    }
    return {
        r: a * 255,
        g: o * 255,
        b: l * 255
    }
}

function Xb(e, t, s) {
    e = Ws(e, 255),
        t = Ws(t, 255),
        s = Ws(s, 255);
    var a = Math.max(e, t, s)
        , o = Math.min(e, t, s)
        , l = 0
        , u = a
        , p = a - o
        , g = a === 0 ? 0 : p / a;
    if (a === o)
        l = 0;
    else {
        switch (a) {
            case e:
                l = (t - s) / p + (t < s ? 6 : 0);
                break;
            case t:
                l = (s - e) / p + 2;
                break;
            case s:
                l = (e - t) / p + 4;
                break
        }
        l /= 6
    }
    return {
        h: l,
        s: g,
        v: u
    }
}

function yB(e, t, s) {
    e = Ws(e, 360) * 6,
        t = Ws(t, 100),
        s = Ws(s, 100);
    var a = Math.floor(e)
        , o = e - a
        , l = s * (1 - t)
        , u = s * (1 - o * t)
        , p = s * (1 - (1 - o) * t)
        , g = a % 6
        , y = [s, u, l, l, p, s][g]
        , v = [p, s, s, u, l, l][g]
        , w = [l, l, p, s, s, u][g];
    return {
        r: y * 255,
        g: v * 255,
        b: w * 255
    }
}

function jb(e, t, s, a) {
    var o = [Ya(Math.round(e).toString(16)), Ya(Math.round(t).toString(16)), Ya(Math.round(s).toString(16))];
    return a && o[0].startsWith(o[0].charAt(1)) && o[1].startsWith(o[1].charAt(1)) && o[2].startsWith(o[2].charAt(1)) ? o[0].charAt(0) + o[1].charAt(0) + o[2].charAt(0) : o.join("")
}

function xB(e, t, s, a, o) {
    var l = [Ya(Math.round(e).toString(16)), Ya(Math.round(t).toString(16)), Ya(Math.round(s).toString(16)), Ya(wB(a))];
    return o && l[0].startsWith(l[0].charAt(1)) && l[1].startsWith(l[1].charAt(1)) && l[2].startsWith(l[2].charAt(1)) && l[3].startsWith(l[3].charAt(1)) ? l[0].charAt(0) + l[1].charAt(0) + l[2].charAt(0) + l[3].charAt(0) : l.join("")
}

function wB(e) {
    return Math.round(parseFloat(e) * 255).toString(16)
}

function Gb(e) {
    return gn(e) / 255
}

function gn(e) {
    return parseInt(e, 16)
}

function SB(e) {
    return {
        r: e >> 16,
        g: (e & 65280) >> 8,
        b: e & 255
    }
}

var yf = {
    aliceblue: "#f0f8ff",
    antiquewhite: "#faebd7",
    aqua: "#00ffff",
    aquamarine: "#7fffd4",
    azure: "#f0ffff",
    beige: "#f5f5dc",
    bisque: "#ffe4c4",
    black: "#000000",
    blanchedalmond: "#ffebcd",
    blue: "#0000ff",
    blueviolet: "#8a2be2",
    brown: "#a52a2a",
    burlywood: "#deb887",
    cadetblue: "#5f9ea0",
    chartreuse: "#7fff00",
    chocolate: "#d2691e",
    coral: "#ff7f50",
    cornflowerblue: "#6495ed",
    cornsilk: "#fff8dc",
    crimson: "#dc143c",
    cyan: "#00ffff",
    darkblue: "#00008b",
    darkcyan: "#008b8b",
    darkgoldenrod: "#b8860b",
    darkgray: "#a9a9a9",
    darkgreen: "#006400",
    darkgrey: "#a9a9a9",
    darkkhaki: "#bdb76b",
    darkmagenta: "#8b008b",
    darkolivegreen: "#556b2f",
    darkorange: "#ff8c00",
    darkorchid: "#9932cc",
    darkred: "#8b0000",
    darksalmon: "#e9967a",
    darkseagreen: "#8fbc8f",
    darkslateblue: "#483d8b",
    darkslategray: "#2f4f4f",
    darkslategrey: "#2f4f4f",
    darkturquoise: "#00ced1",
    darkviolet: "#9400d3",
    deeppink: "#ff1493",
    deepskyblue: "#00bfff",
    dimgray: "#696969",
    dimgrey: "#696969",
    dodgerblue: "#1e90ff",
    firebrick: "#b22222",
    floralwhite: "#fffaf0",
    forestgreen: "#228b22",
    fuchsia: "#ff00ff",
    gainsboro: "#dcdcdc",
    ghostwhite: "#f8f8ff",
    goldenrod: "#daa520",
    gold: "#ffd700",
    gray: "#808080",
    green: "#008000",
    greenyellow: "#adff2f",
    grey: "#808080",
    honeydew: "#f0fff0",
    hotpink: "#ff69b4",
    indianred: "#cd5c5c",
    indigo: "#4b0082",
    ivory: "#fffff0",
    khaki: "#f0e68c",
    lavenderblush: "#fff0f5",
    lavender: "#e6e6fa",
    lawngreen: "#7cfc00",
    lemonchiffon: "#fffacd",
    lightblue: "#add8e6",
    lightcoral: "#f08080",
    lightcyan: "#e0ffff",
    lightgoldenrodyellow: "#fafad2",
    lightgray: "#d3d3d3",
    lightgreen: "#90ee90",
    lightgrey: "#d3d3d3",
    lightpink: "#ffb6c1",
    lightsalmon: "#ffa07a",
    lightseagreen: "#20b2aa",
    lightskyblue: "#87cefa",
    lightslategray: "#778899",
    lightslategrey: "#778899",
    lightsteelblue: "#b0c4de",
    lightyellow: "#ffffe0",
    lime: "#00ff00",
    limegreen: "#32cd32",
    linen: "#faf0e6",
    magenta: "#ff00ff",
    maroon: "#800000",
    mediumaquamarine: "#66cdaa",
    mediumblue: "#0000cd",
    mediumorchid: "#ba55d3",
    mediumpurple: "#9370db",
    mediumseagreen: "#3cb371",
    mediumslateblue: "#7b68ee",
    mediumspringgreen: "#00fa9a",
    mediumturquoise: "#48d1cc",
    mediumvioletred: "#c71585",
    midnightblue: "#191970",
    mintcream: "#f5fffa",
    mistyrose: "#ffe4e1",
    moccasin: "#ffe4b5",
    navajowhite: "#ffdead",
    navy: "#000080",
    oldlace: "#fdf5e6",
    olive: "#808000",
    olivedrab: "#6b8e23",
    orange: "#ffa500",
    orangered: "#ff4500",
    orchid: "#da70d6",
    palegoldenrod: "#eee8aa",
    palegreen: "#98fb98",
    paleturquoise: "#afeeee",
    palevioletred: "#db7093",
    papayawhip: "#ffefd5",
    peachpuff: "#ffdab9",
    peru: "#cd853f",
    pink: "#ffc0cb",
    plum: "#dda0dd",
    powderblue: "#b0e0e6",
    purple: "#800080",
    rebeccapurple: "#663399",
    red: "#ff0000",
    rosybrown: "#bc8f8f",
    royalblue: "#4169e1",
    saddlebrown: "#8b4513",
    salmon: "#fa8072",
    sandybrown: "#f4a460",
    seagreen: "#2e8b57",
    seashell: "#fff5ee",
    sienna: "#a0522d",
    silver: "#c0c0c0",
    skyblue: "#87ceeb",
    slateblue: "#6a5acd",
    slategray: "#708090",
    slategrey: "#708090",
    snow: "#fffafa",
    springgreen: "#00ff7f",
    steelblue: "#4682b4",
    tan: "#d2b48c",
    teal: "#008080",
    thistle: "#d8bfd8",
    tomato: "#ff6347",
    turquoise: "#40e0d0",
    violet: "#ee82ee",
    wheat: "#f5deb3",
    white: "#ffffff",
    whitesmoke: "#f5f5f5",
    yellow: "#ffff00",
    yellowgreen: "#9acd32"
};

function _B(e) {
    var t = {
        r: 0,
        g: 0,
        b: 0
    }
        , s = 1
        , a = null
        , o = null
        , l = null
        , u = !1
        , p = !1;
    return typeof e == "string" && (e = AB(e)),
    typeof e == "object" && (Fi(e.r) && Fi(e.g) && Fi(e.b) ? (t = vB(e.r, e.g, e.b),
        u = !0,
        p = String(e.r).substr(-1) === "%" ? "prgb" : "rgb") : Fi(e.h) && Fi(e.s) && Fi(e.v) ? (a = Nc(e.s),
        o = Nc(e.v),
        t = yB(e.h, a, o),
        u = !0,
        p = "hsv") : Fi(e.h) && Fi(e.s) && Fi(e.l) && (a = Nc(e.s),
        l = Nc(e.l),
        t = bB(e.h, a, l),
        u = !0,
        p = "hsl"),
    Object.prototype.hasOwnProperty.call(e, "a") && (s = e.a)),
        s = dS(s),
        {
            ok: u,
            format: e.format || p,
            r: Math.min(255, Math.max(t.r, 0)),
            g: Math.min(255, Math.max(t.g, 0)),
            b: Math.min(255, Math.max(t.b, 0)),
            a: s
        }
}

var kB = "[-\\+]?\\d+%?"
    , CB = "[-\\+]?\\d*\\.\\d+%?"
    , xa = "(?:".concat(CB, ")|(?:").concat(kB, ")")
    , oh = "[\\s|\\(]+(".concat(xa, ")[,|\\s]+(").concat(xa, ")[,|\\s]+(").concat(xa, ")\\s*\\)?")
    ,
    lh = "[\\s|\\(]+(".concat(xa, ")[,|\\s]+(").concat(xa, ")[,|\\s]+(").concat(xa, ")[,|\\s]+(").concat(xa, ")\\s*\\)?")
    , Un = {
        CSS_UNIT: new RegExp(xa),
        rgb: new RegExp("rgb" + oh),
        rgba: new RegExp("rgba" + lh),
        hsl: new RegExp("hsl" + oh),
        hsla: new RegExp("hsla" + lh),
        hsv: new RegExp("hsv" + oh),
        hsva: new RegExp("hsva" + lh),
        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
    };

function AB(e) {
    if (e = e.trim().toLowerCase(),
    e.length === 0)
        return !1;
    var t = !1;
    if (yf[e])
        e = yf[e],
            t = !0;
    else if (e === "transparent")
        return {
            r: 0,
            g: 0,
            b: 0,
            a: 0,
            format: "name"
        };
    var s = Un.rgb.exec(e);
    return s ? {
        r: s[1],
        g: s[2],
        b: s[3]
    } : (s = Un.rgba.exec(e),
        s ? {
            r: s[1],
            g: s[2],
            b: s[3],
            a: s[4]
        } : (s = Un.hsl.exec(e),
            s ? {
                h: s[1],
                s: s[2],
                l: s[3]
            } : (s = Un.hsla.exec(e),
                s ? {
                    h: s[1],
                    s: s[2],
                    l: s[3],
                    a: s[4]
                } : (s = Un.hsv.exec(e),
                    s ? {
                        h: s[1],
                        s: s[2],
                        v: s[3]
                    } : (s = Un.hsva.exec(e),
                        s ? {
                            h: s[1],
                            s: s[2],
                            v: s[3],
                            a: s[4]
                        } : (s = Un.hex8.exec(e),
                            s ? {
                                r: gn(s[1]),
                                g: gn(s[2]),
                                b: gn(s[3]),
                                a: Gb(s[4]),
                                format: t ? "name" : "hex8"
                            } : (s = Un.hex6.exec(e),
                                s ? {
                                    r: gn(s[1]),
                                    g: gn(s[2]),
                                    b: gn(s[3]),
                                    format: t ? "name" : "hex"
                                } : (s = Un.hex4.exec(e),
                                    s ? {
                                        r: gn(s[1] + s[1]),
                                        g: gn(s[2] + s[2]),
                                        b: gn(s[3] + s[3]),
                                        a: Gb(s[4] + s[4]),
                                        format: t ? "name" : "hex8"
                                    } : (s = Un.hex3.exec(e),
                                        s ? {
                                            r: gn(s[1] + s[1]),
                                            g: gn(s[2] + s[2]),
                                            b: gn(s[3] + s[3]),
                                            format: t ? "name" : "hex"
                                        } : !1)))))))))
}

function Fi(e) {
    return !!Un.CSS_UNIT.exec(String(e))
}

var hS = function () {
    function e(t, s) {
        t === void 0 && (t = ""),
        s === void 0 && (s = {});
        var a;
        if (t instanceof e)
            return t;
        typeof t == "number" && (t = SB(t)),
            this.originalInput = t;
        var o = _B(t);
        this.originalInput = t,
            this.r = o.r,
            this.g = o.g,
            this.b = o.b,
            this.a = o.a,
            this.roundA = Math.round(100 * this.a) / 100,
            this.format = (a = s.format) !== null && a !== void 0 ? a : o.format,
            this.gradientType = s.gradientType,
        this.r < 1 && (this.r = Math.round(this.r)),
        this.g < 1 && (this.g = Math.round(this.g)),
        this.b < 1 && (this.b = Math.round(this.b)),
            this.isValid = o.ok
    }

    return e.prototype.isDark = function () {
        return this.getBrightness() < 128
    }
        ,
        e.prototype.isLight = function () {
            return !this.isDark()
        }
        ,
        e.prototype.getBrightness = function () {
            var t = this.toRgb();
            return (t.r * 299 + t.g * 587 + t.b * 114) / 1e3
        }
        ,
        e.prototype.getLuminance = function () {
            var t = this.toRgb(), s, a, o, l = t.r / 255, u = t.g / 255, p = t.b / 255;
            return l <= .03928 ? s = l / 12.92 : s = Math.pow((l + .055) / 1.055, 2.4),
                u <= .03928 ? a = u / 12.92 : a = Math.pow((u + .055) / 1.055, 2.4),
                p <= .03928 ? o = p / 12.92 : o = Math.pow((p + .055) / 1.055, 2.4),
            .2126 * s + .7152 * a + .0722 * o
        }
        ,
        e.prototype.getAlpha = function () {
            return this.a
        }
        ,
        e.prototype.setAlpha = function (t) {
            return this.a = dS(t),
                this.roundA = Math.round(100 * this.a) / 100,
                this
        }
        ,
        e.prototype.isMonochrome = function () {
            var t = this.toHsl().s;
            return t === 0
        }
        ,
        e.prototype.toHsv = function () {
            var t = Xb(this.r, this.g, this.b);
            return {
                h: t.h * 360,
                s: t.s,
                v: t.v,
                a: this.a
            }
        }
        ,
        e.prototype.toHsvString = function () {
            var t = Xb(this.r, this.g, this.b)
                , s = Math.round(t.h * 360)
                , a = Math.round(t.s * 100)
                , o = Math.round(t.v * 100);
            return this.a === 1 ? "hsv(".concat(s, ", ").concat(a, "%, ").concat(o, "%)") : "hsva(".concat(s, ", ").concat(a, "%, ").concat(o, "%, ").concat(this.roundA, ")")
        }
        ,
        e.prototype.toHsl = function () {
            var t = Yb(this.r, this.g, this.b);
            return {
                h: t.h * 360,
                s: t.s,
                l: t.l,
                a: this.a
            }
        }
        ,
        e.prototype.toHslString = function () {
            var t = Yb(this.r, this.g, this.b)
                , s = Math.round(t.h * 360)
                , a = Math.round(t.s * 100)
                , o = Math.round(t.l * 100);
            return this.a === 1 ? "hsl(".concat(s, ", ").concat(a, "%, ").concat(o, "%)") : "hsla(".concat(s, ", ").concat(a, "%, ").concat(o, "%, ").concat(this.roundA, ")")
        }
        ,
        e.prototype.toHex = function (t) {
            return t === void 0 && (t = !1),
                jb(this.r, this.g, this.b, t)
        }
        ,
        e.prototype.toHexString = function (t) {
            return t === void 0 && (t = !1),
            "#" + this.toHex(t)
        }
        ,
        e.prototype.toHex8 = function (t) {
            return t === void 0 && (t = !1),
                xB(this.r, this.g, this.b, this.a, t)
        }
        ,
        e.prototype.toHex8String = function (t) {
            return t === void 0 && (t = !1),
            "#" + this.toHex8(t)
        }
        ,
        e.prototype.toHexShortString = function (t) {
            return t === void 0 && (t = !1),
                this.a === 1 ? this.toHexString(t) : this.toHex8String(t)
        }
        ,
        e.prototype.toRgb = function () {
            return {
                r: Math.round(this.r),
                g: Math.round(this.g),
                b: Math.round(this.b),
                a: this.a
            }
        }
        ,
        e.prototype.toRgbString = function () {
            var t = Math.round(this.r)
                , s = Math.round(this.g)
                , a = Math.round(this.b);
            return this.a === 1 ? "rgb(".concat(t, ", ").concat(s, ", ").concat(a, ")") : "rgba(".concat(t, ", ").concat(s, ", ").concat(a, ", ").concat(this.roundA, ")")
        }
        ,
        e.prototype.toPercentageRgb = function () {
            var t = function (s) {
                return "".concat(Math.round(Ws(s, 255) * 100), "%")
            };
            return {
                r: t(this.r),
                g: t(this.g),
                b: t(this.b),
                a: this.a
            }
        }
        ,
        e.prototype.toPercentageRgbString = function () {
            var t = function (s) {
                return Math.round(Ws(s, 255) * 100)
            };
            return this.a === 1 ? "rgb(".concat(t(this.r), "%, ").concat(t(this.g), "%, ").concat(t(this.b), "%)") : "rgba(".concat(t(this.r), "%, ").concat(t(this.g), "%, ").concat(t(this.b), "%, ").concat(this.roundA, ")")
        }
        ,
        e.prototype.toName = function () {
            if (this.a === 0)
                return "transparent";
            if (this.a < 1)
                return !1;
            for (var t = "#" + jb(this.r, this.g, this.b, !1), s = 0, a = Object.entries(yf); s < a.length; s++) {
                var o = a[s]
                    , l = o[0]
                    , u = o[1];
                if (t === u)
                    return l
            }
            return !1
        }
        ,
        e.prototype.toString = function (t) {
            var s = !!t;
            t = t ?? this.format;
            var a = !1
                , o = this.a < 1 && this.a >= 0
                , l = !s && o && (t.startsWith("hex") || t === "name");
            return l ? t === "name" && this.a === 0 ? this.toName() : this.toRgbString() : (t === "rgb" && (a = this.toRgbString()),
            t === "prgb" && (a = this.toPercentageRgbString()),
            (t === "hex" || t === "hex6") && (a = this.toHexString()),
            t === "hex3" && (a = this.toHexString(!0)),
            t === "hex4" && (a = this.toHex8String(!0)),
            t === "hex8" && (a = this.toHex8String()),
            t === "name" && (a = this.toName()),
            t === "hsl" && (a = this.toHslString()),
            t === "hsv" && (a = this.toHsvString()),
            a || this.toHexString())
        }
        ,
        e.prototype.toNumber = function () {
            return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b)
        }
        ,
        e.prototype.clone = function () {
            return new e(this.toString())
        }
        ,
        e.prototype.lighten = function (t) {
            t === void 0 && (t = 10);
            var s = this.toHsl();
            return s.l += t / 100,
                s.l = Rc(s.l),
                new e(s)
        }
        ,
        e.prototype.brighten = function (t) {
            t === void 0 && (t = 10);
            var s = this.toRgb();
            return s.r = Math.max(0, Math.min(255, s.r - Math.round(255 * -(t / 100)))),
                s.g = Math.max(0, Math.min(255, s.g - Math.round(255 * -(t / 100)))),
                s.b = Math.max(0, Math.min(255, s.b - Math.round(255 * -(t / 100)))),
                new e(s)
        }
        ,
        e.prototype.darken = function (t) {
            t === void 0 && (t = 10);
            var s = this.toHsl();
            return s.l -= t / 100,
                s.l = Rc(s.l),
                new e(s)
        }
        ,
        e.prototype.tint = function (t) {
            return t === void 0 && (t = 10),
                this.mix("white", t)
        }
        ,
        e.prototype.shade = function (t) {
            return t === void 0 && (t = 10),
                this.mix("black", t)
        }
        ,
        e.prototype.desaturate = function (t) {
            t === void 0 && (t = 10);
            var s = this.toHsl();
            return s.s -= t / 100,
                s.s = Rc(s.s),
                new e(s)
        }
        ,
        e.prototype.saturate = function (t) {
            t === void 0 && (t = 10);
            var s = this.toHsl();
            return s.s += t / 100,
                s.s = Rc(s.s),
                new e(s)
        }
        ,
        e.prototype.greyscale = function () {
            return this.desaturate(100)
        }
        ,
        e.prototype.spin = function (t) {
            var s = this.toHsl()
                , a = (s.h + t) % 360;
            return s.h = a < 0 ? 360 + a : a,
                new e(s)
        }
        ,
        e.prototype.mix = function (t, s) {
            s === void 0 && (s = 50);
            var a = this.toRgb()
                , o = new e(t).toRgb()
                , l = s / 100
                , u = {
                r: (o.r - a.r) * l + a.r,
                g: (o.g - a.g) * l + a.g,
                b: (o.b - a.b) * l + a.b,
                a: (o.a - a.a) * l + a.a
            };
            return new e(u)
        }
        ,
        e.prototype.analogous = function (t, s) {
            t === void 0 && (t = 6),
            s === void 0 && (s = 30);
            var a = this.toHsl()
                , o = 360 / s
                , l = [this];
            for (a.h = (a.h - (o * t >> 1) + 720) % 360; --t;)
                a.h = (a.h + o) % 360,
                    l.push(new e(a));
            return l
        }
        ,
        e.prototype.complement = function () {
            var t = this.toHsl();
            return t.h = (t.h + 180) % 360,
                new e(t)
        }
        ,
        e.prototype.monochromatic = function (t) {
            t === void 0 && (t = 6);
            for (var s = this.toHsv(), a = s.h, o = s.s, l = s.v, u = [], p = 1 / t; t--;)
                u.push(new e({
                    h: a,
                    s: o,
                    v: l
                })),
                    l = (l + p) % 1;
            return u
        }
        ,
        e.prototype.splitcomplement = function () {
            var t = this.toHsl()
                , s = t.h;
            return [this, new e({
                h: (s + 72) % 360,
                s: t.s,
                l: t.l
            }), new e({
                h: (s + 216) % 360,
                s: t.s,
                l: t.l
            })]
        }
        ,
        e.prototype.onBackground = function (t) {
            var s = this.toRgb()
                , a = new e(t).toRgb()
                , o = s.a + a.a * (1 - s.a);
            return new e({
                r: (s.r * s.a + a.r * a.a * (1 - s.a)) / o,
                g: (s.g * s.a + a.g * a.a * (1 - s.a)) / o,
                b: (s.b * s.a + a.b * a.a * (1 - s.a)) / o,
                a: o
            })
        }
        ,
        e.prototype.triad = function () {
            return this.polyad(3)
        }
        ,
        e.prototype.tetrad = function () {
            return this.polyad(4)
        }
        ,
        e.prototype.polyad = function (t) {
            for (var s = this.toHsl(), a = s.h, o = [this], l = 360 / t, u = 1; u < t; u++)
                o.push(new e({
                    h: (a + u * l) % 360,
                    s: s.s,
                    l: s.l
                }));
            return o
        }
        ,
        e.prototype.equals = function (t) {
            return this.toRgbString() === new e(t).toRgbString()
        }
        ,
        e
}();

function ca(e, t = 20) {
    return e.mix("#141414", t).toString()
}

function EB(e) {
    const t = Ci()
        , s = rt("button");
    return re(() => {
            let a = {}
                , o = e.color;
            if (o) {
                const l = o.match(/var\((.*?)\)/);
                l && (o = window.getComputedStyle(window.document.documentElement).getPropertyValue(l[1]));
                const u = new hS(o)
                    , p = e.dark ? u.tint(20).toString() : ca(u, 20);
                if (e.plain)
                    a = s.cssVarBlock({
                        "bg-color": e.dark ? ca(u, 90) : u.tint(90).toString(),
                        "text-color": o,
                        "border-color": e.dark ? ca(u, 50) : u.tint(50).toString(),
                        "hover-text-color": `var(${s.cssVarName("color-white")})`,
                        "hover-bg-color": o,
                        "hover-border-color": o,
                        "active-bg-color": p,
                        "active-text-color": `var(${s.cssVarName("color-white")})`,
                        "active-border-color": p
                    }),
                    t.value && (a[s.cssVarBlockName("disabled-bg-color")] = e.dark ? ca(u, 90) : u.tint(90).toString(),
                        a[s.cssVarBlockName("disabled-text-color")] = e.dark ? ca(u, 50) : u.tint(50).toString(),
                        a[s.cssVarBlockName("disabled-border-color")] = e.dark ? ca(u, 80) : u.tint(80).toString());
                else {
                    const g = e.dark ? ca(u, 30) : u.tint(30).toString()
                        , y = u.isDark() ? `var(${s.cssVarName("color-white")})` : `var(${s.cssVarName("color-black")})`;
                    if (a = s.cssVarBlock({
                        "bg-color": o,
                        "text-color": y,
                        "border-color": o,
                        "hover-bg-color": g,
                        "hover-text-color": y,
                        "hover-border-color": g,
                        "active-bg-color": p,
                        "active-border-color": p
                    }),
                        t.value) {
                        const v = e.dark ? ca(u, 50) : u.tint(50).toString();
                        a[s.cssVarBlockName("disabled-bg-color")] = v,
                            a[s.cssVarBlockName("disabled-text-color")] = e.dark ? "rgba(255, 255, 255, 0.5)" : `var(${s.cssVarName("color-white")})`,
                            a[s.cssVarBlockName("disabled-border-color")] = v
                    }
                }
            }
            return a
        }
    )
}

const TB = Ce({
    name: "ElButton"
})
    , IB = Ce({
    ...TB,
    props: bf,
    emits: pB,
    setup(e, {expose: t, emit: s}) {
        const a = e
            , o = EB(a)
            , l = rt("button")
            , {_ref: u, _size: p, _type: g, _disabled: y, _props: v, shouldAddSpace: w, handleClick: C} = dB(a, s)
            ,
            T = re(() => [l.b(), l.m(g.value), l.m(p.value), l.is("disabled", y.value), l.is("loading", a.loading), l.is("plain", a.plain), l.is("round", a.round), l.is("circle", a.circle), l.is("text", a.text), l.is("link", a.link), l.is("has-bg", a.bg)]);
        return t({
            ref: u,
            size: p,
            type: g,
            disabled: y,
            shouldAddSpace: w
        }),
            (I, A) => (Z(),
                Te(Vt(I.tag), vs({
                    ref_key: "_ref",
                    ref: u
                }, D(v), {
                    class: D(T),
                    style: D(o),
                    onClick: D(C)
                }), {
                    default: se(() => [I.loading ? (Z(),
                        ye(Ct, {
                            key: 0
                        }, [I.$slots.loading ? De(I.$slots, "loading", {
                            key: 0
                        }) : (Z(),
                            Te(D(Mt), {
                                key: 1,
                                class: he(D(l).is("loading"))
                            }, {
                                default: se(() => [(Z(),
                                    Te(Vt(I.loadingIcon)))]),
                                _: 1
                            }, 8, ["class"]))], 64)) : I.icon || I.$slots.icon ? (Z(),
                        Te(D(Mt), {
                            key: 1
                        }, {
                            default: se(() => [I.icon ? (Z(),
                                Te(Vt(I.icon), {
                                    key: 0
                                })) : De(I.$slots, "icon", {
                                key: 1
                            })]),
                            _: 3
                        })) : ke("v-if", !0), I.$slots.default ? (Z(),
                        ye("span", {
                            key: 2,
                            class: he({
                                [D(l).em("text", "expand")]: D(w)
                            })
                        }, [De(I.$slots, "default")], 2)) : ke("v-if", !0)]),
                    _: 3
                }, 16, ["class", "style", "onClick"]))
    }
});
var PB = ot(IB, [["__file", "button.vue"]]);
const LB = {
    size: bf.size,
    type: bf.type
}
    , MB = Ce({
    name: "ElButtonGroup"
})
    , OB = Ce({
    ...MB,
    props: LB,
    setup(e) {
        const t = e;
        Xt(uS, ys({
            size: ks(t, "size"),
            type: ks(t, "type")
        }));
        const s = rt("button");
        return (a, o) => (Z(),
            ye("div", {
                class: he(D(s).b("group"))
            }, [De(a.$slots, "default")], 2))
    }
});
var fS = ot(OB, [["__file", "button-group.vue"]]);
const _n = Zt(PB, {
    ButtonGroup: fS
})
    , RB = Os(fS);
var fg = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};

function pg(e) {
    return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
}

function NB(e) {
    if (e.__esModule)
        return e;
    var t = e.default;
    if (typeof t == "function") {
        var s = function a() {
            return this instanceof a ? Reflect.construct(t, arguments, this.constructor) : t.apply(this, arguments)
        };
        s.prototype = t.prototype
    } else
        s = {};
    return Object.defineProperty(s, "__esModule", {
        value: !0
    }),
        Object.keys(e).forEach(function (a) {
            var o = Object.getOwnPropertyDescriptor(e, a);
            Object.defineProperty(s, a, o.get ? o : {
                enumerable: !0,
                get: function () {
                    return e[a]
                }
            })
        }),
        s
}

var pS = {
    exports: {}
};
(function (e, t) {
        (function (s, a) {
                e.exports = a()
            }
        )(fg, function () {
            var s = 1e3
                , a = 6e4
                , o = 36e5
                , l = "millisecond"
                , u = "second"
                , p = "minute"
                , g = "hour"
                , y = "day"
                , v = "week"
                , w = "month"
                , C = "quarter"
                , T = "year"
                , I = "date"
                , A = "Invalid Date"
                , R = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/
                , P = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g
                , M = {
                name: "en",
                weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                ordinal: function (be) {
                    var de = ["th", "st", "nd", "rd"]
                        , J = be % 100;
                    return "[" + be + (de[(J - 20) % 10] || de[J] || de[0]) + "]"
                }
            }
                , O = function (be, de, J) {
                var ue = String(be);
                return !ue || ue.length >= de ? be : "" + Array(de + 1 - ue.length).join(J) + be
            }
                , F = {
                s: O,
                z: function (be) {
                    var de = -be.utcOffset()
                        , J = Math.abs(de)
                        , ue = Math.floor(J / 60)
                        , fe = J % 60;
                    return (de <= 0 ? "+" : "-") + O(ue, 2, "0") + ":" + O(fe, 2, "0")
                },
                m: function be(de, J) {
                    if (de.date() < J.date())
                        return -be(J, de);
                    var ue = 12 * (J.year() - de.year()) + (J.month() - de.month())
                        , fe = de.clone().add(ue, w)
                        , Me = J - fe < 0
                        , Xe = de.clone().add(ue + (Me ? -1 : 1), w);
                    return +(-(ue + (J - fe) / (Me ? fe - Xe : Xe - fe)) || 0)
                },
                a: function (be) {
                    return be < 0 ? Math.ceil(be) || 0 : Math.floor(be)
                },
                p: function (be) {
                    return {
                        M: w,
                        y: T,
                        w: v,
                        d: y,
                        D: I,
                        h: g,
                        m: p,
                        s: u,
                        ms: l,
                        Q: C
                    }[be] || String(be || "").toLowerCase().replace(/s$/, "")
                },
                u: function (be) {
                    return be === void 0
                }
            }
                , $ = "en"
                , V = {};
            V[$] = M;
            var G = "$isDayjsObject"
                , ie = function (be) {
                return be instanceof oe || !(!be || !be[G])
            }
                , te = function be(de, J, ue) {
                var fe;
                if (!de)
                    return $;
                if (typeof de == "string") {
                    var Me = de.toLowerCase();
                    V[Me] && (fe = Me),
                    J && (V[Me] = J,
                        fe = Me);
                    var Xe = de.split("-");
                    if (!fe && Xe.length > 1)
                        return be(Xe[0])
                } else {
                    var Be = de.name;
                    V[Be] = de,
                        fe = Be
                }
                return !ue && fe && ($ = fe),
                fe || !ue && $
            }
                , ne = function (be, de) {
                if (ie(be))
                    return be.clone();
                var J = typeof de == "object" ? de : {};
                return J.date = be,
                    J.args = arguments,
                    new oe(J)
            }
                , le = F;
            le.l = te,
                le.i = ie,
                le.w = function (be, de) {
                    return ne(be, {
                        locale: de.$L,
                        utc: de.$u,
                        x: de.$x,
                        $offset: de.$offset
                    })
                }
            ;
            var oe = function () {
                function be(J) {
                    this.$L = te(J.locale, null, !0),
                        this.parse(J),
                        this.$x = this.$x || J.x || {},
                        this[G] = !0
                }

                var de = be.prototype;
                return de.parse = function (J) {
                    this.$d = function (ue) {
                        var fe = ue.date
                            , Me = ue.utc;
                        if (fe === null)
                            return new Date(NaN);
                        if (le.u(fe))
                            return new Date;
                        if (fe instanceof Date)
                            return new Date(fe);
                        if (typeof fe == "string" && !/Z$/i.test(fe)) {
                            var Xe = fe.match(R);
                            if (Xe) {
                                var Be = Xe[2] - 1 || 0
                                    , je = (Xe[7] || "0").substring(0, 3);
                                return Me ? new Date(Date.UTC(Xe[1], Be, Xe[3] || 1, Xe[4] || 0, Xe[5] || 0, Xe[6] || 0, je)) : new Date(Xe[1], Be, Xe[3] || 1, Xe[4] || 0, Xe[5] || 0, Xe[6] || 0, je)
                            }
                        }
                        return new Date(fe)
                    }(J),
                        this.init()
                }
                    ,
                    de.init = function () {
                        var J = this.$d;
                        this.$y = J.getFullYear(),
                            this.$M = J.getMonth(),
                            this.$D = J.getDate(),
                            this.$W = J.getDay(),
                            this.$H = J.getHours(),
                            this.$m = J.getMinutes(),
                            this.$s = J.getSeconds(),
                            this.$ms = J.getMilliseconds()
                    }
                    ,
                    de.$utils = function () {
                        return le
                    }
                    ,
                    de.isValid = function () {
                        return this.$d.toString() !== A
                    }
                    ,
                    de.isSame = function (J, ue) {
                        var fe = ne(J);
                        return this.startOf(ue) <= fe && fe <= this.endOf(ue)
                    }
                    ,
                    de.isAfter = function (J, ue) {
                        return ne(J) < this.startOf(ue)
                    }
                    ,
                    de.isBefore = function (J, ue) {
                        return this.endOf(ue) < ne(J)
                    }
                    ,
                    de.$g = function (J, ue, fe) {
                        return le.u(J) ? this[ue] : this.set(fe, J)
                    }
                    ,
                    de.unix = function () {
                        return Math.floor(this.valueOf() / 1e3)
                    }
                    ,
                    de.valueOf = function () {
                        return this.$d.getTime()
                    }
                    ,
                    de.startOf = function (J, ue) {
                        var fe = this
                            , Me = !!le.u(ue) || ue
                            , Xe = le.p(J)
                            , Be = function (Ne, He) {
                            var et = le.w(fe.$u ? Date.UTC(fe.$y, He, Ne) : new Date(fe.$y, He, Ne), fe);
                            return Me ? et : et.endOf(y)
                        }
                            , je = function (Ne, He) {
                            return le.w(fe.toDate()[Ne].apply(fe.toDate("s"), (Me ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(He)), fe)
                        }
                            , tt = this.$W
                            , ft = this.$M
                            , mt = this.$D
                            , bt = "set" + (this.$u ? "UTC" : "");
                        switch (Xe) {
                            case T:
                                return Me ? Be(1, 0) : Be(31, 11);
                            case w:
                                return Me ? Be(1, ft) : Be(0, ft + 1);
                            case v:
                                var Pe = this.$locale().weekStart || 0
                                    , Ae = (tt < Pe ? tt + 7 : tt) - Pe;
                                return Be(Me ? mt - Ae : mt + (6 - Ae), ft);
                            case y:
                            case I:
                                return je(bt + "Hours", 0);
                            case g:
                                return je(bt + "Minutes", 1);
                            case p:
                                return je(bt + "Seconds", 2);
                            case u:
                                return je(bt + "Milliseconds", 3);
                            default:
                                return this.clone()
                        }
                    }
                    ,
                    de.endOf = function (J) {
                        return this.startOf(J, !1)
                    }
                    ,
                    de.$set = function (J, ue) {
                        var fe, Me = le.p(J), Xe = "set" + (this.$u ? "UTC" : ""), Be = (fe = {},
                            fe[y] = Xe + "Date",
                            fe[I] = Xe + "Date",
                            fe[w] = Xe + "Month",
                            fe[T] = Xe + "FullYear",
                            fe[g] = Xe + "Hours",
                            fe[p] = Xe + "Minutes",
                            fe[u] = Xe + "Seconds",
                            fe[l] = Xe + "Milliseconds",
                            fe)[Me], je = Me === y ? this.$D + (ue - this.$W) : ue;
                        if (Me === w || Me === T) {
                            var tt = this.clone().set(I, 1);
                            tt.$d[Be](je),
                                tt.init(),
                                this.$d = tt.set(I, Math.min(this.$D, tt.daysInMonth())).$d
                        } else
                            Be && this.$d[Be](je);
                        return this.init(),
                            this
                    }
                    ,
                    de.set = function (J, ue) {
                        return this.clone().$set(J, ue)
                    }
                    ,
                    de.get = function (J) {
                        return this[le.p(J)]()
                    }
                    ,
                    de.add = function (J, ue) {
                        var fe, Me = this;
                        J = Number(J);
                        var Xe = le.p(ue)
                            , Be = function (ft) {
                            var mt = ne(Me);
                            return le.w(mt.date(mt.date() + Math.round(ft * J)), Me)
                        };
                        if (Xe === w)
                            return this.set(w, this.$M + J);
                        if (Xe === T)
                            return this.set(T, this.$y + J);
                        if (Xe === y)
                            return Be(1);
                        if (Xe === v)
                            return Be(7);
                        var je = (fe = {},
                            fe[p] = a,
                            fe[g] = o,
                            fe[u] = s,
                            fe)[Xe] || 1
                            , tt = this.$d.getTime() + J * je;
                        return le.w(tt, this)
                    }
                    ,
                    de.subtract = function (J, ue) {
                        return this.add(-1 * J, ue)
                    }
                    ,
                    de.format = function (J) {
                        var ue = this
                            , fe = this.$locale();
                        if (!this.isValid())
                            return fe.invalidDate || A;
                        var Me = J || "YYYY-MM-DDTHH:mm:ssZ"
                            , Xe = le.z(this)
                            , Be = this.$H
                            , je = this.$m
                            , tt = this.$M
                            , ft = fe.weekdays
                            , mt = fe.months
                            , bt = fe.meridiem
                            , Pe = function (He, et, dt, Y) {
                                return He && (He[et] || He(ue, Me)) || dt[et].slice(0, Y)
                            }
                            , Ae = function (He) {
                                return le.s(Be % 12 || 12, He, "0")
                            }
                            , Ne = bt || function (He, et, dt) {
                                var Y = He < 12 ? "AM" : "PM";
                                return dt ? Y.toLowerCase() : Y
                            }
                        ;
                        return Me.replace(P, function (He, et) {
                            return et || function (dt) {
                                switch (dt) {
                                    case "YY":
                                        return String(ue.$y).slice(-2);
                                    case "YYYY":
                                        return le.s(ue.$y, 4, "0");
                                    case "M":
                                        return tt + 1;
                                    case "MM":
                                        return le.s(tt + 1, 2, "0");
                                    case "MMM":
                                        return Pe(fe.monthsShort, tt, mt, 3);
                                    case "MMMM":
                                        return Pe(mt, tt);
                                    case "D":
                                        return ue.$D;
                                    case "DD":
                                        return le.s(ue.$D, 2, "0");
                                    case "d":
                                        return String(ue.$W);
                                    case "dd":
                                        return Pe(fe.weekdaysMin, ue.$W, ft, 2);
                                    case "ddd":
                                        return Pe(fe.weekdaysShort, ue.$W, ft, 3);
                                    case "dddd":
                                        return ft[ue.$W];
                                    case "H":
                                        return String(Be);
                                    case "HH":
                                        return le.s(Be, 2, "0");
                                    case "h":
                                        return Ae(1);
                                    case "hh":
                                        return Ae(2);
                                    case "a":
                                        return Ne(Be, je, !0);
                                    case "A":
                                        return Ne(Be, je, !1);
                                    case "m":
                                        return String(je);
                                    case "mm":
                                        return le.s(je, 2, "0");
                                    case "s":
                                        return String(ue.$s);
                                    case "ss":
                                        return le.s(ue.$s, 2, "0");
                                    case "SSS":
                                        return le.s(ue.$ms, 3, "0");
                                    case "Z":
                                        return Xe
                                }
                                return null
                            }(He) || Xe.replace(":", "")
                        })
                    }
                    ,
                    de.utcOffset = function () {
                        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15)
                    }
                    ,
                    de.diff = function (J, ue, fe) {
                        var Me, Xe = this, Be = le.p(ue), je = ne(J), tt = (je.utcOffset() - this.utcOffset()) * a,
                            ft = this - je, mt = function () {
                                return le.m(Xe, je)
                            };
                        switch (Be) {
                            case T:
                                Me = mt() / 12;
                                break;
                            case w:
                                Me = mt();
                                break;
                            case C:
                                Me = mt() / 3;
                                break;
                            case v:
                                Me = (ft - tt) / 6048e5;
                                break;
                            case y:
                                Me = (ft - tt) / 864e5;
                                break;
                            case g:
                                Me = ft / o;
                                break;
                            case p:
                                Me = ft / a;
                                break;
                            case u:
                                Me = ft / s;
                                break;
                            default:
                                Me = ft
                        }
                        return fe ? Me : le.a(Me)
                    }
                    ,
                    de.daysInMonth = function () {
                        return this.endOf(w).$D
                    }
                    ,
                    de.$locale = function () {
                        return V[this.$L]
                    }
                    ,
                    de.locale = function (J, ue) {
                        if (!J)
                            return this.$L;
                        var fe = this.clone()
                            , Me = te(J, ue, !0);
                        return Me && (fe.$L = Me),
                            fe
                    }
                    ,
                    de.clone = function () {
                        return le.w(this.$d, this)
                    }
                    ,
                    de.toDate = function () {
                        return new Date(this.valueOf())
                    }
                    ,
                    de.toJSON = function () {
                        return this.isValid() ? this.toISOString() : null
                    }
                    ,
                    de.toISOString = function () {
                        return this.$d.toISOString()
                    }
                    ,
                    de.toString = function () {
                        return this.$d.toUTCString()
                    }
                    ,
                    be
            }()
                , ve = oe.prototype;
            return ne.prototype = ve,
                [["$ms", l], ["$s", u], ["$m", p], ["$H", g], ["$W", y], ["$M", w], ["$y", T], ["$D", I]].forEach(function (be) {
                    ve[be[1]] = function (de) {
                        return this.$g(de, be[0], be[1])
                    }
                }),
                ne.extend = function (be, de) {
                    return be.$i || (be(de, oe, ne),
                        be.$i = !0),
                        ne
                }
                ,
                ne.locale = te,
                ne.isDayjs = ie,
                ne.unix = function (be) {
                    return ne(1e3 * be)
                }
                ,
                ne.en = V[$],
                ne.Ls = V,
                ne.p = {},
                ne
        })
    }
)(pS);
var DB = pS.exports;
const gg = pg(DB)
    , FB = gt({
    header: {
        type: String,
        default: ""
    },
    footer: {
        type: String,
        default: ""
    },
    bodyStyle: {
        type: Ye([String, Object, Array]),
        default: ""
    },
    bodyClass: String,
    shadow: {
        type: String,
        values: ["always", "hover", "never"],
        default: "always"
    }
})
    , $B = Ce({
    name: "ElCard"
})
    , BB = Ce({
    ...$B,
    props: FB,
    setup(e) {
        const t = rt("card");
        return (s, a) => (Z(),
            ye("div", {
                class: he([D(t).b(), D(t).is(`${s.shadow}-shadow`)])
            }, [s.$slots.header || s.header ? (Z(),
                ye("div", {
                    key: 0,
                    class: he(D(t).e("header"))
                }, [De(s.$slots, "header", {}, () => [at(me(s.header), 1)])], 2)) : ke("v-if", !0), U("div", {
                class: he([D(t).e("body"), s.bodyClass]),
                style: kt(s.bodyStyle)
            }, [De(s.$slots, "default")], 6), s.$slots.footer || s.footer ? (Z(),
                ye("div", {
                    key: 1,
                    class: he(D(t).e("footer"))
                }, [De(s.$slots, "footer", {}, () => [at(me(s.footer), 1)])], 2)) : ke("v-if", !0)], 2))
    }
});
var HB = ot(BB, [["__file", "card.vue"]]);
const bd = Zt(HB);
var Kc = (e => (e[e.TEXT = 1] = "TEXT",
    e[e.CLASS = 2] = "CLASS",
    e[e.STYLE = 4] = "STYLE",
    e[e.PROPS = 8] = "PROPS",
    e[e.FULL_PROPS = 16] = "FULL_PROPS",
    e[e.HYDRATE_EVENTS = 32] = "HYDRATE_EVENTS",
    e[e.STABLE_FRAGMENT = 64] = "STABLE_FRAGMENT",
    e[e.KEYED_FRAGMENT = 128] = "KEYED_FRAGMENT",
    e[e.UNKEYED_FRAGMENT = 256] = "UNKEYED_FRAGMENT",
    e[e.NEED_PATCH = 512] = "NEED_PATCH",
    e[e.DYNAMIC_SLOTS = 1024] = "DYNAMIC_SLOTS",
    e[e.HOISTED = -1] = "HOISTED",
    e[e.BAIL = -2] = "BAIL",
    e))(Kc || {});
const Fr = e => {
    const t = Ze(e) ? e : [e]
        , s = [];
    return t.forEach(a => {
            var o;
            Ze(a) ? s.push(...Fr(a)) : Hs(a) && ((o = a.component) != null && o.subTree) ? s.push(a, ...Fr(a.component.subTree)) : Hs(a) && Ze(a.children) ? s.push(...Fr(a.children)) : Hs(a) && a.shapeFlag === 2 ? s.push(...Fr(a.type())) : s.push(a)
        }
    ),
        s
}
    , VB = (e, t, s) => Fr(e.subTree).filter(l => {
        var u;
        return Hs(l) && ((u = l.type) == null ? void 0 : u.name) === t && !!l.component
    }
).map(l => l.component.uid).map(l => s[l]).filter(l => !!l)
    , zB = (e, t) => {
    const s = {}
        , a = Bs([]);
    return {
        children: a,
        addChild: u => {
            s[u.uid] = u,
                a.value = VB(e, t, s)
        }
        ,
        removeChild: u => {
            delete s[u],
                a.value = a.value.filter(p => p.uid !== u)
        }
    }
}
    , gS = {
    modelValue: {
        type: [Number, String, Boolean],
        default: void 0
    },
    label: {
        type: [String, Boolean, Number, Object],
        default: void 0
    },
    value: {
        type: [String, Boolean, Number, Object],
        default: void 0
    },
    indeterminate: Boolean,
    disabled: Boolean,
    checked: Boolean,
    name: {
        type: String,
        default: void 0
    },
    trueValue: {
        type: [String, Number],
        default: void 0
    },
    falseValue: {
        type: [String, Number],
        default: void 0
    },
    trueLabel: {
        type: [String, Number],
        default: void 0
    },
    falseLabel: {
        type: [String, Number],
        default: void 0
    },
    id: {
        type: String,
        default: void 0
    },
    border: Boolean,
    size: mr,
    tabindex: [String, Number],
    validateEvent: {
        type: Boolean,
        default: !0
    },
    ...ta(["ariaControls"])
}
    , mS = {
    [ms]: e => pt(e) || ts(e) || zs(e),
    change: e => pt(e) || ts(e) || zs(e)
}
    , Io = Symbol("checkboxGroupContextKey")
    , WB = ({model: e, isChecked: t}) => {
    const s = st(Io, void 0)
        , a = re(() => {
            var l, u;
            const p = (l = s == null ? void 0 : s.max) == null ? void 0 : l.value
                , g = (u = s == null ? void 0 : s.min) == null ? void 0 : u.value;
            return !jn(p) && e.value.length >= p && !t.value || !jn(g) && e.value.length <= g && t.value
        }
    );
    return {
        isDisabled: Ci(re(() => (s == null ? void 0 : s.disabled.value) || a.value)),
        isLimitDisabled: a
    }
}
    , UB = (e, {model: t, isLimitExceeded: s, hasOwnLabel: a, isDisabled: o, isLabeledByFormItem: l}) => {
    const u = st(Io, void 0)
        , {formItem: p} = Na()
        , {emit: g} = Et();

    function y(I) {
        var A, R, P, M;
        return [!0, e.trueValue, e.trueLabel].includes(I) ? (R = (A = e.trueValue) != null ? A : e.trueLabel) != null ? R : !0 : (M = (P = e.falseValue) != null ? P : e.falseLabel) != null ? M : !1
    }

    function v(I, A) {
        g(wn, y(I), A)
    }

    function w(I) {
        if (s.value)
            return;
        const A = I.target;
        g(wn, y(A.checked), I)
    }

    async function C(I) {
        s.value || !a.value && !o.value && l.value && (I.composedPath().some(P => P.tagName === "LABEL") || (t.value = y([!1, e.falseValue, e.falseLabel].includes(t.value)),
            await xt(),
            v(t.value, I)))
    }

    const T = re(() => (u == null ? void 0 : u.validateEvent) || e.validateEvent);
    return Ke(() => e.modelValue, () => {
            T.value && (p == null || p.validate("change").catch(I => void 0))
        }
    ),
        {
            handleChange: w,
            onClickRoot: C
        }
}
    , YB = e => {
    const t = Se(!1)
        , {emit: s} = Et()
        , a = st(Io, void 0)
        , o = re(() => jn(a) === !1)
        , l = Se(!1)
        , u = re({
        get() {
            var p, g;
            return o.value ? (p = a == null ? void 0 : a.modelValue) == null ? void 0 : p.value : (g = e.modelValue) != null ? g : t.value
        },
        set(p) {
            var g, y;
            o.value && Ze(p) ? (l.value = ((g = a == null ? void 0 : a.max) == null ? void 0 : g.value) !== void 0 && p.length > (a == null ? void 0 : a.max.value) && p.length > u.value.length,
            l.value === !1 && ((y = a == null ? void 0 : a.changeEvent) == null || y.call(a, p))) : (s(ms, p),
                t.value = p)
        }
    });
    return {
        model: u,
        isGroup: o,
        isLimitExceeded: l
    }
}
    , XB = (e, t, {model: s}) => {
    const a = st(Io, void 0)
        , o = Se(!1)
        , l = re(() => Nl(e.value) ? e.label : e.value)
        , u = re(() => {
            const v = s.value;
            return zs(v) ? v : Ze(v) ? At(l.value) ? v.map(Ft).some(w => Za(w, l.value)) : v.map(Ft).includes(l.value) : v != null ? v === e.trueValue || v === e.trueLabel : !!v
        }
    )
        , p = ii(re(() => {
            var v;
            return (v = a == null ? void 0 : a.size) == null ? void 0 : v.value
        }
    ), {
        prop: !0
    })
        , g = ii(re(() => {
            var v;
            return (v = a == null ? void 0 : a.size) == null ? void 0 : v.value
        }
    ))
        , y = re(() => !!t.default || !Nl(l.value));
    return {
        checkboxButtonSize: p,
        isChecked: u,
        isFocused: o,
        checkboxSize: g,
        hasOwnLabel: y,
        actualValue: l
    }
}
    , vS = (e, t) => {
    const {formItem: s} = Na()
        , {model: a, isGroup: o, isLimitExceeded: l} = YB(e)
        , {
        isFocused: u,
        isChecked: p,
        checkboxButtonSize: g,
        checkboxSize: y,
        hasOwnLabel: v,
        actualValue: w
    } = XB(e, t, {
        model: a
    })
        , {isDisabled: C} = WB({
        model: a,
        isChecked: p
    })
        , {inputId: T, isLabeledByFormItem: I} = To(e, {
        formItemContext: s,
        disableIdGeneration: v,
        disableIdManagement: o
    })
        , {handleChange: A, onClickRoot: R} = UB(e, {
        model: a,
        isLimitExceeded: l,
        hasOwnLabel: v,
        isDisabled: C,
        isLabeledByFormItem: I
    });
    return (() => {
            function M() {
                var O, F;
                Ze(a.value) && !a.value.includes(w.value) ? a.value.push(w.value) : a.value = (F = (O = e.trueValue) != null ? O : e.trueLabel) != null ? F : !0
            }

            e.checked && M()
        }
    )(),
        Yr({
            from: "label act as value",
            replacement: "value",
            version: "3.0.0",
            scope: "el-checkbox",
            ref: "https://element-plus.org/en-US/component/checkbox.html"
        }, re(() => o.value && Nl(e.value))),
        Yr({
            from: "true-label",
            replacement: "true-value",
            version: "3.0.0",
            scope: "el-checkbox",
            ref: "https://element-plus.org/en-US/component/checkbox.html"
        }, re(() => !!e.trueLabel)),
        Yr({
            from: "false-label",
            replacement: "false-value",
            version: "3.0.0",
            scope: "el-checkbox",
            ref: "https://element-plus.org/en-US/component/checkbox.html"
        }, re(() => !!e.falseLabel)),
        {
            inputId: T,
            isLabeledByFormItem: I,
            isChecked: p,
            isDisabled: C,
            isFocused: u,
            checkboxButtonSize: g,
            checkboxSize: y,
            hasOwnLabel: v,
            model: a,
            actualValue: w,
            handleChange: A,
            onClickRoot: R
        }
}
    , jB = Ce({
    name: "ElCheckbox"
})
    , GB = Ce({
    ...jB,
    props: gS,
    emits: mS,
    setup(e) {
        const t = e
            , s = _i()
            , {
                inputId: a,
                isLabeledByFormItem: o,
                isChecked: l,
                isDisabled: u,
                isFocused: p,
                checkboxSize: g,
                hasOwnLabel: y,
                model: v,
                actualValue: w,
                handleChange: C,
                onClickRoot: T
            } = vS(t, s)
            , I = rt("checkbox")
            ,
            A = re(() => [I.b(), I.m(g.value), I.is("disabled", u.value), I.is("bordered", t.border), I.is("checked", l.value)])
            ,
            R = re(() => [I.e("input"), I.is("disabled", u.value), I.is("checked", l.value), I.is("indeterminate", t.indeterminate), I.is("focus", p.value)]);
        return (P, M) => (Z(),
            Te(Vt(!D(y) && D(o) ? "span" : "label"), {
                class: he(D(A)),
                "aria-controls": P.indeterminate ? P.ariaControls : null,
                onClick: D(T)
            }, {
                default: se(() => {
                        var O, F, $, V;
                        return [U("span", {
                            class: he(D(R))
                        }, [P.trueValue || P.falseValue || P.trueLabel || P.falseLabel ? _t((Z(),
                            ye("input", {
                                key: 0,
                                id: D(a),
                                "onUpdate:modelValue": G => Qt(v) ? v.value = G : null,
                                class: he(D(I).e("original")),
                                type: "checkbox",
                                indeterminate: P.indeterminate,
                                name: P.name,
                                tabindex: P.tabindex,
                                disabled: D(u),
                                "true-value": (F = (O = P.trueValue) != null ? O : P.trueLabel) != null ? F : !0,
                                "false-value": (V = ($ = P.falseValue) != null ? $ : P.falseLabel) != null ? V : !1,
                                onChange: D(C),
                                onFocus: G => p.value = !0,
                                onBlur: G => p.value = !1,
                                onClick: Ot(() => {
                                    }
                                    , ["stop"])
                            }, null, 42, ["id", "onUpdate:modelValue", "indeterminate", "name", "tabindex", "disabled", "true-value", "false-value", "onChange", "onFocus", "onBlur", "onClick"])), [[nr, D(v)]]) : _t((Z(),
                            ye("input", {
                                key: 1,
                                id: D(a),
                                "onUpdate:modelValue": G => Qt(v) ? v.value = G : null,
                                class: he(D(I).e("original")),
                                type: "checkbox",
                                indeterminate: P.indeterminate,
                                disabled: D(u),
                                value: D(w),
                                name: P.name,
                                tabindex: P.tabindex,
                                onChange: D(C),
                                onFocus: G => p.value = !0,
                                onBlur: G => p.value = !1,
                                onClick: Ot(() => {
                                    }
                                    , ["stop"])
                            }, null, 42, ["id", "onUpdate:modelValue", "indeterminate", "disabled", "value", "name", "tabindex", "onChange", "onFocus", "onBlur", "onClick"])), [[nr, D(v)]]), U("span", {
                            class: he(D(I).e("inner"))
                        }, null, 2)], 2), D(y) ? (Z(),
                            ye("span", {
                                key: 0,
                                class: he(D(I).e("label"))
                            }, [De(P.$slots, "default"), P.$slots.default ? ke("v-if", !0) : (Z(),
                                ye(Ct, {
                                    key: 0
                                }, [at(me(P.label), 1)], 64))], 2)) : ke("v-if", !0)]
                    }
                ),
                _: 3
            }, 8, ["class", "aria-controls", "onClick"]))
    }
});
var qB = ot(GB, [["__file", "checkbox.vue"]]);
const KB = Ce({
    name: "ElCheckboxButton"
})
    , ZB = Ce({
    ...KB,
    props: gS,
    emits: mS,
    setup(e) {
        const t = e
            , s = _i()
            , {
                isFocused: a,
                isChecked: o,
                isDisabled: l,
                checkboxButtonSize: u,
                model: p,
                actualValue: g,
                handleChange: y
            } = vS(t, s)
            , v = st(Io, void 0)
            , w = rt("checkbox")
            , C = re(() => {
                    var I, A, R, P;
                    const M = (A = (I = v == null ? void 0 : v.fill) == null ? void 0 : I.value) != null ? A : "";
                    return {
                        backgroundColor: M,
                        borderColor: M,
                        color: (P = (R = v == null ? void 0 : v.textColor) == null ? void 0 : R.value) != null ? P : "",
                        boxShadow: M ? `-1px 0 0 0 ${M}` : void 0
                    }
                }
            )
            ,
            T = re(() => [w.b("button"), w.bm("button", u.value), w.is("disabled", l.value), w.is("checked", o.value), w.is("focus", a.value)]);
        return (I, A) => {
            var R, P, M, O;
            return Z(),
                ye("label", {
                    class: he(D(T))
                }, [I.trueValue || I.falseValue || I.trueLabel || I.falseLabel ? _t((Z(),
                    ye("input", {
                        key: 0,
                        "onUpdate:modelValue": F => Qt(p) ? p.value = F : null,
                        class: he(D(w).be("button", "original")),
                        type: "checkbox",
                        name: I.name,
                        tabindex: I.tabindex,
                        disabled: D(l),
                        "true-value": (P = (R = I.trueValue) != null ? R : I.trueLabel) != null ? P : !0,
                        "false-value": (O = (M = I.falseValue) != null ? M : I.falseLabel) != null ? O : !1,
                        onChange: D(y),
                        onFocus: F => a.value = !0,
                        onBlur: F => a.value = !1,
                        onClick: Ot(() => {
                            }
                            , ["stop"])
                    }, null, 42, ["onUpdate:modelValue", "name", "tabindex", "disabled", "true-value", "false-value", "onChange", "onFocus", "onBlur", "onClick"])), [[nr, D(p)]]) : _t((Z(),
                    ye("input", {
                        key: 1,
                        "onUpdate:modelValue": F => Qt(p) ? p.value = F : null,
                        class: he(D(w).be("button", "original")),
                        type: "checkbox",
                        name: I.name,
                        tabindex: I.tabindex,
                        disabled: D(l),
                        value: D(g),
                        onChange: D(y),
                        onFocus: F => a.value = !0,
                        onBlur: F => a.value = !1,
                        onClick: Ot(() => {
                            }
                            , ["stop"])
                    }, null, 42, ["onUpdate:modelValue", "name", "tabindex", "disabled", "value", "onChange", "onFocus", "onBlur", "onClick"])), [[nr, D(p)]]), I.$slots.default || I.label ? (Z(),
                    ye("span", {
                        key: 2,
                        class: he(D(w).be("button", "inner")),
                        style: kt(D(o) ? D(C) : void 0)
                    }, [De(I.$slots, "default", {}, () => [at(me(I.label), 1)])], 6)) : ke("v-if", !0)], 2)
        }
    }
});
var bS = ot(ZB, [["__file", "checkbox-button.vue"]]);
const JB = gt({
    modelValue: {
        type: Ye(Array),
        default: () => []
    },
    disabled: Boolean,
    min: Number,
    max: Number,
    size: mr,
    fill: String,
    textColor: String,
    tag: {
        type: String,
        default: "div"
    },
    validateEvent: {
        type: Boolean,
        default: !0
    },
    ...ta(["ariaLabel"])
})
    , QB = {
    [ms]: e => Ze(e),
    change: e => Ze(e)
}
    , eH = Ce({
    name: "ElCheckboxGroup"
})
    , tH = Ce({
    ...eH,
    props: JB,
    emits: QB,
    setup(e, {emit: t}) {
        const s = e
            , a = rt("checkbox")
            , {formItem: o} = Na()
            , {inputId: l, isLabeledByFormItem: u} = To(s, {
            formItemContext: o
        })
            , p = async y => {
            t(ms, y),
                await xt(),
                t(wn, y)
        }
            , g = re({
            get() {
                return s.modelValue
            },
            set(y) {
                p(y)
            }
        });
        return Xt(Io, {
            ...ww(ai(s), ["size", "min", "max", "disabled", "validateEvent", "fill", "textColor"]),
            modelValue: g,
            changeEvent: p
        }),
            Ke(() => s.modelValue, () => {
                    s.validateEvent && (o == null || o.validate("change").catch(y => void 0))
                }
            ),
            (y, v) => {
                var w;
                return Z(),
                    Te(Vt(y.tag), {
                        id: D(l),
                        class: he(D(a).b("group")),
                        role: "group",
                        "aria-label": D(u) ? void 0 : y.ariaLabel || "checkbox-group",
                        "aria-labelledby": D(u) ? (w = D(o)) == null ? void 0 : w.labelId : void 0
                    }, {
                        default: se(() => [De(y.$slots, "default")]),
                        _: 3
                    }, 8, ["id", "class", "aria-label", "aria-labelledby"])
            }
    }
});
var yS = ot(tH, [["__file", "checkbox-group.vue"]]);
const sH = Zt(qB, {
    CheckboxButton: bS,
    CheckboxGroup: yS
});
Os(bS);
const nH = Os(yS)
    , xS = gt({
    modelValue: {
        type: [String, Number, Boolean],
        default: void 0
    },
    size: mr,
    disabled: Boolean,
    label: {
        type: [String, Number, Boolean],
        default: void 0
    },
    value: {
        type: [String, Number, Boolean],
        default: void 0
    },
    name: {
        type: String,
        default: void 0
    }
})
    , iH = gt({
    ...xS,
    border: Boolean
})
    , wS = {
    [ms]: e => pt(e) || ts(e) || zs(e),
    [wn]: e => pt(e) || ts(e) || zs(e)
}
    , SS = Symbol("radioGroupKey")
    , _S = (e, t) => {
    const s = Se()
        , a = st(SS, void 0)
        , o = re(() => !!a)
        , l = re(() => Nl(e.value) ? e.label : e.value)
        , u = re({
        get() {
            return o.value ? a.modelValue : e.modelValue
        },
        set(w) {
            o.value ? a.changeEvent(w) : t && t(ms, w),
                s.value.checked = e.modelValue === l.value
        }
    })
        , p = ii(re(() => a == null ? void 0 : a.size))
        , g = Ci(re(() => a == null ? void 0 : a.disabled))
        , y = Se(!1)
        , v = re(() => g.value || o.value && u.value !== l.value ? -1 : 0);
    return Yr({
        from: "label act as value",
        replacement: "value",
        version: "3.0.0",
        scope: "el-radio",
        ref: "https://element-plus.org/en-US/component/radio.html"
    }, re(() => o.value && Nl(e.value))),
        {
            radioRef: s,
            isGroup: o,
            radioGroup: a,
            focus: y,
            size: p,
            disabled: g,
            tabIndex: v,
            modelValue: u,
            actualValue: l
        }
}
    , aH = Ce({
    name: "ElRadio"
})
    , rH = Ce({
    ...aH,
    props: iH,
    emits: wS,
    setup(e, {emit: t}) {
        const s = e
            , a = rt("radio")
            , {radioRef: o, radioGroup: l, focus: u, size: p, disabled: g, modelValue: y, actualValue: v} = _S(s, t);

        function w() {
            xt(() => t(wn, y.value))
        }

        return (C, T) => {
            var I;
            return Z(),
                ye("label", {
                    class: he([D(a).b(), D(a).is("disabled", D(g)), D(a).is("focus", D(u)), D(a).is("bordered", C.border), D(a).is("checked", D(y) === D(v)), D(a).m(D(p))])
                }, [U("span", {
                    class: he([D(a).e("input"), D(a).is("disabled", D(g)), D(a).is("checked", D(y) === D(v))])
                }, [_t(U("input", {
                    ref_key: "radioRef",
                    ref: o,
                    "onUpdate:modelValue": A => Qt(y) ? y.value = A : null,
                    class: he(D(a).e("original")),
                    value: D(v),
                    name: C.name || ((I = D(l)) == null ? void 0 : I.name),
                    disabled: D(g),
                    checked: D(y) === D(v),
                    type: "radio",
                    onFocus: A => u.value = !0,
                    onBlur: A => u.value = !1,
                    onChange: w,
                    onClick: Ot(() => {
                        }
                        , ["stop"])
                }, null, 42, ["onUpdate:modelValue", "value", "name", "disabled", "checked", "onFocus", "onBlur", "onClick"]), [[Jl, D(y)]]), U("span", {
                    class: he(D(a).e("inner"))
                }, null, 2)], 2), U("span", {
                    class: he(D(a).e("label")),
                    onKeydown: Ot(() => {
                        }
                        , ["stop"])
                }, [De(C.$slots, "default", {}, () => [at(me(C.label), 1)])], 42, ["onKeydown"])], 2)
        }
    }
});
var oH = ot(rH, [["__file", "radio.vue"]]);
const lH = gt({
    ...xS
})
    , cH = Ce({
    name: "ElRadioButton"
})
    , uH = Ce({
    ...cH,
    props: lH,
    setup(e) {
        const t = e
            , s = rt("radio")
            , {radioRef: a, focus: o, size: l, disabled: u, modelValue: p, radioGroup: g, actualValue: y} = _S(t)
            , v = re(() => ({
            backgroundColor: (g == null ? void 0 : g.fill) || "",
            borderColor: (g == null ? void 0 : g.fill) || "",
            boxShadow: g != null && g.fill ? `-1px 0 0 0 ${g.fill}` : "",
            color: (g == null ? void 0 : g.textColor) || ""
        }));
        return (w, C) => {
            var T;
            return Z(),
                ye("label", {
                    class: he([D(s).b("button"), D(s).is("active", D(p) === D(y)), D(s).is("disabled", D(u)), D(s).is("focus", D(o)), D(s).bm("button", D(l))])
                }, [_t(U("input", {
                    ref_key: "radioRef",
                    ref: a,
                    "onUpdate:modelValue": I => Qt(p) ? p.value = I : null,
                    class: he(D(s).be("button", "original-radio")),
                    value: D(y),
                    type: "radio",
                    name: w.name || ((T = D(g)) == null ? void 0 : T.name),
                    disabled: D(u),
                    onFocus: I => o.value = !0,
                    onBlur: I => o.value = !1,
                    onClick: Ot(() => {
                        }
                        , ["stop"])
                }, null, 42, ["onUpdate:modelValue", "value", "name", "disabled", "onFocus", "onBlur", "onClick"]), [[Jl, D(p)]]), U("span", {
                    class: he(D(s).be("button", "inner")),
                    style: kt(D(p) === D(y) ? D(v) : {}),
                    onKeydown: Ot(() => {
                        }
                        , ["stop"])
                }, [De(w.$slots, "default", {}, () => [at(me(w.label), 1)])], 46, ["onKeydown"])], 2)
        }
    }
});
var kS = ot(uH, [["__file", "radio-button.vue"]]);
const dH = gt({
    id: {
        type: String,
        default: void 0
    },
    size: mr,
    disabled: Boolean,
    modelValue: {
        type: [String, Number, Boolean],
        default: void 0
    },
    fill: {
        type: String,
        default: ""
    },
    textColor: {
        type: String,
        default: ""
    },
    name: {
        type: String,
        default: void 0
    },
    validateEvent: {
        type: Boolean,
        default: !0
    },
    ...ta(["ariaLabel"])
})
    , hH = wS
    , fH = Ce({
    name: "ElRadioGroup"
})
    , pH = Ce({
    ...fH,
    props: dH,
    emits: hH,
    setup(e, {emit: t}) {
        const s = e
            , a = rt("radio")
            , o = Nn()
            , l = Se()
            , {formItem: u} = Na()
            , {inputId: p, isLabeledByFormItem: g} = To(s, {
                formItemContext: u
            })
            , y = w => {
                t(ms, w),
                    xt(() => t(wn, w))
            }
        ;
        $t(() => {
                const w = l.value.querySelectorAll("[type=radio]")
                    , C = w[0];
                !Array.from(w).some(T => T.checked) && C && (C.tabIndex = 0)
            }
        );
        const v = re(() => s.name || o.value);
        return Xt(SS, ys({
            ...ai(s),
            changeEvent: y,
            name: v
        })),
            Ke(() => s.modelValue, () => {
                    s.validateEvent && (u == null || u.validate("change").catch(w => void 0))
                }
            ),
            (w, C) => (Z(),
                ye("div", {
                    id: D(p),
                    ref_key: "radioGroupRef",
                    ref: l,
                    class: he(D(a).b("group")),
                    role: "radiogroup",
                    "aria-label": D(g) ? void 0 : w.ariaLabel || "radio-group",
                    "aria-labelledby": D(g) ? D(u).labelId : void 0
                }, [De(w.$slots, "default")], 10, ["id", "aria-label", "aria-labelledby"]))
    }
});
var CS = ot(pH, [["__file", "radio-group.vue"]]);
const gH = Zt(oH, {
    RadioButton: kS,
    RadioGroup: CS
})
    , AS = Os(CS)
    , mH = Os(kS)
    , vH = (e = "") => e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d")
    , ya = e => yo(e)
    , xf = gt({
    type: {
        type: String,
        values: ["primary", "success", "info", "warning", "danger"],
        default: "primary"
    },
    closable: Boolean,
    disableTransitions: Boolean,
    hit: Boolean,
    color: String,
    size: {
        type: String,
        values: rc
    },
    effect: {
        type: String,
        values: ["dark", "light", "plain"],
        default: "light"
    },
    round: Boolean
})
    , bH = {
    close: e => e instanceof MouseEvent,
    click: e => e instanceof MouseEvent
}
    , yH = Ce({
    name: "ElTag"
})
    , xH = Ce({
    ...yH,
    props: xf,
    emits: bH,
    setup(e, {emit: t}) {
        const s = e
            , a = ii()
            , o = rt("tag")
            , l = re(() => {
                    const {type: y, hit: v, effect: w, closable: C, round: T} = s;
                    return [o.b(), o.is("closable", C), o.m(y || "primary"), o.m(a.value), o.m(w), o.is("hit", v), o.is("round", T)]
                }
            )
            , u = y => {
                t("close", y)
            }
            , p = y => {
                t("click", y)
            }
            , g = y => {
                var v, w, C;
                (C = (w = (v = y == null ? void 0 : y.component) == null ? void 0 : v.subTree) == null ? void 0 : w.component) != null && C.bum && (y.component.subTree.component.bum = null)
            }
        ;
        return (y, v) => y.disableTransitions ? (Z(),
            ye("span", {
                key: 0,
                class: he(D(l)),
                style: kt({
                    backgroundColor: y.color
                }),
                onClick: p
            }, [U("span", {
                class: he(D(o).e("content"))
            }, [De(y.$slots, "default")], 2), y.closable ? (Z(),
                Te(D(Mt), {
                    key: 0,
                    class: he(D(o).e("close")),
                    onClick: Ot(u, ["stop"])
                }, {
                    default: se(() => [ae(D(ar))]),
                    _: 1
                }, 8, ["class", "onClick"])) : ke("v-if", !0)], 6)) : (Z(),
            Te(fn, {
                key: 1,
                name: `${D(o).namespace.value}-zoom-in-center`,
                appear: "",
                onVnodeMounted: g
            }, {
                default: se(() => [U("span", {
                    class: he(D(l)),
                    style: kt({
                        backgroundColor: y.color
                    }),
                    onClick: p
                }, [U("span", {
                    class: he(D(o).e("content"))
                }, [De(y.$slots, "default")], 2), y.closable ? (Z(),
                    Te(D(Mt), {
                        key: 0,
                        class: he(D(o).e("close")),
                        onClick: Ot(u, ["stop"])
                    }, {
                        default: se(() => [ae(D(ar))]),
                        _: 1
                    }, 8, ["class", "onClick"])) : ke("v-if", !0)], 6)]),
                _: 3
            }, 8, ["name"]))
    }
});
var wH = ot(xH, [["__file", "tag.vue"]]);
const Po = Zt(wH)
    , da = new Map;
if (cs) {
    let e;
    document.addEventListener("mousedown", t => e = t),
        document.addEventListener("mouseup", t => {
                if (e) {
                    for (const s of da.values())
                        for (const {documentHandler: a} of s)
                            a(t, e);
                    e = void 0
                }
            }
        )
}

function qb(e, t) {
    let s = [];
    return Ze(t.arg) ? s = t.arg : Qn(t.arg) && s.push(t.arg),
        function (a, o) {
            const l = t.instance.popperRef
                , u = a.target
                , p = o == null ? void 0 : o.target
                , g = !t || !t.instance
                , y = !u || !p
                , v = e.contains(u) || e.contains(p)
                , w = e === u
                , C = s.length && s.some(I => I == null ? void 0 : I.contains(u)) || s.length && s.includes(p)
                , T = l && (l.contains(u) || l.contains(p));
            g || y || v || w || C || T || t.value(a, o)
        }
}

const ES = {
    beforeMount(e, t) {
        da.has(e) || da.set(e, []),
            da.get(e).push({
                documentHandler: qb(e, t),
                bindingFn: t.value
            })
    },
    updated(e, t) {
        da.has(e) || da.set(e, []);
        const s = da.get(e)
            , a = s.findIndex(l => l.bindingFn === t.oldValue)
            , o = {
            documentHandler: qb(e, t),
            bindingFn: t.value
        };
        a >= 0 ? s.splice(a, 1, o) : s.push(o)
    },
    unmounted(e) {
        da.delete(e)
    }
}
    , SH = gt({
    tag: {
        type: String,
        default: "div"
    },
    span: {
        type: Number,
        default: 24
    },
    offset: {
        type: Number,
        default: 0
    },
    pull: {
        type: Number,
        default: 0
    },
    push: {
        type: Number,
        default: 0
    },
    xs: {
        type: Ye([Number, Object]),
        default: () => bn({})
    },
    sm: {
        type: Ye([Number, Object]),
        default: () => bn({})
    },
    md: {
        type: Ye([Number, Object]),
        default: () => bn({})
    },
    lg: {
        type: Ye([Number, Object]),
        default: () => bn({})
    },
    xl: {
        type: Ye([Number, Object]),
        default: () => bn({})
    }
})
    , TS = Symbol("rowContextKey")
    , _H = Ce({
    name: "ElCol"
})
    , kH = Ce({
    ..._H,
    props: SH,
    setup(e) {
        const t = e
            , {gutter: s} = st(TS, {
            gutter: re(() => 0)
        })
            , a = rt("col")
            , o = re(() => {
                const u = {};
                return s.value && (u.paddingLeft = u.paddingRight = `${s.value / 2}px`),
                    u
            }
        )
            , l = re(() => {
                const u = [];
                return ["span", "offset", "pull", "push"].forEach(y => {
                        const v = t[y];
                        ts(v) && (y === "span" ? u.push(a.b(`${t[y]}`)) : v > 0 && u.push(a.b(`${y}-${t[y]}`)))
                    }
                ),
                    ["xs", "sm", "md", "lg", "xl"].forEach(y => {
                            ts(t[y]) ? u.push(a.b(`${y}-${t[y]}`)) : At(t[y]) && Object.entries(t[y]).forEach(([v, w]) => {
                                    u.push(v !== "span" ? a.b(`${y}-${v}-${w}`) : a.b(`${y}-${w}`))
                                }
                            )
                        }
                    ),
                s.value && u.push(a.is("guttered")),
                    [a.b(), u]
            }
        );
        return (u, p) => (Z(),
            Te(Vt(u.tag), {
                class: he(D(l)),
                style: kt(D(o))
            }, {
                default: se(() => [De(u.$slots, "default")]),
                _: 3
            }, 8, ["class", "style"]))
    }
});
var CH = ot(kH, [["__file", "col.vue"]]);
const IS = Zt(CH)
    , AH = Ce({
    name: "ElCollapseTransition"
})
    , EH = Ce({
    ...AH,
    setup(e) {
        const t = rt("collapse-transition")
            , s = o => {
            o.style.maxHeight = "",
                o.style.overflow = o.dataset.oldOverflow,
                o.style.paddingTop = o.dataset.oldPaddingTop,
                o.style.paddingBottom = o.dataset.oldPaddingBottom
        }
            , a = {
            beforeEnter(o) {
                o.dataset || (o.dataset = {}),
                    o.dataset.oldPaddingTop = o.style.paddingTop,
                    o.dataset.oldPaddingBottom = o.style.paddingBottom,
                o.style.height && (o.dataset.elExistsHeight = o.style.height),
                    o.style.maxHeight = 0,
                    o.style.paddingTop = 0,
                    o.style.paddingBottom = 0
            },
            enter(o) {
                requestAnimationFrame(() => {
                        o.dataset.oldOverflow = o.style.overflow,
                            o.dataset.elExistsHeight ? o.style.maxHeight = o.dataset.elExistsHeight : o.scrollHeight !== 0 ? o.style.maxHeight = `${o.scrollHeight}px` : o.style.maxHeight = 0,
                            o.style.paddingTop = o.dataset.oldPaddingTop,
                            o.style.paddingBottom = o.dataset.oldPaddingBottom,
                            o.style.overflow = "hidden"
                    }
                )
            },
            afterEnter(o) {
                o.style.maxHeight = "",
                    o.style.overflow = o.dataset.oldOverflow
            },
            enterCancelled(o) {
                s(o)
            },
            beforeLeave(o) {
                o.dataset || (o.dataset = {}),
                    o.dataset.oldPaddingTop = o.style.paddingTop,
                    o.dataset.oldPaddingBottom = o.style.paddingBottom,
                    o.dataset.oldOverflow = o.style.overflow,
                    o.style.maxHeight = `${o.scrollHeight}px`,
                    o.style.overflow = "hidden"
            },
            leave(o) {
                o.scrollHeight !== 0 && (o.style.maxHeight = 0,
                    o.style.paddingTop = 0,
                    o.style.paddingBottom = 0)
            },
            afterLeave(o) {
                s(o)
            },
            leaveCancelled(o) {
                s(o)
            }
        };
        return (o, l) => (Z(),
            Te(fn, vs({
                name: D(t).b()
            }, f0(a)), {
                default: se(() => [De(o.$slots, "default")]),
                _: 3
            }, 16, ["name"]))
    }
});
var TH = ot(EH, [["__file", "collapse-transition.vue"]]);
const or = Zt(TH)
    , pi = {}
    , IH = Ce({
    name: "ElContainer"
})
    , PH = Ce({
    ...IH,
    props: {
        direction: {
            type: String
        }
    },
    setup(e) {
        const t = e
            , s = _i()
            , a = rt("container")
            ,
            o = re(() => t.direction === "vertical" ? !0 : t.direction === "horizontal" ? !1 : s && s.default ? s.default().some(u => {
                    const p = u.type.name;
                    return p === "ElHeader" || p === "ElFooter"
                }
            ) : !1);
        return (l, u) => (Z(),
            ye("section", {
                class: he([D(a).b(), D(a).is("vertical", D(o))])
            }, [De(l.$slots, "default")], 2))
    }
});
var LH = ot(PH, [["__file", "container.vue"]]);
const MH = Ce({
    name: "ElAside"
})
    , OH = Ce({
    ...MH,
    props: {
        width: {
            type: String,
            default: null
        }
    },
    setup(e) {
        const t = e
            , s = rt("aside")
            , a = re(() => t.width ? s.cssVarBlock({
            width: t.width
        }) : {});
        return (o, l) => (Z(),
            ye("aside", {
                class: he(D(s).b()),
                style: kt(D(a))
            }, [De(o.$slots, "default")], 6))
    }
});
var PS = ot(OH, [["__file", "aside.vue"]]);
const RH = Ce({
    name: "ElFooter"
})
    , NH = Ce({
    ...RH,
    props: {
        height: {
            type: String,
            default: null
        }
    },
    setup(e) {
        const t = e
            , s = rt("footer")
            , a = re(() => t.height ? s.cssVarBlock({
            height: t.height
        }) : {});
        return (o, l) => (Z(),
            ye("footer", {
                class: he(D(s).b()),
                style: kt(D(a))
            }, [De(o.$slots, "default")], 6))
    }
});
var LS = ot(NH, [["__file", "footer.vue"]]);
const DH = Ce({
    name: "ElHeader"
})
    , FH = Ce({
    ...DH,
    props: {
        height: {
            type: String,
            default: null
        }
    },
    setup(e) {
        const t = e
            , s = rt("header")
            , a = re(() => t.height ? s.cssVarBlock({
            height: t.height
        }) : {});
        return (o, l) => (Z(),
            ye("header", {
                class: he(D(s).b()),
                style: kt(D(a))
            }, [De(o.$slots, "default")], 6))
    }
});
var MS = ot(FH, [["__file", "header.vue"]]);
const $H = Ce({
    name: "ElMain"
})
    , BH = Ce({
    ...$H,
    setup(e) {
        const t = rt("main");
        return (s, a) => (Z(),
            ye("main", {
                class: he(D(t).b())
            }, [De(s.$slots, "default")], 2))
    }
});
var OS = ot(BH, [["__file", "main.vue"]]);
const HH = Zt(LH, {
    Aside: PS,
    Footer: LS,
    Header: MS,
    Main: OS
})
    , VH = Os(PS);
Os(LS);
const zH = Os(MS)
    , WH = Os(OS)
    , mg = e => {
    if (!e)
        return {
            onClick: Ht,
            onMousedown: Ht,
            onMouseup: Ht
        };
    let t = !1
        , s = !1;
    return {
        onClick: u => {
            t && s && e(u),
                t = s = !1
        }
        ,
        onMousedown: u => {
            t = u.target === u.currentTarget
        }
        ,
        onMouseup: u => {
            s = u.target === u.currentTarget
        }
    }
}
    , UH = gt({
    mask: {
        type: Boolean,
        default: !0
    },
    customMaskEvent: Boolean,
    overlayClass: {
        type: Ye([String, Array, Object])
    },
    zIndex: {
        type: Ye([String, Number])
    }
})
    , YH = {
    click: e => e instanceof MouseEvent
}
    , XH = "overlay";
var jH = Ce({
    name: "ElOverlay",
    props: UH,
    emits: YH,
    setup(e, {slots: t, emit: s}) {
        const a = rt(XH)
            , o = g => {
            s("click", g)
        }
            , {onClick: l, onMousedown: u, onMouseup: p} = mg(e.customMaskEvent ? void 0 : o);
        return () => e.mask ? ae("div", {
            class: [a.b(), e.overlayClass],
            style: {
                zIndex: e.zIndex
            },
            onClick: l,
            onMousedown: u,
            onMouseup: p
        }, [De(t, "default")], Kc.STYLE | Kc.CLASS | Kc.PROPS, ["onClick", "onMouseup", "onMousedown"]) : jt("div", {
            class: e.overlayClass,
            style: {
                zIndex: e.zIndex,
                position: "fixed",
                top: "0px",
                right: "0px",
                bottom: "0px",
                left: "0px"
            }
        }, [De(t, "default")])
    }
});
const RS = jH
    , NS = Symbol("dialogInjectionKey")
    , DS = gt({
    center: Boolean,
    alignCenter: Boolean,
    closeIcon: {
        type: Cs
    },
    draggable: Boolean,
    overflow: Boolean,
    fullscreen: Boolean,
    headerClass: String,
    bodyClass: String,
    footerClass: String,
    showClose: {
        type: Boolean,
        default: !0
    },
    title: {
        type: String,
        default: ""
    },
    ariaLevel: {
        type: String,
        default: "2"
    }
})
    , GH = {
    close: () => !0
}
    , FS = (e, t, s, a) => {
    let o = {
        offsetX: 0,
        offsetY: 0
    };
    const l = y => {
            const v = y.clientX
                , w = y.clientY
                , {offsetX: C, offsetY: T} = o
                , I = e.value.getBoundingClientRect()
                , A = I.left
                , R = I.top
                , P = I.width
                , M = I.height
                , O = document.documentElement.clientWidth
                , F = document.documentElement.clientHeight
                , $ = -A + C
                , V = -R + T
                , G = O - A - P + C
                , ie = F - R - M + T
                , te = le => {
                    let oe = C + le.clientX - v
                        , ve = T + le.clientY - w;
                    a != null && a.value || (oe = Math.min(Math.max(oe, $), G),
                        ve = Math.min(Math.max(ve, V), ie)),
                        o = {
                            offsetX: oe,
                            offsetY: ve
                        },
                    e.value && (e.value.style.transform = `translate(${Sn(oe)}, ${Sn(ve)})`)
                }
                , ne = () => {
                    document.removeEventListener("mousemove", te),
                        document.removeEventListener("mouseup", ne)
                }
            ;
            document.addEventListener("mousemove", te),
                document.addEventListener("mouseup", ne)
        }
        , u = () => {
            t.value && e.value && t.value.addEventListener("mousedown", l)
        }
        , p = () => {
            t.value && e.value && t.value.removeEventListener("mousedown", l)
        }
        , g = () => {
            o = {
                offsetX: 0,
                offsetY: 0
            },
            e.value && (e.value.style.transform = "none")
        }
    ;
    return $t(() => {
            So(() => {
                    s.value ? u() : p()
                }
            )
        }
    ),
        us(() => {
                p()
            }
        ),
        {
            resetPosition: g
        }
}
    , vg = (...e) => t => {
    e.forEach(s => {
            nt(s) ? s(t) : s.value = t
        }
    )
}
    , qH = Ce({
    name: "ElDialogContent"
})
    , KH = Ce({
    ...qH,
    props: DS,
    emits: GH,
    setup(e, {expose: t}) {
        const s = e
            , {t: a} = ac()
            , {Close: o} = o8
            , {dialogRef: l, headerRef: u, bodyId: p, ns: g, style: y} = st(NS)
            , {focusTrapRef: v} = st(eg)
            ,
            w = re(() => [g.b(), g.is("fullscreen", s.fullscreen), g.is("draggable", s.draggable), g.is("align-center", s.alignCenter), {
                [g.m("center")]: s.center
            }])
            , C = vg(v, l)
            , T = re(() => s.draggable)
            , I = re(() => s.overflow)
            , {resetPosition: A} = FS(l, u, T, I);
        return t({
            resetPosition: A
        }),
            (R, P) => (Z(),
                ye("div", {
                    ref: D(C),
                    class: he(D(w)),
                    style: kt(D(y)),
                    tabindex: "-1"
                }, [U("header", {
                    ref_key: "headerRef",
                    ref: u,
                    class: he([D(g).e("header"), R.headerClass, {
                        "show-close": R.showClose
                    }])
                }, [De(R.$slots, "header", {}, () => [U("span", {
                    role: "heading",
                    "aria-level": R.ariaLevel,
                    class: he(D(g).e("title"))
                }, me(R.title), 11, ["aria-level"])]), R.showClose ? (Z(),
                    ye("button", {
                        key: 0,
                        "aria-label": D(a)("el.dialog.close"),
                        class: he(D(g).e("headerbtn")),
                        type: "button",
                        onClick: M => R.$emit("close")
                    }, [ae(D(Mt), {
                        class: he(D(g).e("close"))
                    }, {
                        default: se(() => [(Z(),
                            Te(Vt(R.closeIcon || D(o))))]),
                        _: 1
                    }, 8, ["class"])], 10, ["aria-label", "onClick"])) : ke("v-if", !0)], 2), U("div", {
                    id: D(p),
                    class: he([D(g).e("body"), R.bodyClass])
                }, [De(R.$slots, "default")], 10, ["id"]), R.$slots.footer ? (Z(),
                    ye("footer", {
                        key: 0,
                        class: he([D(g).e("footer"), R.footerClass])
                    }, [De(R.$slots, "footer")], 2)) : ke("v-if", !0)], 6))
    }
});
var ZH = ot(KH, [["__file", "dialog-content.vue"]]);
const JH = gt({
    ...DS,
    appendToBody: Boolean,
    appendTo: {
        type: Ye([String, Object]),
        default: "body"
    },
    beforeClose: {
        type: Ye(Function)
    },
    destroyOnClose: Boolean,
    closeOnClickModal: {
        type: Boolean,
        default: !0
    },
    closeOnPressEscape: {
        type: Boolean,
        default: !0
    },
    lockScroll: {
        type: Boolean,
        default: !0
    },
    modal: {
        type: Boolean,
        default: !0
    },
    openDelay: {
        type: Number,
        default: 0
    },
    closeDelay: {
        type: Number,
        default: 0
    },
    top: {
        type: String
    },
    modelValue: Boolean,
    modalClass: String,
    headerClass: String,
    bodyClass: String,
    footerClass: String,
    width: {
        type: [String, Number]
    },
    zIndex: {
        type: Number
    },
    trapFocus: Boolean,
    headerAriaLevel: {
        type: String,
        default: "2"
    }
})
    , QH = {
    open: () => !0,
    opened: () => !0,
    close: () => !0,
    closed: () => !0,
    [ms]: e => zs(e),
    openAutoFocus: () => !0,
    closeAutoFocus: () => !0
}
    , $S = (e, t = {}) => {
    Qt(e) || hn("[useLockscreen]", "You need to pass a ref param to this function");
    const s = t.ns || rt("popup")
        , a = re(() => s.bm("parent", "hidden"));
    if (!cs || mf(document.body, a.value))
        return;
    let o = 0
        , l = !1
        , u = "0";
    const p = () => {
            setTimeout(() => {
                    typeof document > "u" || l && document && (document.body.style.width = u,
                        _a(document.body, a.value))
                }
                , 200)
        }
    ;
    Ke(e, g => {
            if (!g) {
                p();
                return
            }
            l = !mf(document.body, a.value),
            l && (u = document.body.style.width,
                Ua(document.body, a.value)),
                o = _3(s.namespace.value);
            const y = document.documentElement.clientHeight < document.body.scrollHeight
                , v = Mr(document.body, "overflowY");
            o > 0 && (y || v === "scroll") && l && (document.body.style.width = `calc(100% - ${o}px)`)
        }
    ),
        Nu(() => p())
}
    , eV = (e, t) => {
    var s;
    const o = Et().emit
        , {nextZIndex: l} = Wp();
    let u = "";
    const p = Nn()
        , g = Nn()
        , y = Se(!1)
        , v = Se(!1)
        , w = Se(!1)
        , C = Se((s = e.zIndex) != null ? s : l());
    let T, I;
    const A = fd("namespace", nl)
        , R = re(() => {
            const de = {}
                , J = `--${A.value}-dialog`;
            return e.fullscreen || (e.top && (de[`${J}-margin-top`] = e.top),
            e.width && (de[`${J}-width`] = Sn(e.width))),
                de
        }
    )
        , P = re(() => e.alignCenter ? {
        display: "flex"
    } : {});

    function M() {
        o("opened")
    }

    function O() {
        o("closed"),
            o(ms, !1),
        e.destroyOnClose && (w.value = !1)
    }

    function F() {
        o("close")
    }

    function $() {
        I == null || I(),
        T == null || T(),
            e.openDelay && e.openDelay > 0 ? {stop: T} = Fl(() => te(), e.openDelay) : te()
    }

    function V() {
        T == null || T(),
        I == null || I(),
            e.closeDelay && e.closeDelay > 0 ? {stop: I} = Fl(() => ne(), e.closeDelay) : ne()
    }

    function G() {
        function de(J) {
            J || (v.value = !0,
                y.value = !1)
        }

        e.beforeClose ? e.beforeClose(de) : V()
    }

    function ie() {
        e.closeOnClickModal && G()
    }

    function te() {
        cs && (y.value = !0)
    }

    function ne() {
        y.value = !1
    }

    function le() {
        o("openAutoFocus")
    }

    function oe() {
        o("closeAutoFocus")
    }

    function ve(de) {
        var J;
        ((J = de.detail) == null ? void 0 : J.focusReason) === "pointer" && de.preventDefault()
    }

    e.lockScroll && $S(y);

    function be() {
        e.closeOnPressEscape && G()
    }

    return Ke(() => e.modelValue, de => {
            de ? (v.value = !1,
                $(),
                w.value = !0,
                C.value = yw(e.zIndex) ? l() : C.value++,
                xt(() => {
                        o("open"),
                        t.value && (t.value.parentElement.scrollTop = 0,
                            t.value.parentElement.scrollLeft = 0,
                            t.value.scrollTop = 0)
                    }
                )) : y.value && V()
        }
    ),
        Ke(() => e.fullscreen, de => {
                t.value && (de ? (u = t.value.style.transform,
                    t.value.style.transform = "") : t.value.style.transform = u)
            }
        ),
        $t(() => {
                e.modelValue && (y.value = !0,
                    w.value = !0,
                    $())
            }
        ),
        {
            afterEnter: M,
            afterLeave: O,
            beforeLeave: F,
            handleClose: G,
            onModalClick: ie,
            close: V,
            doClose: ne,
            onOpenAutoFocus: le,
            onCloseAutoFocus: oe,
            onCloseRequested: be,
            onFocusoutPrevented: ve,
            titleId: p,
            bodyId: g,
            closed: v,
            style: R,
            overlayDialogStyle: P,
            rendered: w,
            visible: y,
            zIndex: C
        }
}
    , tV = Ce({
    name: "ElDialog",
    inheritAttrs: !1
})
    , sV = Ce({
    ...tV,
    props: JH,
    emits: QH,
    setup(e, {expose: t}) {
        const s = e
            , a = _i();
        Yr({
            scope: "el-dialog",
            from: "the title slot",
            replacement: "the header slot",
            version: "3.0.0",
            ref: "https://element-plus.org/en-US/component/dialog.html#slots"
        }, re(() => !!a.title));
        const o = rt("dialog")
            , l = Se()
            , u = Se()
            , p = Se()
            , {
            visible: g,
            titleId: y,
            bodyId: v,
            style: w,
            overlayDialogStyle: C,
            rendered: T,
            zIndex: I,
            afterEnter: A,
            afterLeave: R,
            beforeLeave: P,
            handleClose: M,
            onModalClick: O,
            onOpenAutoFocus: F,
            onCloseAutoFocus: $,
            onCloseRequested: V,
            onFocusoutPrevented: G
        } = eV(s, l);
        Xt(NS, {
            dialogRef: l,
            headerRef: u,
            bodyId: v,
            ns: o,
            rendered: T,
            style: w
        });
        const ie = mg(O)
            , te = re(() => s.draggable && !s.fullscreen);
        return t({
            visible: g,
            dialogContentRef: p,
            resetPosition: () => {
                var le;
                (le = p.value) == null || le.resetPosition()
            }
        }),
            (le, oe) => (Z(),
                Te(D(lS), {
                    to: le.appendTo,
                    disabled: le.appendTo !== "body" ? !1 : !le.appendToBody
                }, {
                    default: se(() => [ae(fn, {
                        name: "dialog-fade",
                        onAfterEnter: D(A),
                        onAfterLeave: D(R),
                        onBeforeLeave: D(P),
                        persisted: ""
                    }, {
                        default: se(() => [_t(ae(D(RS), {
                            "custom-mask-event": "",
                            mask: le.modal,
                            "overlay-class": le.modalClass,
                            "z-index": D(I)
                        }, {
                            default: se(() => [U("div", {
                                role: "dialog",
                                "aria-modal": "true",
                                "aria-label": le.title || void 0,
                                "aria-labelledby": le.title ? void 0 : D(y),
                                "aria-describedby": D(v),
                                class: he(`${D(o).namespace.value}-overlay-dialog`),
                                style: kt(D(C)),
                                onClick: D(ie).onClick,
                                onMousedown: D(ie).onMousedown,
                                onMouseup: D(ie).onMouseup
                            }, [ae(D(ng), {
                                loop: "",
                                trapped: D(g),
                                "focus-start-el": "container",
                                onFocusAfterTrapped: D(F),
                                onFocusAfterReleased: D($),
                                onFocusoutPrevented: D(G),
                                onReleaseRequested: D(V)
                            }, {
                                default: se(() => [D(T) ? (Z(),
                                    Te(ZH, vs({
                                        key: 0,
                                        ref_key: "dialogContentRef",
                                        ref: p
                                    }, le.$attrs, {
                                        center: le.center,
                                        "align-center": le.alignCenter,
                                        "close-icon": le.closeIcon,
                                        draggable: D(te),
                                        overflow: le.overflow,
                                        fullscreen: le.fullscreen,
                                        "header-class": le.headerClass,
                                        "body-class": le.bodyClass,
                                        "footer-class": le.footerClass,
                                        "show-close": le.showClose,
                                        title: le.title,
                                        "aria-level": le.headerAriaLevel,
                                        onClose: D(M)
                                    }), Sl({
                                        header: se(() => [le.$slots.title ? De(le.$slots, "title", {
                                            key: 1
                                        }) : De(le.$slots, "header", {
                                            key: 0,
                                            close: D(M),
                                            titleId: D(y),
                                            titleClass: D(o).e("title")
                                        })]),
                                        default: se(() => [De(le.$slots, "default")]),
                                        _: 2
                                    }, [le.$slots.footer ? {
                                        name: "footer",
                                        fn: se(() => [De(le.$slots, "footer")])
                                    } : void 0]), 1040, ["center", "align-center", "close-icon", "draggable", "overflow", "fullscreen", "header-class", "body-class", "footer-class", "show-close", "title", "aria-level", "onClose"])) : ke("v-if", !0)]),
                                _: 3
                            }, 8, ["trapped", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusoutPrevented", "onReleaseRequested"])], 46, ["aria-label", "aria-labelledby", "aria-describedby", "onClick", "onMousedown", "onMouseup"])]),
                            _: 3
                        }, 8, ["mask", "overlay-class", "z-index"]), [[ss, D(g)]])]),
                        _: 3
                    }, 8, ["onAfterEnter", "onAfterLeave", "onBeforeLeave"])]),
                    _: 3
                }, 8, ["to", "disabled"]))
    }
});
var nV = ot(sV, [["__file", "dialog.vue"]]);
const $n = Zt(nV)
    , iV = gt({
    direction: {
        type: String,
        values: ["horizontal", "vertical"],
        default: "horizontal"
    },
    contentPosition: {
        type: String,
        values: ["left", "center", "right"],
        default: "center"
    },
    borderStyle: {
        type: Ye(String),
        default: "solid"
    }
})
    , aV = Ce({
    name: "ElDivider"
})
    , rV = Ce({
    ...aV,
    props: iV,
    setup(e) {
        const t = e
            , s = rt("divider")
            , a = re(() => s.cssVar({
            "border-style": t.borderStyle
        }));
        return (o, l) => (Z(),
            ye("div", {
                class: he([D(s).b(), D(s).m(o.direction)]),
                style: kt(D(a)),
                role: "separator"
            }, [o.$slots.default && o.direction !== "vertical" ? (Z(),
                ye("div", {
                    key: 0,
                    class: he([D(s).e("text"), D(s).is(o.contentPosition)])
                }, [De(o.$slots, "default")], 2)) : ke("v-if", !0)], 6))
    }
});
var oV = ot(rV, [["__file", "divider.vue"]]);
const Ei = Zt(oV)
    , lV = Ce({
    inheritAttrs: !1
});

function cV(e, t, s, a, o, l) {
    return De(e.$slots, "default")
}

var uV = ot(lV, [["render", cV], ["__file", "collection.vue"]]);
const dV = Ce({
    name: "ElCollectionItem",
    inheritAttrs: !1
});

function hV(e, t, s, a, o, l) {
    return De(e.$slots, "default")
}

var fV = ot(dV, [["render", hV], ["__file", "collection-item.vue"]]);
const BS = "data-el-collection-item"
    , HS = e => {
    const t = `El${e}Collection`
        , s = `${t}Item`
        , a = Symbol(t)
        , o = Symbol(s)
        , l = {
        ...uV,
        name: t,
        setup() {
            const p = Se()
                , g = new Map;
            Xt(a, {
                itemMap: g,
                getItems: () => {
                    const v = D(p);
                    if (!v)
                        return [];
                    const w = Array.from(v.querySelectorAll(`[${BS}]`));
                    return [...g.values()].sort((T, I) => w.indexOf(T.ref) - w.indexOf(I.ref))
                }
                ,
                collectionRef: p
            })
        }
    }
        , u = {
        ...fV,
        name: s,
        setup(p, {attrs: g}) {
            const y = Se()
                , v = st(a, void 0);
            Xt(o, {
                collectionItemRef: y
            }),
                $t(() => {
                        const w = D(y);
                        w && v.itemMap.set(w, {
                            ref: w,
                            ...g
                        })
                    }
                ),
                us(() => {
                        const w = D(y);
                        v.itemMap.delete(w)
                    }
                )
        }
    };
    return {
        COLLECTION_INJECTION_KEY: a,
        COLLECTION_ITEM_INJECTION_KEY: o,
        ElCollection: l,
        ElCollectionItem: u
    }
}
    , pV = gt({
    style: {
        type: Ye([String, Array, Object])
    },
    currentTabId: {
        type: Ye(String)
    },
    defaultCurrentTabId: String,
    loop: Boolean,
    dir: {
        type: String,
        values: ["ltr", "rtl"],
        default: "ltr"
    },
    orientation: {
        type: Ye(String)
    },
    onBlur: Function,
    onFocus: Function,
    onMousedown: Function
})
    , {
    ElCollection: gV,
    ElCollectionItem: mV,
    COLLECTION_INJECTION_KEY: bg,
    COLLECTION_ITEM_INJECTION_KEY: vV
} = HS("RovingFocusGroup")
    , yg = Symbol("elRovingFocusGroup")
    , VS = Symbol("elRovingFocusGroupItem")
    , bV = {
    ArrowLeft: "prev",
    ArrowUp: "prev",
    ArrowRight: "next",
    ArrowDown: "next",
    PageUp: "first",
    Home: "first",
    PageDown: "last",
    End: "last"
}
    , yV = (e, t) => {
    if (t !== "rtl")
        return e;
    switch (e) {
        case wt.right:
            return wt.left;
        case wt.left:
            return wt.right;
        default:
            return e
    }
}
    , xV = (e, t, s) => {
    const a = yV(e.code, s);
    if (!(t === "vertical" && [wt.left, wt.right].includes(a)) && !(t === "horizontal" && [wt.up, wt.down].includes(a)))
        return bV[a]
}
    , wV = (e, t) => e.map((s, a) => e[(a + t) % e.length])
    , xg = e => {
    const {activeElement: t} = document;
    for (const s of e)
        if (s === t || (s.focus(),
        t !== document.activeElement))
            return
}
    , Kb = "currentTabIdChange"
    , Zb = "rovingFocusGroup.entryFocus"
    , SV = {
    bubbles: !1,
    cancelable: !0
}
    , _V = Ce({
    name: "ElRovingFocusGroupImpl",
    inheritAttrs: !1,
    props: pV,
    emits: [Kb, "entryFocus"],
    setup(e, {emit: t}) {
        var s;
        const a = Se((s = e.currentTabId || e.defaultCurrentTabId) != null ? s : null)
            , o = Se(!1)
            , l = Se(!1)
            , u = Se()
            , {getItems: p} = st(bg, void 0)
            , g = re(() => [{
                outline: "none"
            }, e.style])
            , y = A => {
                t(Kb, A)
            }
            , v = () => {
                o.value = !0
            }
            , w = _s(A => {
                    var R;
                    (R = e.onMousedown) == null || R.call(e, A)
                }
                , () => {
                    l.value = !0
                }
            )
            , C = _s(A => {
                    var R;
                    (R = e.onFocus) == null || R.call(e, A)
                }
                , A => {
                    const R = !D(l)
                        , {target: P, currentTarget: M} = A;
                    if (P === M && R && !D(o)) {
                        const O = new Event(Zb, SV);
                        if (M == null || M.dispatchEvent(O),
                            !O.defaultPrevented) {
                            const F = p().filter(te => te.focusable)
                                , $ = F.find(te => te.active)
                                , V = F.find(te => te.id === D(a))
                                , ie = [$, V, ...F].filter(Boolean).map(te => te.ref);
                            xg(ie)
                        }
                    }
                    l.value = !1
                }
            )
            , T = _s(A => {
                    var R;
                    (R = e.onBlur) == null || R.call(e, A)
                }
                , () => {
                    o.value = !1
                }
            )
            , I = (...A) => {
                t("entryFocus", ...A)
            }
        ;
        Xt(yg, {
            currentTabbedId: Zi(a),
            loop: ks(e, "loop"),
            tabIndex: re(() => D(o) ? -1 : 0),
            rovingFocusGroupRef: u,
            rovingFocusGroupRootStyle: g,
            orientation: ks(e, "orientation"),
            dir: ks(e, "dir"),
            onItemFocus: y,
            onItemShiftTab: v,
            onBlur: T,
            onFocus: C,
            onMousedown: w
        }),
            Ke(() => e.currentTabId, A => {
                    a.value = A ?? null
                }
            ),
            cn(u, Zb, I)
    }
});

function kV(e, t, s, a, o, l) {
    return De(e.$slots, "default")
}

var CV = ot(_V, [["render", kV], ["__file", "roving-focus-group-impl.vue"]]);
const AV = Ce({
    name: "ElRovingFocusGroup",
    components: {
        ElFocusGroupCollection: gV,
        ElRovingFocusGroupImpl: CV
    }
});

function EV(e, t, s, a, o, l) {
    const u = Bt("el-roving-focus-group-impl")
        , p = Bt("el-focus-group-collection");
    return Z(),
        Te(p, null, {
            default: se(() => [ae(u, Cy(np(e.$attrs)), {
                default: se(() => [De(e.$slots, "default")]),
                _: 3
            }, 16)]),
            _: 3
        })
}

var TV = ot(AV, [["render", EV], ["__file", "roving-focus-group.vue"]]);
const Zc = gt({
    trigger: zl.trigger,
    triggerKeys: {
        type: Ye(Array),
        default: () => [wt.enter, wt.numpadEnter, wt.space, wt.down]
    },
    effect: {
        ...mn.effect,
        default: "light"
    },
    type: {
        type: Ye(String)
    },
    placement: {
        type: Ye(String),
        default: "bottom"
    },
    popperOptions: {
        type: Ye(Object),
        default: () => ({})
    },
    id: String,
    size: {
        type: String,
        default: ""
    },
    splitButton: Boolean,
    hideOnClick: {
        type: Boolean,
        default: !0
    },
    loop: {
        type: Boolean,
        default: !0
    },
    showTimeout: {
        type: Number,
        default: 150
    },
    hideTimeout: {
        type: Number,
        default: 150
    },
    tabindex: {
        type: Ye([Number, String]),
        default: 0
    },
    maxHeight: {
        type: Ye([Number, String]),
        default: ""
    },
    popperClass: {
        type: String,
        default: ""
    },
    disabled: Boolean,
    role: {
        type: String,
        values: Vw,
        default: "menu"
    },
    buttonProps: {
        type: Ye(Object)
    },
    teleported: mn.teleported,
    persistent: {
        type: Boolean,
        default: !0
    }
})
    , zS = gt({
    command: {
        type: [Object, String, Number],
        default: () => ({})
    },
    disabled: Boolean,
    divided: Boolean,
    textValue: String,
    icon: {
        type: Cs
    }
})
    , IV = gt({
    onKeydown: {
        type: Ye(Function)
    }
})
    , PV = [wt.down, wt.pageDown, wt.home]
    , WS = [wt.up, wt.pageUp, wt.end]
    , LV = [...PV, ...WS]
    , {
    ElCollection: MV,
    ElCollectionItem: OV,
    COLLECTION_INJECTION_KEY: RV,
    COLLECTION_ITEM_INJECTION_KEY: NV
} = HS("Dropdown")
    , yd = Symbol("elDropdown")
    , {ButtonGroup: DV} = _n
    , FV = Ce({
    name: "ElDropdown",
    components: {
        ElButton: _n,
        ElButtonGroup: DV,
        ElScrollbar: Jp,
        ElDropdownCollection: MV,
        ElTooltip: Ai,
        ElRovingFocusGroup: TV,
        ElOnlyChild: Xw,
        ElIcon: Mt,
        ArrowDown: Yp
    },
    props: Zc,
    emits: ["visible-change", "click", "command"],
    setup(e, {emit: t}) {
        const s = Et()
            , a = rt("dropdown")
            , {t: o} = ac()
            , l = Se()
            , u = Se()
            , p = Se()
            , g = Se()
            , y = Se(null)
            , v = Se(null)
            , w = Se(!1)
            , C = re(() => ({
            maxHeight: Sn(e.maxHeight)
        }))
            , T = re(() => [a.m(F.value)])
            , I = re(() => An(e.trigger))
            , A = Nn().value
            , R = re(() => e.id || A);
        Ke([l, I], ([J, ue], [fe]) => {
                var Me, Xe, Be;
                (Me = fe == null ? void 0 : fe.$el) != null && Me.removeEventListener && fe.$el.removeEventListener("pointerenter", V),
                (Xe = J == null ? void 0 : J.$el) != null && Xe.removeEventListener && J.$el.removeEventListener("pointerenter", V),
                (Be = J == null ? void 0 : J.$el) != null && Be.addEventListener && ue.includes("hover") && J.$el.addEventListener("pointerenter", V)
            }
            , {
                immediate: !0
            }),
            us(() => {
                    var J, ue;
                    (ue = (J = l.value) == null ? void 0 : J.$el) != null && ue.removeEventListener && l.value.$el.removeEventListener("pointerenter", V)
                }
            );

        function P() {
            M()
        }

        function M() {
            var J;
            (J = p.value) == null || J.onClose()
        }

        function O() {
            var J;
            (J = p.value) == null || J.onOpen()
        }

        const F = ii();

        function $(...J) {
            t("command", ...J)
        }

        function V() {
            var J, ue;
            (ue = (J = l.value) == null ? void 0 : J.$el) == null || ue.focus()
        }

        function G() {
        }

        function ie() {
            const J = D(g);
            I.value.includes("hover") && (J == null || J.focus()),
                v.value = null
        }

        function te(J) {
            v.value = J
        }

        function ne(J) {
            w.value || (J.preventDefault(),
                J.stopImmediatePropagation())
        }

        function le() {
            t("visible-change", !0)
        }

        function oe(J) {
            var ue;
            (J == null ? void 0 : J.type) === "keydown" && ((ue = g.value) == null || ue.focus())
        }

        function ve() {
            t("visible-change", !1)
        }

        return Xt(yd, {
            contentRef: g,
            role: re(() => e.role),
            triggerId: R,
            isUsingKeyboard: w,
            onItemEnter: G,
            onItemLeave: ie
        }),
            Xt("elDropdown", {
                instance: s,
                dropdownSize: F,
                handleClick: P,
                commandHandler: $,
                trigger: ks(e, "trigger"),
                hideOnClick: ks(e, "hideOnClick")
            }),
            {
                t: o,
                ns: a,
                scrollbar: y,
                wrapStyle: C,
                dropdownTriggerKls: T,
                dropdownSize: F,
                triggerId: R,
                currentTabId: v,
                handleCurrentTabIdChange: te,
                handlerMainButtonClick: J => {
                    t("click", J)
                }
                ,
                handleEntryFocus: ne,
                handleClose: M,
                handleOpen: O,
                handleBeforeShowTooltip: le,
                handleShowTooltip: oe,
                handleBeforeHideTooltip: ve,
                onFocusAfterTrapped: J => {
                    var ue, fe;
                    J.preventDefault(),
                    (fe = (ue = g.value) == null ? void 0 : ue.focus) == null || fe.call(ue, {
                        preventScroll: !0
                    })
                }
                ,
                popperRef: p,
                contentRef: g,
                triggeringElementRef: l,
                referenceElementRef: u
            }
    }
});

function $V(e, t, s, a, o, l) {
    var u;
    const p = Bt("el-dropdown-collection")
        , g = Bt("el-roving-focus-group")
        , y = Bt("el-scrollbar")
        , v = Bt("el-only-child")
        , w = Bt("el-tooltip")
        , C = Bt("el-button")
        , T = Bt("arrow-down")
        , I = Bt("el-icon")
        , A = Bt("el-button-group");
    return Z(),
        ye("div", {
            class: he([e.ns.b(), e.ns.is("disabled", e.disabled)])
        }, [ae(w, {
            ref: "popperRef",
            role: e.role,
            effect: e.effect,
            "fallback-placements": ["bottom", "top"],
            "popper-options": e.popperOptions,
            "gpu-acceleration": !1,
            "hide-after": e.trigger === "hover" ? e.hideTimeout : 0,
            "manual-mode": !0,
            placement: e.placement,
            "popper-class": [e.ns.e("popper"), e.popperClass],
            "reference-element": (u = e.referenceElementRef) == null ? void 0 : u.$el,
            trigger: e.trigger,
            "trigger-keys": e.triggerKeys,
            "trigger-target-el": e.contentRef,
            "show-after": e.trigger === "hover" ? e.showTimeout : 0,
            "stop-popper-mouse-event": !1,
            "virtual-ref": e.triggeringElementRef,
            "virtual-triggering": e.splitButton,
            disabled: e.disabled,
            transition: `${e.ns.namespace.value}-zoom-in-top`,
            teleported: e.teleported,
            pure: "",
            persistent: e.persistent,
            onBeforeShow: e.handleBeforeShowTooltip,
            onShow: e.handleShowTooltip,
            onBeforeHide: e.handleBeforeHideTooltip
        }, Sl({
            content: se(() => [ae(y, {
                ref: "scrollbar",
                "wrap-style": e.wrapStyle,
                tag: "div",
                "view-class": e.ns.e("list")
            }, {
                default: se(() => [ae(g, {
                    loop: e.loop,
                    "current-tab-id": e.currentTabId,
                    orientation: "horizontal",
                    onCurrentTabIdChange: e.handleCurrentTabIdChange,
                    onEntryFocus: e.handleEntryFocus
                }, {
                    default: se(() => [ae(p, null, {
                        default: se(() => [De(e.$slots, "dropdown")]),
                        _: 3
                    })]),
                    _: 3
                }, 8, ["loop", "current-tab-id", "onCurrentTabIdChange", "onEntryFocus"])]),
                _: 3
            }, 8, ["wrap-style", "view-class"])]),
            _: 2
        }, [e.splitButton ? void 0 : {
            name: "default",
            fn: se(() => [ae(v, {
                id: e.triggerId,
                ref: "triggeringElementRef",
                role: "button",
                tabindex: e.tabindex
            }, {
                default: se(() => [De(e.$slots, "default")]),
                _: 3
            }, 8, ["id", "tabindex"])])
        }]), 1032, ["role", "effect", "popper-options", "hide-after", "placement", "popper-class", "reference-element", "trigger", "trigger-keys", "trigger-target-el", "show-after", "virtual-ref", "virtual-triggering", "disabled", "transition", "teleported", "persistent", "onBeforeShow", "onShow", "onBeforeHide"]), e.splitButton ? (Z(),
            Te(A, {
                key: 0
            }, {
                default: se(() => [ae(C, vs({
                    ref: "referenceElementRef"
                }, e.buttonProps, {
                    size: e.dropdownSize,
                    type: e.type,
                    disabled: e.disabled,
                    tabindex: e.tabindex,
                    onClick: e.handlerMainButtonClick
                }), {
                    default: se(() => [De(e.$slots, "default")]),
                    _: 3
                }, 16, ["size", "type", "disabled", "tabindex", "onClick"]), ae(C, vs({
                    id: e.triggerId,
                    ref: "triggeringElementRef"
                }, e.buttonProps, {
                    role: "button",
                    size: e.dropdownSize,
                    type: e.type,
                    class: e.ns.e("caret-button"),
                    disabled: e.disabled,
                    tabindex: e.tabindex,
                    "aria-label": e.t("el.dropdown.toggleDropdown")
                }), {
                    default: se(() => [ae(I, {
                        class: he(e.ns.e("icon"))
                    }, {
                        default: se(() => [ae(T)]),
                        _: 1
                    }, 8, ["class"])]),
                    _: 1
                }, 16, ["id", "size", "type", "class", "disabled", "tabindex", "aria-label"])]),
                _: 3
            })) : ke("v-if", !0)], 2)
}

var BV = ot(FV, [["render", $V], ["__file", "dropdown.vue"]]);
const HV = Ce({
    components: {
        ElRovingFocusCollectionItem: mV
    },
    props: {
        focusable: {
            type: Boolean,
            default: !0
        },
        active: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["mousedown", "focus", "keydown"],
    setup(e, {emit: t}) {
        const {currentTabbedId: s, loop: a, onItemFocus: o, onItemShiftTab: l} = st(yg, void 0)
            , {getItems: u} = st(bg, void 0)
            , p = Nn()
            , g = Se()
            , y = _s(T => {
                t("mousedown", T)
            }
            , T => {
                e.focusable ? o(D(p)) : T.preventDefault()
            }
        )
            , v = _s(T => {
                t("focus", T)
            }
            , () => {
                o(D(p))
            }
        )
            , w = _s(T => {
                t("keydown", T)
            }
            , T => {
                const {code: I, shiftKey: A, target: R, currentTarget: P} = T;
                if (I === wt.tab && A) {
                    l();
                    return
                }
                if (R !== P)
                    return;
                const M = xV(T);
                if (M) {
                    T.preventDefault();
                    let F = u().filter($ => $.focusable).map($ => $.ref);
                    switch (M) {
                        case "last": {
                            F.reverse();
                            break
                        }
                        case "prev":
                        case "next": {
                            M === "prev" && F.reverse();
                            const $ = F.indexOf(P);
                            F = a.value ? wV(F, $ + 1) : F.slice($ + 1);
                            break
                        }
                    }
                    xt(() => {
                            xg(F)
                        }
                    )
                }
            }
        )
            , C = re(() => s.value === D(p));
        return Xt(VS, {
            rovingFocusGroupItemRef: g,
            tabIndex: re(() => D(C) ? 0 : -1),
            handleMousedown: y,
            handleFocus: v,
            handleKeydown: w
        }),
            {
                id: p,
                handleKeydown: w,
                handleFocus: v,
                handleMousedown: y
            }
    }
});

function VV(e, t, s, a, o, l) {
    const u = Bt("el-roving-focus-collection-item");
    return Z(),
        Te(u, {
            id: e.id,
            focusable: e.focusable,
            active: e.active
        }, {
            default: se(() => [De(e.$slots, "default")]),
            _: 3
        }, 8, ["id", "focusable", "active"])
}

var zV = ot(HV, [["render", VV], ["__file", "roving-focus-item.vue"]]);
const WV = Ce({
    name: "DropdownItemImpl",
    components: {
        ElIcon: Mt
    },
    props: zS,
    emits: ["pointermove", "pointerleave", "click", "clickimpl"],
    setup(e, {emit: t}) {
        const s = rt("dropdown")
            , {role: a} = st(yd, void 0)
            , {collectionItemRef: o} = st(NV, void 0)
            , {collectionItemRef: l} = st(vV, void 0)
            , {
            rovingFocusGroupItemRef: u,
            tabIndex: p,
            handleFocus: g,
            handleKeydown: y,
            handleMousedown: v
        } = st(VS, void 0)
            , w = vg(o, l, u)
            , C = re(() => a.value === "menu" ? "menuitem" : a.value === "navigation" ? "link" : "button")
            , T = _s(I => {
                if ([wt.enter, wt.numpadEnter, wt.space].includes(I.code))
                    return I.preventDefault(),
                        I.stopImmediatePropagation(),
                        t("clickimpl", I),
                        !0
            }
            , y);
        return {
            ns: s,
            itemRef: w,
            dataset: {
                [BS]: ""
            },
            role: C,
            tabIndex: p,
            handleFocus: g,
            handleKeydown: T,
            handleMousedown: v
        }
    }
});

function UV(e, t, s, a, o, l) {
    const u = Bt("el-icon");
    return Z(),
        ye(Ct, null, [e.divided ? (Z(),
            ye("li", {
                key: 0,
                role: "separator",
                class: he(e.ns.bem("menu", "item", "divided"))
            }, null, 2)) : ke("v-if", !0), U("li", vs({
            ref: e.itemRef
        }, {
            ...e.dataset,
            ...e.$attrs
        }, {
            "aria-disabled": e.disabled,
            class: [e.ns.be("menu", "item"), e.ns.is("disabled", e.disabled)],
            tabindex: e.tabIndex,
            role: e.role,
            onClick: p => e.$emit("clickimpl", p),
            onFocus: e.handleFocus,
            onKeydown: Ot(e.handleKeydown, ["self"]),
            onMousedown: e.handleMousedown,
            onPointermove: p => e.$emit("pointermove", p),
            onPointerleave: p => e.$emit("pointerleave", p)
        }), [e.icon ? (Z(),
            Te(u, {
                key: 0
            }, {
                default: se(() => [(Z(),
                    Te(Vt(e.icon)))]),
                _: 1
            })) : ke("v-if", !0), De(e.$slots, "default")], 16, ["aria-disabled", "tabindex", "role", "onClick", "onFocus", "onKeydown", "onMousedown", "onPointermove", "onPointerleave"])], 64)
}

var YV = ot(WV, [["render", UV], ["__file", "dropdown-item-impl.vue"]]);
const US = () => {
    const e = st("elDropdown", {})
        , t = re(() => e == null ? void 0 : e.dropdownSize);
    return {
        elDropdown: e,
        _elDropdownSize: t
    }
}
    , XV = Ce({
    name: "ElDropdownItem",
    components: {
        ElDropdownCollectionItem: OV,
        ElRovingFocusItem: zV,
        ElDropdownItemImpl: YV
    },
    inheritAttrs: !1,
    props: zS,
    emits: ["pointermove", "pointerleave", "click"],
    setup(e, {emit: t, attrs: s}) {
        const {elDropdown: a} = US()
            , o = Et()
            , l = Se(null)
            , u = re(() => {
                var T, I;
                return (I = (T = D(l)) == null ? void 0 : T.textContent) != null ? I : ""
            }
        )
            , {onItemEnter: p, onItemLeave: g} = st(yd, void 0)
            , y = _s(T => (t("pointermove", T),
            T.defaultPrevented), Ub(T => {
                if (e.disabled) {
                    g(T);
                    return
                }
                const I = T.currentTarget;
                I === document.activeElement || I.contains(document.activeElement) || (p(T),
                T.defaultPrevented || I == null || I.focus())
            }
        ))
            , v = _s(T => (t("pointerleave", T),
            T.defaultPrevented), Ub(g))
            , w = _s(T => {
                if (!e.disabled)
                    return t("click", T),
                    T.type !== "keydown" && T.defaultPrevented
            }
            , T => {
                var I, A, R;
                if (e.disabled) {
                    T.stopImmediatePropagation();
                    return
                }
                (I = a == null ? void 0 : a.hideOnClick) != null && I.value && ((A = a.handleClick) == null || A.call(a)),
                (R = a.commandHandler) == null || R.call(a, e.command, o, T)
            }
        )
            , C = re(() => ({
            ...e,
            ...s
        }));
        return {
            handleClick: w,
            handlePointerMove: y,
            handlePointerLeave: v,
            textContent: u,
            propsAndAttrs: C
        }
    }
});

function jV(e, t, s, a, o, l) {
    var u;
    const p = Bt("el-dropdown-item-impl")
        , g = Bt("el-roving-focus-item")
        , y = Bt("el-dropdown-collection-item");
    return Z(),
        Te(y, {
            disabled: e.disabled,
            "text-value": (u = e.textValue) != null ? u : e.textContent
        }, {
            default: se(() => [ae(g, {
                focusable: !e.disabled
            }, {
                default: se(() => [ae(p, vs(e.propsAndAttrs, {
                    onPointerleave: e.handlePointerLeave,
                    onPointermove: e.handlePointerMove,
                    onClickimpl: e.handleClick
                }), {
                    default: se(() => [De(e.$slots, "default")]),
                    _: 3
                }, 16, ["onPointerleave", "onPointermove", "onClickimpl"])]),
                _: 3
            }, 8, ["focusable"])]),
            _: 3
        }, 8, ["disabled", "text-value"])
}

var YS = ot(XV, [["render", jV], ["__file", "dropdown-item.vue"]]);
const GV = Ce({
    name: "ElDropdownMenu",
    props: IV,
    setup(e) {
        const t = rt("dropdown")
            , {_elDropdownSize: s} = US()
            , a = s.value
            , {focusTrapRef: o, onKeydown: l} = st(eg, void 0)
            , {contentRef: u, role: p, triggerId: g} = st(yd, void 0)
            , {collectionRef: y, getItems: v} = st(RV, void 0)
            , {
            rovingFocusGroupRef: w,
            rovingFocusGroupRootStyle: C,
            tabIndex: T,
            onBlur: I,
            onFocus: A,
            onMousedown: R
        } = st(yg, void 0)
            , {collectionRef: P} = st(bg, void 0)
            , M = re(() => [t.b("menu"), t.bm("menu", a == null ? void 0 : a.value)])
            , O = vg(u, y, o, w, P)
            , F = _s(V => {
                var G;
                (G = e.onKeydown) == null || G.call(e, V)
            }
            , V => {
                const {currentTarget: G, code: ie, target: te} = V;
                if (G.contains(te),
                wt.tab === ie && V.stopImmediatePropagation(),
                    V.preventDefault(),
                te !== D(u) || !LV.includes(ie))
                    return;
                const le = v().filter(oe => !oe.disabled).map(oe => oe.ref);
                WS.includes(ie) && le.reverse(),
                    xg(le)
            }
        );
        return {
            size: a,
            rovingFocusGroupRootStyle: C,
            tabIndex: T,
            dropdownKls: M,
            role: p,
            triggerId: g,
            dropdownListWrapperRef: O,
            handleKeydown: V => {
                F(V),
                    l(V)
            }
            ,
            onBlur: I,
            onFocus: A,
            onMousedown: R
        }
    }
});

function qV(e, t, s, a, o, l) {
    return Z(),
        ye("ul", {
            ref: e.dropdownListWrapperRef,
            class: he(e.dropdownKls),
            style: kt(e.rovingFocusGroupRootStyle),
            tabindex: -1,
            role: e.role,
            "aria-labelledby": e.triggerId,
            onBlur: e.onBlur,
            onFocus: e.onFocus,
            onKeydown: Ot(e.handleKeydown, ["self"]),
            onMousedown: Ot(e.onMousedown, ["self"])
        }, [De(e.$slots, "default")], 46, ["role", "aria-labelledby", "onBlur", "onFocus", "onKeydown", "onMousedown"])
}

var XS = ot(GV, [["render", qV], ["__file", "dropdown-menu.vue"]]);
const KV = Zt(BV, {
    DropdownItem: YS,
    DropdownMenu: XS
})
    , ZV = Os(YS)
    , JV = Os(XS)
    , QV = gt({
    size: {
        type: String,
        values: rc
    },
    disabled: Boolean
})
    , ez = gt({
    ...QV,
    model: Object,
    rules: {
        type: Ye(Object)
    },
    labelPosition: {
        type: String,
        values: ["left", "right", "top"],
        default: "right"
    },
    requireAsteriskPosition: {
        type: String,
        values: ["left", "right"],
        default: "left"
    },
    labelWidth: {
        type: [String, Number],
        default: ""
    },
    labelSuffix: {
        type: String,
        default: ""
    },
    inline: Boolean,
    inlineMessage: Boolean,
    statusIcon: Boolean,
    showMessage: {
        type: Boolean,
        default: !0
    },
    validateOnRuleChange: {
        type: Boolean,
        default: !0
    },
    hideRequiredAsterisk: Boolean,
    scrollToError: Boolean,
    scrollIntoViewOptions: {
        type: [Object, Boolean]
    }
})
    , tz = {
    validate: (e, t, s) => (Ze(e) || pt(e)) && zs(t) && pt(s)
};

function sz() {
    const e = Se([])
        , t = re(() => {
            if (!e.value.length)
                return "0";
            const l = Math.max(...e.value);
            return l ? `${l}px` : ""
        }
    );

    function s(l) {
        const u = e.value.indexOf(l);
        return u === -1 && t.value,
            u
    }

    function a(l, u) {
        if (l && u) {
            const p = s(u);
            e.value.splice(p, 1, l)
        } else
            l && e.value.push(l)
    }

    function o(l) {
        const u = s(l);
        u > -1 && e.value.splice(u, 1)
    }

    return {
        autoLabelWidth: t,
        registerLabelWidth: a,
        deregisterLabelWidth: o
    }
}

const Dc = (e, t) => {
    const s = An(t);
    return s.length > 0 ? e.filter(a => a.prop && s.includes(a.prop)) : e
}
    , nz = "ElForm"
    , iz = Ce({
    name: nz
})
    , az = Ce({
    ...iz,
    props: ez,
    emits: tz,
    setup(e, {expose: t, emit: s}) {
        const a = e
            , o = []
            , l = ii()
            , u = rt("form")
            , p = re(() => {
                    const {labelPosition: O, inline: F} = a;
                    return [u.b(), u.m(l.value || "default"), {
                        [u.m(`label-${O}`)]: O,
                        [u.m("inline")]: F
                    }]
                }
            )
            , g = O => o.find(F => F.prop === O)
            , y = O => {
                o.push(O)
            }
            , v = O => {
                O.prop && o.splice(o.indexOf(O), 1)
            }
            , w = (O = []) => {
                a.model && Dc(o, O).forEach(F => F.resetField())
            }
            , C = (O = []) => {
                Dc(o, O).forEach(F => F.clearValidate())
            }
            , T = re(() => !!a.model)
            , I = O => {
                if (o.length === 0)
                    return [];
                const F = Dc(o, O);
                return F.length ? F : []
            }
            , A = async O => P(void 0, O)
            , R = async (O = []) => {
                if (!T.value)
                    return !1;
                const F = I(O);
                if (F.length === 0)
                    return !0;
                let $ = {};
                for (const V of F)
                    try {
                        await V.validate(""),
                        V.validateState === "error" && V.resetField()
                    } catch (G) {
                        $ = {
                            ...$,
                            ...G
                        }
                    }
                return Object.keys($).length === 0 ? !0 : Promise.reject($)
            }
            , P = async (O = [], F) => {
                const $ = !nt(F);
                try {
                    const V = await R(O);
                    return V === !0 && await (F == null ? void 0 : F(V)),
                        V
                } catch (V) {
                    if (V instanceof Error)
                        throw V;
                    const G = V;
                    return a.scrollToError && M(Object.keys(G)[0]),
                        await (F == null ? void 0 : F(!1, G)),
                    $ && Promise.reject(G)
                }
            }
            , M = O => {
                var F;
                const $ = Dc(o, O)[0];
                $ && ((F = $.$el) == null || F.scrollIntoView(a.scrollIntoViewOptions))
            }
        ;
        return Ke(() => a.rules, () => {
                a.validateOnRuleChange && A().catch(O => void 0)
            }
            , {
                deep: !0,
                flush: "post"
            }),
            Xt(Eo, ys({
                ...ai(a),
                emit: s,
                resetFields: w,
                clearValidate: C,
                validateField: P,
                getField: g,
                addField: y,
                removeField: v,
                ...sz()
            })),
            t({
                validate: A,
                validateField: P,
                resetFields: w,
                clearValidate: C,
                scrollToField: M,
                fields: o
            }),
            (O, F) => (Z(),
                ye("form", {
                    class: he(D(p))
                }, [De(O.$slots, "default")], 2))
    }
});
var rz = ot(az, [["__file", "form.vue"]]);

function Xa() {
    return Xa = Object.assign ? Object.assign.bind() : function (e) {
        for (var t = 1; t < arguments.length; t++) {
            var s = arguments[t];
            for (var a in s)
                Object.prototype.hasOwnProperty.call(s, a) && (e[a] = s[a])
        }
        return e
    }
        ,
        Xa.apply(this, arguments)
}

function oz(e, t) {
    e.prototype = Object.create(t.prototype),
        e.prototype.constructor = e,
        Wl(e, t)
}

function wf(e) {
    return wf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (s) {
        return s.__proto__ || Object.getPrototypeOf(s)
    }
        ,
        wf(e)
}

function Wl(e, t) {
    return Wl = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (a, o) {
        return a.__proto__ = o,
            a
    }
        ,
        Wl(e, t)
}

function lz() {
    if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
    if (typeof Proxy == "function")
        return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {
        })),
            !0
    } catch {
        return !1
    }
}

function Jc(e, t, s) {
    return lz() ? Jc = Reflect.construct.bind() : Jc = function (o, l, u) {
        var p = [null];
        p.push.apply(p, l);
        var g = Function.bind.apply(o, p)
            , y = new g;
        return u && Wl(y, u.prototype),
            y
    }
        ,
        Jc.apply(null, arguments)
}

function cz(e) {
    return Function.toString.call(e).indexOf("[native code]") !== -1
}

function Sf(e) {
    var t = typeof Map == "function" ? new Map : void 0;
    return Sf = function (a) {
        if (a === null || !cz(a))
            return a;
        if (typeof a != "function")
            throw new TypeError("Super expression must either be null or a function");
        if (typeof t < "u") {
            if (t.has(a))
                return t.get(a);
            t.set(a, o)
        }

        function o() {
            return Jc(a, arguments, wf(this).constructor)
        }

        return o.prototype = Object.create(a.prototype, {
            constructor: {
                value: o,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
            Wl(o, a)
    }
        ,
        Sf(e)
}

var uz = /%[sdj%]/g
    , dz = function () {
};

function _f(e) {
    if (!e || !e.length)
        return null;
    var t = {};
    return e.forEach(function (s) {
        var a = s.field;
        t[a] = t[a] || [],
            t[a].push(s)
    }),
        t
}

function yn(e) {
    for (var t = arguments.length, s = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++)
        s[a - 1] = arguments[a];
    var o = 0
        , l = s.length;
    if (typeof e == "function")
        return e.apply(null, s);
    if (typeof e == "string") {
        var u = e.replace(uz, function (p) {
            if (p === "%%")
                return "%";
            if (o >= l)
                return p;
            switch (p) {
                case "%s":
                    return String(s[o++]);
                case "%d":
                    return Number(s[o++]);
                case "%j":
                    try {
                        return JSON.stringify(s[o++])
                    } catch {
                        return "[Circular]"
                    }
                    break;
                default:
                    return p
            }
        });
        return u
    }
    return e
}

function hz(e) {
    return e === "string" || e === "url" || e === "hex" || e === "email" || e === "date" || e === "pattern"
}

function Ms(e, t) {
    return !!(e == null || t === "array" && Array.isArray(e) && !e.length || hz(t) && typeof e == "string" && !e)
}

function fz(e, t, s) {
    var a = []
        , o = 0
        , l = e.length;

    function u(p) {
        a.push.apply(a, p || []),
            o++,
        o === l && s(a)
    }

    e.forEach(function (p) {
        t(p, u)
    })
}

function Jb(e, t, s) {
    var a = 0
        , o = e.length;

    function l(u) {
        if (u && u.length) {
            s(u);
            return
        }
        var p = a;
        a = a + 1,
            p < o ? t(e[p], l) : s([])
    }

    l([])
}

function pz(e) {
    var t = [];
    return Object.keys(e).forEach(function (s) {
        t.push.apply(t, e[s] || [])
    }),
        t
}

var Qb = function (e) {
    oz(t, e);

    function t(s, a) {
        var o;
        return o = e.call(this, "Async Validation Error") || this,
            o.errors = s,
            o.fields = a,
            o
    }

    return t
}(Sf(Error));

function gz(e, t, s, a, o) {
    if (t.first) {
        var l = new Promise(function (C, T) {
                var I = function (P) {
                    return a(P),
                        P.length ? T(new Qb(P, _f(P))) : C(o)
                }
                    , A = pz(e);
                Jb(A, s, I)
            }
        );
        return l.catch(function (C) {
            return C
        }),
            l
    }
    var u = t.firstFields === !0 ? Object.keys(e) : t.firstFields || []
        , p = Object.keys(e)
        , g = p.length
        , y = 0
        , v = []
        , w = new Promise(function (C, T) {
            var I = function (R) {
                if (v.push.apply(v, R),
                    y++,
                y === g)
                    return a(v),
                        v.length ? T(new Qb(v, _f(v))) : C(o)
            };
            p.length || (a(v),
                C(o)),
                p.forEach(function (A) {
                    var R = e[A];
                    u.indexOf(A) !== -1 ? Jb(R, s, I) : fz(R, s, I)
                })
        }
    );
    return w.catch(function (C) {
        return C
    }),
        w
}

function mz(e) {
    return !!(e && e.message !== void 0)
}

function vz(e, t) {
    for (var s = e, a = 0; a < t.length; a++) {
        if (s == null)
            return s;
        s = s[t[a]]
    }
    return s
}

function ey(e, t) {
    return function (s) {
        var a;
        return e.fullFields ? a = vz(t, e.fullFields) : a = t[s.field || e.fullField],
            mz(s) ? (s.field = s.field || e.fullField,
                s.fieldValue = a,
                s) : {
                message: typeof s == "function" ? s() : s,
                fieldValue: a,
                field: s.field || e.fullField
            }
    }
}

function ty(e, t) {
    if (t) {
        for (var s in t)
            if (t.hasOwnProperty(s)) {
                var a = t[s];
                typeof a == "object" && typeof e[s] == "object" ? e[s] = Xa({}, e[s], a) : e[s] = a
            }
    }
    return e
}

var jS = function (t, s, a, o, l, u) {
    t.required && (!a.hasOwnProperty(t.field) || Ms(s, u || t.type)) && o.push(yn(l.messages.required, t.fullField))
}, bz = function (t, s, a, o, l) {
    (/^\s+$/.test(s) || s === "") && o.push(yn(l.messages.whitespace, t.fullField))
}, Fc, yz = function () {
    if (Fc)
        return Fc;
    var e = "[a-fA-F\\d:]"
        , t = function (F) {
        return F && F.includeBoundaries ? "(?:(?<=\\s|^)(?=" + e + ")|(?<=" + e + ")(?=\\s|$))" : ""
    }
        , s = "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}"
        , a = "[a-fA-F\\d]{1,4}"
        , o = (`
(?:
(?:` + a + ":){7}(?:" + a + `|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:` + a + ":){6}(?:" + s + "|:" + a + `|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:` + a + ":){5}(?::" + s + "|(?::" + a + `){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:` + a + ":){4}(?:(?::" + a + "){0,1}:" + s + "|(?::" + a + `){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:` + a + ":){3}(?:(?::" + a + "){0,2}:" + s + "|(?::" + a + `){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:` + a + ":){2}(?:(?::" + a + "){0,3}:" + s + "|(?::" + a + `){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:` + a + ":){1}(?:(?::" + a + "){0,4}:" + s + "|(?::" + a + `){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::` + a + "){0,5}:" + s + "|(?::" + a + `){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`).replace(/\s*\/\/.*$/gm, "").replace(/\n/g, "").trim()
        , l = new RegExp("(?:^" + s + "$)|(?:^" + o + "$)")
        , u = new RegExp("^" + s + "$")
        , p = new RegExp("^" + o + "$")
        , g = function (F) {
        return F && F.exact ? l : new RegExp("(?:" + t(F) + s + t(F) + ")|(?:" + t(F) + o + t(F) + ")", "g")
    };
    g.v4 = function (O) {
        return O && O.exact ? u : new RegExp("" + t(O) + s + t(O), "g")
    }
        ,
        g.v6 = function (O) {
            return O && O.exact ? p : new RegExp("" + t(O) + o + t(O), "g")
        }
    ;
    var y = "(?:(?:[a-z]+:)?//)"
        , v = "(?:\\S+(?::\\S*)?@)?"
        , w = g.v4().source
        , C = g.v6().source
        , T = "(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)"
        , I = "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*"
        , A = "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))"
        , R = "(?::\\d{2,5})?"
        , P = '(?:[/?#][^\\s"]*)?'
        , M = "(?:" + y + "|www\\.)" + v + "(?:localhost|" + w + "|" + C + "|" + T + I + A + ")" + R + P;
    return Fc = new RegExp("(?:^" + M + "$)", "i"),
        Fc
}, sy = {
    email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,
    hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
}, Go = {
    integer: function (t) {
        return Go.number(t) && parseInt(t, 10) === t
    },
    float: function (t) {
        return Go.number(t) && !Go.integer(t)
    },
    array: function (t) {
        return Array.isArray(t)
    },
    regexp: function (t) {
        if (t instanceof RegExp)
            return !0;
        try {
            return !!new RegExp(t)
        } catch {
            return !1
        }
    },
    date: function (t) {
        return typeof t.getTime == "function" && typeof t.getMonth == "function" && typeof t.getYear == "function" && !isNaN(t.getTime())
    },
    number: function (t) {
        return isNaN(t) ? !1 : typeof t == "number"
    },
    object: function (t) {
        return typeof t == "object" && !Go.array(t)
    },
    method: function (t) {
        return typeof t == "function"
    },
    email: function (t) {
        return typeof t == "string" && t.length <= 320 && !!t.match(sy.email)
    },
    url: function (t) {
        return typeof t == "string" && t.length <= 2048 && !!t.match(yz())
    },
    hex: function (t) {
        return typeof t == "string" && !!t.match(sy.hex)
    }
}, xz = function (t, s, a, o, l) {
    if (t.required && s === void 0) {
        jS(t, s, a, o, l);
        return
    }
    var u = ["integer", "float", "array", "regexp", "object", "method", "email", "number", "date", "url", "hex"]
        , p = t.type;
    u.indexOf(p) > -1 ? Go[p](s) || o.push(yn(l.messages.types[p], t.fullField, t.type)) : p && typeof s !== t.type && o.push(yn(l.messages.types[p], t.fullField, t.type))
}, wz = function (t, s, a, o, l) {
    var u = typeof t.len == "number"
        , p = typeof t.min == "number"
        , g = typeof t.max == "number"
        , y = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g
        , v = s
        , w = null
        , C = typeof s == "number"
        , T = typeof s == "string"
        , I = Array.isArray(s);
    if (C ? w = "number" : T ? w = "string" : I && (w = "array"),
        !w)
        return !1;
    I && (v = s.length),
    T && (v = s.replace(y, "_").length),
        u ? v !== t.len && o.push(yn(l.messages[w].len, t.fullField, t.len)) : p && !g && v < t.min ? o.push(yn(l.messages[w].min, t.fullField, t.min)) : g && !p && v > t.max ? o.push(yn(l.messages[w].max, t.fullField, t.max)) : p && g && (v < t.min || v > t.max) && o.push(yn(l.messages[w].range, t.fullField, t.min, t.max))
}, Ar = "enum", Sz = function (t, s, a, o, l) {
    t[Ar] = Array.isArray(t[Ar]) ? t[Ar] : [],
    t[Ar].indexOf(s) === -1 && o.push(yn(l.messages[Ar], t.fullField, t[Ar].join(", ")))
}, _z = function (t, s, a, o, l) {
    if (t.pattern) {
        if (t.pattern instanceof RegExp)
            t.pattern.lastIndex = 0,
            t.pattern.test(s) || o.push(yn(l.messages.pattern.mismatch, t.fullField, s, t.pattern));
        else if (typeof t.pattern == "string") {
            var u = new RegExp(t.pattern);
            u.test(s) || o.push(yn(l.messages.pattern.mismatch, t.fullField, s, t.pattern))
        }
    }
}, zt = {
    required: jS,
    whitespace: bz,
    type: xz,
    range: wz,
    enum: Sz,
    pattern: _z
}, kz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s, "string") && !t.required)
            return a();
        zt.required(t, s, o, u, l, "string"),
        Ms(s, "string") || (zt.type(t, s, o, u, l),
            zt.range(t, s, o, u, l),
            zt.pattern(t, s, o, u, l),
        t.whitespace === !0 && zt.whitespace(t, s, o, u, l))
    }
    a(u)
}, Cz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s) && !t.required)
            return a();
        zt.required(t, s, o, u, l),
        s !== void 0 && zt.type(t, s, o, u, l)
    }
    a(u)
}, Az = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (s === "" && (s = void 0),
        Ms(s) && !t.required)
            return a();
        zt.required(t, s, o, u, l),
        s !== void 0 && (zt.type(t, s, o, u, l),
            zt.range(t, s, o, u, l))
    }
    a(u)
}, Ez = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s) && !t.required)
            return a();
        zt.required(t, s, o, u, l),
        s !== void 0 && zt.type(t, s, o, u, l)
    }
    a(u)
}, Tz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s) && !t.required)
            return a();
        zt.required(t, s, o, u, l),
        Ms(s) || zt.type(t, s, o, u, l)
    }
    a(u)
}, Iz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s) && !t.required)
            return a();
        zt.required(t, s, o, u, l),
        s !== void 0 && (zt.type(t, s, o, u, l),
            zt.range(t, s, o, u, l))
    }
    a(u)
}, Pz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s) && !t.required)
            return a();
        zt.required(t, s, o, u, l),
        s !== void 0 && (zt.type(t, s, o, u, l),
            zt.range(t, s, o, u, l))
    }
    a(u)
}, Lz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (s == null && !t.required)
            return a();
        zt.required(t, s, o, u, l, "array"),
        s != null && (zt.type(t, s, o, u, l),
            zt.range(t, s, o, u, l))
    }
    a(u)
}, Mz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s) && !t.required)
            return a();
        zt.required(t, s, o, u, l),
        s !== void 0 && zt.type(t, s, o, u, l)
    }
    a(u)
}, Oz = "enum", Rz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s) && !t.required)
            return a();
        zt.required(t, s, o, u, l),
        s !== void 0 && zt[Oz](t, s, o, u, l)
    }
    a(u)
}, Nz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s, "string") && !t.required)
            return a();
        zt.required(t, s, o, u, l),
        Ms(s, "string") || zt.pattern(t, s, o, u, l)
    }
    a(u)
}, Dz = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s, "date") && !t.required)
            return a();
        if (zt.required(t, s, o, u, l),
            !Ms(s, "date")) {
            var g;
            s instanceof Date ? g = s : g = new Date(s),
                zt.type(t, g, o, u, l),
            g && zt.range(t, g.getTime(), o, u, l)
        }
    }
    a(u)
}, Fz = function (t, s, a, o, l) {
    var u = []
        , p = Array.isArray(s) ? "array" : typeof s;
    zt.required(t, s, o, u, l, p),
        a(u)
}, ch = function (t, s, a, o, l) {
    var u = t.type
        , p = []
        , g = t.required || !t.required && o.hasOwnProperty(t.field);
    if (g) {
        if (Ms(s, u) && !t.required)
            return a();
        zt.required(t, s, o, p, l, u),
        Ms(s, u) || zt.type(t, s, o, p, l)
    }
    a(p)
}, $z = function (t, s, a, o, l) {
    var u = []
        , p = t.required || !t.required && o.hasOwnProperty(t.field);
    if (p) {
        if (Ms(s) && !t.required)
            return a();
        zt.required(t, s, o, u, l)
    }
    a(u)
}, ll = {
    string: kz,
    method: Cz,
    number: Az,
    boolean: Ez,
    regexp: Tz,
    integer: Iz,
    float: Pz,
    array: Lz,
    object: Mz,
    enum: Rz,
    pattern: Nz,
    date: Dz,
    url: ch,
    hex: ch,
    email: ch,
    required: Fz,
    any: $z
};

function kf() {
    return {
        default: "Validation error on field %s",
        required: "%s is required",
        enum: "%s must be one of %s",
        whitespace: "%s cannot be empty",
        date: {
            format: "%s date %s is invalid for format %s",
            parse: "%s date could not be parsed, %s is invalid ",
            invalid: "%s date %s is invalid"
        },
        types: {
            string: "%s is not a %s",
            method: "%s is not a %s (function)",
            array: "%s is not an %s",
            object: "%s is not an %s",
            number: "%s is not a %s",
            date: "%s is not a %s",
            boolean: "%s is not a %s",
            integer: "%s is not an %s",
            float: "%s is not a %s",
            regexp: "%s is not a valid %s",
            email: "%s is not a valid %s",
            url: "%s is not a valid %s",
            hex: "%s is not a valid %s"
        },
        string: {
            len: "%s must be exactly %s characters",
            min: "%s must be at least %s characters",
            max: "%s cannot be longer than %s characters",
            range: "%s must be between %s and %s characters"
        },
        number: {
            len: "%s must equal %s",
            min: "%s cannot be less than %s",
            max: "%s cannot be greater than %s",
            range: "%s must be between %s and %s"
        },
        array: {
            len: "%s must be exactly %s in length",
            min: "%s cannot be less than %s in length",
            max: "%s cannot be greater than %s in length",
            range: "%s must be between %s and %s in length"
        },
        pattern: {
            mismatch: "%s value %s does not match pattern %s"
        },
        clone: function () {
            var t = JSON.parse(JSON.stringify(this));
            return t.clone = this.clone,
                t
        }
    }
}

var Cf = kf()
    , cc = function () {
    function e(s) {
        this.rules = null,
            this._messages = Cf,
            this.define(s)
    }

    var t = e.prototype;
    return t.define = function (a) {
        var o = this;
        if (!a)
            throw new Error("Cannot configure a schema with no rules");
        if (typeof a != "object" || Array.isArray(a))
            throw new Error("Rules must be an object");
        this.rules = {},
            Object.keys(a).forEach(function (l) {
                var u = a[l];
                o.rules[l] = Array.isArray(u) ? u : [u]
            })
    }
        ,
        t.messages = function (a) {
            return a && (this._messages = ty(kf(), a)),
                this._messages
        }
        ,
        t.validate = function (a, o, l) {
            var u = this;
            o === void 0 && (o = {}),
            l === void 0 && (l = function () {
                }
            );
            var p = a
                , g = o
                , y = l;
            if (typeof g == "function" && (y = g,
                g = {}),
            !this.rules || Object.keys(this.rules).length === 0)
                return y && y(null, p),
                    Promise.resolve(p);

            function v(A) {
                var R = []
                    , P = {};

                function M(F) {
                    if (Array.isArray(F)) {
                        var $;
                        R = ($ = R).concat.apply($, F)
                    } else
                        R.push(F)
                }

                for (var O = 0; O < A.length; O++)
                    M(A[O]);
                R.length ? (P = _f(R),
                    y(R, P)) : y(null, p)
            }

            if (g.messages) {
                var w = this.messages();
                w === Cf && (w = kf()),
                    ty(w, g.messages),
                    g.messages = w
            } else
                g.messages = this.messages();
            var C = {}
                , T = g.keys || Object.keys(this.rules);
            T.forEach(function (A) {
                var R = u.rules[A]
                    , P = p[A];
                R.forEach(function (M) {
                    var O = M;
                    typeof O.transform == "function" && (p === a && (p = Xa({}, p)),
                        P = p[A] = O.transform(P)),
                        typeof O == "function" ? O = {
                            validator: O
                        } : O = Xa({}, O),
                        O.validator = u.getValidationMethod(O),
                    O.validator && (O.field = A,
                        O.fullField = O.fullField || A,
                        O.type = u.getType(O),
                        C[A] = C[A] || [],
                        C[A].push({
                            rule: O,
                            value: P,
                            source: p,
                            field: A
                        }))
                })
            });
            var I = {};
            return gz(C, g, function (A, R) {
                var P = A.rule
                    ,
                    M = (P.type === "object" || P.type === "array") && (typeof P.fields == "object" || typeof P.defaultField == "object");
                M = M && (P.required || !P.required && A.value),
                    P.field = A.field;

                function O(V, G) {
                    return Xa({}, G, {
                        fullField: P.fullField + "." + V,
                        fullFields: P.fullFields ? [].concat(P.fullFields, [V]) : [V]
                    })
                }

                function F(V) {
                    V === void 0 && (V = []);
                    var G = Array.isArray(V) ? V : [V];
                    !g.suppressWarning && G.length && e.warning("async-validator:", G),
                    G.length && P.message !== void 0 && (G = [].concat(P.message));
                    var ie = G.map(ey(P, p));
                    if (g.first && ie.length)
                        return I[P.field] = 1,
                            R(ie);
                    if (!M)
                        R(ie);
                    else {
                        if (P.required && !A.value)
                            return P.message !== void 0 ? ie = [].concat(P.message).map(ey(P, p)) : g.error && (ie = [g.error(P, yn(g.messages.required, P.field))]),
                                R(ie);
                        var te = {};
                        P.defaultField && Object.keys(A.value).map(function (oe) {
                            te[oe] = P.defaultField
                        }),
                            te = Xa({}, te, A.rule.fields);
                        var ne = {};
                        Object.keys(te).forEach(function (oe) {
                            var ve = te[oe]
                                , be = Array.isArray(ve) ? ve : [ve];
                            ne[oe] = be.map(O.bind(null, oe))
                        });
                        var le = new e(ne);
                        le.messages(g.messages),
                        A.rule.options && (A.rule.options.messages = g.messages,
                            A.rule.options.error = g.error),
                            le.validate(A.value, A.rule.options || g, function (oe) {
                                var ve = [];
                                ie && ie.length && ve.push.apply(ve, ie),
                                oe && oe.length && ve.push.apply(ve, oe),
                                    R(ve.length ? ve : null)
                            })
                    }
                }

                var $;
                if (P.asyncValidator)
                    $ = P.asyncValidator(P, A.value, F, A.source, g);
                else if (P.validator) {
                    try {
                        $ = P.validator(P, A.value, F, A.source, g)
                    } catch (V) {
                        console.error == null || console.error(V),
                        g.suppressValidatorError || setTimeout(function () {
                            throw V
                        }, 0),
                            F(V.message)
                    }
                    $ === !0 ? F() : $ === !1 ? F(typeof P.message == "function" ? P.message(P.fullField || P.field) : P.message || (P.fullField || P.field) + " fails") : $ instanceof Array ? F($) : $ instanceof Error && F($.message)
                }
                $ && $.then && $.then(function () {
                    return F()
                }, function (V) {
                    return F(V)
                })
            }, function (A) {
                v(A)
            }, p)
        }
        ,
        t.getType = function (a) {
            if (a.type === void 0 && a.pattern instanceof RegExp && (a.type = "pattern"),
            typeof a.validator != "function" && a.type && !ll.hasOwnProperty(a.type))
                throw new Error(yn("Unknown rule type %s", a.type));
            return a.type || "string"
        }
        ,
        t.getValidationMethod = function (a) {
            if (typeof a.validator == "function")
                return a.validator;
            var o = Object.keys(a)
                , l = o.indexOf("message");
            return l !== -1 && o.splice(l, 1),
                o.length === 1 && o[0] === "required" ? ll.required : ll[this.getType(a)] || void 0
        }
        ,
        e
}();
cc.register = function (t, s) {
    if (typeof s != "function")
        throw new Error("Cannot register a validator by type, validator is not a function");
    ll[t] = s
}
;
cc.warning = dz;
cc.messages = Cf;
cc.validators = ll;
const Bz = ["", "error", "validating", "success"]
    , Hz = gt({
    label: String,
    labelWidth: {
        type: [String, Number],
        default: ""
    },
    labelPosition: {
        type: String,
        values: ["left", "right", "top", ""],
        default: ""
    },
    prop: {
        type: Ye([String, Array])
    },
    required: {
        type: Boolean,
        default: void 0
    },
    rules: {
        type: Ye([Object, Array])
    },
    error: String,
    validateStatus: {
        type: String,
        values: Bz
    },
    for: String,
    inlineMessage: {
        type: [String, Boolean],
        default: ""
    },
    showMessage: {
        type: Boolean,
        default: !0
    },
    size: {
        type: String,
        values: rc
    }
})
    , ny = "ElLabelWrap";
var Vz = Ce({
    name: ny,
    props: {
        isAutoWidth: Boolean,
        updateAll: Boolean
    },
    setup(e, {slots: t}) {
        const s = st(Eo, void 0)
            , a = st(rr);
        a || hn(ny, "usage: <el-form-item><label-wrap /></el-form-item>");
        const o = rt("form")
            , l = Se()
            , u = Se(0)
            , p = () => {
            var v;
            if ((v = l.value) != null && v.firstElementChild) {
                const w = window.getComputedStyle(l.value.firstElementChild).width;
                return Math.ceil(Number.parseFloat(w))
            } else
                return 0
        }
            , g = (v = "update") => {
            xt(() => {
                    t.default && e.isAutoWidth && (v === "update" ? u.value = p() : v === "remove" && (s == null || s.deregisterLabelWidth(u.value)))
                }
            )
        }
            , y = () => g("update");
        return $t(() => {
                y()
            }
        ),
            us(() => {
                    g("remove")
                }
            ),
            dr(() => y()),
            Ke(u, (v, w) => {
                    e.updateAll && (s == null || s.registerLabelWidth(v, w))
                }
            ),
            sn(re(() => {
                    var v, w;
                    return (w = (v = l.value) == null ? void 0 : v.firstElementChild) != null ? w : null
                }
            ), y),
            () => {
                var v, w;
                if (!t)
                    return null;
                const {isAutoWidth: C} = e;
                if (C) {
                    const T = s == null ? void 0 : s.autoLabelWidth
                        , I = a == null ? void 0 : a.hasLabel
                        , A = {};
                    if (I && T && T !== "auto") {
                        const R = Math.max(0, Number.parseInt(T, 10) - u.value)
                            , M = (a.labelPosition || s.labelPosition) === "left" ? "marginRight" : "marginLeft";
                        R && (A[M] = `${R}px`)
                    }
                    return ae("div", {
                        ref: l,
                        class: [o.be("item", "label-wrap")],
                        style: A
                    }, [(v = t.default) == null ? void 0 : v.call(t)])
                } else
                    return ae(Ct, {
                        ref: l
                    }, [(w = t.default) == null ? void 0 : w.call(t)])
            }
    }
});
const zz = Ce({
    name: "ElFormItem"
})
    , Wz = Ce({
    ...zz,
    props: Hz,
    setup(e, {expose: t}) {
        const s = e
            , a = _i()
            , o = st(Eo, void 0)
            , l = st(rr, void 0)
            , u = ii(void 0, {
            formItem: !1
        })
            , p = rt("form-item")
            , g = Nn().value
            , y = Se([])
            , v = Se("")
            , w = W4(v, 100)
            , C = Se("")
            , T = Se();
        let I, A = !1;
        const R = re(() => s.labelPosition || (o == null ? void 0 : o.labelPosition))
            , P = re(() => {
                    if (R.value === "top")
                        return {};
                    const Ae = Sn(s.labelWidth || (o == null ? void 0 : o.labelWidth) || "");
                    return Ae ? {
                        width: Ae
                    } : {}
                }
            )
            , M = re(() => {
                    if (R.value === "top" || o != null && o.inline)
                        return {};
                    if (!s.label && !s.labelWidth && ne)
                        return {};
                    const Ae = Sn(s.labelWidth || (o == null ? void 0 : o.labelWidth) || "");
                    return !s.label && !a.label ? {
                        marginLeft: Ae
                    } : {}
                }
            )
            ,
            O = re(() => [p.b(), p.m(u.value), p.is("error", v.value === "error"), p.is("validating", v.value === "validating"), p.is("success", v.value === "success"), p.is("required", de.value || s.required), p.is("no-asterisk", o == null ? void 0 : o.hideRequiredAsterisk), (o == null ? void 0 : o.requireAsteriskPosition) === "right" ? "asterisk-right" : "asterisk-left", {
                [p.m("feedback")]: o == null ? void 0 : o.statusIcon,
                [p.m(`label-${R.value}`)]: R.value
            }])
            , F = re(() => zs(s.inlineMessage) ? s.inlineMessage : (o == null ? void 0 : o.inlineMessage) || !1)
            , $ = re(() => [p.e("error"), {
                [p.em("error", "inline")]: F.value
            }])
            , V = re(() => s.prop ? pt(s.prop) ? s.prop : s.prop.join(".") : "")
            , G = re(() => !!(s.label || a.label))
            , ie = re(() => s.for || (y.value.length === 1 ? y.value[0] : void 0))
            , te = re(() => !ie.value && G.value)
            , ne = !!l
            , le = re(() => {
                    const Ae = o == null ? void 0 : o.model;
                    if (!(!Ae || !s.prop))
                        return nh(Ae, s.prop).value
                }
            )
            , oe = re(() => {
                    const {required: Ae} = s
                        , Ne = [];
                    s.rules && Ne.push(...An(s.rules));
                    const He = o == null ? void 0 : o.rules;
                    if (He && s.prop) {
                        const et = nh(He, s.prop).value;
                        et && Ne.push(...An(et))
                    }
                    if (Ae !== void 0) {
                        const et = Ne.map((dt, Y) => [dt, Y]).filter(([dt]) => Object.keys(dt).includes("required"));
                        if (et.length > 0)
                            for (const [dt, Y] of et)
                                dt.required !== Ae && (Ne[Y] = {
                                    ...dt,
                                    required: Ae
                                });
                        else
                            Ne.push({
                                required: Ae
                            })
                    }
                    return Ne
                }
            )
            , ve = re(() => oe.value.length > 0)
            ,
            be = Ae => oe.value.filter(He => !He.trigger || !Ae ? !0 : Ze(He.trigger) ? He.trigger.includes(Ae) : He.trigger === Ae).map(({
                                                                                                                                              trigger: He,
                                                                                                                                              ...et
                                                                                                                                          }) => et)
            , de = re(() => oe.value.some(Ae => Ae.required))
            , J = re(() => {
                    var Ae;
                    return w.value === "error" && s.showMessage && ((Ae = o == null ? void 0 : o.showMessage) != null ? Ae : !0)
                }
            )
            , ue = re(() => `${s.label || ""}${(o == null ? void 0 : o.labelSuffix) || ""}`)
            , fe = Ae => {
                v.value = Ae
            }
            , Me = Ae => {
                var Ne, He;
                const {errors: et, fields: dt} = Ae;
                (!et || !dt) && console.error(Ae),
                    fe("error"),
                    C.value = et ? (He = (Ne = et == null ? void 0 : et[0]) == null ? void 0 : Ne.message) != null ? He : `${s.prop} is required` : "",
                o == null || o.emit("validate", s.prop, !1, C.value)
            }
            , Xe = () => {
                fe("success"),
                o == null || o.emit("validate", s.prop, !0, "")
            }
            , Be = async Ae => {
                const Ne = V.value;
                return new cc({
                    [Ne]: Ae
                }).validate({
                    [Ne]: le.value
                }, {
                    firstFields: !0
                }).then(() => (Xe(),
                    !0)).catch(et => (Me(et),
                    Promise.reject(et)))
            }
            , je = async (Ae, Ne) => {
                if (A || !s.prop)
                    return !1;
                const He = nt(Ne);
                if (!ve.value)
                    return Ne == null || Ne(!1),
                        !1;
                const et = be(Ae);
                return et.length === 0 ? (Ne == null || Ne(!0),
                    !0) : (fe("validating"),
                    Be(et).then(() => (Ne == null || Ne(!0),
                        !0)).catch(dt => {
                            const {fields: Y} = dt;
                            return Ne == null || Ne(!1, Y),
                                He ? !1 : Promise.reject(Y)
                        }
                    ))
            }
            , tt = () => {
                fe(""),
                    C.value = "",
                    A = !1
            }
            , ft = async () => {
                const Ae = o == null ? void 0 : o.model;
                if (!Ae || !s.prop)
                    return;
                const Ne = nh(Ae, s.prop);
                A = !0,
                    Ne.value = tb(I),
                    await xt(),
                    tt(),
                    A = !1
            }
            , mt = Ae => {
                y.value.includes(Ae) || y.value.push(Ae)
            }
            , bt = Ae => {
                y.value = y.value.filter(Ne => Ne !== Ae)
            }
        ;
        Ke(() => s.error, Ae => {
                C.value = Ae || "",
                    fe(Ae ? "error" : "")
            }
            , {
                immediate: !0
            }),
            Ke(() => s.validateStatus, Ae => fe(Ae || ""));
        const Pe = ys({
            ...ai(s),
            $el: T,
            size: u,
            validateState: v,
            labelId: g,
            inputIds: y,
            isGroup: te,
            hasLabel: G,
            fieldValue: le,
            addInputId: mt,
            removeInputId: bt,
            resetField: ft,
            clearValidate: tt,
            validate: je
        });
        return Xt(rr, Pe),
            $t(() => {
                    s.prop && (o == null || o.addField(Pe),
                        I = tb(le.value))
                }
            ),
            us(() => {
                    o == null || o.removeField(Pe)
                }
            ),
            t({
                size: u,
                validateMessage: C,
                validateState: v,
                validate: je,
                clearValidate: tt,
                resetField: ft
            }),
            (Ae, Ne) => {
                var He;
                return Z(),
                    ye("div", {
                        ref_key: "formItemRef",
                        ref: T,
                        class: he(D(O)),
                        role: D(te) ? "group" : void 0,
                        "aria-labelledby": D(te) ? D(g) : void 0
                    }, [ae(D(Vz), {
                        "is-auto-width": D(P).width === "auto",
                        "update-all": ((He = D(o)) == null ? void 0 : He.labelWidth) === "auto"
                    }, {
                        default: se(() => [D(G) ? (Z(),
                            Te(Vt(D(ie) ? "label" : "div"), {
                                key: 0,
                                id: D(g),
                                for: D(ie),
                                class: he(D(p).e("label")),
                                style: kt(D(P))
                            }, {
                                default: se(() => [De(Ae.$slots, "label", {
                                    label: D(ue)
                                }, () => [at(me(D(ue)), 1)])]),
                                _: 3
                            }, 8, ["id", "for", "class", "style"])) : ke("v-if", !0)]),
                        _: 3
                    }, 8, ["is-auto-width", "update-all"]), U("div", {
                        class: he(D(p).e("content")),
                        style: kt(D(M))
                    }, [De(Ae.$slots, "default"), ae(Gu, {
                        name: `${D(p).namespace.value}-zoom-in-top`
                    }, {
                        default: se(() => [D(J) ? De(Ae.$slots, "error", {
                            key: 0,
                            error: C.value
                        }, () => [U("div", {
                            class: he(D($))
                        }, me(C.value), 3)]) : ke("v-if", !0)]),
                        _: 3
                    }, 8, ["name"])], 6)], 10, ["role", "aria-labelledby"])
            }
    }
});
var GS = ot(Wz, [["__file", "form-item.vue"]]);
const wg = Zt(rz, {
    FormItem: GS
})
    , Sg = Os(GS);

function Uz() {
    const e = Bs()
        , t = Se(0)
        , s = 11
        , a = re(() => ({
        minWidth: `${Math.max(t.value, s)}px`
    }));
    return sn(e, () => {
            var l, u;
            t.value = (u = (l = e.value) == null ? void 0 : l.getBoundingClientRect().width) != null ? u : 0
        }
    ),
        {
            calculatorRef: e,
            calculatorWidth: t,
            inputStyle: a
        }
}

const Yz = gt({
    type: {
        type: String,
        values: ["primary", "success", "warning", "info", "danger", "default"],
        default: "default"
    },
    underline: {
        type: Boolean,
        default: !0
    },
    disabled: Boolean,
    href: {
        type: String,
        default: ""
    },
    target: {
        type: String,
        default: "_self"
    },
    icon: {
        type: Cs
    }
})
    , Xz = {
    click: e => e instanceof MouseEvent
}
    , jz = Ce({
    name: "ElLink"
})
    , Gz = Ce({
    ...jz,
    props: Yz,
    emits: Xz,
    setup(e, {emit: t}) {
        const s = e
            , a = rt("link")
            ,
            o = re(() => [a.b(), a.m(s.type), a.is("disabled", s.disabled), a.is("underline", s.underline && !s.disabled)]);

        function l(u) {
            s.disabled || t("click", u)
        }

        return (u, p) => (Z(),
            ye("a", {
                class: he(D(o)),
                href: u.disabled || !u.href ? void 0 : u.href,
                target: u.disabled || !u.href ? void 0 : u.target,
                onClick: l
            }, [u.icon ? (Z(),
                Te(D(Mt), {
                    key: 0
                }, {
                    default: se(() => [(Z(),
                        Te(Vt(u.icon)))]),
                    _: 1
                })) : ke("v-if", !0), u.$slots.default ? (Z(),
                ye("span", {
                    key: 1,
                    class: he(D(a).e("inner"))
                }, [De(u.$slots, "default")], 2)) : ke("v-if", !0), u.$slots.icon ? De(u.$slots, "icon", {
                key: 2
            }) : ke("v-if", !0)], 10, ["href", "target"]))
    }
});
var qz = ot(Gz, [["__file", "link.vue"]]);
const _g = Zt(qz);
let Kz = class {
        constructor(t, s) {
            this.parent = t,
                this.domNode = s,
                this.subIndex = 0,
                this.subIndex = 0,
                this.init()
        }

        init() {
            this.subMenuItems = this.domNode.querySelectorAll("li"),
                this.addListeners()
        }

        gotoSubIndex(t) {
            t === this.subMenuItems.length ? t = 0 : t < 0 && (t = this.subMenuItems.length - 1),
                this.subMenuItems[t].focus(),
                this.subIndex = t
        }

        addListeners() {
            const t = this.parent.domNode;
            Array.prototype.forEach.call(this.subMenuItems, s => {
                    s.addEventListener("keydown", a => {
                            let o = !1;
                            switch (a.code) {
                                case wt.down: {
                                    this.gotoSubIndex(this.subIndex + 1),
                                        o = !0;
                                    break
                                }
                                case wt.up: {
                                    this.gotoSubIndex(this.subIndex - 1),
                                        o = !0;
                                    break
                                }
                                case wt.tab: {
                                    Gc(t, "mouseleave");
                                    break
                                }
                                case wt.enter:
                                case wt.numpadEnter:
                                case wt.space: {
                                    o = !0,
                                        a.currentTarget.click();
                                    break
                                }
                            }
                            return o && (a.preventDefault(),
                                a.stopPropagation()),
                                !1
                        }
                    )
                }
            )
        }
    }
    , Zz = class {
        constructor(t, s) {
            this.domNode = t,
                this.submenu = null,
                this.submenu = null,
                this.init(s)
        }

        init(t) {
            this.domNode.setAttribute("tabindex", "0");
            const s = this.domNode.querySelector(`.${t}-menu`);
            s && (this.submenu = new Kz(this, s)),
                this.addListeners()
        }

        addListeners() {
            this.domNode.addEventListener("keydown", t => {
                    let s = !1;
                    switch (t.code) {
                        case wt.down: {
                            Gc(t.currentTarget, "mouseenter"),
                            this.submenu && this.submenu.gotoSubIndex(0),
                                s = !0;
                            break
                        }
                        case wt.up: {
                            Gc(t.currentTarget, "mouseenter"),
                            this.submenu && this.submenu.gotoSubIndex(this.submenu.subMenuItems.length - 1),
                                s = !0;
                            break
                        }
                        case wt.tab: {
                            Gc(t.currentTarget, "mouseleave");
                            break
                        }
                        case wt.enter:
                        case wt.numpadEnter:
                        case wt.space: {
                            s = !0,
                                t.currentTarget.click();
                            break
                        }
                    }
                    s && t.preventDefault()
                }
            )
        }
    }
    , Jz = class {
        constructor(t, s) {
            this.domNode = t,
                this.init(s)
        }

        init(t) {
            const s = this.domNode.childNodes;
            Array.from(s).forEach(a => {
                    a.nodeType === 1 && new Zz(a, t)
                }
            )
        }
    }
;
const Qz = Ce({
    name: "ElMenuCollapseTransition"
})
    , e9 = Ce({
    ...Qz,
    setup(e) {
        const t = rt("menu")
            , s = {
            onBeforeEnter: a => a.style.opacity = "0.2",
            onEnter(a, o) {
                Ua(a, `${t.namespace.value}-opacity-transition`),
                    a.style.opacity = "1",
                    o()
            },
            onAfterEnter(a) {
                _a(a, `${t.namespace.value}-opacity-transition`),
                    a.style.opacity = ""
            },
            onBeforeLeave(a) {
                a.dataset || (a.dataset = {}),
                    mf(a, t.m("collapse")) ? (_a(a, t.m("collapse")),
                        a.dataset.oldOverflow = a.style.overflow,
                        a.dataset.scrollWidth = a.clientWidth.toString(),
                        Ua(a, t.m("collapse"))) : (Ua(a, t.m("collapse")),
                        a.dataset.oldOverflow = a.style.overflow,
                        a.dataset.scrollWidth = a.clientWidth.toString(),
                        _a(a, t.m("collapse"))),
                    a.style.width = `${a.scrollWidth}px`,
                    a.style.overflow = "hidden"
            },
            onLeave(a) {
                Ua(a, "horizontal-collapse-transition"),
                    a.style.width = `${a.dataset.scrollWidth}px`
            }
        };
        return (a, o) => (Z(),
            Te(fn, vs({
                mode: "out-in"
            }, D(s)), {
                default: se(() => [De(a.$slots, "default")]),
                _: 3
            }, 16))
    }
});
var t9 = ot(e9, [["__file", "menu-collapse-transition.vue"]]);

function qS(e, t) {
    const s = re(() => {
            let o = e.parent;
            const l = [t.value];
            for (; o.type.name !== "ElMenu";)
                o.props.index && l.unshift(o.props.index),
                    o = o.parent;
            return l
        }
    );
    return {
        parentMenu: re(() => {
                let o = e.parent;
                for (; o && !["ElMenu", "ElSubMenu"].includes(o.type.name);)
                    o = o.parent;
                return o
            }
        ),
        indexPath: s
    }
}

function s9(e) {
    return re(() => {
            const s = e.backgroundColor;
            return s ? new hS(s).shade(20).toString() : ""
        }
    )
}

const KS = (e, t) => {
    const s = rt("menu");
    return re(() => s.cssVarBlock({
        "text-color": e.textColor || "",
        "hover-text-color": e.textColor || "",
        "bg-color": e.backgroundColor || "",
        "hover-bg-color": s9(e).value || "",
        "active-color": e.activeTextColor || "",
        level: `${t}`
    }))
}
    , n9 = gt({
    index: {
        type: String,
        required: !0
    },
    showTimeout: Number,
    hideTimeout: Number,
    popperClass: String,
    disabled: Boolean,
    teleported: {
        type: Boolean,
        default: void 0
    },
    popperOffset: Number,
    expandCloseIcon: {
        type: Cs
    },
    expandOpenIcon: {
        type: Cs
    },
    collapseCloseIcon: {
        type: Cs
    },
    collapseOpenIcon: {
        type: Cs
    }
})
    , uh = "ElSubMenu";
var kg = Ce({
    name: uh,
    props: n9,
    setup(e, {slots: t, expose: s}) {
        const a = Et()
            , {indexPath: o, parentMenu: l} = qS(a, re(() => e.index))
            , u = rt("menu")
            , p = rt("sub-menu")
            , g = st("rootMenu");
        g || hn(uh, "can not inject root menu");
        const y = st(`subMenu:${l.value.uid}`);
        y || hn(uh, "can not inject sub menu");
        const v = Se({})
            , w = Se({});
        let C;
        const T = Se(!1)
            , I = Se()
            , A = Se()
            , R = re(() => ie.value === "horizontal" && M.value ? "bottom-start" : "right-start")
            ,
            P = re(() => ie.value === "horizontal" && M.value || ie.value === "vertical" && !g.props.collapse ? e.expandCloseIcon && e.expandOpenIcon ? V.value ? e.expandOpenIcon : e.expandCloseIcon : Yp : e.collapseCloseIcon && e.collapseOpenIcon ? V.value ? e.collapseOpenIcon : e.collapseCloseIcon : Pw)
            , M = re(() => y.level === 0)
            , O = re(() => {
                    const Be = e.teleported;
                    return Be === void 0 ? M.value : Be
                }
            )
            , F = re(() => g.props.collapse ? `${u.namespace.value}-zoom-in-left` : `${u.namespace.value}-zoom-in-top`)
            ,
            $ = re(() => ie.value === "horizontal" && M.value ? ["bottom-start", "bottom-end", "top-start", "top-end", "right-start", "left-start"] : ["right-start", "right", "right-end", "left-start", "bottom-start", "bottom-end", "top-start", "top-end"])
            , V = re(() => g.openedMenus.includes(e.index))
            , G = re(() => [...Object.values(v.value), ...Object.values(w.value)].some(({active: Be}) => Be))
            , ie = re(() => g.props.mode)
            , te = re(() => g.props.persistent)
            , ne = ys({
                index: e.index,
                indexPath: o,
                active: G
            })
            , le = KS(g.props, y.level + 1)
            , oe = re(() => {
                    var Be;
                    return (Be = e.popperOffset) != null ? Be : g.props.popperOffset
                }
            )
            , ve = re(() => {
                    var Be;
                    return (Be = e.popperClass) != null ? Be : g.props.popperClass
                }
            )
            , be = re(() => {
                    var Be;
                    return (Be = e.showTimeout) != null ? Be : g.props.showTimeout
                }
            )
            , de = re(() => {
                    var Be;
                    return (Be = e.hideTimeout) != null ? Be : g.props.hideTimeout
                }
            )
            , J = () => {
                var Be, je, tt;
                return (tt = (je = (Be = A.value) == null ? void 0 : Be.popperRef) == null ? void 0 : je.popperInstanceRef) == null ? void 0 : tt.destroy()
            }
            , ue = Be => {
                Be || J()
            }
            , fe = () => {
                g.props.menuTrigger === "hover" && g.props.mode === "horizontal" || g.props.collapse && g.props.mode === "vertical" || e.disabled || g.handleSubMenuClick({
                    index: e.index,
                    indexPath: o.value,
                    active: G.value
                })
            }
            , Me = (Be, je = be.value) => {
                var tt;
                if (Be.type !== "focus") {
                    if (g.props.menuTrigger === "click" && g.props.mode === "horizontal" || !g.props.collapse && g.props.mode === "vertical" || e.disabled) {
                        y.mouseInChild.value = !0;
                        return
                    }
                    y.mouseInChild.value = !0,
                    C == null || C(),
                        {stop: C} = Fl(() => {
                                g.openMenu(e.index, o.value)
                            }
                            , je),
                    O.value && ((tt = l.value.vnode.el) == null || tt.dispatchEvent(new MouseEvent("mouseenter")))
                }
            }
            , Xe = (Be = !1) => {
                var je;
                if (g.props.menuTrigger === "click" && g.props.mode === "horizontal" || !g.props.collapse && g.props.mode === "vertical") {
                    y.mouseInChild.value = !1;
                    return
                }
                C == null || C(),
                    y.mouseInChild.value = !1,
                    {stop: C} = Fl(() => !T.value && g.closeMenu(e.index, o.value), de.value),
                O.value && Be && ((je = y.handleMouseleave) == null || je.call(y, !0))
            }
        ;
        Ke(() => g.props.collapse, Be => ue(!!Be));
        {
            const Be = tt => {
                    w.value[tt.index] = tt
                }
                , je = tt => {
                    delete w.value[tt.index]
                }
            ;
            Xt(`subMenu:${a.uid}`, {
                addSubMenu: Be,
                removeSubMenu: je,
                handleMouseleave: Xe,
                mouseInChild: T,
                level: y.level + 1
            })
        }
        return s({
            opened: V
        }),
            $t(() => {
                    g.addSubMenu(ne),
                        y.addSubMenu(ne)
                }
            ),
            us(() => {
                    y.removeSubMenu(ne),
                        g.removeSubMenu(ne)
                }
            ),
            () => {
                var Be;
                const je = [(Be = t.title) == null ? void 0 : Be.call(t), jt(Mt, {
                    class: p.e("icon-arrow"),
                    style: {
                        transform: V.value ? e.expandCloseIcon && e.expandOpenIcon || e.collapseCloseIcon && e.collapseOpenIcon && g.props.collapse ? "none" : "rotateZ(180deg)" : "none"
                    }
                }, {
                    default: () => pt(P.value) ? jt(a.appContext.components[P.value]) : jt(P.value)
                })]
                    , tt = g.isMenuPopup ? jt(Ai, {
                    ref: A,
                    visible: V.value,
                    effect: "light",
                    pure: !0,
                    offset: oe.value,
                    showArrow: !1,
                    persistent: te.value,
                    popperClass: ve.value,
                    placement: R.value,
                    teleported: O.value,
                    fallbackPlacements: $.value,
                    transition: F.value,
                    gpuAcceleration: !1
                }, {
                    content: () => {
                        var ft;
                        return jt("div", {
                            class: [u.m(ie.value), u.m("popup-container"), ve.value],
                            onMouseenter: mt => Me(mt, 100),
                            onMouseleave: () => Xe(!0),
                            onFocus: mt => Me(mt, 100)
                        }, [jt("ul", {
                            class: [u.b(), u.m("popup"), u.m(`popup-${R.value}`)],
                            style: le.value
                        }, [(ft = t.default) == null ? void 0 : ft.call(t)])])
                    }
                    ,
                    default: () => jt("div", {
                        class: p.e("title"),
                        onClick: fe
                    }, je)
                }) : jt(Ct, {}, [jt("div", {
                    class: p.e("title"),
                    ref: I,
                    onClick: fe
                }, je), jt(or, {}, {
                    default: () => {
                        var ft;
                        return _t(jt("ul", {
                            role: "menu",
                            class: [u.b(), u.m("inline")],
                            style: le.value
                        }, [(ft = t.default) == null ? void 0 : ft.call(t)]), [[ss, V.value]])
                    }
                })]);
                return jt("li", {
                    class: [p.b(), p.is("active", G.value), p.is("opened", V.value), p.is("disabled", e.disabled)],
                    role: "menuitem",
                    ariaHaspopup: !0,
                    ariaExpanded: V.value,
                    onMouseenter: Me,
                    onMouseleave: () => Xe(),
                    onFocus: Me
                }, [tt])
            }
    }
});
const i9 = gt({
    mode: {
        type: String,
        values: ["horizontal", "vertical"],
        default: "vertical"
    },
    defaultActive: {
        type: String,
        default: ""
    },
    defaultOpeneds: {
        type: Ye(Array),
        default: () => bn([])
    },
    uniqueOpened: Boolean,
    router: Boolean,
    menuTrigger: {
        type: String,
        values: ["hover", "click"],
        default: "hover"
    },
    collapse: Boolean,
    backgroundColor: String,
    textColor: String,
    activeTextColor: String,
    closeOnClickOutside: Boolean,
    collapseTransition: {
        type: Boolean,
        default: !0
    },
    ellipsis: {
        type: Boolean,
        default: !0
    },
    popperOffset: {
        type: Number,
        default: 6
    },
    ellipsisIcon: {
        type: Cs,
        default: () => Z3
    },
    popperEffect: {
        type: Ye(String),
        default: "dark"
    },
    popperClass: String,
    showTimeout: {
        type: Number,
        default: 300
    },
    hideTimeout: {
        type: Number,
        default: 300
    },
    persistent: {
        type: Boolean,
        default: !0
    }
})
    , dh = e => Ze(e) && e.every(t => pt(t))
    , a9 = {
    close: (e, t) => pt(e) && dh(t),
    open: (e, t) => pt(e) && dh(t),
    select: (e, t, s, a) => pt(e) && dh(t) && At(s) && (a === void 0 || a instanceof Promise)
};
var r9 = Ce({
    name: "ElMenu",
    props: i9,
    emits: a9,
    setup(e, {emit: t, slots: s, expose: a}) {
        const o = Et()
            , l = o.appContext.config.globalProperties.$router
            , u = Se()
            , p = rt("menu")
            , g = rt("sub-menu")
            , y = Se(-1)
            , v = Se(e.defaultOpeneds && !e.collapse ? e.defaultOpeneds.slice(0) : [])
            , w = Se(e.defaultActive)
            , C = Se({})
            , T = Se({})
            , I = re(() => e.mode === "horizontal" || e.mode === "vertical" && e.collapse)
            , A = () => {
                const de = w.value && C.value[w.value];
                if (!de || e.mode === "horizontal" || e.collapse)
                    return;
                de.indexPath.forEach(ue => {
                        const fe = T.value[ue];
                        fe && R(ue, fe.indexPath)
                    }
                )
            }
            , R = (de, J) => {
                v.value.includes(de) || (e.uniqueOpened && (v.value = v.value.filter(ue => J.includes(ue))),
                    v.value.push(de),
                    t("open", de, J))
            }
            , P = de => {
                const J = v.value.indexOf(de);
                J !== -1 && v.value.splice(J, 1)
            }
            , M = (de, J) => {
                P(de),
                    t("close", de, J)
            }
            , O = ({index: de, indexPath: J}) => {
                v.value.includes(de) ? M(de, J) : R(de, J)
            }
            , F = de => {
                (e.mode === "horizontal" || e.collapse) && (v.value = []);
                const {index: J, indexPath: ue} = de;
                if (!(qi(J) || qi(ue)))
                    if (e.router && l) {
                        const fe = de.route || J
                            , Me = l.push(fe).then(Xe => (Xe || (w.value = J),
                            Xe));
                        t("select", J, ue, {
                            index: J,
                            indexPath: ue,
                            route: fe
                        }, Me)
                    } else
                        w.value = J,
                            t("select", J, ue, {
                                index: J,
                                indexPath: ue
                            })
            }
            , $ = de => {
                var J;
                const ue = C.value
                    , fe = ue[de] || w.value && ue[w.value] || ue[e.defaultActive];
                w.value = (J = fe == null ? void 0 : fe.index) != null ? J : de
            }
            , V = de => {
                const J = getComputedStyle(de)
                    , ue = Number.parseInt(J.marginLeft, 10)
                    , fe = Number.parseInt(J.marginRight, 10);
                return de.offsetWidth + ue + fe || 0
            }
            , G = () => {
                var de, J;
                if (!u.value)
                    return -1;
                const ue = Array.from((J = (de = u.value) == null ? void 0 : de.childNodes) != null ? J : []).filter(mt => mt.nodeName !== "#text" || mt.nodeValue)
                    , fe = 64
                    , Me = getComputedStyle(u.value)
                    , Xe = Number.parseInt(Me.paddingLeft, 10)
                    , Be = Number.parseInt(Me.paddingRight, 10)
                    , je = u.value.clientWidth - Xe - Be;
                let tt = 0
                    , ft = 0;
                return ue.forEach((mt, bt) => {
                        mt.nodeName !== "#comment" && (tt += V(mt),
                        tt <= je - fe && (ft = bt + 1))
                    }
                ),
                    ft === ue.length ? -1 : ft
            }
            , ie = de => T.value[de].indexPath
            , te = (de, J = 33.34) => {
                let ue;
                return () => {
                    ue && clearTimeout(ue),
                        ue = setTimeout(() => {
                                de()
                            }
                            , J)
                }
            }
        ;
        let ne = !0;
        const le = () => {
                if (y.value === G())
                    return;
                const de = () => {
                        y.value = -1,
                            xt(() => {
                                    y.value = G()
                                }
                            )
                    }
                ;
                ne ? de() : te(de)(),
                    ne = !1
            }
        ;
        Ke(() => e.defaultActive, de => {
                C.value[de] || (w.value = ""),
                    $(de)
            }
        ),
            Ke(() => e.collapse, de => {
                    de && (v.value = [])
                }
            ),
            Ke(C.value, A);
        let oe;
        So(() => {
                e.mode === "horizontal" && e.ellipsis ? oe = sn(u, le).stop : oe == null || oe()
            }
        );
        const ve = Se(!1);
        {
            const de = Me => {
                    T.value[Me.index] = Me
                }
                , J = Me => {
                    delete T.value[Me.index]
                }
            ;
            Xt("rootMenu", ys({
                props: e,
                openedMenus: v,
                items: C,
                subMenus: T,
                activeIndex: w,
                isMenuPopup: I,
                addMenuItem: Me => {
                    C.value[Me.index] = Me
                }
                ,
                removeMenuItem: Me => {
                    delete C.value[Me.index]
                }
                ,
                addSubMenu: de,
                removeSubMenu: J,
                openMenu: R,
                closeMenu: M,
                handleMenuItemClick: F,
                handleSubMenuClick: O
            })),
                Xt(`subMenu:${o.uid}`, {
                    addSubMenu: de,
                    removeSubMenu: J,
                    mouseInChild: ve,
                    level: 0
                })
        }
        $t(() => {
                e.mode === "horizontal" && new Jz(o.vnode.el, p.namespace.value)
            }
        ),
            a({
                open: J => {
                    const {indexPath: ue} = T.value[J];
                    ue.forEach(fe => R(fe, ue))
                }
                ,
                close: P,
                handleResize: le
            });
        const be = KS(e, 0);
        return () => {
            var de, J;
            let ue = (J = (de = s.default) == null ? void 0 : de.call(s)) != null ? J : [];
            const fe = [];
            if (e.mode === "horizontal" && u.value) {
                const Be = Fr(ue)
                    , je = y.value === -1 ? Be : Be.slice(0, y.value)
                    , tt = y.value === -1 ? [] : Be.slice(y.value);
                tt != null && tt.length && e.ellipsis && (ue = je,
                    fe.push(jt(kg, {
                        index: "sub-menu-more",
                        class: g.e("hide-arrow"),
                        popperOffset: e.popperOffset
                    }, {
                        title: () => jt(Mt, {
                            class: g.e("icon-more")
                        }, {
                            default: () => jt(e.ellipsisIcon)
                        }),
                        default: () => tt
                    })))
            }
            const Me = e.closeOnClickOutside ? [[ES, () => {
                v.value.length && (ve.value || (v.value.forEach(Be => t("close", Be, ie(Be))),
                    v.value = []))
            }
            ]] : []
                , Xe = _t(jt("ul", {
                key: String(e.collapse),
                role: "menubar",
                ref: u,
                style: be.value,
                class: {
                    [p.b()]: !0,
                    [p.m(e.mode)]: !0,
                    [p.m("collapse")]: e.collapse
                }
            }, [...ue, ...fe]), Me);
            return e.collapseTransition && e.mode === "vertical" ? jt(t9, () => Xe) : Xe
        }
    }
});
const o9 = gt({
    index: {
        type: Ye([String, null]),
        default: null
    },
    route: {
        type: Ye([String, Object])
    },
    disabled: Boolean
})
    , l9 = {
    click: e => pt(e.index) && Ze(e.indexPath)
}
    , Af = "ElMenuItem"
    , c9 = Ce({
    name: Af
})
    , u9 = Ce({
    ...c9,
    props: o9,
    emits: l9,
    setup(e, {expose: t, emit: s}) {
        const a = e
            , o = Et()
            , l = st("rootMenu")
            , u = rt("menu")
            , p = rt("menu-item");
        l || hn(Af, "can not inject root menu");
        const {parentMenu: g, indexPath: y} = qS(o, ks(a, "index"))
            , v = st(`subMenu:${g.value.uid}`);
        v || hn(Af, "can not inject sub menu");
        const w = re(() => a.index === l.activeIndex)
            , C = ys({
                index: a.index,
                indexPath: y,
                active: w
            })
            , T = () => {
                a.disabled || (l.handleMenuItemClick({
                    index: a.index,
                    indexPath: y.value,
                    route: a.route
                }),
                    s("click", C))
            }
        ;
        return $t(() => {
                v.addSubMenu(C),
                    l.addMenuItem(C)
            }
        ),
            us(() => {
                    v.removeSubMenu(C),
                        l.removeMenuItem(C)
                }
            ),
            t({
                parentMenu: g,
                rootMenu: l,
                active: w,
                nsMenu: u,
                nsMenuItem: p,
                handleClick: T
            }),
            (I, A) => (Z(),
                ye("li", {
                    class: he([D(p).b(), D(p).is("active", D(w)), D(p).is("disabled", I.disabled)]),
                    role: "menuitem",
                    tabindex: "-1",
                    onClick: T
                }, [D(g).type.name === "ElMenu" && D(l).props.collapse && I.$slots.title ? (Z(),
                    Te(D(Ai), {
                        key: 0,
                        effect: D(l).props.popperEffect,
                        placement: "right",
                        "fallback-placements": ["left"],
                        persistent: D(l).props.persistent
                    }, {
                        content: se(() => [De(I.$slots, "title")]),
                        default: se(() => [U("div", {
                            class: he(D(u).be("tooltip", "trigger"))
                        }, [De(I.$slots, "default")], 2)]),
                        _: 3
                    }, 8, ["effect", "persistent"])) : (Z(),
                    ye(Ct, {
                        key: 1
                    }, [De(I.$slots, "default"), De(I.$slots, "title")], 64))], 2))
    }
});
var ZS = ot(u9, [["__file", "menu-item.vue"]]);
const d9 = {
    title: String
}
    , h9 = Ce({
    name: "ElMenuItemGroup"
})
    , f9 = Ce({
    ...h9,
    props: d9,
    setup(e) {
        const t = rt("menu-item-group");
        return (s, a) => (Z(),
            ye("li", {
                class: he(D(t).b())
            }, [U("div", {
                class: he(D(t).e("title"))
            }, [s.$slots.title ? De(s.$slots, "title", {
                key: 1
            }) : (Z(),
                ye(Ct, {
                    key: 0
                }, [at(me(s.title), 1)], 64))], 2), U("ul", null, [De(s.$slots, "default")])], 2))
    }
});
var JS = ot(f9, [["__file", "menu-item-group.vue"]]);
const p9 = Zt(r9, {
    MenuItem: ZS,
    MenuItemGroup: JS,
    SubMenu: kg
})
    , g9 = Os(ZS);
Os(JS);
Os(kg);
const QS = Symbol("ElSelectGroup")
    , xd = Symbol("ElSelect");

function m9(e, t) {
    const s = st(xd)
        , a = st(QS, {
            disabled: !1
        })
        , o = re(() => v(An(s.props.modelValue), e.value))
        , l = re(() => {
                var T;
                if (s.props.multiple) {
                    const I = An((T = s.props.modelValue) != null ? T : []);
                    return !o.value && I.length >= s.props.multipleLimit && s.props.multipleLimit > 0
                } else
                    return !1
            }
        )
        , u = re(() => e.label || (At(e.value) ? "" : e.value))
        , p = re(() => e.value || e.label || "")
        , g = re(() => e.disabled || t.groupDisabled || l.value)
        , y = Et()
        , v = (T = [], I) => {
            if (At(e.value)) {
                const A = s.props.valueKey;
                return T && T.some(R => Ft(Yi(R, A)) === Yi(I, A))
            } else
                return T && T.includes(I)
        }
        , w = () => {
            !e.disabled && !a.disabled && (s.states.hoveringIndex = s.optionsArray.indexOf(y.proxy))
        }
        , C = T => {
            const I = new RegExp(vH(T), "i");
            t.visible = I.test(u.value) || e.created
        }
    ;
    return Ke(() => u.value, () => {
            !e.created && !s.props.remote && s.setSelected()
        }
    ),
        Ke(() => e.value, (T, I) => {
                const {remote: A, valueKey: R} = s.props;
                if ((A ? T !== I : !Za(T, I)) && (s.onOptionDestroy(I, y.proxy),
                    s.onOptionCreate(y.proxy)),
                !e.created && !A) {
                    if (R && At(T) && At(I) && T[R] === I[R])
                        return;
                    s.setSelected()
                }
            }
        ),
        Ke(() => a.disabled, () => {
                t.groupDisabled = a.disabled
            }
            , {
                immediate: !0
            }),
        {
            select: s,
            currentLabel: u,
            currentValue: p,
            itemSelected: o,
            isDisabled: g,
            hoverItem: w,
            updateOption: C
        }
}

const v9 = Ce({
    name: "ElOption",
    componentName: "ElOption",
    props: {
        value: {
            required: !0,
            type: [String, Number, Boolean, Object]
        },
        label: [String, Number],
        created: Boolean,
        disabled: Boolean
    },
    setup(e) {
        const t = rt("select")
            , s = Nn()
            ,
            a = re(() => [t.be("dropdown", "item"), t.is("disabled", D(p)), t.is("selected", D(u)), t.is("hovering", D(C))])
            , o = ys({
                index: -1,
                groupDisabled: !1,
                visible: !0,
                hover: !1
            })
            , {currentLabel: l, itemSelected: u, isDisabled: p, select: g, hoverItem: y, updateOption: v} = m9(e, o)
            , {visible: w, hover: C} = ai(o)
            , T = Et().proxy;
        g.onOptionCreate(T),
            us(() => {
                    const A = T.value
                        , {selected: R} = g.states
                        , P = R.some(M => M.value === T.value);
                    xt(() => {
                            g.states.cachedOptions.get(A) === T && !P && g.states.cachedOptions.delete(A)
                        }
                    ),
                        g.onOptionDestroy(A, T)
                }
            );

        function I() {
            p.value || g.handleOptionSelect(T)
        }

        return {
            ns: t,
            id: s,
            containerKls: a,
            currentLabel: l,
            itemSelected: u,
            isDisabled: p,
            select: g,
            hoverItem: y,
            updateOption: v,
            visible: w,
            hover: C,
            selectOptionClick: I,
            states: o
        }
    }
});

function b9(e, t, s, a, o, l) {
    return _t((Z(),
        ye("li", {
            id: e.id,
            class: he(e.containerKls),
            role: "option",
            "aria-disabled": e.isDisabled || void 0,
            "aria-selected": e.itemSelected,
            onMousemove: e.hoverItem,
            onClick: Ot(e.selectOptionClick, ["stop"])
        }, [De(e.$slots, "default", {}, () => [U("span", null, me(e.currentLabel), 1)])], 42, ["id", "aria-disabled", "aria-selected", "onMousemove", "onClick"])), [[ss, e.visible]])
}

var Cg = ot(v9, [["render", b9], ["__file", "option.vue"]]);
const y9 = Ce({
    name: "ElSelectDropdown",
    componentName: "ElSelectDropdown",
    setup() {
        const e = st(xd)
            , t = rt("select")
            , s = re(() => e.props.popperClass)
            , a = re(() => e.props.multiple)
            , o = re(() => e.props.fitInputWidth)
            , l = Se("");

        function u() {
            var p;
            l.value = `${(p = e.selectRef) == null ? void 0 : p.offsetWidth}px`
        }

        return $t(() => {
                u(),
                    sn(e.selectRef, u)
            }
        ),
            {
                ns: t,
                minWidth: l,
                popperClass: s,
                isMultiple: a,
                isFitInputWidth: o
            }
    }
});

function x9(e, t, s, a, o, l) {
    return Z(),
        ye("div", {
            class: he([e.ns.b("dropdown"), e.ns.is("multiple", e.isMultiple), e.popperClass]),
            style: kt({
                [e.isFitInputWidth ? "width" : "minWidth"]: e.minWidth
            })
        }, [e.$slots.header ? (Z(),
            ye("div", {
                key: 0,
                class: he(e.ns.be("dropdown", "header"))
            }, [De(e.$slots, "header")], 2)) : ke("v-if", !0), De(e.$slots, "default"), e.$slots.footer ? (Z(),
            ye("div", {
                key: 1,
                class: he(e.ns.be("dropdown", "footer"))
            }, [De(e.$slots, "footer")], 2)) : ke("v-if", !0)], 6)
}

var w9 = ot(y9, [["render", x9], ["__file", "select-dropdown.vue"]]);
const S9 = (e, t) => {
        const {t: s} = ac()
            , a = Nn()
            , o = rt("select")
            , l = rt("input")
            , u = ys({
                inputValue: "",
                options: new Map,
                cachedOptions: new Map,
                optionValues: [],
                selected: [],
                selectionWidth: 0,
                collapseItemWidth: 0,
                selectedLabel: "",
                hoveringIndex: -1,
                previousQuery: null,
                inputHovering: !1,
                menuVisibleOnFocus: !1,
                isBeforeHide: !1
            })
            , p = Se(null)
            , g = Se(null)
            , y = Se(null)
            , v = Se(null)
            , w = Se(null)
            , C = Se(null)
            , T = Se(null)
            , I = Se(null)
            , A = Se(null)
            , R = Se(null)
            , P = Se(null)
            , {isComposing: M, handleCompositionStart: O, handleCompositionUpdate: F, handleCompositionEnd: $} = Bw({
                afterComposition: Le => lt(Le)
            })
            , {wrapperRef: V, isFocused: G, handleBlur: ie} = $w(w, {
                beforeFocus() {
                    return J.value
                },
                afterFocus() {
                    e.automaticDropdown && !te.value && (te.value = !0,
                        u.menuVisibleOnFocus = !0)
                },
                beforeBlur(Le) {
                    var Qe, Pt;
                    return ((Qe = y.value) == null ? void 0 : Qe.isFocusInsideContent(Le)) || ((Pt = v.value) == null ? void 0 : Pt.isFocusInsideContent(Le))
                },
                afterBlur() {
                    te.value = !1,
                        u.menuVisibleOnFocus = !1
                }
            })
            , te = Se(!1)
            , ne = Se()
            , {form: le, formItem: oe} = Na()
            , {inputId: ve} = To(e, {
                formItemContext: oe
            })
            , {valueOnClear: be, isEmptyValue: de} = y3(e)
            , J = re(() => e.disabled || (le == null ? void 0 : le.disabled))
            , ue = re(() => Ze(e.modelValue) ? e.modelValue.length > 0 : !de(e.modelValue))
            , fe = re(() => {
                    var Le;
                    return (Le = le == null ? void 0 : le.statusIcon) != null ? Le : !1
                }
            )
            , Me = re(() => e.clearable && !J.value && u.inputHovering && ue.value)
            , Xe = re(() => e.remote && e.filterable && !e.remoteShowSuffix ? "" : e.suffixIcon)
            , Be = re(() => o.is("reverse", Xe.value && te.value))
            , je = re(() => (oe == null ? void 0 : oe.validateState) || "")
            , tt = re(() => Nw[je.value])
            , ft = re(() => e.remote ? 300 : 0)
            , mt = re(() => e.remote && !u.inputValue && u.options.size === 0)
            ,
            bt = re(() => e.loading ? e.loadingText || s("el.select.loading") : e.filterable && u.inputValue && u.options.size > 0 && Pe.value === 0 ? e.noMatchText || s("el.select.noMatch") : u.options.size === 0 ? e.noDataText || s("el.select.noData") : null)
            , Pe = re(() => Ae.value.filter(Le => Le.visible).length)
            , Ae = re(() => {
                    const Le = Array.from(u.options.values())
                        , Qe = [];
                    return u.optionValues.forEach(Pt => {
                            const xs = Le.findIndex(qs => qs.value === Pt);
                            xs > -1 && Qe.push(Le[xs])
                        }
                    ),
                        Qe.length >= Le.length ? Qe : Le
                }
            )
            , Ne = re(() => Array.from(u.cachedOptions.values()))
            , He = re(() => {
                    const Le = Ae.value.filter(Qe => !Qe.created).some(Qe => Qe.currentLabel === u.inputValue);
                    return e.filterable && e.allowCreate && u.inputValue !== "" && !Le
                }
            )
            , et = () => {
                e.filterable && nt(e.filterMethod) || e.filterable && e.remote && nt(e.remoteMethod) || Ae.value.forEach(Le => {
                        var Qe;
                        (Qe = Le.updateOption) == null || Qe.call(Le, u.inputValue)
                    }
                )
            }
            , dt = ii()
            , Y = re(() => ["small"].includes(dt.value) ? "small" : "default")
            , W = re({
                get() {
                    return te.value && !mt.value
                },
                set(Le) {
                    te.value = Le
                }
            })
            , ce = re(() => {
                    if (e.multiple && !jn(e.modelValue))
                        return An(e.modelValue).length === 0 && !u.inputValue;
                    const Le = Ze(e.modelValue) ? e.modelValue[0] : e.modelValue;
                    return e.filterable || jn(Le) ? !u.inputValue : !0
                }
            )
            , we = re(() => {
                    var Le;
                    const Qe = (Le = e.placeholder) != null ? Le : s("el.select.placeholder");
                    return e.multiple || !ue.value ? Qe : u.selectedLabel
                }
            )
            , _e = re(() => pf ? null : "mouseenter");
        Ke(() => e.modelValue, (Le, Qe) => {
                e.multiple && e.filterable && !e.reserveKeyword && (u.inputValue = "",
                    Oe("")),
                    We(),
                !Za(Le, Qe) && e.validateEvent && (oe == null || oe.validate("change").catch(Pt => void 0))
            }
            , {
                flush: "post",
                deep: !0
            }),
            Ke(() => te.value, Le => {
                    Le ? Oe(u.inputValue) : (u.inputValue = "",
                        u.previousQuery = null,
                        u.isBeforeHide = !0),
                        t("visible-change", Le)
                }
            ),
            Ke(() => u.options.entries(), () => {
                    cs && (We(),
                    e.defaultFirstOption && (e.filterable || e.remote) && Pe.value && qe())
                }
                , {
                    flush: "post"
                }),
            Ke([() => u.hoveringIndex, Ae], ([Le]) => {
                    ts(Le) && Le > -1 ? ne.value = Ae.value[Le] || {} : ne.value = {},
                        Ae.value.forEach(Qe => {
                                Qe.hover = ne.value === Qe
                            }
                        )
                }
            ),
            So(() => {
                    u.isBeforeHide || et()
                }
            );
        const Oe = Le => {
                u.previousQuery === Le || M.value || (u.previousQuery = Le,
                    e.filterable && nt(e.filterMethod) ? e.filterMethod(Le) : e.filterable && e.remote && nt(e.remoteMethod) && e.remoteMethod(Le),
                    e.defaultFirstOption && (e.filterable || e.remote) && Pe.value ? xt(qe) : xt(Ue))
            }
            , qe = () => {
                const Le = Ae.value.filter(qs => qs.visible && !qs.disabled && !qs.states.groupDisabled)
                    , Qe = Le.find(qs => qs.created)
                    , Pt = Le[0]
                    , xs = Ae.value.map(qs => qs.value);
                u.hoveringIndex = Rs(xs, Qe || Pt)
            }
            , We = () => {
                if (e.multiple)
                    u.selectedLabel = "";
                else {
                    const Qe = Ze(e.modelValue) ? e.modelValue[0] : e.modelValue
                        , Pt = Ge(Qe);
                    u.selectedLabel = Pt.currentLabel,
                        u.selected = [Pt];
                    return
                }
                const Le = [];
                jn(e.modelValue) || An(e.modelValue).forEach(Qe => {
                        Le.push(Ge(Qe))
                    }
                ),
                    u.selected = Le
            }
            , Ge = Le => {
                let Qe;
                const Pt = er(Le);
                for (let Pi = u.cachedOptions.size - 1; Pi >= 0; Pi--) {
                    const Vn = Ne.value[Pi];
                    if (Pt ? Yi(Vn.value, e.valueKey) === Yi(Le, e.valueKey) : Vn.value === Le) {
                        Qe = {
                            value: Le,
                            currentLabel: Vn.currentLabel,
                            get isDisabled() {
                                return Vn.isDisabled
                            }
                        };
                        break
                    }
                }
                if (Qe)
                    return Qe;
                const xs = Pt ? Le.label : Le ?? "";
                return {
                    value: Le,
                    currentLabel: xs
                }
            }
            , Ue = () => {
                u.hoveringIndex = Ae.value.findIndex(Le => u.selected.some(Qe => br(Qe) === br(Le)))
            }
            , ht = () => {
                u.selectionWidth = g.value.getBoundingClientRect().width
            }
            , Ee = () => {
                u.collapseItemWidth = R.value.getBoundingClientRect().width
            }
            , ze = () => {
                var Le, Qe;
                (Qe = (Le = y.value) == null ? void 0 : Le.updatePopper) == null || Qe.call(Le)
            }
            , xe = () => {
                var Le, Qe;
                (Qe = (Le = v.value) == null ? void 0 : Le.updatePopper) == null || Qe.call(Le)
            }
            , Re = () => {
                u.inputValue.length > 0 && !te.value && (te.value = !0),
                    Oe(u.inputValue)
            }
            , lt = Le => {
                if (u.inputValue = Le.target.value,
                    e.remote)
                    vt();
                else
                    return Re()
            }
            , vt = x4(() => {
                    Re()
                }
                , ft.value)
            , qt = Le => {
                Za(e.modelValue, Le) || t(wn, Le)
            }
            , is = Le => _4(Le, Qe => {
                    const Pt = u.cachedOptions.get(Qe);
                    return Pt && !Pt.disabled && !Pt.states.groupDisabled
                }
            )
            , bs = Le => {
                if (e.multiple && Le.code !== wt.delete && Le.target.value.length <= 0) {
                    const Qe = An(e.modelValue).slice()
                        , Pt = is(Qe);
                    if (Pt < 0)
                        return;
                    const xs = Qe[Pt];
                    Qe.splice(Pt, 1),
                        t(ms, Qe),
                        qt(Qe),
                        t("remove-tag", xs)
                }
            }
            , Ss = (Le, Qe) => {
                const Pt = u.selected.indexOf(Qe);
                if (Pt > -1 && !J.value) {
                    const xs = An(e.modelValue).slice();
                    xs.splice(Pt, 1),
                        t(ms, xs),
                        qt(xs),
                        t("remove-tag", Qe.value)
                }
                Le.stopPropagation(),
                    na()
            }
            , Hn = Le => {
                Le.stopPropagation();
                const Qe = e.multiple ? [] : be.value;
                if (e.multiple)
                    for (const Pt of u.selected)
                        Pt.isDisabled && Qe.push(Pt.value);
                t(ms, Qe),
                    qt(Qe),
                    u.hoveringIndex = -1,
                    te.value = !1,
                    t("clear"),
                    na()
            }
            , Fa = Le => {
                var Qe;
                if (e.multiple) {
                    const Pt = An((Qe = e.modelValue) != null ? Qe : []).slice()
                        , xs = Rs(Pt, Le);
                    xs > -1 ? Pt.splice(xs, 1) : (e.multipleLimit <= 0 || Pt.length < e.multipleLimit) && Pt.push(Le.value),
                        t(ms, Pt),
                        qt(Pt),
                    Le.created && Oe(""),
                    e.filterable && !e.reserveKeyword && (u.inputValue = "")
                } else
                    t(ms, Le.value),
                        qt(Le.value),
                        te.value = !1;
                na(),
                !te.value && xt(() => {
                        Ns(Le)
                    }
                )
            }
            ,
            Rs = (Le = [], Qe) => jn(Qe) ? -1 : At(Qe.value) ? Le.findIndex(Pt => Za(Yi(Pt, e.valueKey), br(Qe))) : Le.indexOf(Qe.value)
            , Ns = Le => {
                var Qe, Pt, xs, qs, Pi;
                const Vn = Ze(Le) ? Le[0] : Le;
                let ia = null;
                if (Vn != null && Vn.value) {
                    const $a = Ae.value.filter(j => j.value === Vn.value);
                    $a.length > 0 && (ia = $a[0].$el)
                }
                if (y.value && ia) {
                    const $a = (qs = (xs = (Pt = (Qe = y.value) == null ? void 0 : Qe.popperRef) == null ? void 0 : Pt.contentRef) == null ? void 0 : xs.querySelector) == null ? void 0 : qs.call(xs, `.${o.be("dropdown", "wrap")}`);
                    $a && k3($a, ia)
                }
                (Pi = P.value) == null || Pi.handleScroll()
            }
            , vr = Le => {
                u.options.set(Le.value, Le),
                    u.cachedOptions.set(Le.value, Le)
            }
            , Cd = (Le, Qe) => {
                u.options.get(Le) === Qe && u.options.delete(Le)
            }
            , sa = re(() => {
                    var Le, Qe;
                    return (Qe = (Le = y.value) == null ? void 0 : Le.popperRef) == null ? void 0 : Qe.contentRef
                }
            )
            , uc = () => {
                u.isBeforeHide = !1,
                    xt(() => {
                            var Le;
                            (Le = P.value) == null || Le.update(),
                                Ns(u.selected)
                        }
                    )
            }
            , na = () => {
                var Le;
                (Le = w.value) == null || Le.focus()
            }
            , dc = () => {
                var Le;
                if (te.value) {
                    te.value = !1,
                        xt(() => {
                                var Qe;
                                return (Qe = w.value) == null ? void 0 : Qe.blur()
                            }
                        );
                    return
                }
                (Le = w.value) == null || Le.blur()
            }
            , Ad = Le => {
                Hn(Le)
            }
            , hc = Le => {
                if (te.value = !1,
                    G.value) {
                    const Qe = new FocusEvent("focus", Le);
                    xt(() => ie(Qe))
                }
            }
            , fc = () => {
                u.inputValue.length > 0 ? u.inputValue = "" : te.value = !1
            }
            , pc = () => {
                J.value || (pf && (u.inputHovering = !0),
                    u.menuVisibleOnFocus ? u.menuVisibleOnFocus = !1 : te.value = !te.value)
            }
            , Ed = () => {
                if (!te.value)
                    pc();
                else {
                    const Le = Ae.value[u.hoveringIndex];
                    Le && !Le.isDisabled && Fa(Le)
                }
            }
            , br = Le => At(Le.value) ? Yi(Le.value, e.valueKey) : Le.value
            , Td = re(() => Ae.value.filter(Le => Le.visible).every(Le => Le.isDisabled))
            , Id = re(() => e.multiple ? e.collapseTags ? u.selected.slice(0, e.maxCollapseTags) : u.selected : [])
            , Oo = re(() => e.multiple ? e.collapseTags ? u.selected.slice(e.maxCollapseTags) : [] : [])
            , Ro = Le => {
                if (!te.value) {
                    te.value = !0;
                    return
                }
                if (!(u.options.size === 0 || Pe.value === 0 || M.value) && !Td.value) {
                    Le === "next" ? (u.hoveringIndex++,
                    u.hoveringIndex === u.options.size && (u.hoveringIndex = 0)) : Le === "prev" && (u.hoveringIndex--,
                    u.hoveringIndex < 0 && (u.hoveringIndex = u.options.size - 1));
                    const Qe = Ae.value[u.hoveringIndex];
                    (Qe.isDisabled || !Qe.visible) && Ro(Le),
                        xt(() => Ns(ne.value))
                }
            }
            , No = () => {
                if (!g.value)
                    return 0;
                const Le = window.getComputedStyle(g.value);
                return Number.parseFloat(Le.gap || "6px")
            }
            , Do = re(() => {
                    const Le = No();
                    return {
                        maxWidth: `${R.value && e.maxCollapseTags === 1 ? u.selectionWidth - u.collapseItemWidth - Le : u.selectionWidth}px`
                    }
                }
            )
            , Ii = re(() => ({
                maxWidth: `${u.selectionWidth}px`
            }))
            , yr = Le => {
                t("popup-scroll", Le)
            }
        ;
        return sn(g, ht),
            sn(I, ze),
            sn(V, ze),
            sn(A, xe),
            sn(R, Ee),
            $t(() => {
                    We()
                }
            ),
            {
                inputId: ve,
                contentId: a,
                nsSelect: o,
                nsInput: l,
                states: u,
                isFocused: G,
                expanded: te,
                optionsArray: Ae,
                hoverOption: ne,
                selectSize: dt,
                filteredOptionsCount: Pe,
                updateTooltip: ze,
                updateTagTooltip: xe,
                debouncedOnInputChange: vt,
                onInput: lt,
                deletePrevTag: bs,
                deleteTag: Ss,
                deleteSelected: Hn,
                handleOptionSelect: Fa,
                scrollToOption: Ns,
                hasModelValue: ue,
                shouldShowPlaceholder: ce,
                currentPlaceholder: we,
                mouseEnterEventName: _e,
                needStatusIcon: fe,
                showClose: Me,
                iconComponent: Xe,
                iconReverse: Be,
                validateState: je,
                validateIcon: tt,
                showNewOption: He,
                updateOptions: et,
                collapseTagSize: Y,
                setSelected: We,
                selectDisabled: J,
                emptyText: bt,
                handleCompositionStart: O,
                handleCompositionUpdate: F,
                handleCompositionEnd: $,
                onOptionCreate: vr,
                onOptionDestroy: Cd,
                handleMenuEnter: uc,
                focus: na,
                blur: dc,
                handleClearClick: Ad,
                handleClickOutside: hc,
                handleEsc: fc,
                toggleMenu: pc,
                selectOption: Ed,
                getValueKey: br,
                navigateOptions: Ro,
                dropdownMenuVisible: W,
                showTagList: Id,
                collapseTagList: Oo,
                popupScroll: yr,
                tagStyle: Do,
                collapseTagStyle: Ii,
                popperRef: sa,
                inputRef: w,
                tooltipRef: y,
                tagTooltipRef: v,
                prefixRef: C,
                suffixRef: T,
                selectRef: p,
                wrapperRef: V,
                selectionRef: g,
                scrollbarRef: P,
                menuRef: I,
                tagMenuRef: A,
                collapseItemRef: R
            }
    }
;
var _9 = Ce({
    name: "ElOptions",
    setup(e, {slots: t}) {
        const s = st(xd);
        let a = [];
        return () => {
            var o, l;
            const u = (o = t.default) == null ? void 0 : o.call(t)
                , p = [];

            function g(y) {
                Ze(y) && y.forEach(v => {
                        var w, C, T, I;
                        const A = (w = (v == null ? void 0 : v.type) || {}) == null ? void 0 : w.name;
                        A === "ElOptionGroup" ? g(!pt(v.children) && !Ze(v.children) && nt((C = v.children) == null ? void 0 : C.default) ? (T = v.children) == null ? void 0 : T.default() : v.children) : A === "ElOption" ? p.push((I = v.props) == null ? void 0 : I.value) : Ze(v.children) && g(v.children)
                    }
                )
            }

            return u.length && g((l = u[0]) == null ? void 0 : l.children),
            Za(p, a) || (a = p,
            s && (s.states.optionValues = p)),
                u
        }
    }
});
const k9 = gt({
    name: String,
    id: String,
    modelValue: {
        type: [Array, String, Number, Boolean, Object],
        default: void 0
    },
    autocomplete: {
        type: String,
        default: "off"
    },
    automaticDropdown: Boolean,
    size: mr,
    effect: {
        type: Ye(String),
        default: "light"
    },
    disabled: Boolean,
    clearable: Boolean,
    filterable: Boolean,
    allowCreate: Boolean,
    loading: Boolean,
    popperClass: {
        type: String,
        default: ""
    },
    popperOptions: {
        type: Ye(Object),
        default: () => ({})
    },
    remote: Boolean,
    loadingText: String,
    noMatchText: String,
    noDataText: String,
    remoteMethod: Function,
    filterMethod: Function,
    multiple: Boolean,
    multipleLimit: {
        type: Number,
        default: 0
    },
    placeholder: {
        type: String
    },
    defaultFirstOption: Boolean,
    reserveKeyword: {
        type: Boolean,
        default: !0
    },
    valueKey: {
        type: String,
        default: "value"
    },
    collapseTags: Boolean,
    collapseTagsTooltip: Boolean,
    maxCollapseTags: {
        type: Number,
        default: 1
    },
    teleported: mn.teleported,
    persistent: {
        type: Boolean,
        default: !0
    },
    clearIcon: {
        type: Cs,
        default: pd
    },
    fitInputWidth: Boolean,
    suffixIcon: {
        type: Cs,
        default: Yp
    },
    tagType: {
        ...xf.type,
        default: "info"
    },
    tagEffect: {
        ...xf.effect,
        default: "light"
    },
    validateEvent: {
        type: Boolean,
        default: !0
    },
    remoteShowSuffix: Boolean,
    showArrow: {
        type: Boolean,
        default: !0
    },
    offset: {
        type: Number,
        default: 12
    },
    placement: {
        type: Ye(String),
        values: md,
        default: "bottom-start"
    },
    fallbackPlacements: {
        type: Ye(Array),
        default: ["bottom-start", "top-start", "right", "left"]
    },
    tabindex: {
        type: [String, Number],
        default: 0
    },
    appendTo: String,
    ...b3,
    ...ta(["ariaLabel"])
})
    , iy = "ElSelect"
    , C9 = Ce({
    name: iy,
    componentName: iy,
    components: {
        ElSelectMenu: w9,
        ElOption: Cg,
        ElOptions: _9,
        ElTag: Po,
        ElScrollbar: Jp,
        ElTooltip: Ai,
        ElIcon: Mt
    },
    directives: {
        ClickOutside: ES
    },
    props: k9,
    emits: [ms, wn, "remove-tag", "clear", "visible-change", "focus", "blur", "popup-scroll"],
    setup(e, {emit: t}) {
        const s = re(() => {
                const {modelValue: g, multiple: y} = e
                    , v = y ? [] : void 0;
                return Ze(g) ? y ? g : v : y ? v : g
            }
        )
            , a = ys({
            ...ai(e),
            modelValue: s
        })
            , o = S9(a, t)
            , {calculatorRef: l, inputStyle: u} = Uz();
        Xt(xd, ys({
            props: a,
            states: o.states,
            optionsArray: o.optionsArray,
            handleOptionSelect: o.handleOptionSelect,
            onOptionCreate: o.onOptionCreate,
            onOptionDestroy: o.onOptionDestroy,
            selectRef: o.selectRef,
            setSelected: o.setSelected
        }));
        const p = re(() => e.multiple ? o.states.selected.map(g => g.currentLabel) : o.states.selectedLabel);
        return {
            ...o,
            modelValue: s,
            selectedLabel: p,
            calculatorRef: l,
            inputStyle: u
        }
    }
});

function A9(e, t, s, a, o, l) {
    const u = Bt("el-tag")
        , p = Bt("el-tooltip")
        , g = Bt("el-icon")
        , y = Bt("el-option")
        , v = Bt("el-options")
        , w = Bt("el-scrollbar")
        , C = Bt("el-select-menu")
        , T = wo("click-outside");
    return _t((Z(),
        ye("div", {
            ref: "selectRef",
            class: he([e.nsSelect.b(), e.nsSelect.m(e.selectSize)]),
            [Vr(e.mouseEnterEventName)]: I => e.states.inputHovering = !0,
            onMouseleave: I => e.states.inputHovering = !1
        }, [ae(p, {
            ref: "tooltipRef",
            visible: e.dropdownMenuVisible,
            placement: e.placement,
            teleported: e.teleported,
            "popper-class": [e.nsSelect.e("popper"), e.popperClass],
            "popper-options": e.popperOptions,
            "fallback-placements": e.fallbackPlacements,
            effect: e.effect,
            pure: "",
            trigger: "click",
            transition: `${e.nsSelect.namespace.value}-zoom-in-top`,
            "stop-popper-mouse-event": !1,
            "gpu-acceleration": !1,
            persistent: e.persistent,
            "append-to": e.appendTo,
            "show-arrow": e.showArrow,
            offset: e.offset,
            onBeforeShow: e.handleMenuEnter,
            onHide: I => e.states.isBeforeHide = !1
        }, {
            default: se(() => {
                    var I;
                    return [U("div", {
                        ref: "wrapperRef",
                        class: he([e.nsSelect.e("wrapper"), e.nsSelect.is("focused", e.isFocused), e.nsSelect.is("hovering", e.states.inputHovering), e.nsSelect.is("filterable", e.filterable), e.nsSelect.is("disabled", e.selectDisabled)]),
                        onClick: Ot(e.toggleMenu, ["prevent"])
                    }, [e.$slots.prefix ? (Z(),
                        ye("div", {
                            key: 0,
                            ref: "prefixRef",
                            class: he(e.nsSelect.e("prefix"))
                        }, [De(e.$slots, "prefix")], 2)) : ke("v-if", !0), U("div", {
                        ref: "selectionRef",
                        class: he([e.nsSelect.e("selection"), e.nsSelect.is("near", e.multiple && !e.$slots.prefix && !!e.states.selected.length)])
                    }, [e.multiple ? De(e.$slots, "tag", {
                        key: 0
                    }, () => [(Z(!0),
                        ye(Ct, null, wi(e.showTagList, A => (Z(),
                            ye("div", {
                                key: e.getValueKey(A),
                                class: he(e.nsSelect.e("selected-item"))
                            }, [ae(u, {
                                closable: !e.selectDisabled && !A.isDisabled,
                                size: e.collapseTagSize,
                                type: e.tagType,
                                effect: e.tagEffect,
                                "disable-transitions": "",
                                style: kt(e.tagStyle),
                                onClose: R => e.deleteTag(R, A)
                            }, {
                                default: se(() => [U("span", {
                                    class: he(e.nsSelect.e("tags-text"))
                                }, [De(e.$slots, "label", {
                                    label: A.currentLabel,
                                    value: A.value
                                }, () => [at(me(A.currentLabel), 1)])], 2)]),
                                _: 2
                            }, 1032, ["closable", "size", "type", "effect", "style", "onClose"])], 2))), 128)), e.collapseTags && e.states.selected.length > e.maxCollapseTags ? (Z(),
                        Te(p, {
                            key: 0,
                            ref: "tagTooltipRef",
                            disabled: e.dropdownMenuVisible || !e.collapseTagsTooltip,
                            "fallback-placements": ["bottom", "top", "right", "left"],
                            effect: e.effect,
                            placement: "bottom",
                            teleported: e.teleported
                        }, {
                            default: se(() => [U("div", {
                                ref: "collapseItemRef",
                                class: he(e.nsSelect.e("selected-item"))
                            }, [ae(u, {
                                closable: !1,
                                size: e.collapseTagSize,
                                type: e.tagType,
                                effect: e.tagEffect,
                                "disable-transitions": "",
                                style: kt(e.collapseTagStyle)
                            }, {
                                default: se(() => [U("span", {
                                    class: he(e.nsSelect.e("tags-text"))
                                }, " + " + me(e.states.selected.length - e.maxCollapseTags), 3)]),
                                _: 1
                            }, 8, ["size", "type", "effect", "style"])], 2)]),
                            content: se(() => [U("div", {
                                ref: "tagMenuRef",
                                class: he(e.nsSelect.e("selection"))
                            }, [(Z(!0),
                                ye(Ct, null, wi(e.collapseTagList, A => (Z(),
                                    ye("div", {
                                        key: e.getValueKey(A),
                                        class: he(e.nsSelect.e("selected-item"))
                                    }, [ae(u, {
                                        class: "in-tooltip",
                                        closable: !e.selectDisabled && !A.isDisabled,
                                        size: e.collapseTagSize,
                                        type: e.tagType,
                                        effect: e.tagEffect,
                                        "disable-transitions": "",
                                        onClose: R => e.deleteTag(R, A)
                                    }, {
                                        default: se(() => [U("span", {
                                            class: he(e.nsSelect.e("tags-text"))
                                        }, [De(e.$slots, "label", {
                                            label: A.currentLabel,
                                            value: A.value
                                        }, () => [at(me(A.currentLabel), 1)])], 2)]),
                                        _: 2
                                    }, 1032, ["closable", "size", "type", "effect", "onClose"])], 2))), 128))], 2)]),
                            _: 3
                        }, 8, ["disabled", "effect", "teleported"])) : ke("v-if", !0)]) : ke("v-if", !0), U("div", {
                        class: he([e.nsSelect.e("selected-item"), e.nsSelect.e("input-wrapper"), e.nsSelect.is("hidden", !e.filterable)])
                    }, [_t(U("input", {
                        id: e.inputId,
                        ref: "inputRef",
                        "onUpdate:modelValue": A => e.states.inputValue = A,
                        type: "text",
                        name: e.name,
                        class: he([e.nsSelect.e("input"), e.nsSelect.is(e.selectSize)]),
                        disabled: e.selectDisabled,
                        autocomplete: e.autocomplete,
                        style: kt(e.inputStyle),
                        tabindex: e.tabindex,
                        role: "combobox",
                        readonly: !e.filterable,
                        spellcheck: "false",
                        "aria-activedescendant": ((I = e.hoverOption) == null ? void 0 : I.id) || "",
                        "aria-controls": e.contentId,
                        "aria-expanded": e.dropdownMenuVisible,
                        "aria-label": e.ariaLabel,
                        "aria-autocomplete": "none",
                        "aria-haspopup": "listbox",
                        onKeydown: [vn(Ot(A => e.navigateOptions("next"), ["stop", "prevent"]), ["down"]), vn(Ot(A => e.navigateOptions("prev"), ["stop", "prevent"]), ["up"]), vn(Ot(e.handleEsc, ["stop", "prevent"]), ["esc"]), vn(Ot(e.selectOption, ["stop", "prevent"]), ["enter"]), vn(Ot(e.deletePrevTag, ["stop"]), ["delete"])],
                        onCompositionstart: e.handleCompositionStart,
                        onCompositionupdate: e.handleCompositionUpdate,
                        onCompositionend: e.handleCompositionEnd,
                        onInput: e.onInput,
                        onClick: Ot(e.toggleMenu, ["stop"])
                    }, null, 46, ["id", "onUpdate:modelValue", "name", "disabled", "autocomplete", "tabindex", "readonly", "aria-activedescendant", "aria-controls", "aria-expanded", "aria-label", "onKeydown", "onCompositionstart", "onCompositionupdate", "onCompositionend", "onInput", "onClick"]), [[Cl, e.states.inputValue]]), e.filterable ? (Z(),
                        ye("span", {
                            key: 0,
                            ref: "calculatorRef",
                            "aria-hidden": "true",
                            class: he(e.nsSelect.e("input-calculator")),
                            textContent: me(e.states.inputValue)
                        }, null, 10, ["textContent"])) : ke("v-if", !0)], 2), e.shouldShowPlaceholder ? (Z(),
                        ye("div", {
                            key: 1,
                            class: he([e.nsSelect.e("selected-item"), e.nsSelect.e("placeholder"), e.nsSelect.is("transparent", !e.hasModelValue || e.expanded && !e.states.inputValue)])
                        }, [e.hasModelValue ? De(e.$slots, "label", {
                            key: 0,
                            label: e.currentPlaceholder,
                            value: e.modelValue
                        }, () => [U("span", null, me(e.currentPlaceholder), 1)]) : (Z(),
                            ye("span", {
                                key: 1
                            }, me(e.currentPlaceholder), 1))], 2)) : ke("v-if", !0)], 2), U("div", {
                        ref: "suffixRef",
                        class: he(e.nsSelect.e("suffix"))
                    }, [e.iconComponent && !e.showClose ? (Z(),
                        Te(g, {
                            key: 0,
                            class: he([e.nsSelect.e("caret"), e.nsSelect.e("icon"), e.iconReverse])
                        }, {
                            default: se(() => [(Z(),
                                Te(Vt(e.iconComponent)))]),
                            _: 1
                        }, 8, ["class"])) : ke("v-if", !0), e.showClose && e.clearIcon ? (Z(),
                        Te(g, {
                            key: 1,
                            class: he([e.nsSelect.e("caret"), e.nsSelect.e("icon"), e.nsSelect.e("clear")]),
                            onClick: e.handleClearClick
                        }, {
                            default: se(() => [(Z(),
                                Te(Vt(e.clearIcon)))]),
                            _: 1
                        }, 8, ["class", "onClick"])) : ke("v-if", !0), e.validateState && e.validateIcon && e.needStatusIcon ? (Z(),
                        Te(g, {
                            key: 2,
                            class: he([e.nsInput.e("icon"), e.nsInput.e("validateIcon"), e.nsInput.is("loading", e.validateState === "validating")])
                        }, {
                            default: se(() => [(Z(),
                                Te(Vt(e.validateIcon)))]),
                            _: 1
                        }, 8, ["class"])) : ke("v-if", !0)], 2)], 10, ["onClick"])]
                }
            ),
            content: se(() => [ae(C, {
                ref: "menuRef"
            }, {
                default: se(() => [e.$slots.header ? (Z(),
                    ye("div", {
                        key: 0,
                        class: he(e.nsSelect.be("dropdown", "header")),
                        onClick: Ot(() => {
                            }
                            , ["stop"])
                    }, [De(e.$slots, "header")], 10, ["onClick"])) : ke("v-if", !0), _t(ae(w, {
                    id: e.contentId,
                    ref: "scrollbarRef",
                    tag: "ul",
                    "wrap-class": e.nsSelect.be("dropdown", "wrap"),
                    "view-class": e.nsSelect.be("dropdown", "list"),
                    class: he([e.nsSelect.is("empty", e.filteredOptionsCount === 0)]),
                    role: "listbox",
                    "aria-label": e.ariaLabel,
                    "aria-orientation": "vertical",
                    onScroll: e.popupScroll
                }, {
                    default: se(() => [e.showNewOption ? (Z(),
                        Te(y, {
                            key: 0,
                            value: e.states.inputValue,
                            created: !0
                        }, null, 8, ["value"])) : ke("v-if", !0), ae(v, null, {
                        default: se(() => [De(e.$slots, "default")]),
                        _: 3
                    })]),
                    _: 3
                }, 8, ["id", "wrap-class", "view-class", "class", "aria-label", "onScroll"]), [[ss, e.states.options.size > 0 && !e.loading]]), e.$slots.loading && e.loading ? (Z(),
                    ye("div", {
                        key: 1,
                        class: he(e.nsSelect.be("dropdown", "loading"))
                    }, [De(e.$slots, "loading")], 2)) : e.loading || e.filteredOptionsCount === 0 ? (Z(),
                    ye("div", {
                        key: 2,
                        class: he(e.nsSelect.be("dropdown", "empty"))
                    }, [De(e.$slots, "empty", {}, () => [U("span", null, me(e.emptyText), 1)])], 2)) : ke("v-if", !0), e.$slots.footer ? (Z(),
                    ye("div", {
                        key: 3,
                        class: he(e.nsSelect.be("dropdown", "footer")),
                        onClick: Ot(() => {
                            }
                            , ["stop"])
                    }, [De(e.$slots, "footer")], 10, ["onClick"])) : ke("v-if", !0)]),
                _: 3
            }, 512)]),
            _: 3
        }, 8, ["visible", "placement", "teleported", "popper-class", "popper-options", "fallback-placements", "effect", "transition", "persistent", "append-to", "show-arrow", "offset", "onBeforeShow", "onHide"])], 16, ["onMouseleave"])), [[T, e.handleClickOutside, e.popperRef]])
}

var E9 = ot(C9, [["render", A9], ["__file", "select.vue"]]);
const T9 = Ce({
    name: "ElOptionGroup",
    componentName: "ElOptionGroup",
    props: {
        label: String,
        disabled: Boolean
    },
    setup(e) {
        const t = rt("select")
            , s = Se(null)
            , a = Et()
            , o = Se([]);
        Xt(QS, ys({
            ...ai(e)
        }));
        const l = re(() => o.value.some(y => y.visible === !0))
            , u = y => {
                var v, w;
                return ((v = y.type) == null ? void 0 : v.name) === "ElOption" && !!((w = y.component) != null && w.proxy)
            }
            , p = y => {
                const v = An(y)
                    , w = [];
                return v.forEach(C => {
                        var T, I;
                        u(C) ? w.push(C.component.proxy) : (T = C.children) != null && T.length ? w.push(...p(C.children)) : (I = C.component) != null && I.subTree && w.push(...p(C.component.subTree))
                    }
                ),
                    w
            }
            , g = () => {
                o.value = p(a.subTree)
            }
        ;
        return $t(() => {
                g()
            }
        ),
            t3(s, g, {
                attributes: !0,
                subtree: !0,
                childList: !0
            }),
            {
                groupRef: s,
                visible: l,
                ns: t
            }
    }
});

function I9(e, t, s, a, o, l) {
    return _t((Z(),
        ye("ul", {
            ref: "groupRef",
            class: he(e.ns.be("group", "wrap"))
        }, [U("li", {
            class: he(e.ns.be("group", "title"))
        }, me(e.label), 3), U("li", null, [U("ul", {
            class: he(e.ns.b("group"))
        }, [De(e.$slots, "default")], 2)])], 2)), [[ss, e.visible]])
}

var e_ = ot(T9, [["render", I9], ["__file", "option-group.vue"]]);
const t_ = Zt(E9, {
    Option: Cg,
    OptionGroup: e_
})
    , P9 = Os(Cg);
Os(e_);
const L9 = gt({
    trigger: zl.trigger,
    placement: Zc.placement,
    disabled: zl.disabled,
    visible: mn.visible,
    transition: mn.transition,
    popperOptions: Zc.popperOptions,
    tabindex: Zc.tabindex,
    content: mn.content,
    popperStyle: mn.popperStyle,
    popperClass: mn.popperClass,
    enterable: {
        ...mn.enterable,
        default: !0
    },
    effect: {
        ...mn.effect,
        default: "light"
    },
    teleported: mn.teleported,
    title: String,
    width: {
        type: [String, Number],
        default: 150
    },
    offset: {
        type: Number,
        default: void 0
    },
    showAfter: {
        type: Number,
        default: 0
    },
    hideAfter: {
        type: Number,
        default: 200
    },
    autoClose: {
        type: Number,
        default: 0
    },
    showArrow: {
        type: Boolean,
        default: !0
    },
    persistent: {
        type: Boolean,
        default: !0
    },
    "onUpdate:visible": {
        type: Function
    }
})
    , M9 = {
    "update:visible": e => zs(e),
    "before-enter": () => !0,
    "before-leave": () => !0,
    "after-enter": () => !0,
    "after-leave": () => !0
}
    , O9 = "onUpdate:visible"
    , R9 = Ce({
    name: "ElPopover"
})
    , N9 = Ce({
    ...R9,
    props: L9,
    emits: M9,
    setup(e, {expose: t, emit: s}) {
        const a = e
            , o = re(() => a[O9])
            , l = rt("popover")
            , u = Se()
            , p = re(() => {
                    var R;
                    return (R = D(u)) == null ? void 0 : R.popperRef
                }
            )
            , g = re(() => [{
                width: Sn(a.width)
            }, a.popperStyle])
            , y = re(() => [l.b(), a.popperClass, {
                [l.m("plain")]: !!a.content
            }])
            , v = re(() => a.transition === `${l.namespace.value}-fade-in-linear`)
            , w = () => {
                var R;
                (R = u.value) == null || R.hide()
            }
            , C = () => {
                s("before-enter")
            }
            , T = () => {
                s("before-leave")
            }
            , I = () => {
                s("after-enter")
            }
            , A = () => {
                s("update:visible", !1),
                    s("after-leave")
            }
        ;
        return t({
            popperRef: p,
            hide: w
        }),
            (R, P) => (Z(),
                Te(D(Ai), vs({
                    ref_key: "tooltipRef",
                    ref: u
                }, R.$attrs, {
                    trigger: R.trigger,
                    placement: R.placement,
                    disabled: R.disabled,
                    visible: R.visible,
                    transition: R.transition,
                    "popper-options": R.popperOptions,
                    tabindex: R.tabindex,
                    content: R.content,
                    offset: R.offset,
                    "show-after": R.showAfter,
                    "hide-after": R.hideAfter,
                    "auto-close": R.autoClose,
                    "show-arrow": R.showArrow,
                    "aria-label": R.title,
                    effect: R.effect,
                    enterable: R.enterable,
                    "popper-class": D(y),
                    "popper-style": D(g),
                    teleported: R.teleported,
                    persistent: R.persistent,
                    "gpu-acceleration": D(v),
                    "onUpdate:visible": D(o),
                    onBeforeShow: C,
                    onBeforeHide: T,
                    onShow: I,
                    onHide: A
                }), {
                    content: se(() => [R.title ? (Z(),
                        ye("div", {
                            key: 0,
                            class: he(D(l).e("title")),
                            role: "title"
                        }, me(R.title), 3)) : ke("v-if", !0), De(R.$slots, "default", {}, () => [at(me(R.content), 1)])]),
                    default: se(() => [R.$slots.reference ? De(R.$slots, "reference", {
                        key: 0
                    }) : ke("v-if", !0)]),
                    _: 3
                }, 16, ["trigger", "placement", "disabled", "visible", "transition", "popper-options", "tabindex", "content", "offset", "show-after", "hide-after", "auto-close", "show-arrow", "aria-label", "effect", "enterable", "popper-class", "popper-style", "teleported", "persistent", "gpu-acceleration", "onUpdate:visible"]))
    }
});
var D9 = ot(N9, [["__file", "popover.vue"]]);
const ay = (e, t) => {
        const s = t.arg || t.value
            , a = s == null ? void 0 : s.popperRef;
        a && (a.triggerRef = e)
    }
;
var F9 = {
    mounted(e, t) {
        ay(e, t)
    },
    updated(e, t) {
        ay(e, t)
    }
};
const $9 = "popover"
    , B9 = A3(F9, $9)
    , H9 = Zt(D9, {
    directive: B9
})
    , V9 = gt({
    type: {
        type: String,
        default: "line",
        values: ["line", "circle", "dashboard"]
    },
    percentage: {
        type: Number,
        default: 0,
        validator: e => e >= 0 && e <= 100
    },
    status: {
        type: String,
        default: "",
        values: ["", "success", "exception", "warning"]
    },
    indeterminate: Boolean,
    duration: {
        type: Number,
        default: 3
    },
    strokeWidth: {
        type: Number,
        default: 6
    },
    strokeLinecap: {
        type: Ye(String),
        default: "round"
    },
    textInside: Boolean,
    width: {
        type: Number,
        default: 126
    },
    showText: {
        type: Boolean,
        default: !0
    },
    color: {
        type: Ye([String, Array, Function]),
        default: ""
    },
    striped: Boolean,
    stripedFlow: Boolean,
    format: {
        type: Ye(Function),
        default: e => `${e}%`
    }
})
    , z9 = Ce({
    name: "ElProgress"
})
    , W9 = Ce({
    ...z9,
    props: V9,
    setup(e) {
        const t = e
            , s = {
                success: "#13ce66",
                exception: "#ff4949",
                warning: "#e6a23c",
                default: "#20a0ff"
            }
            , a = rt("progress")
            , o = re(() => {
                    const O = {
                        width: `${t.percentage}%`,
                        animationDuration: `${t.duration}s`
                    }
                        , F = M(t.percentage);
                    return F.includes("gradient") ? O.background = F : O.backgroundColor = F,
                        O
                }
            )
            , l = re(() => (t.strokeWidth / t.width * 100).toFixed(1))
            ,
            u = re(() => ["circle", "dashboard"].includes(t.type) ? Number.parseInt(`${50 - Number.parseFloat(l.value) / 2}`, 10) : 0)
            , p = re(() => {
                    const O = u.value
                        , F = t.type === "dashboard";
                    return `
          M 50 50
          m 0 ${F ? "" : "-"}${O}
          a ${O} ${O} 0 1 1 0 ${F ? "-" : ""}${O * 2}
          a ${O} ${O} 0 1 1 0 ${F ? "" : "-"}${O * 2}
          `
                }
            )
            , g = re(() => 2 * Math.PI * u.value)
            , y = re(() => t.type === "dashboard" ? .75 : 1)
            , v = re(() => `${-1 * g.value * (1 - y.value) / 2}px`)
            , w = re(() => ({
                strokeDasharray: `${g.value * y.value}px, ${g.value}px`,
                strokeDashoffset: v.value
            }))
            , C = re(() => ({
                strokeDasharray: `${g.value * y.value * (t.percentage / 100)}px, ${g.value}px`,
                strokeDashoffset: v.value,
                transition: "stroke-dasharray 0.6s ease 0s, stroke 0.6s ease, opacity ease 0.6s"
            }))
            , T = re(() => {
                    let O;
                    return t.color ? O = M(t.percentage) : O = s[t.status] || s.default,
                        O
                }
            )
            ,
            I = re(() => t.status === "warning" ? jp : t.type === "line" ? t.status === "success" ? Xp : pd : t.status === "success" ? Lw : ar)
            , A = re(() => t.type === "line" ? 12 + t.strokeWidth * .4 : t.width * .111111 + 2)
            , R = re(() => t.format(t.percentage));

        function P(O) {
            const F = 100 / O.length;
            return O.map((V, G) => pt(V) ? {
                color: V,
                percentage: (G + 1) * F
            } : V).sort((V, G) => V.percentage - G.percentage)
        }

        const M = O => {
                var F;
                const {color: $} = t;
                if (nt($))
                    return $(O);
                if (pt($))
                    return $;
                {
                    const V = P($);
                    for (const G of V)
                        if (G.percentage > O)
                            return G.color;
                    return (F = V[V.length - 1]) == null ? void 0 : F.color
                }
            }
        ;
        return (O, F) => (Z(),
            ye("div", {
                class: he([D(a).b(), D(a).m(O.type), D(a).is(O.status), {
                    [D(a).m("without-text")]: !O.showText,
                    [D(a).m("text-inside")]: O.textInside
                }]),
                role: "progressbar",
                "aria-valuenow": O.percentage,
                "aria-valuemin": "0",
                "aria-valuemax": "100"
            }, [O.type === "line" ? (Z(),
                ye("div", {
                    key: 0,
                    class: he(D(a).b("bar"))
                }, [U("div", {
                    class: he(D(a).be("bar", "outer")),
                    style: kt({
                        height: `${O.strokeWidth}px`
                    })
                }, [U("div", {
                    class: he([D(a).be("bar", "inner"), {
                        [D(a).bem("bar", "inner", "indeterminate")]: O.indeterminate
                    }, {
                        [D(a).bem("bar", "inner", "striped")]: O.striped
                    }, {
                        [D(a).bem("bar", "inner", "striped-flow")]: O.stripedFlow
                    }]),
                    style: kt(D(o))
                }, [(O.showText || O.$slots.default) && O.textInside ? (Z(),
                    ye("div", {
                        key: 0,
                        class: he(D(a).be("bar", "innerText"))
                    }, [De(O.$slots, "default", {
                        percentage: O.percentage
                    }, () => [U("span", null, me(D(R)), 1)])], 2)) : ke("v-if", !0)], 6)], 6)], 2)) : (Z(),
                ye("div", {
                    key: 1,
                    class: he(D(a).b("circle")),
                    style: kt({
                        height: `${O.width}px`,
                        width: `${O.width}px`
                    })
                }, [(Z(),
                    ye("svg", {
                        viewBox: "0 0 100 100"
                    }, [U("path", {
                        class: he(D(a).be("circle", "track")),
                        d: D(p),
                        stroke: `var(${D(a).cssVarName("fill-color-light")}, #e5e9f2)`,
                        "stroke-linecap": O.strokeLinecap,
                        "stroke-width": D(l),
                        fill: "none",
                        style: kt(D(w))
                    }, null, 14, ["d", "stroke", "stroke-linecap", "stroke-width"]), U("path", {
                        class: he(D(a).be("circle", "path")),
                        d: D(p),
                        stroke: D(T),
                        fill: "none",
                        opacity: O.percentage ? 1 : 0,
                        "stroke-linecap": O.strokeLinecap,
                        "stroke-width": D(l),
                        style: kt(D(C))
                    }, null, 14, ["d", "stroke", "opacity", "stroke-linecap", "stroke-width"])]))], 6)), (O.showText || O.$slots.default) && !O.textInside ? (Z(),
                ye("div", {
                    key: 2,
                    class: he(D(a).e("text")),
                    style: kt({
                        fontSize: `${D(A)}px`
                    })
                }, [De(O.$slots, "default", {
                    percentage: O.percentage
                }, () => [O.status ? (Z(),
                    Te(D(Mt), {
                        key: 1
                    }, {
                        default: se(() => [(Z(),
                            Te(Vt(D(I))))]),
                        _: 1
                    })) : (Z(),
                    ye("span", {
                        key: 0
                    }, me(D(R)), 1))])], 6)) : ke("v-if", !0)], 10, ["aria-valuenow"]))
    }
});
var U9 = ot(W9, [["__file", "progress.vue"]]);
const wd = Zt(U9)
    , Y9 = ["start", "center", "end", "space-around", "space-between", "space-evenly"]
    , X9 = ["top", "middle", "bottom"]
    , j9 = gt({
    tag: {
        type: String,
        default: "div"
    },
    gutter: {
        type: Number,
        default: 0
    },
    justify: {
        type: String,
        values: Y9,
        default: "start"
    },
    align: {
        type: String,
        values: X9
    }
})
    , G9 = Ce({
    name: "ElRow"
})
    , q9 = Ce({
    ...G9,
    props: j9,
    setup(e) {
        const t = e
            , s = rt("row")
            , a = re(() => t.gutter);
        Xt(TS, {
            gutter: a
        });
        const o = re(() => {
                    const u = {};
                    return t.gutter && (u.marginRight = u.marginLeft = `-${t.gutter / 2}px`),
                        u
                }
            )
            ,
            l = re(() => [s.b(), s.is(`justify-${t.justify}`, t.justify !== "start"), s.is(`align-${t.align}`, !!t.align)]);
        return (u, p) => (Z(),
            Te(Vt(u.tag), {
                class: he(D(l)),
                style: kt(D(o))
            }, {
                default: se(() => [De(u.$slots, "default")]),
                _: 3
            }, 8, ["class", "style"]))
    }
});
var K9 = ot(q9, [["__file", "row.vue"]]);
const Ag = Zt(K9)
    , s_ = e => ["", ...rc].includes(e)
    , Z9 = gt({
    modelValue: {
        type: [Boolean, String, Number],
        default: !1
    },
    disabled: Boolean,
    loading: Boolean,
    size: {
        type: String,
        validator: s_
    },
    width: {
        type: [String, Number],
        default: ""
    },
    inlinePrompt: Boolean,
    inactiveActionIcon: {
        type: Cs
    },
    activeActionIcon: {
        type: Cs
    },
    activeIcon: {
        type: Cs
    },
    inactiveIcon: {
        type: Cs
    },
    activeText: {
        type: String,
        default: ""
    },
    inactiveText: {
        type: String,
        default: ""
    },
    activeValue: {
        type: [Boolean, String, Number],
        default: !0
    },
    inactiveValue: {
        type: [Boolean, String, Number],
        default: !1
    },
    name: {
        type: String,
        default: ""
    },
    validateEvent: {
        type: Boolean,
        default: !0
    },
    beforeChange: {
        type: Ye(Function)
    },
    id: String,
    tabindex: {
        type: [String, Number]
    },
    ...ta(["ariaLabel"])
})
    , J9 = {
    [ms]: e => zs(e) || pt(e) || ts(e),
    [wn]: e => zs(e) || pt(e) || ts(e),
    [$l]: e => zs(e) || pt(e) || ts(e)
}
    , n_ = "ElSwitch"
    , Q9 = Ce({
    name: n_
})
    , eW = Ce({
    ...Q9,
    props: Z9,
    emits: J9,
    setup(e, {expose: t, emit: s}) {
        const a = e
            , {formItem: o} = Na()
            , l = ii()
            , u = rt("switch")
            , {inputId: p} = To(a, {
            formItemContext: o
        })
            , g = Ci(re(() => a.loading))
            , y = Se(a.modelValue !== !1)
            , v = Se()
            , w = Se()
            , C = re(() => [u.b(), u.m(l.value), u.is("disabled", g.value), u.is("checked", P.value)])
            , T = re(() => [u.e("label"), u.em("label", "left"), u.is("active", !P.value)])
            , I = re(() => [u.e("label"), u.em("label", "right"), u.is("active", P.value)])
            , A = re(() => ({
            width: Sn(a.width)
        }));
        Ke(() => a.modelValue, () => {
                y.value = !0
            }
        );
        const R = re(() => y.value ? a.modelValue : !1)
            , P = re(() => R.value === a.activeValue);
        [a.activeValue, a.inactiveValue].includes(R.value) || (s(ms, a.inactiveValue),
            s(wn, a.inactiveValue),
            s($l, a.inactiveValue)),
            Ke(P, $ => {
                    var V;
                    v.value.checked = $,
                    a.validateEvent && ((V = o == null ? void 0 : o.validate) == null || V.call(o, "change").catch(G => void 0))
                }
            );
        const M = () => {
                const $ = P.value ? a.inactiveValue : a.activeValue;
                s(ms, $),
                    s(wn, $),
                    s($l, $),
                    xt(() => {
                            v.value.checked = P.value
                        }
                    )
            }
            , O = () => {
                if (g.value)
                    return;
                const {beforeChange: $} = a;
                if (!$) {
                    M();
                    return
                }
                const V = $();
                [fl(V), zs(V)].includes(!0) || hn(n_, "beforeChange must return type `Promise<boolean>` or `boolean`"),
                    fl(V) ? V.then(ie => {
                            ie && M()
                        }
                    ).catch(ie => {
                        }
                    ) : V && M()
            }
            , F = () => {
                var $, V;
                (V = ($ = v.value) == null ? void 0 : $.focus) == null || V.call($)
            }
        ;
        return $t(() => {
                v.value.checked = P.value
            }
        ),
            t({
                focus: F,
                checked: P
            }),
            ($, V) => (Z(),
                ye("div", {
                    class: he(D(C)),
                    onClick: Ot(O, ["prevent"])
                }, [U("input", {
                    id: D(p),
                    ref_key: "input",
                    ref: v,
                    class: he(D(u).e("input")),
                    type: "checkbox",
                    role: "switch",
                    "aria-checked": D(P),
                    "aria-disabled": D(g),
                    "aria-label": $.ariaLabel,
                    name: $.name,
                    "true-value": $.activeValue,
                    "false-value": $.inactiveValue,
                    disabled: D(g),
                    tabindex: $.tabindex,
                    onChange: M,
                    onKeydown: vn(O, ["enter"])
                }, null, 42, ["id", "aria-checked", "aria-disabled", "aria-label", "name", "true-value", "false-value", "disabled", "tabindex", "onKeydown"]), !$.inlinePrompt && ($.inactiveIcon || $.inactiveText) ? (Z(),
                    ye("span", {
                        key: 0,
                        class: he(D(T))
                    }, [$.inactiveIcon ? (Z(),
                        Te(D(Mt), {
                            key: 0
                        }, {
                            default: se(() => [(Z(),
                                Te(Vt($.inactiveIcon)))]),
                            _: 1
                        })) : ke("v-if", !0), !$.inactiveIcon && $.inactiveText ? (Z(),
                        ye("span", {
                            key: 1,
                            "aria-hidden": D(P)
                        }, me($.inactiveText), 9, ["aria-hidden"])) : ke("v-if", !0)], 2)) : ke("v-if", !0), U("span", {
                    ref_key: "core",
                    ref: w,
                    class: he(D(u).e("core")),
                    style: kt(D(A))
                }, [$.inlinePrompt ? (Z(),
                    ye("div", {
                        key: 0,
                        class: he(D(u).e("inner"))
                    }, [$.activeIcon || $.inactiveIcon ? (Z(),
                        Te(D(Mt), {
                            key: 0,
                            class: he(D(u).is("icon"))
                        }, {
                            default: se(() => [(Z(),
                                Te(Vt(D(P) ? $.activeIcon : $.inactiveIcon)))]),
                            _: 1
                        }, 8, ["class"])) : $.activeText || $.inactiveText ? (Z(),
                        ye("span", {
                            key: 1,
                            class: he(D(u).is("text")),
                            "aria-hidden": !D(P)
                        }, me(D(P) ? $.activeText : $.inactiveText), 11, ["aria-hidden"])) : ke("v-if", !0)], 2)) : ke("v-if", !0), U("div", {
                    class: he(D(u).e("action"))
                }, [$.loading ? (Z(),
                    Te(D(Mt), {
                        key: 0,
                        class: he(D(u).is("loading"))
                    }, {
                        default: se(() => [ae(D(Bl))]),
                        _: 1
                    }, 8, ["class"])) : D(P) ? De($.$slots, "active-action", {
                    key: 1
                }, () => [$.activeActionIcon ? (Z(),
                    Te(D(Mt), {
                        key: 0
                    }, {
                        default: se(() => [(Z(),
                            Te(Vt($.activeActionIcon)))]),
                        _: 1
                    })) : ke("v-if", !0)]) : D(P) ? ke("v-if", !0) : De($.$slots, "inactive-action", {
                    key: 2
                }, () => [$.inactiveActionIcon ? (Z(),
                    Te(D(Mt), {
                        key: 0
                    }, {
                        default: se(() => [(Z(),
                            Te(Vt($.inactiveActionIcon)))]),
                        _: 1
                    })) : ke("v-if", !0)])], 2)], 6), !$.inlinePrompt && ($.activeIcon || $.activeText) ? (Z(),
                    ye("span", {
                        key: 1,
                        class: he(D(I))
                    }, [$.activeIcon ? (Z(),
                        Te(D(Mt), {
                            key: 0
                        }, {
                            default: se(() => [(Z(),
                                Te(Vt($.activeIcon)))]),
                            _: 1
                        })) : ke("v-if", !0), !$.activeIcon && $.activeText ? (Z(),
                        ye("span", {
                            key: 1,
                            "aria-hidden": !D(P)
                        }, me($.activeText), 9, ["aria-hidden"])) : ke("v-if", !0)], 2)) : ke("v-if", !0)], 10, ["onClick"]))
    }
});
var tW = ot(eW, [["__file", "switch.vue"]]);
const sW = Zt(tW)
    , Sd = Symbol("tabsRootContextKey")
    , nW = gt({
    tabs: {
        type: Ye(Array),
        default: () => bn([])
    }
})
    , i_ = "ElTabBar"
    , iW = Ce({
    name: i_
})
    , aW = Ce({
    ...iW,
    props: nW,
    setup(e, {expose: t}) {
        const s = e
            , a = Et()
            , o = st(Sd);
        o || hn(i_, "<el-tabs><el-tab-bar /></el-tabs>");
        const l = rt("tabs")
            , u = Se()
            , p = Se()
            , g = () => {
                let T = 0
                    , I = 0;
                const A = ["top", "bottom"].includes(o.props.tabPosition) ? "width" : "height"
                    , R = A === "width" ? "x" : "y"
                    , P = R === "x" ? "left" : "top";
                return s.tabs.every(M => {
                        var O, F;
                        const $ = (F = (O = a.parent) == null ? void 0 : O.refs) == null ? void 0 : F[`tab-${M.uid}`];
                        if (!$)
                            return !1;
                        if (!M.active)
                            return !0;
                        T = $[`offset${ya(P)}`],
                            I = $[`client${ya(A)}`];
                        const V = window.getComputedStyle($);
                        return A === "width" && (I -= Number.parseFloat(V.paddingLeft) + Number.parseFloat(V.paddingRight),
                            T += Number.parseFloat(V.paddingLeft)),
                            !1
                    }
                ),
                    {
                        [A]: `${I}px`,
                        transform: `translate${ya(R)}(${T}px)`
                    }
            }
            , y = () => p.value = g()
            , v = []
            , w = () => {
                var T;
                v.forEach(A => A.stop()),
                    v.length = 0;
                const I = (T = a.parent) == null ? void 0 : T.refs;
                if (I) {
                    for (const A in I)
                        if (A.startsWith("tab-")) {
                            const R = I[A];
                            R && v.push(sn(R, y))
                        }
                }
            }
        ;
        Ke(() => s.tabs, async () => {
                await xt(),
                    y(),
                    w()
            }
            , {
                immediate: !0
            });
        const C = sn(u, () => y());
        return us(() => {
                v.forEach(T => T.stop()),
                    v.length = 0,
                    C.stop()
            }
        ),
            t({
                ref: u,
                update: y
            }),
            (T, I) => (Z(),
                ye("div", {
                    ref_key: "barRef",
                    ref: u,
                    class: he([D(l).e("active-bar"), D(l).is(D(o).props.tabPosition)]),
                    style: kt(p.value)
                }, null, 6))
    }
});
var rW = ot(aW, [["__file", "tab-bar.vue"]]);
const oW = gt({
    panes: {
        type: Ye(Array),
        default: () => bn([])
    },
    currentName: {
        type: [String, Number],
        default: ""
    },
    editable: Boolean,
    type: {
        type: String,
        values: ["card", "border-card", ""],
        default: ""
    },
    stretch: Boolean
})
    , lW = {
    tabClick: (e, t, s) => s instanceof Event,
    tabRemove: (e, t) => t instanceof Event
}
    , ry = "ElTabNav"
    , cW = Ce({
    name: ry,
    props: oW,
    emits: lW,
    setup(e, {expose: t, emit: s}) {
        const a = st(Sd);
        a || hn(ry, "<el-tabs><tab-nav /></el-tabs>");
        const o = rt("tabs")
            , l = G4()
            , u = l3()
            , p = Se()
            , g = Se()
            , y = Se()
            , v = Se()
            , w = Se(!1)
            , C = Se(0)
            , T = Se(!1)
            , I = Se(!0)
            , A = re(() => ["top", "bottom"].includes(a.props.tabPosition) ? "width" : "height")
            , R = re(() => ({
            transform: `translate${A.value === "width" ? "X" : "Y"}(-${C.value}px)`
        }))
            , P = () => {
            if (!p.value)
                return;
            const ie = p.value[`offset${ya(A.value)}`]
                , te = C.value;
            if (!te)
                return;
            const ne = te > ie ? te - ie : 0;
            C.value = ne
        }
            , M = () => {
            if (!p.value || !g.value)
                return;
            const ie = g.value[`offset${ya(A.value)}`]
                , te = p.value[`offset${ya(A.value)}`]
                , ne = C.value;
            if (ie - ne <= te)
                return;
            const le = ie - ne > te * 2 ? ne + te : ie - te;
            C.value = le
        }
            , O = async () => {
            const ie = g.value;
            if (!w.value || !y.value || !p.value || !ie)
                return;
            await xt();
            const te = y.value.querySelector(".is-active");
            if (!te)
                return;
            const ne = p.value
                , le = ["top", "bottom"].includes(a.props.tabPosition)
                , oe = te.getBoundingClientRect()
                , ve = ne.getBoundingClientRect()
                , be = le ? ie.offsetWidth - ve.width : ie.offsetHeight - ve.height
                , de = C.value;
            let J = de;
            le ? (oe.left < ve.left && (J = de - (ve.left - oe.left)),
            oe.right > ve.right && (J = de + oe.right - ve.right)) : (oe.top < ve.top && (J = de - (ve.top - oe.top)),
            oe.bottom > ve.bottom && (J = de + (oe.bottom - ve.bottom))),
                J = Math.max(J, 0),
                C.value = Math.min(J, be)
        }
            , F = () => {
            var ie;
            if (!g.value || !p.value)
                return;
            e.stretch && ((ie = v.value) == null || ie.update());
            const te = g.value[`offset${ya(A.value)}`]
                , ne = p.value[`offset${ya(A.value)}`]
                , le = C.value;
            ne < te ? (w.value = w.value || {},
                w.value.prev = le,
                w.value.next = le + ne < te,
            te - le < ne && (C.value = te - ne)) : (w.value = !1,
            le > 0 && (C.value = 0))
        }
            , $ = ie => {
            let te = 0;
            switch (ie.code) {
                case wt.left:
                case wt.up:
                    te = -1;
                    break;
                case wt.right:
                case wt.down:
                    te = 1;
                    break;
                default:
                    return
            }
            const ne = Array.from(ie.currentTarget.querySelectorAll("[role=tab]:not(.is-disabled)"));
            let oe = ne.indexOf(ie.target) + te;
            oe < 0 ? oe = ne.length - 1 : oe >= ne.length && (oe = 0),
                ne[oe].focus({
                    preventScroll: !0
                }),
                ne[oe].click(),
                V()
        }
            , V = () => {
            I.value && (T.value = !0)
        }
            , G = () => T.value = !1;
        return Ke(l, ie => {
                ie === "hidden" ? I.value = !1 : ie === "visible" && setTimeout(() => I.value = !0, 50)
            }
        ),
            Ke(u, ie => {
                    ie ? setTimeout(() => I.value = !0, 50) : I.value = !1
                }
            ),
            sn(y, F),
            $t(() => setTimeout(() => O(), 0)),
            dr(() => F()),
            t({
                scrollToActiveTab: O,
                removeFocus: G
            }),
            () => {
                const ie = w.value ? [ae("span", {
                    class: [o.e("nav-prev"), o.is("disabled", !w.value.prev)],
                    onClick: P
                }, [ae(Mt, null, {
                    default: () => [ae(O3, null, null)]
                })]), ae("span", {
                    class: [o.e("nav-next"), o.is("disabled", !w.value.next)],
                    onClick: M
                }, [ae(Mt, null, {
                    default: () => [ae(Pw, null, null)]
                })])] : null
                    , te = e.panes.map((ne, le) => {
                        var oe, ve, be, de;
                        const J = ne.uid
                            , ue = ne.props.disabled
                            , fe = (ve = (oe = ne.props.name) != null ? oe : ne.index) != null ? ve : `${le}`
                            , Me = !ue && (ne.isClosable || e.editable);
                        ne.index = `${le}`;
                        const Xe = Me ? ae(Mt, {
                            class: "is-icon-close",
                            onClick: tt => s("tabRemove", ne, tt)
                        }, {
                            default: () => [ae(ar, null, null)]
                        }) : null
                            , Be = ((de = (be = ne.slots).label) == null ? void 0 : de.call(be)) || ne.props.label
                            , je = !ue && ne.active ? 0 : -1;
                        return ae("div", {
                            ref: `tab-${J}`,
                            class: [o.e("item"), o.is(a.props.tabPosition), o.is("active", ne.active), o.is("disabled", ue), o.is("closable", Me), o.is("focus", T.value)],
                            id: `tab-${fe}`,
                            key: `tab-${J}`,
                            "aria-controls": `pane-${fe}`,
                            role: "tab",
                            "aria-selected": ne.active,
                            tabindex: je,
                            onFocus: () => V(),
                            onBlur: () => G(),
                            onClick: tt => {
                                G(),
                                    s("tabClick", ne, fe, tt)
                            }
                            ,
                            onKeydown: tt => {
                                Me && (tt.code === wt.delete || tt.code === wt.backspace) && s("tabRemove", ne, tt)
                            }
                        }, [Be, Xe])
                    }
                );
                return ae("div", {
                    ref: y,
                    class: [o.e("nav-wrap"), o.is("scrollable", !!w.value), o.is(a.props.tabPosition)]
                }, [ie, ae("div", {
                    class: o.e("nav-scroll"),
                    ref: p
                }, [ae("div", {
                    class: [o.e("nav"), o.is(a.props.tabPosition), o.is("stretch", e.stretch && ["top", "bottom"].includes(a.props.tabPosition))],
                    ref: g,
                    style: R.value,
                    role: "tablist",
                    onKeydown: $
                }, [e.type ? null : ae(rW, {
                    ref: v,
                    tabs: [...e.panes]
                }, null), te])])])
            }
    }
})
    , uW = gt({
    type: {
        type: String,
        values: ["card", "border-card", ""],
        default: ""
    },
    closable: Boolean,
    addable: Boolean,
    modelValue: {
        type: [String, Number]
    },
    editable: Boolean,
    tabPosition: {
        type: String,
        values: ["top", "right", "bottom", "left"],
        default: "top"
    },
    beforeLeave: {
        type: Ye(Function),
        default: () => !0
    },
    stretch: Boolean
})
    , hh = e => pt(e) || ts(e)
    , dW = {
    [ms]: e => hh(e),
    tabClick: (e, t) => t instanceof Event,
    tabChange: e => hh(e),
    edit: (e, t) => ["remove", "add"].includes(t),
    tabRemove: e => hh(e),
    tabAdd: () => !0
}
    , hW = Ce({
    name: "ElTabs",
    props: uW,
    emits: dW,
    setup(e, {emit: t, slots: s, expose: a}) {
        var o;
        const l = rt("tabs")
            , u = re(() => ["left", "right"].includes(e.tabPosition))
            , {children: p, addChild: g, removeChild: y} = zB(Et(), "ElTabPane")
            , v = Se()
            , w = Se((o = e.modelValue) != null ? o : "0")
            , C = async (P, M = !1) => {
                var O, F;
                if (!(w.value === P || jn(P)))
                    try {
                        let $;
                        if (e.beforeLeave) {
                            const V = e.beforeLeave(P, w.value);
                            $ = V instanceof Promise ? await V : V
                        } else
                            $ = !0;
                        $ !== !1 && (w.value = P,
                        M && (t(ms, P),
                            t("tabChange", P)),
                        (F = (O = v.value) == null ? void 0 : O.removeFocus) == null || F.call(O))
                    } catch {
                    }
            }
            , T = (P, M, O) => {
                P.props.disabled || (C(M, !0),
                    t("tabClick", P, O))
            }
            , I = (P, M) => {
                P.props.disabled || jn(P.props.name) || (M.stopPropagation(),
                    t("edit", P.props.name, "remove"),
                    t("tabRemove", P.props.name))
            }
            , A = () => {
                t("edit", void 0, "add"),
                    t("tabAdd")
            }
        ;
        Ke(() => e.modelValue, P => C(P)),
            Ke(w, async () => {
                    var P;
                    await xt(),
                    (P = v.value) == null || P.scrollToActiveTab()
                }
            ),
            Xt(Sd, {
                props: e,
                currentName: w,
                registerPane: P => {
                    p.value.push(P)
                }
                ,
                sortPane: g,
                unregisterPane: y
            }),
            a({
                currentName: w
            });
        const R = ({render: P}) => P();
        return () => {
            const P = s["add-icon"]
                , M = e.editable || e.addable ? ae("div", {
                class: [l.e("new-tab"), u.value && l.e("new-tab-vertical")],
                tabindex: "0",
                onClick: A,
                onKeydown: $ => {
                    [wt.enter, wt.numpadEnter].includes($.code) && A()
                }
            }, [P ? De(s, "add-icon") : ae(Mt, {
                class: l.is("icon-plus")
            }, {
                default: () => [ae(e8, null, null)]
            })]) : null
                , O = ae("div", {
                class: [l.e("header"), u.value && l.e("header-vertical"), l.is(e.tabPosition)]
            }, [ae(R, {
                render: () => {
                    const $ = p.value.some(V => V.slots.label);
                    return ae(cW, {
                        ref: v,
                        currentName: w.value,
                        editable: e.editable,
                        type: e.type,
                        panes: p.value,
                        stretch: e.stretch,
                        onTabClick: T,
                        onTabRemove: I
                    }, {
                        $stable: !$
                    })
                }
            }, null), M])
                , F = ae("div", {
                class: l.e("content")
            }, [De(s, "default")]);
            return ae("div", {
                class: [l.b(), l.m(e.tabPosition), {
                    [l.m("card")]: e.type === "card",
                    [l.m("border-card")]: e.type === "border-card"
                }]
            }, [F, O])
        }
    }
});
var fW = hW;
const pW = gt({
    label: {
        type: String,
        default: ""
    },
    name: {
        type: [String, Number]
    },
    closable: Boolean,
    disabled: Boolean,
    lazy: Boolean
})
    , a_ = "ElTabPane"
    , gW = Ce({
    name: a_
})
    , mW = Ce({
    ...gW,
    props: pW,
    setup(e) {
        const t = e
            , s = Et()
            , a = _i()
            , o = st(Sd);
        o || hn(a_, "usage: <el-tabs><el-tab-pane /></el-tabs/>");
        const l = rt("tab-pane")
            , u = Se()
            , p = re(() => t.closable || o.props.closable)
            , g = ff(() => {
                var T;
                return o.currentName.value === ((T = t.name) != null ? T : u.value)
            }
        )
            , y = Se(g.value)
            , v = re(() => {
                var T;
                return (T = t.name) != null ? T : u.value
            }
        )
            , w = ff(() => !t.lazy || y.value || g.value);
        Ke(g, T => {
                T && (y.value = !0)
            }
        );
        const C = ys({
            uid: s.uid,
            slots: a,
            props: t,
            paneName: v,
            active: g,
            index: u,
            isClosable: p
        });
        return o.registerPane(C),
            $t(() => {
                    o.sortPane(C)
                }
            ),
            hr(() => {
                    o.unregisterPane(C.uid)
                }
            ),
            (T, I) => D(w) ? _t((Z(),
                ye("div", {
                    key: 0,
                    id: `pane-${D(v)}`,
                    class: he(D(l).b()),
                    role: "tabpanel",
                    "aria-hidden": !D(g),
                    "aria-labelledby": `tab-${D(v)}`
                }, [De(T.$slots, "default")], 10, ["id", "aria-hidden", "aria-labelledby"])), [[ss, D(g)]]) : ke("v-if", !0)
    }
});
var r_ = ot(mW, [["__file", "tab-pane.vue"]]);
const o_ = Zt(fW, {
    TabPane: r_
})
    , l_ = Os(r_)
    , vW = Ce({
    name: "ElTimeline",
    setup(e, {slots: t}) {
        const s = rt("timeline");
        return Xt("timeline", t),
            () => jt("ul", {
                class: [s.b()]
            }, [De(t, "default")])
    }
})
    , bW = gt({
    timestamp: {
        type: String,
        default: ""
    },
    hideTimestamp: Boolean,
    center: Boolean,
    placement: {
        type: String,
        values: ["top", "bottom"],
        default: "bottom"
    },
    type: {
        type: String,
        values: ["primary", "success", "warning", "danger", "info"],
        default: ""
    },
    color: {
        type: String,
        default: ""
    },
    size: {
        type: String,
        values: ["normal", "large"],
        default: "normal"
    },
    icon: {
        type: Cs
    },
    hollow: Boolean
})
    , yW = Ce({
    name: "ElTimelineItem"
})
    , xW = Ce({
    ...yW,
    props: bW,
    setup(e) {
        const t = e
            , s = rt("timeline-item")
            ,
            a = re(() => [s.e("node"), s.em("node", t.size || ""), s.em("node", t.type || ""), s.is("hollow", t.hollow)]);
        return (o, l) => (Z(),
            ye("li", {
                class: he([D(s).b(), {
                    [D(s).e("center")]: o.center
                }])
            }, [U("div", {
                class: he(D(s).e("tail"))
            }, null, 2), o.$slots.dot ? ke("v-if", !0) : (Z(),
                ye("div", {
                    key: 0,
                    class: he(D(a)),
                    style: kt({
                        backgroundColor: o.color
                    })
                }, [o.icon ? (Z(),
                    Te(D(Mt), {
                        key: 0,
                        class: he(D(s).e("icon"))
                    }, {
                        default: se(() => [(Z(),
                            Te(Vt(o.icon)))]),
                        _: 1
                    }, 8, ["class"])) : ke("v-if", !0)], 6)), o.$slots.dot ? (Z(),
                ye("div", {
                    key: 1,
                    class: he(D(s).e("dot"))
                }, [De(o.$slots, "dot")], 2)) : ke("v-if", !0), U("div", {
                class: he(D(s).e("wrapper"))
            }, [!o.hideTimestamp && o.placement === "top" ? (Z(),
                ye("div", {
                    key: 0,
                    class: he([D(s).e("timestamp"), D(s).is("top")])
                }, me(o.timestamp), 3)) : ke("v-if", !0), U("div", {
                class: he(D(s).e("content"))
            }, [De(o.$slots, "default")], 2), !o.hideTimestamp && o.placement === "bottom" ? (Z(),
                ye("div", {
                    key: 1,
                    class: he([D(s).e("timestamp"), D(s).is("bottom")])
                }, me(o.timestamp), 3)) : ke("v-if", !0)], 2)], 2))
    }
});
var c_ = ot(xW, [["__file", "timeline-item.vue"]]);
const u_ = Zt(vW, {
    TimelineItem: c_
})
    , d_ = Os(c_)
    , h_ = Symbol("uploadContextKey")
    , wW = "ElUpload";

class SW extends Error {
    constructor(t, s, a, o) {
        super(t),
            this.name = "UploadAjaxError",
            this.status = s,
            this.method = a,
            this.url = o
    }
}

function oy(e, t, s) {
    let a;
    return s.response ? a = `${s.response.error || s.response}` : s.responseText ? a = `${s.responseText}` : a = `fail to ${t.method} ${e} ${s.status}`,
        new SW(a, s.status, t.method, e)
}

function _W(e) {
    const t = e.responseText || e.response;
    if (!t)
        return t;
    try {
        return JSON.parse(t)
    } catch {
        return t
    }
}

const kW = e => {
    typeof XMLHttpRequest > "u" && hn(wW, "XMLHttpRequest is undefined");
    const t = new XMLHttpRequest
        , s = e.action;
    t.upload && t.upload.addEventListener("progress", l => {
            const u = l;
            u.percent = l.total > 0 ? l.loaded / l.total * 100 : 0,
                e.onProgress(u)
        }
    );
    const a = new FormData;
    if (e.data)
        for (const [l, u] of Object.entries(e.data))
            Ze(u) && u.length ? a.append(l, ...u) : a.append(l, u);
    a.append(e.filename, e.file, e.file.name),
        t.addEventListener("error", () => {
                e.onError(oy(s, e, t))
            }
        ),
        t.addEventListener("load", () => {
                if (t.status < 200 || t.status >= 300)
                    return e.onError(oy(s, e, t));
                e.onSuccess(_W(t))
            }
        ),
        t.open(e.method, s, !0),
    e.withCredentials && "withCredentials" in t && (t.withCredentials = !0);
    const o = e.headers || {};
    if (o instanceof Headers)
        o.forEach((l, u) => t.setRequestHeader(u, l));
    else
        for (const [l, u] of Object.entries(o))
            qi(u) || t.setRequestHeader(l, String(u));
    return t.send(a),
        t
}
    , f_ = ["text", "picture", "picture-card"];
let CW = 1;
const Ef = () => Date.now() + CW++
    , p_ = gt({
    action: {
        type: String,
        default: "#"
    },
    headers: {
        type: Ye(Object)
    },
    method: {
        type: String,
        default: "post"
    },
    data: {
        type: Ye([Object, Function, Promise]),
        default: () => bn({})
    },
    multiple: Boolean,
    name: {
        type: String,
        default: "file"
    },
    drag: Boolean,
    withCredentials: Boolean,
    showFileList: {
        type: Boolean,
        default: !0
    },
    accept: {
        type: String,
        default: ""
    },
    fileList: {
        type: Ye(Array),
        default: () => bn([])
    },
    autoUpload: {
        type: Boolean,
        default: !0
    },
    listType: {
        type: String,
        values: f_,
        default: "text"
    },
    httpRequest: {
        type: Ye(Function),
        default: kW
    },
    disabled: Boolean,
    limit: Number
})
    , AW = gt({
    ...p_,
    beforeUpload: {
        type: Ye(Function),
        default: Ht
    },
    beforeRemove: {
        type: Ye(Function)
    },
    onRemove: {
        type: Ye(Function),
        default: Ht
    },
    onChange: {
        type: Ye(Function),
        default: Ht
    },
    onPreview: {
        type: Ye(Function),
        default: Ht
    },
    onSuccess: {
        type: Ye(Function),
        default: Ht
    },
    onProgress: {
        type: Ye(Function),
        default: Ht
    },
    onError: {
        type: Ye(Function),
        default: Ht
    },
    onExceed: {
        type: Ye(Function),
        default: Ht
    },
    crossorigin: {
        type: Ye(String)
    }
})
    , EW = gt({
    files: {
        type: Ye(Array),
        default: () => bn([])
    },
    disabled: {
        type: Boolean,
        default: !1
    },
    handlePreview: {
        type: Ye(Function),
        default: Ht
    },
    listType: {
        type: String,
        values: f_,
        default: "text"
    },
    crossorigin: {
        type: Ye(String)
    }
})
    , TW = {
    remove: e => !!e
}
    , IW = Ce({
    name: "ElUploadList"
})
    , PW = Ce({
    ...IW,
    props: EW,
    emits: TW,
    setup(e, {emit: t}) {
        const s = e
            , {t: a} = ac()
            , o = rt("upload")
            , l = rt("icon")
            , u = rt("list")
            , p = Ci()
            , g = Se(!1)
            , y = re(() => [o.b("list"), o.bm("list", s.listType), o.is("disabled", s.disabled)])
            , v = w => {
                t("remove", w)
            }
        ;
        return (w, C) => (Z(),
            Te(Gu, {
                tag: "ul",
                class: he(D(y)),
                name: D(u).b()
            }, {
                default: se(() => [(Z(!0),
                    ye(Ct, null, wi(w.files, (T, I) => (Z(),
                        ye("li", {
                            key: T.uid || T.name,
                            class: he([D(o).be("list", "item"), D(o).is(T.status), {
                                focusing: g.value
                            }]),
                            tabindex: "0",
                            onKeydown: vn(A => !D(p) && v(T), ["delete"]),
                            onFocus: A => g.value = !0,
                            onBlur: A => g.value = !1,
                            onClick: A => g.value = !1
                        }, [De(w.$slots, "default", {
                            file: T,
                            index: I
                        }, () => [w.listType === "picture" || T.status !== "uploading" && w.listType === "picture-card" ? (Z(),
                            ye("img", {
                                key: 0,
                                class: he(D(o).be("list", "item-thumbnail")),
                                src: T.url,
                                crossorigin: w.crossorigin,
                                alt: ""
                            }, null, 10, ["src", "crossorigin"])) : ke("v-if", !0), T.status === "uploading" || w.listType !== "picture-card" ? (Z(),
                            ye("div", {
                                key: 1,
                                class: he(D(o).be("list", "item-info"))
                            }, [U("a", {
                                class: he(D(o).be("list", "item-name")),
                                onClick: Ot(A => w.handlePreview(T), ["prevent"])
                            }, [ae(D(Mt), {
                                class: he(D(l).m("document"))
                            }, {
                                default: se(() => [ae(D(U3))]),
                                _: 1
                            }, 8, ["class"]), U("span", {
                                class: he(D(o).be("list", "item-file-name")),
                                title: T.name
                            }, me(T.name), 11, ["title"])], 10, ["onClick"]), T.status === "uploading" ? (Z(),
                                Te(D(wd), {
                                    key: 0,
                                    type: w.listType === "picture-card" ? "circle" : "line",
                                    "stroke-width": w.listType === "picture-card" ? 6 : 2,
                                    percentage: Number(T.percentage),
                                    style: kt(w.listType === "picture-card" ? "" : "margin-top: 0.5rem")
                                }, null, 8, ["type", "stroke-width", "percentage", "style"])) : ke("v-if", !0)], 2)) : ke("v-if", !0), U("label", {
                            class: he(D(o).be("list", "item-status-label"))
                        }, [w.listType === "text" ? (Z(),
                            Te(D(Mt), {
                                key: 0,
                                class: he([D(l).m("upload-success"), D(l).m("circle-check")])
                            }, {
                                default: se(() => [ae(D(Xp))]),
                                _: 1
                            }, 8, ["class"])) : ["picture-card", "picture"].includes(w.listType) ? (Z(),
                            Te(D(Mt), {
                                key: 1,
                                class: he([D(l).m("upload-success"), D(l).m("check")])
                            }, {
                                default: se(() => [ae(D(Lw))]),
                                _: 1
                            }, 8, ["class"])) : ke("v-if", !0)], 2), D(p) ? ke("v-if", !0) : (Z(),
                            Te(D(Mt), {
                                key: 2,
                                class: he(D(l).m("close")),
                                onClick: A => v(T)
                            }, {
                                default: se(() => [ae(D(ar))]),
                                _: 2
                            }, 1032, ["class", "onClick"])), ke(" Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn"), ke(" This is a bug which needs to be fixed "), ke(" TODO: Fix the incorrect navigation interaction "), D(p) ? ke("v-if", !0) : (Z(),
                            ye("i", {
                                key: 3,
                                class: he(D(l).m("close-tip"))
                            }, me(D(a)("el.upload.deleteTip")), 3)), w.listType === "picture-card" ? (Z(),
                            ye("span", {
                                key: 4,
                                class: he(D(o).be("list", "item-actions"))
                            }, [U("span", {
                                class: he(D(o).be("list", "item-preview")),
                                onClick: A => w.handlePreview(T)
                            }, [ae(D(Mt), {
                                class: he(D(l).m("zoom-in"))
                            }, {
                                default: se(() => [ae(D(r8))]),
                                _: 1
                            }, 8, ["class"])], 10, ["onClick"]), D(p) ? ke("v-if", !0) : (Z(),
                                ye("span", {
                                    key: 0,
                                    class: he(D(o).be("list", "item-delete")),
                                    onClick: A => v(T)
                                }, [ae(D(Mt), {
                                    class: he(D(l).m("delete"))
                                }, {
                                    default: se(() => [ae(D(z3))]),
                                    _: 1
                                }, 8, ["class"])], 10, ["onClick"]))], 2)) : ke("v-if", !0)])], 42, ["onKeydown", "onFocus", "onBlur", "onClick"]))), 128)), De(w.$slots, "append")]),
                _: 3
            }, 8, ["class", "name"]))
    }
});
var ly = ot(PW, [["__file", "upload-list.vue"]]);
const LW = gt({
    disabled: {
        type: Boolean,
        default: !1
    }
})
    , MW = {
    file: e => Ze(e)
}
    , g_ = "ElUploadDrag"
    , OW = Ce({
    name: g_
})
    , RW = Ce({
    ...OW,
    props: LW,
    emits: MW,
    setup(e, {emit: t}) {
        st(h_) || hn(g_, "usage: <el-upload><el-upload-dragger /></el-upload>");
        const a = rt("upload")
            , o = Se(!1)
            , l = Ci()
            , u = g => {
                if (l.value)
                    return;
                o.value = !1,
                    g.stopPropagation();
                const y = Array.from(g.dataTransfer.files)
                    , v = g.dataTransfer.items || [];
                y.forEach((w, C) => {
                        var T;
                        const I = v[C]
                            , A = (T = I == null ? void 0 : I.webkitGetAsEntry) == null ? void 0 : T.call(I);
                        A && (w.isDirectory = A.isDirectory)
                    }
                ),
                    t("file", y)
            }
            , p = () => {
                l.value || (o.value = !0)
            }
        ;
        return (g, y) => (Z(),
            ye("div", {
                class: he([D(a).b("dragger"), D(a).is("dragover", o.value)]),
                onDrop: Ot(u, ["prevent"]),
                onDragover: Ot(p, ["prevent"]),
                onDragleave: Ot(v => o.value = !1, ["prevent"])
            }, [De(g.$slots, "default")], 42, ["onDrop", "onDragover", "onDragleave"]))
    }
});
var NW = ot(RW, [["__file", "upload-dragger.vue"]]);
const DW = gt({
    ...p_,
    beforeUpload: {
        type: Ye(Function),
        default: Ht
    },
    onRemove: {
        type: Ye(Function),
        default: Ht
    },
    onStart: {
        type: Ye(Function),
        default: Ht
    },
    onSuccess: {
        type: Ye(Function),
        default: Ht
    },
    onProgress: {
        type: Ye(Function),
        default: Ht
    },
    onError: {
        type: Ye(Function),
        default: Ht
    },
    onExceed: {
        type: Ye(Function),
        default: Ht
    }
})
    , FW = Ce({
    name: "ElUploadContent",
    inheritAttrs: !1
})
    , $W = Ce({
    ...FW,
    props: DW,
    setup(e, {expose: t}) {
        const s = e
            , a = rt("upload")
            , o = Ci()
            , l = Bs({})
            , u = Bs()
            , p = A => {
                if (A.length === 0)
                    return;
                const {autoUpload: R, limit: P, fileList: M, multiple: O, onStart: F, onExceed: $} = s;
                if (P && M.length + A.length > P) {
                    $(A, M);
                    return
                }
                O || (A = A.slice(0, 1));
                for (const V of A) {
                    const G = V;
                    G.uid = Ef(),
                        F(G),
                    R && g(G)
                }
            }
            , g = async A => {
                if (u.value.value = "",
                    !s.beforeUpload)
                    return v(A);
                let R, P = {};
                try {
                    const O = s.data
                        , F = s.beforeUpload(A);
                    P = er(s.data) ? sb(s.data) : s.data,
                        R = await F,
                    er(s.data) && Za(O, P) && (P = sb(s.data))
                } catch {
                    R = !1
                }
                if (R === !1) {
                    s.onRemove(A);
                    return
                }
                let M = A;
                R instanceof Blob && (R instanceof File ? M = R : M = new File([R], A.name, {
                    type: A.type
                })),
                    v(Object.assign(M, {
                        uid: A.uid
                    }), P)
            }
            , y = async (A, R) => nt(A) ? A(R) : A
            , v = async (A, R) => {
                const {
                    headers: P,
                    data: M,
                    method: O,
                    withCredentials: F,
                    name: $,
                    action: V,
                    onProgress: G,
                    onSuccess: ie,
                    onError: te,
                    httpRequest: ne
                } = s;
                try {
                    R = await y(R ?? M, A)
                } catch {
                    s.onRemove(A);
                    return
                }
                const {uid: le} = A
                    , oe = {
                    headers: P || {},
                    withCredentials: F,
                    file: A,
                    data: R,
                    method: O,
                    filename: $,
                    action: V,
                    onProgress: be => {
                        G(be, A)
                    }
                    ,
                    onSuccess: be => {
                        ie(be, A),
                            delete l.value[le]
                    }
                    ,
                    onError: be => {
                        te(be, A),
                            delete l.value[le]
                    }
                }
                    , ve = ne(oe);
                l.value[le] = ve,
                ve instanceof Promise && ve.then(oe.onSuccess, oe.onError)
            }
            , w = A => {
                const R = A.target.files;
                R && p(Array.from(R))
            }
            , C = () => {
                o.value || (u.value.value = "",
                    u.value.click())
            }
            , T = () => {
                C()
            }
        ;
        return t({
            abort: A => {
                x3(l.value).filter(A ? ([P]) => String(A.uid) === P : () => !0).forEach(([P, M]) => {
                        M instanceof XMLHttpRequest && M.abort(),
                            delete l.value[P]
                    }
                )
            }
            ,
            upload: g
        }),
            (A, R) => (Z(),
                ye("div", {
                    class: he([D(a).b(), D(a).m(A.listType), D(a).is("drag", A.drag), D(a).is("disabled", D(o))]),
                    tabindex: D(o) ? "-1" : "0",
                    onClick: C,
                    onKeydown: vn(Ot(T, ["self"]), ["enter", "space"])
                }, [A.drag ? (Z(),
                    Te(NW, {
                        key: 0,
                        disabled: D(o),
                        onFile: p
                    }, {
                        default: se(() => [De(A.$slots, "default")]),
                        _: 3
                    }, 8, ["disabled"])) : De(A.$slots, "default", {
                    key: 1
                }), U("input", {
                    ref_key: "inputRef",
                    ref: u,
                    class: he(D(a).e("input")),
                    name: A.name,
                    disabled: D(o),
                    multiple: A.multiple,
                    accept: A.accept,
                    type: "file",
                    onChange: w,
                    onClick: Ot(() => {
                        }
                        , ["stop"])
                }, null, 42, ["name", "disabled", "multiple", "accept", "onClick"])], 42, ["tabindex", "onKeydown"]))
    }
});
var cy = ot($W, [["__file", "upload-content.vue"]]);
const uy = "ElUpload"
    , dy = e => {
    var t;
    (t = e.url) != null && t.startsWith("blob:") && URL.revokeObjectURL(e.url)
}
    , BW = (e, t) => {
    const s = o3(e, "fileList", void 0, {
        passive: !0
    })
        , a = T => s.value.find(I => I.uid === T.uid);

    function o(T) {
        var I;
        (I = t.value) == null || I.abort(T)
    }

    function l(T = ["ready", "uploading", "success", "fail"]) {
        s.value = s.value.filter(I => !T.includes(I.status))
    }

    function u(T) {
        s.value = s.value.filter(I => I.uid !== T.uid)
    }

    const p = (T, I) => {
            const A = a(I);
            A && (console.error(T),
                A.status = "fail",
                u(A),
                e.onError(T, A, s.value),
                e.onChange(A, s.value))
        }
        , g = (T, I) => {
            const A = a(I);
            A && (e.onProgress(T, A, s.value),
                A.status = "uploading",
                A.percentage = Math.round(T.percent))
        }
        , y = (T, I) => {
            const A = a(I);
            A && (A.status = "success",
                A.response = T,
                e.onSuccess(T, A, s.value),
                e.onChange(A, s.value))
        }
        , v = T => {
            qi(T.uid) && (T.uid = Ef());
            const I = {
                name: T.name,
                percentage: 0,
                status: "ready",
                size: T.size,
                raw: T,
                uid: T.uid
            };
            if (e.listType === "picture-card" || e.listType === "picture")
                try {
                    I.url = URL.createObjectURL(T)
                } catch (A) {
                    A.message,
                        e.onError(A, I, s.value)
                }
            s.value = [...s.value, I],
                e.onChange(I, s.value)
        }
        , w = async T => {
            const I = T instanceof File ? a(T) : T;
            I || hn(uy, "file to be removed not found");
            const A = R => {
                    o(R),
                        u(R),
                        e.onRemove(R, s.value),
                        dy(R)
                }
            ;
            e.beforeRemove ? await e.beforeRemove(I, s.value) !== !1 && A(I) : A(I)
        }
    ;

    function C() {
        s.value.filter(({status: T}) => T === "ready").forEach(({raw: T}) => {
                var I;
                return T && ((I = t.value) == null ? void 0 : I.upload(T))
            }
        )
    }

    return Ke(() => e.listType, T => {
            T !== "picture-card" && T !== "picture" || (s.value = s.value.map(I => {
                    const {raw: A, url: R} = I;
                    if (!R && A)
                        try {
                            I.url = URL.createObjectURL(A)
                        } catch (P) {
                            e.onError(P, I, s.value)
                        }
                    return I
                }
            ))
        }
    ),
        Ke(s, T => {
                for (const I of T)
                    I.uid || (I.uid = Ef()),
                    I.status || (I.status = "success")
            }
            , {
                immediate: !0,
                deep: !0
            }),
        {
            uploadFiles: s,
            abort: o,
            clearFiles: l,
            handleError: p,
            handleProgress: g,
            handleStart: v,
            handleSuccess: y,
            handleRemove: w,
            submit: C,
            revokeFileObjectURL: dy
        }
}
    , HW = Ce({
    name: "ElUpload"
})
    , VW = Ce({
    ...HW,
    props: AW,
    setup(e, {expose: t}) {
        const s = e
            , a = Ci()
            , o = Bs()
            , {
            abort: l,
            submit: u,
            clearFiles: p,
            uploadFiles: g,
            handleStart: y,
            handleError: v,
            handleRemove: w,
            handleSuccess: C,
            handleProgress: T,
            revokeFileObjectURL: I
        } = BW(s, o)
            , A = re(() => s.listType === "picture-card")
            , R = re(() => ({
            ...s,
            fileList: g.value,
            onStart: y,
            onProgress: T,
            onSuccess: C,
            onError: v,
            onRemove: w
        }));
        return us(() => {
                g.value.forEach(I)
            }
        ),
            Xt(h_, {
                accept: ks(s, "accept")
            }),
            t({
                abort: l,
                submit: u,
                clearFiles: p,
                handleStart: y,
                handleRemove: w
            }),
            (P, M) => (Z(),
                ye("div", null, [D(A) && P.showFileList ? (Z(),
                    Te(ly, {
                        key: 0,
                        disabled: D(a),
                        "list-type": P.listType,
                        files: D(g),
                        crossorigin: P.crossorigin,
                        "handle-preview": P.onPreview,
                        onRemove: D(w)
                    }, Sl({
                        append: se(() => [ae(cy, vs({
                            ref_key: "uploadRef",
                            ref: o
                        }, D(R)), {
                            default: se(() => [P.$slots.trigger ? De(P.$slots, "trigger", {
                                key: 0
                            }) : ke("v-if", !0), !P.$slots.trigger && P.$slots.default ? De(P.$slots, "default", {
                                key: 1
                            }) : ke("v-if", !0)]),
                            _: 3
                        }, 16)]),
                        _: 2
                    }, [P.$slots.file ? {
                        name: "default",
                        fn: se(({file: O, index: F}) => [De(P.$slots, "file", {
                            file: O,
                            index: F
                        })])
                    } : void 0]), 1032, ["disabled", "list-type", "files", "crossorigin", "handle-preview", "onRemove"])) : ke("v-if", !0), !D(A) || D(A) && !P.showFileList ? (Z(),
                    Te(cy, vs({
                        key: 1,
                        ref_key: "uploadRef",
                        ref: o
                    }, D(R)), {
                        default: se(() => [P.$slots.trigger ? De(P.$slots, "trigger", {
                            key: 0
                        }) : ke("v-if", !0), !P.$slots.trigger && P.$slots.default ? De(P.$slots, "default", {
                            key: 1
                        }) : ke("v-if", !0)]),
                        _: 3
                    }, 16)) : ke("v-if", !0), P.$slots.trigger ? De(P.$slots, "default", {
                    key: 2
                }) : ke("v-if", !0), De(P.$slots, "tip"), !D(A) && P.showFileList ? (Z(),
                    Te(ly, {
                        key: 3,
                        disabled: D(a),
                        "list-type": P.listType,
                        files: D(g),
                        crossorigin: P.crossorigin,
                        "handle-preview": P.onPreview,
                        onRemove: D(w)
                    }, Sl({
                        _: 2
                    }, [P.$slots.file ? {
                        name: "default",
                        fn: se(({file: O, index: F}) => [De(P.$slots, "file", {
                            file: O,
                            index: F
                        })])
                    } : void 0]), 1032, ["disabled", "list-type", "files", "crossorigin", "handle-preview", "onRemove"])) : ke("v-if", !0)]))
    }
});
var zW = ot(VW, [["__file", "upload.vue"]]);
const WW = Zt(zW);

function UW(e) {
    let t;
    const s = Se(!1)
        , a = ys({
        ...e,
        originalPosition: "",
        originalOverflow: "",
        visible: !1
    });

    function o(C) {
        a.text = C
    }

    function l() {
        const C = a.parent
            , T = w.ns;
        if (!C.vLoadingAddClassList) {
            let I = C.getAttribute("loading-number");
            I = Number.parseInt(I) - 1,
                I ? C.setAttribute("loading-number", I.toString()) : (_a(C, T.bm("parent", "relative")),
                    C.removeAttribute("loading-number")),
                _a(C, T.bm("parent", "hidden"))
        }
        u(),
            v.unmount()
    }

    function u() {
        var C, T;
        (T = (C = w.$el) == null ? void 0 : C.parentNode) == null || T.removeChild(w.$el)
    }

    function p() {
        var C;
        e.beforeClose && !e.beforeClose() || (s.value = !0,
            clearTimeout(t),
            t = setTimeout(g, 400),
            a.visible = !1,
        (C = e.closed) == null || C.call(e))
    }

    function g() {
        if (!s.value)
            return;
        const C = a.parent;
        s.value = !1,
            C.vLoadingAddClassList = void 0,
            l()
    }

    const v = Al(Ce({
        name: "ElLoading",
        setup(C, {expose: T}) {
            const {ns: I, zIndex: A} = Up("loading");
            return T({
                ns: I,
                zIndex: A
            }),
                () => {
                    const R = a.spinner || a.svg
                        , P = jt("svg", {
                        class: "circular",
                        viewBox: a.svgViewBox ? a.svgViewBox : "0 0 50 50",
                        ...R ? {
                            innerHTML: R
                        } : {}
                    }, [jt("circle", {
                        class: "path",
                        cx: "25",
                        cy: "25",
                        r: "20",
                        fill: "none"
                    })])
                        , M = a.text ? jt("p", {
                        class: I.b("text")
                    }, [a.text]) : void 0;
                    return jt(fn, {
                        name: I.b("fade"),
                        onAfterLeave: g
                    }, {
                        default: se(() => [_t(ae("div", {
                            style: {
                                backgroundColor: a.background || ""
                            },
                            class: [I.b("mask"), a.customClass, a.fullscreen ? "is-fullscreen" : ""]
                        }, [jt("div", {
                            class: I.b("spinner")
                        }, [P, M])]), [[ss, a.visible]])])
                    })
                }
        }
    }))
        , w = v.mount(document.createElement("div"));
    return {
        ...ai(a),
        setText: o,
        removeElLoadingChild: u,
        close: p,
        handleAfterLeave: g,
        vm: w,
        get $el() {
            return w.$el
        }
    }
}

let $c;
const YW = function (e = {}) {
    if (!cs)
        return;
    const t = XW(e);
    if (t.fullscreen && $c)
        return $c;
    const s = UW({
        ...t,
        closed: () => {
            var o;
            (o = t.closed) == null || o.call(t),
            t.fullscreen && ($c = void 0)
        }
    });
    jW(t, t.parent, s),
        hy(t, t.parent, s),
        t.parent.vLoadingAddClassList = () => hy(t, t.parent, s);
    let a = t.parent.getAttribute("loading-number");
    return a ? a = `${Number.parseInt(a) + 1}` : a = "1",
        t.parent.setAttribute("loading-number", a),
        t.parent.appendChild(s.$el),
        xt(() => s.visible.value = t.visible),
    t.fullscreen && ($c = s),
        s
}
    , XW = e => {
    var t, s, a, o;
    let l;
    return pt(e.target) ? l = (t = document.querySelector(e.target)) != null ? t : document.body : l = e.target || document.body,
        {
            parent: l === document.body || e.body ? document.body : l,
            background: e.background || "",
            svg: e.svg || "",
            svgViewBox: e.svgViewBox || "",
            spinner: e.spinner || !1,
            text: e.text || "",
            fullscreen: l === document.body && ((s = e.fullscreen) != null ? s : !0),
            lock: (a = e.lock) != null ? a : !1,
            customClass: e.customClass || "",
            visible: (o = e.visible) != null ? o : !0,
            beforeClose: e.beforeClose,
            closed: e.closed,
            target: l
        }
}
    , jW = async (e, t, s) => {
    const {nextZIndex: a} = s.vm.zIndex || s.vm._.exposed.zIndex
        , o = {};
    if (e.fullscreen)
        s.originalPosition.value = Mr(document.body, "position"),
            s.originalOverflow.value = Mr(document.body, "overflow"),
            o.zIndex = a();
    else if (e.parent === document.body) {
        s.originalPosition.value = Mr(document.body, "position"),
            await xt();
        for (const l of ["top", "left"]) {
            const u = l === "top" ? "scrollTop" : "scrollLeft";
            o[l] = `${e.target.getBoundingClientRect()[l] + document.body[u] + document.documentElement[u] - Number.parseInt(Mr(document.body, `margin-${l}`), 10)}px`
        }
        for (const l of ["height", "width"])
            o[l] = `${e.target.getBoundingClientRect()[l]}px`
    } else
        s.originalPosition.value = Mr(t, "position");
    for (const [l, u] of Object.entries(o))
        s.$el.style[l] = u
}
    , hy = (e, t, s) => {
    const a = s.vm.ns || s.vm._.exposed.ns;
    ["absolute", "fixed", "sticky"].includes(s.originalPosition.value) ? _a(t, a.bm("parent", "relative")) : Ua(t, a.bm("parent", "relative")),
        e.fullscreen && e.lock ? Ua(t, a.bm("parent", "hidden")) : _a(t, a.bm("parent", "hidden"))
}
    , Qc = Symbol("ElLoading")
    , fy = (e, t) => {
    var s, a, o, l;
    const u = t.instance
        , p = C => At(t.value) ? t.value[C] : void 0
        , g = C => {
        const T = pt(C) && (u == null ? void 0 : u[C]) || C;
        return T && Se(T)
    }
        , y = C => g(p(C) || e.getAttribute(`element-loading-${tn(C)}`))
        , v = (s = p("fullscreen")) != null ? s : t.modifiers.fullscreen
        , w = {
        text: y("text"),
        svg: y("svg"),
        svgViewBox: y("svgViewBox"),
        spinner: y("spinner"),
        background: y("background"),
        customClass: y("customClass"),
        fullscreen: v,
        target: (a = p("target")) != null ? a : v ? void 0 : e,
        body: (o = p("body")) != null ? o : t.modifiers.body,
        lock: (l = p("lock")) != null ? l : t.modifiers.lock
    };
    e[Qc] = {
        options: w,
        instance: YW(w)
    }
}
    , GW = (e, t) => {
    for (const s of Object.keys(t))
        Qt(t[s]) && (t[s].value = e[s])
}
    , _d = {
    mounted(e, t) {
        t.value && fy(e, t)
    },
    updated(e, t) {
        const s = e[Qc];
        t.oldValue !== t.value && (t.value && !t.oldValue ? fy(e, t) : t.value && t.oldValue ? At(t.value) && GW(t.value, s.options) : s == null || s.instance.close())
    },
    unmounted(e) {
        var t;
        (t = e[Qc]) == null || t.instance.close(),
            e[Qc] = null
    }
}
    , m_ = ["success", "info", "warning", "error"]
    , Ys = bn({
    customClass: "",
    center: !1,
    dangerouslyUseHTMLString: !1,
    duration: 3e3,
    icon: void 0,
    id: "",
    message: "",
    onClose: void 0,
    showClose: !1,
    type: "info",
    plain: !1,
    offset: 16,
    zIndex: 0,
    grouping: !1,
    repeatNum: 1,
    appendTo: cs ? document.body : void 0
})
    , qW = gt({
    customClass: {
        type: String,
        default: Ys.customClass
    },
    center: {
        type: Boolean,
        default: Ys.center
    },
    dangerouslyUseHTMLString: {
        type: Boolean,
        default: Ys.dangerouslyUseHTMLString
    },
    duration: {
        type: Number,
        default: Ys.duration
    },
    icon: {
        type: Cs,
        default: Ys.icon
    },
    id: {
        type: String,
        default: Ys.id
    },
    message: {
        type: Ye([String, Object, Function]),
        default: Ys.message
    },
    onClose: {
        type: Ye(Function),
        default: Ys.onClose
    },
    showClose: {
        type: Boolean,
        default: Ys.showClose
    },
    type: {
        type: String,
        values: m_,
        default: Ys.type
    },
    plain: {
        type: Boolean,
        default: Ys.plain
    },
    offset: {
        type: Number,
        default: Ys.offset
    },
    zIndex: {
        type: Number,
        default: Ys.zIndex
    },
    grouping: {
        type: Boolean,
        default: Ys.grouping
    },
    repeatNum: {
        type: Number,
        default: Ys.repeatNum
    }
})
    , KW = {
    destroy: () => !0
}
    , Gn = Bu([])
    , ZW = e => {
    const t = Gn.findIndex(o => o.id === e)
        , s = Gn[t];
    let a;
    return t > 0 && (a = Gn[t - 1]),
        {
            current: s,
            prev: a
        }
}
    , JW = e => {
    const {prev: t} = ZW(e);
    return t ? t.vm.exposed.bottom.value : 0
}
    , QW = (e, t) => Gn.findIndex(a => a.id === e) > 0 ? 16 : t
    , eU = Ce({
    name: "ElMessage"
})
    , tU = Ce({
    ...eU,
    props: qW,
    emits: KW,
    setup(e, {expose: t}) {
        const s = e
            , {Close: a} = Gp
            , {ns: o, zIndex: l} = Up("message")
            , {currentZIndex: u, nextZIndex: p} = l
            , g = Se()
            , y = Se(!1)
            , v = Se(0);
        let w;
        const C = re(() => s.type ? s.type === "error" ? "danger" : s.type : "info")
            , T = re(() => {
                const G = s.type;
                return {
                    [o.bm("icon", G)]: G && uo[G]
                }
            }
        )
            , I = re(() => s.icon || uo[s.type] || "")
            , A = re(() => JW(s.id))
            , R = re(() => QW(s.id, s.offset) + A.value)
            , P = re(() => v.value + R.value)
            , M = re(() => ({
            top: `${R.value}px`,
            zIndex: u.value
        }));

        function O() {
            s.duration !== 0 && ({stop: w} = Fl(() => {
                    $()
                }
                , s.duration))
        }

        function F() {
            w == null || w()
        }

        function $() {
            y.value = !1
        }

        function V({code: G}) {
            G === wt.esc && $()
        }

        return $t(() => {
                O(),
                    p(),
                    y.value = !0
            }
        ),
            Ke(() => s.repeatNum, () => {
                    F(),
                        O()
                }
            ),
            cn(document, "keydown", V),
            sn(g, () => {
                    v.value = g.value.getBoundingClientRect().height
                }
            ),
            t({
                visible: y,
                bottom: P,
                close: $
            }),
            (G, ie) => (Z(),
                Te(fn, {
                    name: D(o).b("fade"),
                    onBeforeLeave: G.onClose,
                    onAfterLeave: te => G.$emit("destroy"),
                    persisted: ""
                }, {
                    default: se(() => [_t(U("div", {
                        id: G.id,
                        ref_key: "messageRef",
                        ref: g,
                        class: he([D(o).b(), {
                            [D(o).m(G.type)]: G.type
                        }, D(o).is("center", G.center), D(o).is("closable", G.showClose), D(o).is("plain", G.plain), G.customClass]),
                        style: kt(D(M)),
                        role: "alert",
                        onMouseenter: F,
                        onMouseleave: O
                    }, [G.repeatNum > 1 ? (Z(),
                        Te(D(uB), {
                            key: 0,
                            value: G.repeatNum,
                            type: D(C),
                            class: he(D(o).e("badge"))
                        }, null, 8, ["value", "type", "class"])) : ke("v-if", !0), D(I) ? (Z(),
                        Te(D(Mt), {
                            key: 1,
                            class: he([D(o).e("icon"), D(T)])
                        }, {
                            default: se(() => [(Z(),
                                Te(Vt(D(I))))]),
                            _: 1
                        }, 8, ["class"])) : ke("v-if", !0), De(G.$slots, "default", {}, () => [G.dangerouslyUseHTMLString ? (Z(),
                        ye(Ct, {
                            key: 1
                        }, [ke(" Caution here, message could've been compromised, never use user's input as message "), U("p", {
                            class: he(D(o).e("content")),
                            innerHTML: G.message
                        }, null, 10, ["innerHTML"])], 2112)) : (Z(),
                        ye("p", {
                            key: 0,
                            class: he(D(o).e("content"))
                        }, me(G.message), 3))]), G.showClose ? (Z(),
                        Te(D(Mt), {
                            key: 2,
                            class: he(D(o).e("closeBtn")),
                            onClick: Ot($, ["stop"])
                        }, {
                            default: se(() => [ae(D(a))]),
                            _: 1
                        }, 8, ["class", "onClick"])) : ke("v-if", !0)], 46, ["id"]), [[ss, y.value]])]),
                    _: 3
                }, 8, ["name", "onBeforeLeave", "onAfterLeave"]))
    }
});
var sU = ot(tU, [["__file", "message.vue"]]);
let nU = 1;
const v_ = e => {
        const t = !e || pt(e) || Hs(e) || nt(e) ? {
            message: e
        } : e
            , s = {
            ...Ys,
            ...t
        };
        if (!s.appendTo)
            s.appendTo = document.body;
        else if (pt(s.appendTo)) {
            let a = document.querySelector(s.appendTo);
            Qn(a) || (a = document.body),
                s.appendTo = a
        }
        return zs(pi.grouping) && !s.grouping && (s.grouping = pi.grouping),
        ts(pi.duration) && s.duration === 3e3 && (s.duration = pi.duration),
        ts(pi.offset) && s.offset === 16 && (s.offset = pi.offset),
        zs(pi.showClose) && !s.showClose && (s.showClose = pi.showClose),
            s
    }
    , iU = e => {
        const t = Gn.indexOf(e);
        if (t === -1)
            return;
        Gn.splice(t, 1);
        const {handler: s} = e;
        s.close()
    }
    , aU = ({appendTo: e, ...t}, s) => {
        const a = `message_${nU++}`
            , o = t.onClose
            , l = document.createElement("div")
            , u = {
            ...t,
            id: a,
            onClose: () => {
                o == null || o(),
                    iU(v)
            }
            ,
            onDestroy: () => {
                so(null, l)
            }
        }
            , p = ae(sU, u, nt(u.message) || Hs(u.message) ? {
            default: nt(u.message) ? u.message : () => u.message
        } : null);
        p.appContext = s || vo._context,
            so(p, l),
            e.appendChild(l.firstElementChild);
        const g = p.component
            , v = {
            id: a,
            vnode: p,
            vm: g,
            handler: {
                close: () => {
                    g.exposed.visible.value = !1
                }
            },
            props: p.component.props
        };
        return v
    }
    , vo = (e = {}, t) => {
        if (!cs)
            return {
                close: () => {
                }
            };
        const s = v_(e);
        if (s.grouping && Gn.length) {
            const o = Gn.find(({vnode: l}) => {
                    var u;
                    return ((u = l.props) == null ? void 0 : u.message) === s.message
                }
            );
            if (o)
                return o.props.repeatNum += 1,
                    o.props.type = s.type,
                    o.handler
        }
        if (ts(pi.max) && Gn.length >= pi.max)
            return {
                close: () => {
                }
            };
        const a = aU(s, t);
        return Gn.push(a),
            a.handler
    }
;
m_.forEach(e => {
        vo[e] = (t = {}, s) => {
            const a = v_(t);
            return vo({
                ...a,
                type: e
            }, s)
        }
    }
);

function rU(e) {
    for (const t of Gn)
        (!e || e === t.props.type) && t.handler.close()
}

vo.closeAll = rU;
vo._context = null;
const bi = C3(vo, "$message")
    , Tf = "_trap-focus-children"
    , ja = []
    , py = e => {
    if (ja.length === 0)
        return;
    const t = ja[ja.length - 1][Tf];
    if (t.length > 0 && e.code === wt.tab) {
        if (t.length === 1) {
            e.preventDefault(),
            document.activeElement !== t[0] && t[0].focus();
            return
        }
        const s = e.shiftKey
            , a = e.target === t[0]
            , o = e.target === t[t.length - 1];
        a && s && (e.preventDefault(),
            t[t.length - 1].focus()),
        o && !s && (e.preventDefault(),
            t[0].focus())
    }
}
    , oU = {
    beforeMount(e) {
        e[Tf] = kb(e),
            ja.push(e),
        ja.length <= 1 && document.addEventListener("keydown", py)
    },
    updated(e) {
        xt(() => {
                e[Tf] = kb(e)
            }
        )
    },
    unmounted() {
        ja.shift(),
        ja.length === 0 && document.removeEventListener("keydown", py)
    }
}
    , lU = Ce({
    name: "ElMessageBox",
    directives: {
        TrapFocus: oU
    },
    components: {
        ElButton: _n,
        ElFocusTrap: ng,
        ElInput: Kp,
        ElOverlay: RS,
        ElIcon: Mt,
        ...Gp
    },
    inheritAttrs: !1,
    props: {
        buttonSize: {
            type: String,
            validator: s_
        },
        modal: {
            type: Boolean,
            default: !0
        },
        lockScroll: {
            type: Boolean,
            default: !0
        },
        showClose: {
            type: Boolean,
            default: !0
        },
        closeOnClickModal: {
            type: Boolean,
            default: !0
        },
        closeOnPressEscape: {
            type: Boolean,
            default: !0
        },
        closeOnHashChange: {
            type: Boolean,
            default: !0
        },
        center: Boolean,
        draggable: Boolean,
        overflow: Boolean,
        roundButton: {
            default: !1,
            type: Boolean
        },
        container: {
            type: String,
            default: "body"
        },
        boxType: {
            type: String,
            default: ""
        }
    },
    emits: ["vanish", "action"],
    setup(e, {emit: t}) {
        const {locale: s, zIndex: a, ns: o, size: l} = Up("message-box", re(() => e.buttonSize))
            , {t: u} = s
            , {nextZIndex: p} = a
            , g = Se(!1)
            , y = ys({
            autofocus: !0,
            beforeClose: null,
            callback: null,
            cancelButtonText: "",
            cancelButtonClass: "",
            confirmButtonText: "",
            confirmButtonClass: "",
            customClass: "",
            customStyle: {},
            dangerouslyUseHTMLString: !1,
            distinguishCancelAndClose: !1,
            icon: "",
            closeIcon: "",
            inputPattern: null,
            inputPlaceholder: "",
            inputType: "text",
            inputValue: "",
            inputValidator: void 0,
            inputErrorMessage: "",
            message: "",
            modalFade: !0,
            modalClass: "",
            showCancelButton: !1,
            showConfirmButton: !0,
            type: "",
            title: void 0,
            showInput: !1,
            action: "",
            confirmButtonLoading: !1,
            cancelButtonLoading: !1,
            confirmButtonLoadingIcon: vl(Bl),
            cancelButtonLoadingIcon: vl(Bl),
            confirmButtonDisabled: !1,
            editorErrorMessage: "",
            validateError: !1,
            zIndex: p()
        })
            , v = re(() => {
                const J = y.type;
                return {
                    [o.bm("icon", J)]: J && uo[J]
                }
            }
        )
            , w = Nn()
            , C = Nn()
            , T = re(() => {
                const J = y.type;
                return y.icon || J && uo[J] || ""
            }
        )
            , I = re(() => !!y.message)
            , A = Se()
            , R = Se()
            , P = Se()
            , M = Se()
            , O = Se()
            , F = re(() => y.confirmButtonClass);
        Ke(() => y.inputValue, async J => {
                await xt(),
                e.boxType === "prompt" && J && oe()
            }
            , {
                immediate: !0
            }),
            Ke(() => g.value, J => {
                    var ue, fe;
                    J && (e.boxType !== "prompt" && (y.autofocus ? P.value = (fe = (ue = O.value) == null ? void 0 : ue.$el) != null ? fe : A.value : P.value = A.value),
                        y.zIndex = p()),
                    e.boxType === "prompt" && (J ? xt().then(() => {
                            var Me;
                            M.value && M.value.$el && (y.autofocus ? P.value = (Me = ve()) != null ? Me : A.value : P.value = A.value)
                        }
                    ) : (y.editorErrorMessage = "",
                        y.validateError = !1))
                }
            );
        const $ = re(() => e.draggable)
            , V = re(() => e.overflow);
        FS(A, R, $, V),
            $t(async () => {
                    await xt(),
                    e.closeOnHashChange && window.addEventListener("hashchange", G)
                }
            ),
            us(() => {
                    e.closeOnHashChange && window.removeEventListener("hashchange", G)
                }
            );

        function G() {
            g.value && (g.value = !1,
                xt(() => {
                        y.action && t("action", y.action)
                    }
                ))
        }

        const ie = () => {
                e.closeOnClickModal && le(y.distinguishCancelAndClose ? "close" : "cancel")
            }
            , te = mg(ie)
            , ne = J => {
                if (y.inputType !== "textarea")
                    return J.preventDefault(),
                        le("confirm")
            }
            , le = J => {
                var ue;
                e.boxType === "prompt" && J === "confirm" && !oe() || (y.action = J,
                    y.beforeClose ? (ue = y.beforeClose) == null || ue.call(y, J, y, G) : G())
            }
            , oe = () => {
                if (e.boxType === "prompt") {
                    const J = y.inputPattern;
                    if (J && !J.test(y.inputValue || ""))
                        return y.editorErrorMessage = y.inputErrorMessage || u("el.messagebox.error"),
                            y.validateError = !0,
                            !1;
                    const ue = y.inputValidator;
                    if (nt(ue)) {
                        const fe = ue(y.inputValue);
                        if (fe === !1)
                            return y.editorErrorMessage = y.inputErrorMessage || u("el.messagebox.error"),
                                y.validateError = !0,
                                !1;
                        if (pt(fe))
                            return y.editorErrorMessage = fe,
                                y.validateError = !0,
                                !1
                    }
                }
                return y.editorErrorMessage = "",
                    y.validateError = !1,
                    !0
            }
            , ve = () => {
                var J, ue;
                const fe = (J = M.value) == null ? void 0 : J.$refs;
                return (ue = fe == null ? void 0 : fe.input) != null ? ue : fe == null ? void 0 : fe.textarea
            }
            , be = () => {
                le("close")
            }
            , de = () => {
                e.closeOnPressEscape && be()
            }
        ;
        return e.lockScroll && $S(g),
            {
                ...ai(y),
                ns: o,
                overlayEvent: te,
                visible: g,
                hasMessage: I,
                typeClass: v,
                contentId: w,
                inputId: C,
                btnSize: l,
                iconComponent: T,
                confirmButtonClasses: F,
                rootRef: A,
                focusStartRef: P,
                headerRef: R,
                inputRef: M,
                confirmRef: O,
                doClose: G,
                handleClose: be,
                onCloseRequested: de,
                handleWrapperClick: ie,
                handleInputEnter: ne,
                handleAction: le,
                t: u
            }
    }
});

function cU(e, t, s, a, o, l) {
    const u = Bt("el-icon")
        , p = Bt("el-input")
        , g = Bt("el-button")
        , y = Bt("el-focus-trap")
        , v = Bt("el-overlay");
    return Z(),
        Te(fn, {
            name: "fade-in-linear",
            onAfterLeave: w => e.$emit("vanish"),
            persisted: ""
        }, {
            default: se(() => [_t(ae(v, {
                "z-index": e.zIndex,
                "overlay-class": [e.ns.is("message-box"), e.modalClass],
                mask: e.modal
            }, {
                default: se(() => [U("div", {
                    role: "dialog",
                    "aria-label": e.title,
                    "aria-modal": "true",
                    "aria-describedby": e.showInput ? void 0 : e.contentId,
                    class: he(`${e.ns.namespace.value}-overlay-message-box`),
                    onClick: e.overlayEvent.onClick,
                    onMousedown: e.overlayEvent.onMousedown,
                    onMouseup: e.overlayEvent.onMouseup
                }, [ae(y, {
                    loop: "",
                    trapped: e.visible,
                    "focus-trap-el": e.rootRef,
                    "focus-start-el": e.focusStartRef,
                    onReleaseRequested: e.onCloseRequested
                }, {
                    default: se(() => [U("div", {
                        ref: "rootRef",
                        class: he([e.ns.b(), e.customClass, e.ns.is("draggable", e.draggable), {
                            [e.ns.m("center")]: e.center
                        }]),
                        style: kt(e.customStyle),
                        tabindex: "-1",
                        onClick: Ot(() => {
                            }
                            , ["stop"])
                    }, [e.title !== null && e.title !== void 0 ? (Z(),
                        ye("div", {
                            key: 0,
                            ref: "headerRef",
                            class: he([e.ns.e("header"), {
                                "show-close": e.showClose
                            }])
                        }, [U("div", {
                            class: he(e.ns.e("title"))
                        }, [e.iconComponent && e.center ? (Z(),
                            Te(u, {
                                key: 0,
                                class: he([e.ns.e("status"), e.typeClass])
                            }, {
                                default: se(() => [(Z(),
                                    Te(Vt(e.iconComponent)))]),
                                _: 1
                            }, 8, ["class"])) : ke("v-if", !0), U("span", null, me(e.title), 1)], 2), e.showClose ? (Z(),
                            ye("button", {
                                key: 0,
                                type: "button",
                                class: he(e.ns.e("headerbtn")),
                                "aria-label": e.t("el.messagebox.close"),
                                onClick: w => e.handleAction(e.distinguishCancelAndClose ? "close" : "cancel"),
                                onKeydown: vn(Ot(w => e.handleAction(e.distinguishCancelAndClose ? "close" : "cancel"), ["prevent"]), ["enter"])
                            }, [ae(u, {
                                class: he(e.ns.e("close"))
                            }, {
                                default: se(() => [(Z(),
                                    Te(Vt(e.closeIcon || "close")))]),
                                _: 1
                            }, 8, ["class"])], 42, ["aria-label", "onClick", "onKeydown"])) : ke("v-if", !0)], 2)) : ke("v-if", !0), U("div", {
                        id: e.contentId,
                        class: he(e.ns.e("content"))
                    }, [U("div", {
                        class: he(e.ns.e("container"))
                    }, [e.iconComponent && !e.center && e.hasMessage ? (Z(),
                        Te(u, {
                            key: 0,
                            class: he([e.ns.e("status"), e.typeClass])
                        }, {
                            default: se(() => [(Z(),
                                Te(Vt(e.iconComponent)))]),
                            _: 1
                        }, 8, ["class"])) : ke("v-if", !0), e.hasMessage ? (Z(),
                        ye("div", {
                            key: 1,
                            class: he(e.ns.e("message"))
                        }, [De(e.$slots, "default", {}, () => [e.dangerouslyUseHTMLString ? (Z(),
                            Te(Vt(e.showInput ? "label" : "p"), {
                                key: 1,
                                for: e.showInput ? e.inputId : void 0,
                                innerHTML: e.message
                            }, null, 8, ["for", "innerHTML"])) : (Z(),
                            Te(Vt(e.showInput ? "label" : "p"), {
                                key: 0,
                                for: e.showInput ? e.inputId : void 0
                            }, {
                                default: se(() => [at(me(e.dangerouslyUseHTMLString ? "" : e.message), 1)]),
                                _: 1
                            }, 8, ["for"]))])], 2)) : ke("v-if", !0)], 2), _t(U("div", {
                        class: he(e.ns.e("input"))
                    }, [ae(p, {
                        id: e.inputId,
                        ref: "inputRef",
                        modelValue: e.inputValue,
                        "onUpdate:modelValue": w => e.inputValue = w,
                        type: e.inputType,
                        placeholder: e.inputPlaceholder,
                        "aria-invalid": e.validateError,
                        class: he({
                            invalid: e.validateError
                        }),
                        onKeydown: vn(e.handleInputEnter, ["enter"])
                    }, null, 8, ["id", "modelValue", "onUpdate:modelValue", "type", "placeholder", "aria-invalid", "class", "onKeydown"]), U("div", {
                        class: he(e.ns.e("errormsg")),
                        style: kt({
                            visibility: e.editorErrorMessage ? "visible" : "hidden"
                        })
                    }, me(e.editorErrorMessage), 7)], 2), [[ss, e.showInput]])], 10, ["id"]), U("div", {
                        class: he(e.ns.e("btns"))
                    }, [e.showCancelButton ? (Z(),
                        Te(g, {
                            key: 0,
                            loading: e.cancelButtonLoading,
                            "loading-icon": e.cancelButtonLoadingIcon,
                            class: he([e.cancelButtonClass]),
                            round: e.roundButton,
                            size: e.btnSize,
                            onClick: w => e.handleAction("cancel"),
                            onKeydown: vn(Ot(w => e.handleAction("cancel"), ["prevent"]), ["enter"])
                        }, {
                            default: se(() => [at(me(e.cancelButtonText || e.t("el.messagebox.cancel")), 1)]),
                            _: 1
                        }, 8, ["loading", "loading-icon", "class", "round", "size", "onClick", "onKeydown"])) : ke("v-if", !0), _t(ae(g, {
                        ref: "confirmRef",
                        type: "primary",
                        loading: e.confirmButtonLoading,
                        "loading-icon": e.confirmButtonLoadingIcon,
                        class: he([e.confirmButtonClasses]),
                        round: e.roundButton,
                        disabled: e.confirmButtonDisabled,
                        size: e.btnSize,
                        onClick: w => e.handleAction("confirm"),
                        onKeydown: vn(Ot(w => e.handleAction("confirm"), ["prevent"]), ["enter"])
                    }, {
                        default: se(() => [at(me(e.confirmButtonText || e.t("el.messagebox.confirm")), 1)]),
                        _: 1
                    }, 8, ["loading", "loading-icon", "class", "round", "disabled", "size", "onClick", "onKeydown"]), [[ss, e.showConfirmButton]])], 2)], 14, ["onClick"])]),
                    _: 3
                }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onReleaseRequested"])], 42, ["aria-label", "aria-describedby", "onClick", "onMousedown", "onMouseup"])]),
                _: 3
            }, 8, ["z-index", "overlay-class", "mask"]), [[ss, e.visible]])]),
            _: 3
        }, 8, ["onAfterLeave"])
}

var uU = ot(lU, [["render", cU], ["__file", "index.vue"]]);
const Ul = new Map
    , dU = e => {
        let t = document.body;
        return e.appendTo && (pt(e.appendTo) && (t = document.querySelector(e.appendTo)),
        Qn(e.appendTo) && (t = e.appendTo),
        Qn(t) || (t = document.body)),
            t
    }
    , hU = (e, t, s = null) => {
        const a = ae(uU, e, nt(e.message) || Hs(e.message) ? {
            default: nt(e.message) ? e.message : () => e.message
        } : null);
        return a.appContext = s,
            so(a, t),
            dU(e).appendChild(t.firstElementChild),
            a.component
    }
    , fU = () => document.createElement("div")
    , pU = (e, t) => {
        const s = fU();
        e.onVanish = () => {
            so(null, s),
                Ul.delete(o)
        }
            ,
            e.onAction = l => {
                const u = Ul.get(o);
                let p;
                e.showInput ? p = {
                    value: o.inputValue,
                    action: l
                } : p = l,
                    e.callback ? e.callback(p, a.proxy) : l === "cancel" || l === "close" ? e.distinguishCancelAndClose && l !== "cancel" ? u.reject("close") : u.reject("cancel") : u.resolve(p)
            }
        ;
        const a = hU(e, s, t)
            , o = a.proxy;
        for (const l in e)
            Wt(e, l) && !Wt(o.$props, l) && (l === "closeIcon" && At(e[l]) ? o[l] = vl(e[l]) : o[l] = e[l]);
        return o.visible = !0,
            o
    }
;

function Lo(e, t = null) {
    if (!cs)
        return Promise.reject();
    let s;
    return pt(e) || Hs(e) ? e = {
        message: e
    } : s = e.callback,
        new Promise((a, o) => {
                const l = pU(e, t ?? Lo._context);
                Ul.set(l, {
                    options: e,
                    callback: s,
                    resolve: a,
                    reject: o
                })
            }
        )
}

const gU = ["alert", "confirm", "prompt"]
    , mU = {
    alert: {
        closeOnPressEscape: !1,
        closeOnClickModal: !1
    },
    confirm: {
        showCancelButton: !0
    },
    prompt: {
        showCancelButton: !0,
        showInput: !0
    }
};
gU.forEach(e => {
        Lo[e] = vU(e)
    }
);

function vU(e) {
    return (t, s, a, o) => {
        let l = "";
        return At(s) ? (a = s,
            l = "") : jn(s) ? l = "" : l = s,
            Lo(Object.assign({
                title: l,
                message: t,
                type: "",
                ...mU[e]
            }, a, {
                boxType: e
            }), o)
    }
}

Lo.close = () => {
    Ul.forEach((e, t) => {
            t.doClose()
        }
    ),
        Ul.clear()
}
;
Lo._context = null;
const ha = Lo;
ha.install = e => {
    ha._context = e._context,
        e.config.globalProperties.$msgbox = ha,
        e.config.globalProperties.$messageBox = ha,
        e.config.globalProperties.$alert = ha.alert,
        e.config.globalProperties.$confirm = ha.confirm,
        e.config.globalProperties.$prompt = ha.prompt
}
;
const bU = ha
    , lr = e => {
        bi({
            message: e,
            type: "error",
            showClose: !0,
            duration: 3e3
        })
    }
    , yU = e => {
        e.response && console.error(e.response),
            e.message ? console.error(e.message) : console.error(e)
    }
    , xU = e => {
        var s, a;
        const {response: t} = e;
        return (s = t == null ? void 0 : t.data) != null && s.detail ? t.data.detail : typeof ((a = t == null ? void 0 : t.data) == null ? void 0 : a.err) == "string" && t.data.err.length > 0 ? t.data.err : t.status === 502 || t.status === 503 ? `${t.status} ${t.statusText}` : typeof (t == null ? void 0 : t.data) == "string" && t.data.length > 0 ? t.data : t != null && t.statusText ? `${t.status} ${t.statusText}` : e != null && e.message ? e.message : ""
    }
    , En = (e, t = !0) => {
        var s;
        if (console.log((s = e == null ? void 0 : e.config) == null ? void 0 : s.url),
            yU(e),
        e instanceof LM && t) {
            const a = xU(e);
            a && lr(a)
        }
    }
;
var wU = {
    VITE_APP_INSTALL_TYPE: "nand",
    VITE_APP_BUILD: "6cf07eed",
    VITE_APP_COLOR_SCHEME: "anthill",
    VITE_APP_PROD_SUB_PATH: "/",
    VITE_APP_MINER_MODEL: "s19pro",
    VITE_APP_PLATFORM: "xil",
    VITE_APP_BASE_URL: "/api/v1",
    VITE_APP_BUILDER_API_URL: "https://partner.anthill.farm",
    VITE_APP_FIRMWARE_VERSION: "1.2.6",
    BASE_URL: "/",
    MODE: "production",
    DEV: !1,
    PROD: !0,
    SSR: !1
};
const b_ = "vueuse-color-scheme";
DE({
    storageKey: b_
});
const SU = Ax(b_, "auto");
let eu = JSON.parse(localStorage.getItem("enableUIEffects"));
eu = eu !== null ? eu : !0;
const _U = {
    isLoading: !1,
    locale: Rt.global.locale,
    langDir: Rt.global.locale === "fa" ? "rtl" : "ltr",
    sidebarIsCollapsed: JSON.parse(localStorage.getItem("sidebarIsCollapsed")),
    sidebarIsUnhidden: !1,
    sidebarIsDark: JSON.parse(localStorage.getItem("sidebarIsDark")) || !1,
    enableUIEffects: eu,
    displayChipsNumber: JSON.parse(localStorage.getItem("displayChipsNumber")) || !1,
    infobarIsUnhidden: !1,
    isInfobarFixed: JSON.parse(localStorage.getItem("isInfobarFixed")),
    helpbarIsShow: !1,
    dialogUnLockIsVisible: !1,
    dialogLockIsVisible: !1,
    dialogUpdateIsVisible: !1,
    dialogReleaseNotes: !1,
    dialogIntegrationIsVisible: !1,
    dialogSupportIsVisible: !1,
    dialogWarrantyIsVisible: !1,
    theme: SU,
    themeListenerChecker: !1,
    coolingConsts: null,
    minFanConsts: null,
    overclock: null,
    timezone: null,
    timezoneOffset: null,
    timezones: null,
    chartsTimeSelection: 24,
    dialogTunerLogsIsVisible: !1,
    dialogTestNetworkIsVisible: !1,
    dialogReportIsVisible: !1,
    dialogRestartIsVisible: !1,
    dialogRestartType: "restart",
    dialogBugIsVisible: !1,
    cloningBackup: null,
    editLayout: !1,
    customLayout: null,
    isColumnMode: !1,
    warrantyStatus: null,
    isWarrantyLoading: !1,
    isAnimationWarranty: !0,
    isWarrantyLimitation: null,
    isDebug: wU.VITE_APP_DEBUG === "true" || JSON.parse(localStorage.getItem("debug")) || !1
}
    , kU = {}
    , CU = {
    locale(e, t) {
        e.locale = t,
            e.langDir = t === "fa" ? "rtl" : "ltr",
            Rt.global.locale = t,
            localStorage.setItem("locale", JSON.stringify(t))
    },
    sidebarIsDark(e, t) {
        e.sidebarIsDark = t,
            localStorage.setItem("sidebarIsDark", JSON.stringify(t))
    },
    sidebarIsCollapsed(e, t) {
        e.sidebarIsCollapsed = t,
            localStorage.setItem("sidebarIsCollapsed", JSON.stringify(t))
    },
    isInfobarFixed(e, t) {
        e.isInfobarFixed = t,
            localStorage.setItem("isInfobarFixed", JSON.stringify(t))
    },
    enableUIEffects(e, t) {
        e.enableUIEffects = t,
            localStorage.setItem("enableUIEffects", JSON.stringify(t))
    },
    displayChipsNumber(e, t) {
        e.displayChipsNumber = t,
            localStorage.setItem("displayChipsNumber", JSON.stringify(t))
    },
    isDebug(e, t) {
        e.isDebug = t,
            t ? localStorage.setItem("debug", JSON.stringify(t)) : localStorage.removeItem("debug")
    }
}
    , AU = {
    backupCloning({commit: e}, t) {
        e("cloningBackup", t)
    },
    async getData({commit: e, dispatch: t}) {
        e("isLoading", !0);
        try {
            const a = (await Gt.get("/ui")).data;
            e("coolingConsts", a.consts.cooling),
                e("minFanConsts", a.consts.cooling.fan_min_count || null),
                e("overclock", a.consts.overclock),
                e("timezone", a.timezone),
                e("timezoneOffset", Number(a.timezone.replace("GMT", "")) || 0),
                e("timezones", a.consts.timezones)
        } catch {
        } finally {
            e("isLoading", !1)
        }
    },
    async getCustomLayoutIfItNotLoaded({commit: e, state: t}) {
        if (t.customLayout == null) {
            e("customLayout", {}),
                e("isLoading", !0);
            try {
                const a = (await Gt.get("/layout")).data;
                if (a) {
                    const o = Object.keys(a);
                    (o.includes("lg") || o.includes("md") || o.includes("sm") || o.includes("xs") || o.includes("xss")) && e("customLayout", a)
                }
            } catch {
            } finally {
                e("isLoading", !1)
            }
        }
    },
    async adoptChangesInLayout({state: e, commit: t}, s) {
        const a = Object.assign(e.customLayout, s);
        await Gt.post("/settings", {
            layout: a
        }),
            t("customLayout", a)
    },
    async resetLayout({commit: e}) {
        await Gt.post("/settings", {
            layout: {}
        }),
            e("customLayout", {})
    },
    async activateWarranty({commit: e}) {
        try {
            const t = await Gt.post("/activate-warranty");
            t.status === 200 && t.data.success ? (e("warrantyStatus", t.data.warranty),
                e("isWarrantyLimitation", t.data.warranty === "active")) : lr(Rt.global.t("Warranty.activation.errorUnable"))
        } catch (t) {
            En(t)
        }
    },
    async warrantyUnlock({commit: e}) {
        e("isWarrantyLoading", !0);
        try {
            const t = await Gt.post("/cancel-warranty");
            t.status === 200 && t.data.success && e("isWarrantyLimitation", !1)
        } catch (t) {
            En(t)
        } finally {
            e("isWarrantyLoading", !1)
        }
    },
    openDialog({commit: e}, t) {
        let s = t;
        typeof t == "object" && t !== null && (s = t.dialog);
        let a = "";
        switch (s) {
            case "firmware":
                a = "dialogUpdateIsVisible";
                break;
            case "restart":
                a = "dialogRestartIsVisible",
                    e("dialogRestartType", t.type);
                break
        }
        e(a, !0)
    },
    changeTheme({state: e}, t) {
        e.theme = t
    },
    hideInfobar({state: e, commit: t}) {
        e.isInfobarFixed || t("infobarIsUnhidden", !1)
    }
}
    , EU = {
    state: _U,
    getters: kU,
    mutations: CU,
    actions: AU
}
    , ct = "s19pro";
var TU = {
    VITE_APP_INSTALL_TYPE: "nand",
    VITE_APP_BUILD: "6cf07eed",
    VITE_APP_COLOR_SCHEME: "anthill",
    VITE_APP_PROD_SUB_PATH: "/",
    VITE_APP_MINER_MODEL: "s19pro",
    VITE_APP_PLATFORM: "xil",
    VITE_APP_BASE_URL: "/api/v1",
    VITE_APP_BUILDER_API_URL: "https://partner.anthill.farm",
    VITE_APP_FIRMWARE_VERSION: "1.2.6",
    BASE_URL: "/",
    MODE: "production",
    DEV: !1,
    PROD: !0,
    SSR: !1
};
const IU = {
    timer: null,
    timerBeginTime: null,
    isFirstLoading: !0,
    isLoading: !1,
    status: null,
    statusTime: "",
    isApply: !1,
    isApplyReboot: !1,
    hr_average: "",
    hr_realtime: "",
    hr_nominal: "",
    hr_stock: "",
    hr_base_measure: "",
    chip_temp: "",
    pcb_temp: "",
    psu_temps: null,
    hasPsuPowerReading: !1,
    power_consumption: "",
    power_efficiency: "",
    hw_errors_percent: "",
    hw_errors: "",
    hr_error: "",
    devfee_percent: "",
    devfee: "",
    found_blocks: "",
    best_share: "",
    pools: [],
    chainChips: Array(3),
    plates: Array(3),
    emulatedPlates: Array(3),
    isEmulateStatus: !1,
    miner_type: "",
    miner_model: "",
    miner_full_model: "",
    platform: "",
    install_type: "",
    serial_number: "",
    compile_time: "",
    hostname: "",
    miner_name: "",
    os: "",
    firmware_name: "",
    firmware_version: "",
    build_name: "",
    build_uuid: "",
    file_system_version: "",
    dhcp: "",
    ip: "",
    netmask: "",
    gateway: "",
    dns: "",
    dns2: "",
    mac: "",
    mem_total: "",
    mem_used: 0,
    mem_used_percent: 0,
    mem_free: "",
    mem_free_percent: "",
    mem_buf: "",
    mem_buf_percent: "",
    fans: [],
    coolingMode: "",
    coolingValue: "",
    error_msg: "",
    minerDataIsNullTimes: 100,
    interval: 5e3,
    titlePath: "",
    performanceSummary: null
}
    , PU = {
    getData({state: e, dispatch: t}) {
        e.timer && t("clearInterval"),
            t("summary")
    },
    getPerformanceSummary({commit: e}) {
        Gt.get("/perf-summary").then(t => {
                t.data && e("performanceSummary", {
                    currentPreset: t.data.current_preset,
                    presetSwitcher: t.data.preset_switcher
                })
            }
        ).catch(t => {
                console.log("Failed to process /perf-summary response", t),
                    console.log("perf-summary response", t.response)
            }
        )
    },
    setInterval({state: e, dispatch: t}) {
        e.timer = setTimeout(() => {
                t("summary")
            }
            , e.interval)
    },
    clearInterval({state: e, commit: t}) {
        clearTimeout(e.timer),
            t("timerBeginTime", null)
    },
    resetTimer({commit: e, dispatch: t}, s) {
        if (t("clearInterval"),
            s) {
            const a = Number(s);
            Number.isInteger(a) && e("interval", s)
        }
        t("setInterval")
    },
    status({commit: e, dispatch: t, rootState: s}) {
        s.auth.isLoadingUnlock || Gt.get("/status", {
            timeout: 12e3
        }).then(a => {
                const o = a.data;
                e("status", o.miner_state),
                    e("error_msg", o.description || ""),
                    e("findMiner/value", o.find_miner, {
                        root: !0
                    }),
                    e("ui/warrantyStatus", o.warranty, {
                        root: !0
                    }),
                    e("ui/isWarrantyLimitation", o.warranty === "active", {
                        root: !0
                    }),
                    e("statusTime", o.miner_state_time),
                    e("isApply", o.restart_required || o.reboot_required),
                    e("isApplyReboot", o.reboot_required),
                !s.auth.isLoadingUnlock && s.auth.isAuth && !o.unlocked && (t("auth/outAuthRoute", {}, {
                    root: !0
                }),
                    t("auth/silentLock", {}, {
                        root: !0
                    })),
                o.unlock_timeout && t("auth/setUnLockMuchAttempts", o.unlock_timeout, {
                    root: !0
                })
            }
        ).catch(a => {
                console.log("Failed to process /status response", a),
                    console.log("status response", a.response),
                    e("status", "disconnect"),
                    e("statusTime", null)
            }
        )
    },
    summary({commit: e, state: t, getters: s, dispatch: a}) {
        e("isLoading", !0),
            Gt.get("/summary", {
                timeout: 15e3
            }).then(o => {
                    const {miner: l} = o.data;
                    if (l) {
                        const u = [];
                        for (let p of l.cooling.fans) {
                            const g = p.rpm
                                , y = p.max_rpm || 7e3
                                , v = Math.round(p.rpm / y * 100)
                                , w = v >= 20 && v <= 90 ? null : "exception"
                                , C = p.status;
                            u.push({
                                rpm: g,
                                max_rpm: y,
                                percent: v > 100 ? 100 : v,
                                color: w,
                                status: C
                            })
                        }
                        if (e("fans", u),
                            e("coolingMode", l.cooling.settings.mode.name),
                            e("coolingValue", `${l.cooling.fan_duty || 0}%`),
                            e("hr_average", l.hr_average),
                            e("hr_realtime", l.hr_realtime),
                            e("hr_nominal", l.hr_nominal),
                            e("hr_stock", l.hr_stock),
                            l.pcb_temp ? e("pcb_temp", `${l.pcb_temp.min}° – ${l.pcb_temp.max}°`) : e("pcb_temp", "0°–0°"),
                            l.chip_temp ? e("chip_temp", `${l.chip_temp.min}° – ${l.chip_temp.max}°`) : e("chip_temp", "0°–°"),
                            l.psu ? (e("psu_temps", l.psu.temps || null),
                                e("hasPsuPowerReading", !!l.psu.psu_power_metering)) : (e("psu_temps", null),
                                e("hasPsuPowerReading", !1)),
                            e("power_consumption", l.power_consumption),
                            e("power_efficiency", l.power_efficiency),
                            e("hw_errors_percent", l.hw_errors_percent),
                            e("hw_errors", l.hw_errors),
                            e("hr_error", l.hr_error),
                            e("devfee_percent", l.devfee_percent.toFixed(1)),
                            e("devfee", l.devfee),
                            e("found_blocks", l.found_blocks),
                            e("best_share", l.best_share),
                            e("pools", l.pools),
                            l.chains) {
                            let p = [];
                            if (s.isEmulateStatus)
                                for (let g = 0; g < s.totalChains; g++)
                                    p.push(t.emulatedPlates[g]);
                            else
                                p = l.chains.map(g => g);
                            e("plates", p)
                        } else
                            e("plates", Array(s.totalChains));
                        e("miner_type", l.miner_type),
                            e("minerDataIsNullTimes", 0)
                    } else
                        t.isFirstLoading || e("minerDataIsNullTimes", t.minerDataIsNullTimes + 1),
                            Gt.get("/info", {
                                timeout: 5e3
                            }).then(u => {
                                    const p = u.data;
                                    e("miner_type", `${p.miner} (${p.fw_name}  ${p.fw_version})`)
                                }
                            ).catch(u => {
                                    console.log("Failed to process /info response", u),
                                        console.log("info response", u.response)
                                }
                            );
                    e("interval", 5e3)
                }
            ).catch(o => {
                    var l;
                    console.log("Failed to process /summary response", o),
                        console.log("summary response", o.response),
                        e("status", "disconnect"),
                        e("statusTime", null),
                        e("interval", 1e4),
                        e("minerDataIsNullTimes", 100),
                    ((l = o == null ? void 0 : o.response) == null ? void 0 : l.status) !== 200 && lr(Rt.global.t("Errors.noLoop"))
                }
            ).finally(() => {
                    t.isFirstLoading && e("isFirstLoading", !1),
                        e("isLoading", !1),
                        a("setInterval"),
                        e("timerBeginTime", Date.now())
                }
            )
    },
    info({commit: e, state: t, getters: s, dispatch: a}) {
        Gt.get("/info", {
            timeout: 5e3
        }).then(o => {
                const l = o.data
                    , {system: u, system: {network_status: p}} = o.data;
                e("firmware_name", l.fw_name),
                    e("firmware_version", l.fw_version),
                    e("build_name", l.build_name),
                    e("build_uuid", l.build_uuid),
                    e("miner_full_model", l.miner),
                    e("miner_model", l.model),
                    e("platform", l.platform),
                    e("install_type", l.install_type),
                    e("serial_number", l.serial === "N/A" ? "" : l.serial),
                    e("compile_time", l.build_time),
                    e("hr_base_measure", l.hr_measure),
                    e("miner_name", u.miner_name),
                    e("os", u.os),
                    e("file_system_version", u.file_system_version),
                    e("mem_total", u.mem_total),
                    e("mem_free", u.mem_free),
                    e("mem_free_percent", u.mem_free_percent),
                    e("mem_buf", u.mem_buf),
                    e("mem_buf_percent", u.mem_buf_percent),
                    e("mem_used", u.mem_total - u.mem_free),
                    e("mem_used_percent", Math.round(100 * (u.mem_total - u.mem_free) / u.mem_total)),
                    e("hostname", p.hostname),
                    e("dhcp", p.dhcp),
                    e("ip", p.ip),
                    e("netmask", p.netmask),
                    e("gateway", p.gateway),
                    e("dns", p.dns[0]),
                    e("dns2", p.dns[1]),
                    e("mac", p.mac)
            }
        ).catch(o => {
                console.log("Failed to process /info response", o),
                    console.log("info response", o.response)
            }
        ).finally(() => {
                e("isLoading", !1)
            }
        )
    }
}
    , LU = {
    isEmulateStatus(e) {
        return e.isEmulateStatus && TU.NODE_ENV === "development"
    },
    minerDataIsNull(e) {
        return e.minerDataIsNullTimes >= 3
    },
    title(e) {
        return e.hostname
    },
    totalChains(e, t) {
        const s = e.miner_model || "s19pro";
        return s != null && s.includes("-hydro") && !t.isMinerS21HydroSeries && !t.isMinerS21PlusHydroSeries && !t.isMinerS21XPHydroSeries && !t.isMinerS19XPHydroSeries ? 4 : 3
    },
    getMinerModel(e) {
        return e.miner_full_model || e.miner_model || "s19pro"
    },
    getFirmwareVersion(e) {
        return e.firmware_version || "1.2.6"
    },
    isStableFirmwareVersion(e, t) {
        return t.getFirmwareVersion.indexOf("stable") > -1 || !!t.getFirmwareVersion.match(/^\d+\.\d+\.\d+$/)
    },
    minerSeries() {
        switch (ct) {
            case "l9":
                return "l9";
            case "l7":
                return "l7";
            case "t17":
            case "s17":
            case "t17plus":
            case "s17plus":
                return "x17";
            case "s21":
            case "t21":
            case "s21pro":
            case "s21plus":
            case "s21plus-hydro":
            case "s21-hydro":
            case "s21-imm":
            case "s21xp":
            case "s21xp-imm":
            case "s21xp-hydro":
                return "x21";
            case "t19":
            case "s19":
            case "s19i":
            case "s19l":
            case "s19-88":
            case "s19-88-aml":
            case "s19a":
            case "s19plus":
            case "s19apro":
            case "s19kpro":
            case "s19xp":
            case "s19xp-aml":
            case "s19xp-hydro":
            case "s19e-xp-hydro":
            case "s19j":
            case "s19j-xp":
            case "t19pro":
            case "t19pro-hydro":
            case "s19pro":
            case "s19-126":
            case "s19pro-a":
            case "t19-hydro":
            case "s19-hydro":
            case "s19pro-hydro":
            case "s19pro-plus-hydro":
            case "s19j-bb":
            case "s19j-plus":
            case "s19jpro":
            case "s19jpro-bb":
            case "s19jpro-bb-nand":
            case "s19jpro-aml":
            case "s19jpro-a-bb":
            case "s19jpro-a-aml":
            case "s19jpro-plus":
                return "x19";
            default:
                return console.error(`Unknown miner model: ${ct}`),
                    ""
        }
    },
    isMinerS21HydroSeries() {
        return ct === "s21-hydro"
    },
    isMinerS21PlusHydroSeries() {
        return ct === "s21plus-hydro"
    },
    isMinerS21XPHydroSeries() {
        return ct === "s21xp-hydro"
    },
    isMinerS19Series() {
        return ct === "s19l"
    },
    isMinerS19PlusSeries() {
        return ct === "s19plus"
    },
    isMinerS19ProSeries() {
        return ct === "s19pro"
    },
    isMinerS19126Series() {
        return ct === "s19-126"
    },
    isMinerS19HydroSeries() {
        return ct === "s19-hydro"
    },
    isMinerS19ProHydroSeries() {
        return ct === "s19pro-hydro"
    },
    isMinerS19ProHydro120Series() {
        return ct === "s19pro-hydro-120"
    },
    isMinerS19ProPlusHydroSeries() {
        return ct === "s19pro-plus-hydro"
    },
    isMinerS19XPHydroSeries() {
        return ct === "t19pro-hydro"
    },
    isMinerS19XPSeries() {
        return ct === "s19xp-aml"
    },
    isMinerS19ASeries() {
        return ct === "s19a"
    },
    isMinerS19AProSeries() {
        return ct === "s19apro"
    },
    isMinerS19KProSeries() {
        return ct === "s19kpro"
    },
    isMinerS19ISeries() {
        return ct === "s19i"
    },
    isMinerS19JSeries() {
        return ct === "s19j-bb"
    },
    isMinerS19JXPSeries() {
        return ct === "s19j-xp"
    },
    isMinerS19JPlusSeries() {
        return ct === "s19j-plus"
    },
    isMinerS19JProSeries() {
        return ct === "s19jpro-aml"
    },
    isMinerS19JProPlusSeries() {
        return ct === "s19jpro-plus"
    },
    isMinerS19JProASeries() {
        return ct === "s19jpro-a-aml"
    },
    isMinerS1988Series() {
        return ct === "s19-88-aml"
    },
    isMinerL7Series() {
        return ct === "l7"
    },
    isMinerL9Series() {
        return ct === "l9"
    },
    currentPreset(e) {
        var t;
        return (t = e.performanceSummary) == null ? void 0 : t.currentPreset
    },
    presetSwitcher(e) {
        var t;
        return (t = e.performanceSummary) == null ? void 0 : t.presetSwitcher
    }
}
    , MU = {
    state: IU,
    actions: PU,
    getters: LU
}
    , OU = {
    isAuth: JSON.parse(localStorage.getItem("isAuth")),
    token: JSON.parse(localStorage.getItem("token")),
    redirect: "",
    reOpenDialog: "",
    unLockMuchAttempts: {
        unlockTimeInSecs: 0,
        unlockTimeInUnix: 0,
        intervalID: void 0,
        isProcess: !1
    },
    isLoadingUnlock: !1,
    isLoadingLock: !1,
    isAnimationLock: !0,
    isAnimationUnlock: !0
};
let RU = {
    isAuth(e, t) {
        localStorage.setItem("isAuth", JSON.stringify(t)),
            e.isAuth = t
    },
    token(e, t) {
        localStorage.setItem("token", JSON.stringify(t)),
            e.token = t
    },
    setUnLockMuchAttempts(e, t) {
        e.unLockMuchAttempts.intervalID = t.intervalID,
            e.unLockMuchAttempts.unlockTimeInSecs = t.unlockTimeInSecs,
            e.unLockMuchAttempts.unlockTimeInUnix = t.unlockTimeInSecs * 1e3,
            e.unLockMuchAttempts.isProcess = t.isProcess
    },
    patchDiffUnLockMuchAttempts(e, t) {
        e.unLockMuchAttempts.unlockTimeInSecs = t.unlockTimeInSecs,
            e.unLockMuchAttempts.unlockTimeInUnix = t.unlockTimeInSecs * 1e3
    }
};
const NU = {
    setUnLockMuchAttempts({state: e, commit: t}, s) {
        if (e.unLockMuchAttempts.intervalID) {
            t("patchDiffUnLockMuchAttempts", {
                unlockTimeInSecs: s
            });
            return
        }
        const a = setInterval(() => {
                const o = e.unLockMuchAttempts.unlockTimeInSecs - 1;
                if (o <= 0) {
                    clearInterval(e.unLockMuchAttempts.intervalID),
                        t("setUnLockMuchAttempts", {
                            unlockTimeInSecs: 0,
                            intervalID: void 0,
                            isProcess: !1
                        });
                    return
                }
                t("patchDiffUnLockMuchAttempts", {
                    unlockTimeInSecs: o
                })
            }
            , 1e3);
        t("setUnLockMuchAttempts", {
            intervalID: a,
            unlockTimeInSecs: s,
            isProcess: !0
        })
    },
    unlockFromToolkit({commit: e}, t) {
        e("token", t),
            e("isAuth", !0)
    },
    async unlock({commit: e, state: t, dispatch: s}, a) {
        var o, l, u;
        if (!t.unLockMuchAttempts.isProcess) {
            e("isLoadingUnlock", !0);
            try {
                const p = await Gt.post("/unlock", {
                    pw: a
                });
                e("token", p.data.token),
                    e("isAuth", !0),
                t.redirect && (Jn.push(t.redirect),
                    e("redirect", "")),
                t.reOpenDialog && (s("ui/openDialog", t.reOpenDialog, {
                    root: !0
                }),
                    e("reOpenDialog", ""))
            } catch (p) {
                (l = (o = p == null ? void 0 : p.response) == null ? void 0 : o.data) != null && l.unlock_timeout && s("setUnLockMuchAttempts", p.response.data.unlock_timeout),
                    ((u = p.response) == null ? void 0 : u.status) === 403 ? lr(Rt.global.t("Form.errorMessages.wrongPassword")) : En(p)
            } finally {
                e("isLoadingUnlock", !1)
            }
        }
    },
    async lock({commit: e, dispatch: t}) {
        e("isLoadingLock", !0);
        try {
            await Gt.post("/lock"),
                e("token", ""),
                e("isAuth", !1),
                t("outAuthRoute")
        } finally {
            e("isLoadingLock", !1)
        }
    },
    silentLock({commit: e}) {
        e("token", ""),
            e("isAuth", !1)
    },
    rebootLock({commit: e, dispatch: t}) {
        t("silentLock"),
            t("outAuthRoute"),
            t("summary/resetTimer", 5e3, {
                root: !0
            }),
            e("summary/minerDataIsNullTimes", 100, {
                root: !0
            })
    },
    outAuthRoute({rootState: e}) {
        e.route.path !== "/dashboard" && Jn.push("/")
    }
}
    , DU = {
    state: OU,
    mutations: RU,
    actions: NU
}
    , FU = {
    isLoading: !1,
    chainStockInfo: null,
    minerStockInfo: null,
    psuModel: null,
    psuSerial: null,
    timer: null
}
    , $U = {
    async loadStockInfo({state: e, commit: t, dispatch: s}, a = !1) {
        var o;
        if (!(e.isLoading || e.chainStockInfo)) {
            t("isLoading", !0);
            try {
                const l = await Gt.get("/chains/factory-info");
                t("minerStockInfo", l.data),
                    t("chainStockInfo", (o = l.data) == null ? void 0 : o.chains),
                    t("psuModel", l.data.psu_model),
                    t("psuSerial", l.data.psu_serial),
                    t("timer", null)
            } catch {
            } finally {
                if (t("isLoading", !1),
                a && !e.chainStockInfo) {
                    const l = setTimeout(() => {
                            s("loadStockInfo")
                        }
                        , 1e4);
                    t("timer", l)
                }
            }
        }
    },
    clearScheduleTimer({state: e, commit: t}) {
        clearTimeout(e.timer),
            t("timer", null)
    }
}
    , BU = {
    state: FU,
    actions: $U
}
    , HU = "xil"
    , VU = "nand"
    , y_ = ["general", "pools", "cooling", "performance", "advanced", "security", "network"]
    , x_ = {}
    , w_ = {};
for (let e of y_)
    x_[e] = [],
        w_[e] = [];
const zU = {
    isLoadingGet: !1,
    isLoadingPut: !1,
    isLoadingRestart: !1,
    isLoadingChains: !1,
    tabs: y_,
    changes: x_,
    validation: w_,
    general: null,
    pools: null,
    cooling: null,
    performance: null,
    advanced: null,
    security: null,
    network: null,
    others: null,
    oldData: null,
    applyTrigger: 0
}
    , WU = {
    chipsPerDomain() {
        switch (ct) {
            case "s17":
                return 4;
            case "t17":
                return 3;
            case "s17plus":
                return 5;
            case "t17plus":
                return 4;
            case "l9":
            case "l7":
                return 5;
            case "t19":
            case "s19":
            case "s19l":
            case "s19i":
            case "s19-88":
            case "s19-88-aml":
            case "t19-hydro":
            case "s19-hydro":
            case "s19pro-hydro-120":
                return 2;
            case "s21pro":
            case "s21plus":
            case "s21plus-hydro":
                return 5;
            case "s19kpro":
            case "s21xp":
            case "s21xp-imm":
                return 7;
            case "s19a":
            case "s19plus":
            case "s21xp-hydro":
                return 8;
            case "s21":
            case "t21":
                return 9;
            case "s19apro":
            case "s19xp":
            case "s19xp-aml":
            case "s19j-xp":
                return 10;
            case "s21-hydro":
            case "s21-imm":
            case "s19xp-hydro":
            case "t19pro-hydro":
            case "s19e-xp-hydro":
                return 12;
            case "t19pro":
            case "s19j":
            case "s19j-plus":
            case "s19-126":
            case "s19pro":
            case "s19pro-a":
            case "s19pro-hydro":
            case "s19pro-plus-hydro":
            case "s19j-bb":
            case "s19jpro":
            case "s19jpro-bb":
            case "s19jpro-bb-nand":
            case "s19jpro-aml":
            case "s19jpro-a":
            case "s19jpro-a-bb":
            case "s19jpro-a-aml":
            case "s19jpro-plus":
                return 3;
            default:
                return 4
        }
    },
    domainsPerColumn(e, t) {
        if (t.isMinerS21PlusHydroSeries)
            return [9, 10];
        if (t.isMinerS19Series)
            return [9, 10, 10, 9];
        if (t.isMinerS19ProSeries)
            return [9, 10, 10, 9];
        if (t.isMinerS19HydroSeries)
            return [13, 13, 13, 13];
        if (t.isMinerS19ProHydro120Series)
            return [15, 15, 15, 15];
        if (t.isMinerS19ProHydroSeries)
            return [15, 15, 15, 15];
        if (t.isMinerS19ProPlusHydroSeries)
            return [15, 15, 15, 15];
        if (t.isMinerS1988Series)
            return [11, 11, 11, 11];
        if (t.isMinerS19126Series)
            return [10, 11, 11, 10];
        if (t.isMinerS19ISeries)
            return [10, 10, 10, 10];
        if (t.isMinerS19JSeries)
            return [9, 9, 9, 9];
        if (t.isMinerS19JPlusSeries)
            return [9, 9, 9, 9];
        if (t.isMinerS19JProSeries)
            return [10, 11, 11, 10];
        if (t.isMinerS19JProASeries)
            return [10, 11, 11, 10];
        if (t.isMinerS19JProPlusSeries)
            return [10, 10, 10, 10];
        if (t.isMinerL9Series)
            return [11, 11];
        if (t.isMinerL7Series)
            return [12, 12];
        switch (ct) {
            default:
                return [-1]
        }
    },
    columnsOnBoard(e, t) {
        return t.domainsPerColumn.length
    },
    voltModifier() {
        return 100
    },
    isChanged(e) {
        return Object.keys(e.changes).some(t => e.changes[t].length)
    },
    isNand() {
        return VU === "nand"
    },
    platformType() {
        return HU
    },
    isMinerL9Series() {
        return ct === "l9"
    },
    isMinerL7Series() {
        return ct === "l7"
    },
    isMinerAnyX17Series() {
        return ct.match(/^.17/gi)
    },
    isMinerS21Series() {
        return ct === "t21"
    },
    isMinerS21ProSeries() {
        return ct === "s21pro"
    },
    isMinerS21PlusSeries() {
        return ct === "s21plus"
    },
    isMinerS21PlusHydroSeries() {
        return ct === "s21plus-hydro"
    },
    isMinerS21HydroSeries() {
        return ct === "s21-hydro"
    },
    isMinerS21ImmersionSeries() {
        return ct === "s21-imm"
    },
    isMinerS21XPSeries() {
        return ct === "s21xp"
    },
    isMinerS21XPHydroSeries() {
        return ct === "s21xp-hydro"
    },
    isMinerS21XPImmersionSeries() {
        return ct === "s21xp-imm"
    },
    isMinerS19Series() {
        return ct === "s19l"
    },
    isMinerS19PlusSeries() {
        return ct === "s19plus"
    },
    isMinerS19ProSeries() {
        return ct === "s19pro"
    },
    isMinerS19126Series() {
        return ct === "s19-126"
    },
    isMinerS19ISeries() {
        return ct === "s19i"
    },
    isMinerS19JSeries() {
        return ct === "s19j-bb"
    },
    isMinerS19JXPSeries() {
        return ct === "s19j-xp"
    },
    isMinerS19JPlusSeries() {
        return ct === "s19j-plus"
    },
    isMinerS19JProSeries() {
        return ct === "s19jpro-aml"
    },
    isMinerS19JProPlusSeries() {
        return ct === "s19jpro-plus"
    },
    isMinerS19JProASeries() {
        return ct === "s19jpro-a-aml"
    },
    isMinerS1988Series() {
        return ct === "s19-88-aml"
    },
    isMinerS19ASeries() {
        return ct === "s19a"
    },
    isMinerS19AProSeries() {
        return ct === "s19apro"
    },
    isMinerS19KProSeries() {
        return ct === "s19kpro"
    },
    isMinerS19XPSeries() {
        return ct === "s19xp-aml"
    },
    isMinerS19HydroSeries() {
        return ct === "s19-hydro"
    },
    isMinerS19ProHydroSeries() {
        return ct === "s19pro-hydro"
    },
    isMinerS19ProHydro120Series() {
        return ct === "s19pro-hydro-120"
    },
    isMinerS19ProPlusHydroSeries() {
        return ct === "s19pro-plus-hydro"
    },
    isMinerS19XPHydroSeries() {
        return ct === "s19e-xp-hydro"
    },
    isMinerAnyX21Series(e, t) {
        return ct.match(/^.21/gi)
    },
    isMinerAnyX19Series(e, t) {
        return t.isMinerS19Series || t.isMinerS19PlusSeries || t.isMinerS19ProSeries || t.isMinerS19HydroSeries || t.isMinerS19ProHydroSeries || t.isMinerS19ProHydro120Series || t.isMinerS19ProPlusHydroSeries || t.isMinerS19XPHydroSeries || t.isMinerS19ISeries || t.isMinerS19JSeries || t.isMinerS19JXPSeries || t.isMinerS19JPlusSeries || t.isMinerS19JProSeries || t.isMinerS19JProASeries || t.isMinerS19JProPlusSeries || t.isMinerS19ASeries || t.isMinerS19AProSeries || t.isMinerS19KProSeries || t.isMinerS19XPSeries || t.isMinerS1988Series || t.isMinerS19126Series
    },
    isHydroOnly() {
        return ct === "s19e-xp-hydro"
    },
    chainTopology(e, t) {
        switch (ct) {
            case "l9":
                return ["snake start-bottom-left", "snake start-top-left"];
            case "l7":
                return ["snake start-bottom-right", "snake start-top-left"];
            case "t17":
            case "s17":
            case "t17plus":
            case "s17plus":
                return ["snake start-top-left"];
            case "t19":
            case "s19":
            case "s19l":
            case "t19pro":
            case "s19pro":
            case "s19pro-a":
                return ["snake start-bottom-left", "snake start-top-left", "snake start-bottom-right", "snake start-top-left"];
            case "t19-hydro":
            case "s19-hydro":
                return ["snake start-bottom-left", "snake start-top-left", "snake start-bottom-left", "snake start-top-left"];
            case "s19xp-hydro":
            case "t19pro-hydro":
            case "s19e-xp-hydro":
                return ["snake start-bottom-left"];
            case "s19i":
            case "s19jpro-plus":
                return ["snake start-bottom-right", "snake start-top-left", "snake start-bottom-right", "snake start-top-left"];
            case "s19-126":
            case "s19jpro":
            case "s19jpro-aml":
            case "s19jpro-bb":
            case "s19jpro-bb-nand":
            case "s19jpro-a":
            case "s19jpro-a-bb":
            case "s19jpro-a-aml":
                return ["snake start-bottom-right", "snake start-top-left", "snake start-bottom-left", "snake start-top-left"];
            case "s21":
            case "t21":
            case "s19a":
            case "s19apro":
            case "s19kpro":
            case "s19plus":
            case "s19xp":
            case "s19xp-aml":
            case "s19j-xp":
                return ["vertical snake start-bottom-left"];
            case "s21pro":
            case "s21xp":
            case "s21xp-imm":
            case "s21xp-hydro":
                return ["snake start-top-left"];
            case "s21-hydro":
                return ["snake start-bottom-right"];
            case "s21-imm":
            case "s21plus":
                return ["vertical snake start-bottom-left"];
            case "s21plus-hydro":
                return ["snake start-bottom-left !justify-start", "snake start-top-left"];
            case "s19-88":
            case "s19-88-aml":
            case "s19j":
            case "s19j-bb":
            case "s19j-plus":
            case "s19pro-hydro":
            case "s19pro-hydro-120":
            case "s19pro-plus-hydro":
                return ["snake start-bottom-left", "snake start-top-left", "snake start-bottom-left", "snake start-top-left"];
            default:
                return ["snake start-top-left"]
        }
    }
}
    , UU = {
    addChange(e, {tabName: t, propName: s}) {
        e.changes[t].push(s)
    },
    removeChange(e, {tabName: t, index: s}) {
        e.changes[t].splice(s, 1)
    },
    clearChanges(e, t) {
        e.changes[t] = []
    },
    addValidation(e, {tabName: t, propName: s}) {
        e.validation[t].push(s)
    },
    removeValidation(e, {tabName: t, index: s}) {
        e.validation[t].splice(s, 1)
    },
    clearValidation(e, t) {
        e.validation[t] = []
    }
}
    , YU = {
    async getData({commit: e, state: t, getters: s, dispatch: a, rootState: o, rootGetters: l}) {
        if (!t.isLoadingGet && !s.isChanged) {
            e("isLoadingGet", !0);
            try {
                const u = o.ui;
                let p = await Gt.get("/apikeys");
                p = p.data;
                const g = await Gt.get("/settings")
                    , y = g.data.regional
                    , v = g.data.miner
                    , w = g.data.network;
                e("isLoadingChains", !0);
                try {
                    await a("getChains")
                } catch (ne) {
                    console.log(ne)
                }
                e("isLoadingChains", !1);
                const C = {
                    regional: {
                        timezones: u.timezones,
                        timezone: y.timezone.current,
                        locale: u.locale
                    },
                    ui: {
                        theme: u.theme,
                        sidebarIsDark: u.sidebarIsDark,
                        enableUIEffects: u.enableUIEffects,
                        displayChipsNumber: u.displayChipsNumber
                    }
                };
                e("general", C);
                const T = {
                    listForm: {
                        list: v.pools.map((ne, le) => ({
                            ...ne,
                            order: le,
                            id: le
                        }))
                    }
                };
                e("pools", T);
                const I = {
                    silent: v.cooling.silent_start,
                    mode: v.cooling.mode.name,
                    fanDuty: v.cooling.mode.name === "manual" ? v.cooling.mode.param : 100,
                    targetTemp: v.cooling.mode.name === "auto" ? v.cooling.mode.param : 65,
                    minFanDuty: v.cooling.fan_min_duty,
                    maxFanDuty: v.cooling.fan_max_duty,
                    minFanCount: v.cooling.fan_min_count
                };
                e("cooling", I);
                let A = await Gt.get("/autotune/presets");
                A = A.data;
                let R = 0;
                const P = A.map((ne, le) => {
                        const oe = ne.status === "tuned";
                        return oe && R++,
                            {
                                label: ne.pretty,
                                name: ne.name,
                                value: le,
                                modded_psu_required: ne.modded_psu_required,
                                isTuned: oe,
                                checked: !1
                            }
                    }
                )
                    , M = {
                    volt: Math.ceil(A[0].tune_settings.volt / 10),
                    freq: A[0].tune_settings.freq,
                    chains: Array(v.overclock.chains.length).fill(0)
                };
                M.chains.forEach((ne, le) => {
                        M.chains[le] = {
                            freq: 0,
                            chips: Array(v.overclock.chains[le].chips.length).fill(0)
                        }
                    }
                );
                const O = {};
                A.forEach((ne, le) => {
                        ne.tune_settings ? (ne.tune_settings.volt = Math.ceil(ne.tune_settings.volt / 10),
                            O[le] = ne.tune_settings) : O[le] = JSON.parse(JSON.stringify(M))
                    }
                );
                let F = 0;
                v.overclock.preset !== "disabled" && (F = P.find(ne => ne.name === v.overclock.preset).value);
                const $ = v.overclock.chains.map(ne => ({
                    freq: ne.freq,
                    voltage: Math.ceil(ne.volt),
                    disabled: ne.disabled,
                    isChanged: !1
                }))
                    , V = {
                    wrap: {}
                }
                    , G = {
                    profile: F,
                    profiles: P,
                    presetSettings: O,
                    activeProfile: F,
                    tunedCounter: R,
                    isPowerSupplyModified: v.overclock.modded_psu,
                    isSwitching: !!v.overclock.preset_switcher.enabled,
                    switcherTopProfile: v.overclock.preset_switcher.top_preset || null,
                    switcherMinProfile: v.overclock.preset_switcher.min_preset || null,
                    autochangeTopPreset: v.overclock.preset_switcher.autochange_top_preset,
                    switcherStepUpTemp: v.overclock.preset_switcher.rise_temp,
                    switcherStepDownTemp: v.overclock.preset_switcher.decrease_temp,
                    ignoreFanSpeed: v.overclock.preset_switcher.ignore_fan_speed,
                    switcherParamPowerDelta: v.overclock.preset_switcher.power_delta || 0,
                    switcherParamCheckDuration: Math.round(v.overclock.preset_switcher.check_time / 60) || 5,
                    globalVolt: {
                        value: Math.ceil(v.overclock.globals.volt),
                        min: u.overclock.min_voltage,
                        max: u.overclock.max_voltage,
                        stock_max: u.overclock.max_voltage_stock_psu,
                        step: Math.ceil(s.voltModifier / 20),
                        nominal: u.overclock.default_voltage
                    },
                    globalFreq: {
                        value: v.overclock.globals.freq,
                        max: u.overclock.max_freq,
                        min: u.overclock.min_freq,
                        step: 1,
                        nominal: u.overclock.default_freq
                    },
                    chains: $
                };
                if (!t.isLoadingChains)
                    for (const [ne, le] of v.overclock.chains.entries()) {
                        const oe = []
                            , ve = s.chipsPerDomain
                            , be = Math.ceil(v.overclock.chains[ne].chips.length / ve);
                        for (let de = 0; de < be; de++) {
                            const J = v.overclock.chains[ne].chips.slice(de * ve, de * ve + ve).map((ue, fe) => ({
                                index: de * ve + fe,
                                config: 0,
                                rowIndex: de,
                                chipIndexInRow: fe,
                                isChanged: !1,
                                difference: {
                                    value: 0,
                                    color: "default"
                                }
                            }));
                            oe.push(J)
                        }
                        G["chips" + ne] = oe
                    }
                V.wrap = G,
                    e("performance", V);
                const ie = {
                    control: {
                        chip_autofix_period: v.misc.chip_autofix_period,
                        restart_hashrate: v.misc.restart_hashrate || "",
                        restart_temp: v.misc.restart_temp || "",
                        max_restart_attempts: v.misc.max_restart_attempts || "",
                        maxStartupDelayTime: v.misc.max_startup_delay_time || 0,
                        min_operational_chains: v.misc.min_operational_chains || l["summary/totalChains"] || 1
                    },
                    misc: {
                        isRestartUnbalanced: !v.misc.disable_restart_unbalanced,
                        isVoltChecks: !v.misc.disable_volt_checks,
                        isChips: !v.misc.disable_chips_warmup,
                        isBreakProtection: !v.misc.disable_chain_break_protection,
                        isTempSensCheck: !v.misc.disable_temp_sensor_checks,
                        isIgnoreChipTempSensors: v.misc.ignore_chip_sensors,
                        isIgnoreInvalidTempSensors: v.misc.ignore_broken_sensors,
                        isIgnoreProfile: v.misc.ignore_min_preset_volt,
                        isQuietMode: v.misc.quiet_mode,
                        isQuickStart: v.misc.quick_start,
                        isResumeMiningAfterReboot: !v.misc.remain_stopped_on_reboot,
                        isDownscalePresetOnFailure: v.misc.downscale_preset_on_failure,
                        isVoltageCompensation: !v.misc.bitmain_disable_volt_comp,
                        tunerChipHashrateThreshold: {
                            value: v.misc.tuner_bad_chip_hr_threshold || 50,
                            nominal: 50
                        },
                        higherVoltOffset: {
                            value: typeof v.misc.higher_volt_offset == "number" ? v.misc.higher_volt_offset : 100,
                            nominal: 100
                        },
                        autoChipThrottling: v.misc.auto_chip_throttling
                    }
                };
                (s.isMinerL9Series || s.isMinerL7Series) && (ie.misc.isRestartUnbalanced = !0),
                    e("advanced", ie);
                const te = {
                    password: {
                        current: "",
                        new: ""
                    },
                    apiKeys: p
                };
                e("security", te),
                    w.enable_network_check = !0,
                    w.dns1 = w.dnsservers[0],
                    w.dns2 = w.dnsservers[1] || null,
                    delete w.dnsservers,
                w.dhcp && o.summary.ip && o.summary.netmask && o.summary.dns && o.summary.gateway && (w.ipaddress = o.summary.ip,
                    w.netmask = o.summary.netmask,
                    w.dns1 = o.summary.dns,
                    w.dns2 = o.summary.dns2 || w.dns2,
                    w.gateway = o.summary.gateway),
                    e("network", w),
                    e("oldData", JSON.parse(JSON.stringify({
                        general: C,
                        pools: T,
                        cooling: I,
                        security: te,
                        network: w,
                        performance: V,
                        advanced: ie
                    }))),
                    a("copyPresetSettingsToPerformance", t.performance.wrap.profile)
            } catch {
                lr(Rt.global.t("Errors.noSettings"))
            } finally {
                e("isLoadingGet", !1)
            }
        }
    },
    async getChains({commit: e, dispatch: t}) {
        const s = await Gt.get("/chains");
        let a = !1;
        s.data && s.data.length ? (s.data.forEach(o => {
                let l = {};
                o.sensors && o.sensors.length && o.sensors.forEach(u => {
                        l[u.loc] = u
                    }
                ),
                    o.chips && o.chips.length ? o.chips = o.chips.map(u => {
                            let p;
                            const g = l[u.id];
                            if (g)
                                switch (g.state) {
                                    case "measure":
                                        p = (g.chip || "-") + "/" + (g.board || "-");
                                        break;
                                    case "error":
                                        p = "E";
                                        break;
                                    case "init":
                                    case "ready":
                                    case "unknown":
                                    default:
                                        p = Rt.global.t("Dashboard.boards.NA");
                                        break
                                }
                            return {
                                freq: u.freq,
                                hashrate: u.hr.toFixed(1),
                                chip_temp: u.temp.toFixed(1),
                                throttled: u.throttled,
                                temp: p,
                                errors: u.errs,
                                status: u.grade
                            }
                        }
                    ) : a = !0
            }
        ),
            a ? await t("getChips") : e("summary/chainChips", s.data, {
                root: !0
            })) : await t("getChips")
    },
    async getChips({commit: e}) {
        const t = await Gt.get("/chips");
        t.data && (t.data.chains.forEach(s => {
                if (s.chips && s.chips.length)
                    s.chips = s.chips.map(a => {
                            let o;
                            if (a.sensor)
                                switch (a.sensor.status) {
                                    case "measure":
                                        o = (a.sensor.chip_temp || "-") + "/" + (a.sensor.pcb_temp || "-");
                                        break;
                                    case "error":
                                        o = "E";
                                        break;
                                    case "init":
                                    case "ready":
                                    case "unknown":
                                        o = Rt.global.t("Dashboard.boards.NA");
                                        break
                                }
                            return {
                                ...a,
                                temp: o,
                                hashrate: a.hashrate.toFixed(0)
                            }
                        }
                    );
                else {
                    const a = [];
                    for (let o = 0; o < t.data.chips_per_chain; o++)
                        a.push({
                            id: o,
                            hashrate: 0,
                            efficiency: 0,
                            errors: 0
                        });
                    s.chips = a
                }
            }
        ),
            e("summary/chainChips", t.data.chains, {
                root: !0
            }))
    },
    copyPresetSettingsToPerformance({commit: e, state: t}, s) {
        const a = t.performance.wrap.presetSettings[s];
        t.performance.wrap.globalVolt.value = Math.ceil(a.volt),
            t.performance.wrap.globalFreq.value = a.freq,
            t.oldData.performance.wrap.globalVolt.value = t.performance.wrap.globalVolt.value,
            t.oldData.performance.wrap.globalFreq.value = t.performance.wrap.globalFreq.value;
        for (let o = 0; o < t.performance.wrap.chains.length; o++)
            t.performance.wrap.chains[o].freq = a.chains[o].freq,
                t.oldData.performance.wrap.chains[o].freq = a.chains[o].freq;
        t.performance.wrap.chains.forEach((o, l) => {
                t.performance.wrap["chips" + l].forEach((u, p) => {
                        u.forEach((g, y) => {
                                g.isChanged = !1,
                                    g.difference.value = 0,
                                    g.difference.color = "default",
                                    g.config = a.chains[l].chips[g.index],
                                    t.oldData.performance.wrap["chips" + l][p][y].config = g.config
                            }
                        )
                    }
                )
            }
        )
    },
    resetChange({commit: e, state: t}, s) {
        if (!Array.isArray(s))
            e(s, JSON.parse(JSON.stringify(t.oldData[s]))),
                e("clearChanges", s);
        else {
            const a = s[0]
                , o = s[1]
                , l = t.changes[a];
            for (let p = l.length - 1; p >= 0; p--)
                l[p].indexOf(o) > -1 && e("removeChange", {
                    tabName: a,
                    index: p
                });
            const u = JSON.parse(JSON.stringify(t[a]));
            u[o] = JSON.parse(JSON.stringify(t.oldData[a][o])),
                e(a, u)
        }
    },
    toggleChange({commit: e, state: t}, {tabName: s, propName: a, value: o}) {
        const l = t.changes[s].indexOf(a);
        l === -1 && o && e("addChange", {
            tabName: s,
            propName: a
        }),
        l > -1 && !o && e("removeChange", {
            tabName: s,
            index: l
        })
    },
    applyAllChanges({commit: e, state: t}) {
        const s = {};
        for (let a of t.tabs)
            e("clearChanges", a),
                s[a] = t[a];
        for (const a of s.performance.wrap.chains)
            a.isChanged = !1;
        for (const [a] of s.performance.wrap.chains.entries())
            for (const o of s.performance.wrap["chips" + a])
                for (const l of o)
                    l.isChanged = !1;
        e("oldData", JSON.parse(JSON.stringify(s))),
            e("applyTrigger", t.applyTrigger + 1)
    },
    toggleValid({commit: e, state: t}, {tabName: s, propName: a, value: o}) {
        const l = t.validation[s].indexOf(a);
        l > -1 && o && e("removeValidation", {
            tabName: s,
            index: l
        }),
        l === -1 && !o && e("addValidation", {
            tabName: s,
            propName: a
        })
    },
    submit({state: e, dispatch: t, rootState: s}, a) {
        let o = !0;
        for (let l of e.tabs)
            if (e.validation[l].length) {
                o = !1,
                s.route.name !== l && Jn.push({
                    name: l
                });
                break
            }
        o && (t("applyAllChanges"),
            t("save", a))
    },
    async save({commit: e, state: t, getters: s, dispatch: a}, o) {
        var V;
        e("isLoadingPut", !0);
        const l = JSON.parse(JSON.stringify(t.cooling))
            , u = {
            silent_start: l.silent,
            mode: {
                name: l.mode
            },
            fan_min_duty: l.minFanDuty,
            fan_max_duty: l.maxFanDuty,
            fan_min_count: l.minFanCount
        };
        l.mode === "auto" ? u.mode.param = Number(l.targetTemp) : l.mode === "manual" && (u.mode.param = l.fanDuty),
        s.isMinerAnyX19Series && (u.silent_start = !0);
        let p = "";
        t.performance.wrap.profile ? p = t.performance.wrap.profiles.find(G => G.value === t.performance.wrap.profile).name : p = "disabled";
        const g = JSON.parse(JSON.stringify(t.performance.wrap.chains));
        for (const [G, ie] of g.entries()) {
            ie.chips = [],
                delete ie.isChanged;
            for (const te of t.performance.wrap["chips" + G])
                for (const ne of te)
                    ie.chips.push(ne.config)
        }
        const y = {
            preset: p,
            modded_psu: t.performance.wrap.isPowerSupplyModified,
            preset_switcher: {
                enabled: t.performance.wrap.isSwitching,
                top_preset: t.performance.wrap.switcherTopProfile,
                min_preset: t.performance.wrap.switcherMinProfile,
                autochange_top_preset: t.performance.wrap.autochangeTopPreset,
                rise_temp: Number(t.performance.wrap.switcherStepUpTemp),
                decrease_temp: Number(t.performance.wrap.switcherStepDownTemp),
                ignore_fan_speed: t.performance.wrap.ignoreFanSpeed,
                power_delta: Number(t.performance.wrap.switcherParamPowerDelta),
                check_time: 60 * Number(t.performance.wrap.switcherParamCheckDuration)
            },
            globals: {
                freq: Number(t.performance.wrap.globalFreq.value),
                volt: Number(t.performance.wrap.globalVolt.value)
            },
            chains: g
        }
            , v = {
            chip_autofix_period: t.advanced.control.chip_autofix_period,
            restart_hashrate: Number(t.advanced.control.restart_hashrate) || 0,
            restart_temp: Number(t.advanced.control.restart_temp) || 0,
            min_operational_chains: Number(t.advanced.control.min_operational_chains),
            max_restart_attempts: Number(t.advanced.control.max_restart_attempts) || 0,
            max_startup_delay_time: Number(t.advanced.control.maxStartupDelayTime) || 0,
            disable_restart_unbalanced: !t.advanced.misc.isRestartUnbalanced,
            disable_volt_checks: !t.advanced.misc.isVoltChecks,
            disable_chips_warmup: !t.advanced.misc.isChips,
            disable_temp_sensor_checks: !t.advanced.misc.isTempSensCheck,
            ignore_chip_sensors: t.advanced.misc.isIgnoreChipTempSensors,
            ignore_broken_sensors: t.advanced.misc.isIgnoreInvalidTempSensors,
            disable_chain_break_protection: !t.advanced.misc.isBreakProtection,
            ignore_min_preset_volt: t.advanced.misc.isIgnoreProfile,
            quiet_mode: t.advanced.misc.isQuietMode,
            quick_start: t.advanced.misc.isQuickStart,
            remain_stopped_on_reboot: !t.advanced.misc.isResumeMiningAfterReboot,
            bitmain_disable_volt_comp: !t.advanced.misc.isVoltageCompensation,
            downscale_preset_on_failure: t.advanced.misc.isDownscalePresetOnFailure,
            tuner_bad_chip_hr_threshold: t.advanced.misc.tunerChipHashrateThreshold.value,
            higher_volt_offset: t.advanced.misc.higherVoltOffset.value,
            auto_chip_throttling: t.advanced.misc.autoChipThrottling
        }
            , w = {
            theme: t.general.ui.theme,
            dark_side_pane: t.general.ui.sidebarIsDark,
            disable_animation: !t.general.ui.enableUIEffects,
            locale: t.general.regional.locale
        }
            , C = {
            timezone: {
                current: t.general.regional.timezone
            }
        }
            , T = JSON.parse(JSON.stringify(t.network));
        T.dnsservers = [T.dns1],
        T.dns2 && T.dnsservers.push(T.dns2),
            delete T.dns1,
            delete T.dns2,
            T.enable_network_check = T.enable_network_check;
        const I = {
            current: t.security.password.current,
            pw: t.security.password.new
        }
            , A = {};
        let R = !1
            , P = !1
            , M = !1
            , O = !1
            , F = !1;
        for (const G of Object.keys(o))
            switch (G) {
                case "general":
                    for (const ie of o[G])
                        ie.indexOf("timezone") > -1 ? M = !0 : P = !0;
                    break;
                case "performance":
                    o[G].length && (A.overclock = y,
                        R = !0);
                    break;
                case "advanced":
                    o[G].length && (A.misc = v,
                        R = !0);
                    break;
                case "cooling":
                    o[G].length && (A.cooling = u,
                        R = !0);
                    break;
                case "pools":
                    o[G].length && (A.pools = t.pools.listForm.list,
                        R = !0);
                    break;
                case "network":
                    o[G].length && (O = !0);
                    break;
                case "security":
                    o[G].length && (F = !0);
                    break
            }
        const $ = {};
        R && ($.miner = A),
        P && ($.ui = w),
        M && ($.regional = C),
        O && ($.network = T),
        F && ($.password = I);
        try {
            const G = await Gt.post("/settings", $);
            G.data.restart_required && e("summary/isApply", !0, {
                root: !0
            }),
            G.data.reboot_required && (e("summary/isApply", !0, {
                root: !0
            }),
                e("summary/isApplyReboot", !0, {
                    root: !0
                }));
            const ie = JSON.parse(JSON.stringify(t.security));
            ie.password = {
                current: "",
                new: ""
            },
                e("security", ie),
            P && (e("ui/sidebarIsDark", w.dark_side_pane, {
                root: !0
            }),
                e("ui/enableUIEffects", !w.disable_animation, {
                    root: !0
                }),
                e("ui/locale", w.locale, {
                    root: !0
                }),
                a("ui/changeTheme", w.theme, {
                    root: !0
                })),
                a("applyAllChanges"),
                bi({
                    message: Rt.global.t("Messages.saved"),
                    type: "success",
                    showClose: !0
                })
        } catch (G) {
            I.current && ((V = G == null ? void 0 : G.response) == null ? void 0 : V.status) === 400 ? (Jn.currentRoute.path !== "/system/security" && Jn.push("/system/security"),
                lr(Rt.global.t("Errors.passNotSaved"))) : En(G)
        } finally {
            e("isLoadingPut", !1)
        }
    },
    async apply({commit: e, rootState: t}) {
        e("isLoadingPut", !0);
        try {
            t.summary.isApplyReboot ? (await Gt.post("/system/reboot"),
                e("summary/isApplyReboot", !1, {
                    root: !0
                })) : await Gt.post("/mining/restart"),
                e("summary/isApply", !1, {
                    root: !0
                }),
                bi({
                    type: "warning",
                    message: Rt.global.t("Messages.applied"),
                    showClose: !0
                }),
                e("summary/statusTime", null, {
                    root: !0
                })
        } catch (s) {
            En(s)
        } finally {
            e("isLoadingPut", !1)
        }
    },
    async restartMiner({commit: e, dispatch: t, state: s, rootState: a}) {
        if (s.isLoadingRestart || s.isLoadingPut)
            return;
        const o = a.ui.dialogRestartType;
        if (o === "apply")
            await this.apply();
        else {
            e("isLoadingRestart", !0);
            try {
                const l = o === "reboot" ? "/system/reboot" : "/mining/" + o;
                await Gt.post(l),
                    t("summary/getData", null, {
                        root: !0
                    }),
                    bi({
                        type: "warning",
                        message: Rt.global.t("Messages." + o),
                        showClose: !0
                    })
            } catch (l) {
                En(l)
            } finally {
                e("isLoadingRestart", !1)
            }
        }
    },
    async saveUI({state: e, commit: t, dispatch: s, rootState: a}, o) {
        t("isLoadingPut", !0);
        const l = {
            theme: a.ui.theme,
            dark_side_pane: a.ui.sidebarIsDark,
            disable_animation: !a.ui.enableUIEffects,
            locale: a.ui.locale
        }
            , u = {};
        u.ui = l;
        try {
            const p = await Gt.post("/settings", u);
            p.data.restart_required && t("summary/isApply", !0, {
                root: !0
            }),
            p.data.reboot_required && (t("summary/isApply", !0, {
                root: !0
            }),
                t("summary/isApplyReboot", !0, {
                    root: !0
                })),
                s("syncUISettings", o),
                bi({
                    type: "success",
                    message: Rt.global.t("Messages.saved"),
                    showClose: !0
                })
        } catch (p) {
            En(p)
        } finally {
            t("isLoadingPut", !1)
        }
    },
    syncUISettings({state: e, dispatch: t}, s) {
        const a = "general";
        e && (s.locale && (e.oldData.general.regional.locale = e.general.regional.locale = s.locale,
            t("toggleChange", {
                tabName: a,
                propName: "regionallocale",
                value: !1
            })),
        s.theme && (e.oldData.general.ui.theme = e.general.ui.theme = s.theme,
            t("toggleChange", {
                tabName: a,
                propName: "uitheme",
                value: !1
            })),
        typeof s.sidebarIsDark < "u" && (e.oldData.general.ui.sidebarIsDark = e.general.ui.sidebarIsDark = s.sidebarIsDark,
            t("toggleChange", {
                tabName: a,
                propName: "uisidebarIsDark",
                value: !1
            })),
        typeof s.enableUIEffects < "u" && (e.oldData.general.ui.enableUIEffects = e.general.ui.enableUIEffects = s.enableUIEffects,
            t("toggleChange", {
                tabName: a,
                propName: "uienableUIEffects",
                value: !1
            })))
    }
}
    , XU = {
    state: zU,
    actions: YU,
    mutations: UU,
    getters: WU
}
    , jU = {
    isLoading: !1,
    value: !1
}
    , GU = {
    findMinerValue(e) {
        return e.value
    }
}
    , qU = {
    async toggleFind({commit: e}, t) {
        var s;
        e("isLoading", !0);
        try {
            await Gt.post("/find-miner", {
                on: t
            }),
                e("value", t)
        } catch (a) {
            ((s = a == null ? void 0 : a.response) == null ? void 0 : s.status) !== 401 && En(a)
        } finally {
            e("isLoading", !1)
        }
    }
}
    , KU = {
    state: jU,
    getters: GU,
    actions: qU
};

function S_(e, t) {
    for (let s of Object.keys(e))
        t[s] || (t[s] = (a, o) => {
                a[s] = o
            }
        );
    return t
}

const Rr = {
    ui: EU,
    summary: MU,
    auth: DU,
    settings: XU,
    system: BU,
    findMiner: KU
};
for (let e of Object.keys(Rr)) {
    let t = Rr[e].mutations || {};
    t = S_(Rr[e].state, t),
        Rr[e].namespaced = !0,
        Rr[e].mutations = t
}
const __ = {};
let If = {};
If = S_(__, If);
const ZU = {}
    , gs = c2({
    state: __,
    mutations: If,
    actions: ZU,
    modules: Rr
});

function gy(e) {
    return e.type.indexOf("mouse") !== -1 ? e.clientX : e.touches[0].clientX
}

function my(e) {
    return e.type.indexOf("mouse") !== -1 ? e.clientY : e.touches[0].clientY
}

var JU = function () {
    var e = !1;
    try {
        var t = Object.defineProperty({}, "passive", {
            get: function () {
                e = !0
            }
        });
        window.addEventListener("test", null, t)
    } catch {
    }
    return e
}()
    , QU = {
    install: function (e, t) {
        var s = Object.assign({}, {
            disableClick: !1,
            tapTolerance: 10,
            swipeTolerance: 30,
            touchHoldTolerance: 400,
            longTapTimeInterval: 400,
            touchClass: "",
            dragFrequency: 100,
            rollOverFrequency: 100
        }, t);

        function a(A) {
            var R = this.$$touchObj
                , P = A.type.indexOf("touch") >= 0
                , M = A.type.indexOf("mouse") >= 0
                , O = this;
            P && (R.lastTouchStartTime = A.timeStamp),
            !(M && R.lastTouchStartTime && A.timeStamp - R.lastTouchStartTime < 350) && (R.touchStarted || (w(this),
                R.touchStarted = !0,
                R.touchMoved = !1,
                R.swipeOutBounded = !1,
                R.startX = gy(A),
                R.startY = my(A),
                R.currentX = 0,
                R.currentY = 0,
                R.touchStartTime = A.timeStamp,
                R.hasSwipe = y(this, "swipe") || y(this, "swipe.left") || y(this, "swipe.right") || y(this, "swipe.top") || y(this, "swipe.bottom"),
            y(this, "hold") && (R.touchHoldTimer = setTimeout(function () {
                R.touchHoldTimer = null,
                    v(A, O, "hold")
            }, R.options.touchHoldTolerance)),
                v(A, this, "press")))
        }

        function o(A) {
            var R = this.$$touchObj
                , P = gy(A)
                , M = my(A)
                , O = R.currentX != P || R.currentY != M;
            if (R.currentX = P,
                R.currentY = M,
                R.touchMoved) {
                if (R.hasSwipe && !R.swipeOutBounded) {
                    var $ = R.options.swipeTolerance;
                    R.swipeOutBounded = Math.abs(R.startX - R.currentX) > $ && Math.abs(R.startY - R.currentY) > $
                }
            } else {
                var F = R.options.tapTolerance;
                R.touchMoved = Math.abs(R.startX - R.currentX) > F || Math.abs(R.startY - R.currentY) > F,
                R.touchMoved && (T(R),
                    v(A, this, "drag.once"))
            }
            if (y(this, "rollover") && O) {
                var V = A.timeStamp
                    , G = R.options.rollOverFrequency;
                (R.touchRollTime == null || V > R.touchRollTime + G) && (R.touchRollTime = V,
                    v(A, this, "rollover"))
            }
            if (y(this, "drag") && R.touchStarted && R.touchMoved && O) {
                var V = A.timeStamp
                    , G = R.options.dragFrequency;
                (R.touchDragTime == null || V > R.touchDragTime + G) && (R.touchDragTime = V,
                    v(A, this, "drag"))
            }
        }

        function l() {
            var A = this.$$touchObj;
            T(A),
                C(this),
                A.touchStarted = A.touchMoved = !1,
                A.startX = A.startY = 0
        }

        function u(A) {
            var R = this.$$touchObj
                , P = A.type.indexOf("touch") >= 0
                , M = A.type.indexOf("mouse") >= 0;
            P && (R.lastTouchEndTime = A.timeStamp);
            var O = P && !R.touchHoldTimer;
            if (T(R),
                R.touchStarted = !1,
                C(this),
                !(M && R.lastTouchEndTime && A.timeStamp - R.lastTouchEndTime < 350))
                if (v(A, this, "release"),
                    R.touchMoved) {
                    if (R.hasSwipe && !R.swipeOutBounded) {
                        var F = R.options.swipeTolerance, $, V = Math.abs(R.startY - R.currentY),
                            G = Math.abs(R.startX - R.currentX);
                        (V > F || G > F) && (V > G ? $ = R.startY > R.currentY ? "top" : "bottom" : $ = R.startX > R.currentX ? "left" : "right",
                            y(this, "swipe." + $) ? v(A, this, "swipe." + $, $) : v(A, this, "swipe", $))
                    }
                } else if (y(this, "longtap") && A.timeStamp - R.touchStartTime > R.options.longTapTimeInterval)
                    A.cancelable && A.preventDefault(),
                        v(A, this, "longtap");
                else if (y(this, "hold") && O) {
                    A.cancelable && A.preventDefault();
                    return
                } else
                    v(A, this, "tap")
        }

        function p() {
            w(this)
        }

        function g() {
            C(this)
        }

        function y(A, R) {
            var P = A.$$touchObj.callbacks[R];
            return P != null && P.length > 0
        }

        function v(A, R, P, M) {
            var O = R.$$touchObj
                , F = O.callbacks[P];
            if (F == null || F.length === 0)
                return null;
            for (var $ = 0; $ < F.length; $++) {
                var V = F[$];
                V.modifiers.stop && A.stopPropagation(),
                V.modifiers.prevent && A.preventDefault(),
                !(V.modifiers.self && A.target !== A.currentTarget) && typeof V.value == "function" && (M ? V.value(M, A) : V.value(A))
            }
        }

        function w(A) {
            var R = A.$$touchObj.options.touchClass;
            R && A.classList.add(R)
        }

        function C(A) {
            var R = A.$$touchObj.options.touchClass;
            R && A.classList.remove(R)
        }

        function T(A) {
            A && A.touchHoldTimer && (clearTimeout(A.touchHoldTimer),
                A.touchHoldTimer = null)
        }

        function I(A, R) {
            var P = A.$$touchObj || {
                callbacks: {},
                hasBindTouchEvents: !1,
                options: s
            };
            return R && (P.options = Object.assign({}, P.options, R)),
                A.$$touchObj = P,
                A.$$touchObj
        }

        e.directive("touch", {
            beforeMount: function (A, R) {
                var P = I(A)
                    , M = JU ? {
                    passive: !0
                } : !1
                    , O = R.arg || "tap";
                switch (O) {
                    case "swipe":
                        var F = R.modifiers;
                        if (F.left || F.right || F.top || F.bottom) {
                            for (var $ in R.modifiers)
                                if (["left", "right", "top", "bottom"].indexOf($) >= 0) {
                                    var V = "swipe." + $;
                                    P.callbacks[V] = P.callbacks[V] || [],
                                        P.callbacks[V].push(R)
                                }
                        } else
                            P.callbacks.swipe = P.callbacks.swipe || [],
                                P.callbacks.swipe.push(R);
                        break;
                    case "press":
                    case "drag":
                        R.modifiers.disablePassive && (M = !1);
                    default:
                        P.callbacks[O] = P.callbacks[O] || [],
                            P.callbacks[O].push(R)
                }
                P.hasBindTouchEvents || (A.addEventListener("touchstart", a, M),
                    A.addEventListener("touchmove", o, M),
                    A.addEventListener("touchcancel", l),
                    A.addEventListener("touchend", u),
                P.options.disableClick || (A.addEventListener("mousedown", a),
                    A.addEventListener("mousemove", o),
                    A.addEventListener("mouseup", u),
                    A.addEventListener("mouseenter", p),
                    A.addEventListener("mouseleave", g)),
                    P.hasBindTouchEvents = !0)
            },
            unmounted: function (A) {
                T(A.$$touchObj),
                    A.removeEventListener("touchstart", a),
                    A.removeEventListener("touchmove", o),
                    A.removeEventListener("touchcancel", l),
                    A.removeEventListener("touchend", u),
                A.$$touchObj && !A.$$touchObj.options.disableClick && (A.removeEventListener("mousedown", a),
                    A.removeEventListener("mousemove", o),
                    A.removeEventListener("mouseup", u),
                    A.removeEventListener("mouseenter", p),
                    A.removeEventListener("mouseleave", g)),
                    delete A.$$touchObj
            }
        }),
            e.directive("touch-class", {
                beforeMount: function (A, R) {
                    I(A, {
                        touchClass: R.value
                    })
                }
            }),
            e.directive("touch-options", {
                beforeMount: function (A, R) {
                    I(A, R.value)
                }
            })
    }
};

/*!
 /**
  * vuex-router-sync v6.0.0-rc.1
  * (c) 2021 Evan You
  * @license MIT
  */
function eY(e, t, s) {
    const a = (s || {}).moduleName || "route";
    e.registerModule(a, {
        namespaced: !0,
        state: Pf(t.currentRoute.value),
        mutations: {
            ROUTE_CHANGED(g, y) {
                e.state[a] = Pf(y.to, y.from)
            }
        }
    });
    let o = !1, l;
    const u = e.watch(g => g[a], g => {
            const {fullPath: y} = g;
            y !== l && (l != null && (o = !0,
                t.push(g)),
                l = y)
        }
        , {
            flush: "sync"
        })
        , p = t.afterEach((g, y) => {
            if (o) {
                o = !1;
                return
            }
            l = g.fullPath,
                e.commit(a + "/ROUTE_CHANGED", {
                    to: g,
                    from: y
                })
        }
    );
    return function () {
        p(),
            u(),
            e.unregisterModule(a)
    }
}

function Pf(e, t) {
    const s = {
        name: e.name,
        path: e.path,
        hash: e.hash,
        query: e.query,
        params: e.params,
        fullPath: e.fullPath,
        meta: e.meta
    };
    return t && (s.from = Pf(t)),
        Object.freeze(s)
}

const tY = {
    xs: "400px",
    sm: "600px",
    md: "1000px",
    lg: "1400px",
    xl: "1700px",
    xxl: "1921px",
    p700: "700px",
    p800: "800px",
    p980: "980px",
    p1299: "1299px",
    p1200: "1200px",
    p1480: "1480px",
    p1600: "1600px",
    p1601: "1601px"
}
    , ci = IE(tY)
    , sY = ci.smaller("sm")
    , Eg = ci.smaller("p800")
    , Ti = ci.smaller("p980")
    , k_ = ci.smaller("md")
    , C_ = ci.smaller("p1480")
    , nY = ci.between("p700", "p1299")
    , Qq = ci.between("sm", "p1600")
    , iY = ci.between("p980", "p1299")
    , aY = ci.greater("p1200")
    , A_ = ci.greater("p1601")
    , eK = ci.greater("xxl")
    , rY = Ce({
    name: "IconButton"
})
    , oY = {
    class: "group rounded-lg p-6px cursor-pointer leading-none hover:bg-$el-color-primary-light-9"
};

function lY(e, t, s, a, o, l) {
    return Z(),
        ye("div", oY, [De(e.$slots, "default")])
}

const Mo = fs(rY, [["render", lY], ["__scopeId", "data-v-1a98f129"]])
    , cY = {
    class: "Heading flex items-center"
}
    , uY = {
    key: 0,
    class: "ButtonsGroup"
}
    , dY = {
    class: "!normal-case"
}
    , hY = {
    key: 0,
    class: "ValueGroup"
}
    , fY = {
    class: "Label pb-5px"
}
    , pY = {
    key: 0,
    class: "ValueGroup"
}
    , gY = {
    class: "Label pb-5px"
}
    , mY = {
    class: "ValueGroup py-15px"
}
    , vY = {
    class: "Label pb-5px"
}
    , bY = {
    class: "pb-15px"
}
    , yY = {
    class: "ValueGroup"
}
    , xY = {
    class: "Label pb-5px"
}
    , wY = {
    class: "ValueGroup"
}
    , SY = {
    class: "Label pb-5px"
}
    , _Y = {
    class: "p-10px -mx-12px -mb-12px mt-15px bg-$el-bg-color-page rounded-b-4px"
}
    , kY = {
    key: 0
}
    , CY = {
    key: 1
}
    , AY = {
    class: "hidden-xs-only"
}
    , EY = {
    class: "hidden-xs-only"
}
    , TY = {
    class: "hidden-xs-only mr-1"
}
    , IY = {
    key: 0
};

function PY(e, t, s, a, o, l) {
    const u = Mo
        , p = Ai
        , g = mH
        , y = AS
        , v = Ei
        , w = or
        , C = P9
        , T = t_
        , I = _n
        , A = H9
        , R = Ag
        , P = ZV
        , M = JV
        , O = KV
        , F = RB
        , $ = zH;
    return Z(),
        Te($, {
            class: "NavBar w-full <sm:!px-10px",
            height: "55px"
        }, {
            default: se(() => [U("div", cY, [ae(u, {
                class: he(["hidden-sm-and-down", e.sidebarIsCollapsed || e.less1480 && e.isInfobarFixed || e.btw700and1299 ? "-ml-70px mr-20px" : " "]),
                onClick: l.collapseSidebar
            }, {
                default: se(() => t[14] || (t[14] = [U("div", {
                    class: "icon-uil-left-arrow-to-left"
                }, null, -1)])),
                _: 1
            }, 8, ["class", "onClick"]), ae(u, {
                class: "hidden-md-and-up",
                onClick: l.unhideSidebar
            }, {
                default: se(() => t[15] || (t[15] = [U("div", {
                    class: "icon-uil-bars"
                }, null, -1)])),
                _: 1
            }, 8, ["onClick"]), (Z(),
                ye("h2", {
                    class: "ml-10px <sm:!text-14px",
                    key: e.$route.name
                }, me(l.Heading), 1))]), e.status ? (Z(),
                ye("div", uY, [ae(R, {
                    class: "gap-10px",
                    type: "flex",
                    align: "middle"
                }, {
                    default: se(() => [e.$route.name === "Dashboard" && e.isAuth && !e.editLayout && !e.minerDataIsNull ? (Z(),
                        ye(Ct, {
                            key: 0
                        }, [e.$route.name === "Dashboard" && !e.noActiveWidgets && !e.minerDataIsNull ? (Z(),
                            Te(p, {
                                key: 0,
                                effect: "light",
                                placement: "bottom",
                                content: e.$t("Dashboard.editMode.enterIcon"),
                                "show-after": 500
                            }, {
                                default: se(() => [ae(u, {
                                    onClick: l.editLayoutClick
                                }, {
                                    default: se(() => t[16] || (t[16] = [U("div", {
                                        class: "icon-uil-edit-alt"
                                    }, null, -1)])),
                                    _: 1
                                }, 8, ["onClick"])]),
                                _: 1
                            }, 8, ["content"])) : ke("", !0)], 64)) : ke("", !0), ae(A, {
                        placement: "bottom",
                        trigger: "click",
                        transition: "el-zoom-in-top",
                        title: e.$t("InfoBar.quickSettings.title"),
                        width: "260",
                        "popper-class": "bg-$el-bg-color !bg-$unlock-bg-color backdrop-filter backdrop-blur-3 border-1 border-$el-border-color-light !children:uppercase !children:font-bold !children:text-13px "
                    }, {
                        reference: se(() => [ae(u, {
                            class: "children:text-25px p-10px focus:bg-$el-color-primary-light-9 focus:children:transform focus:children:transition focus:children:scale-115 focus:children:bg-$el-color-primary"
                        }, {
                            default: se(() => t[17] || (t[17] = [U("div", {
                                class: "icon-uil-toggle-on"
                            }, null, -1)])),
                            _: 1
                        })]),
                        default: se(() => [U("main", dY, [ae(w, null, {
                            default: se(() => [e.$route.name === "Dashboard" && !e.noActiveWidgets && !e.minerDataIsNull && e.more1200 ? (Z(),
                                ye("section", hY, [U("div", fY, me(e.$t("NavBar.columnMode")), 1), ae(y, {
                                    class: "!flex !children:flex-1",
                                    modelValue: l.columnMode,
                                    "onUpdate:modelValue": t[0] || (t[0] = V => l.columnMode = V)
                                }, {
                                    default: se(() => [ae(g, {
                                        class: "!children:w-full",
                                        value: !1
                                    }, {
                                        default: se(() => [U("span", null, me(e.$t("NavBar.gridMode")), 1)]),
                                        _: 1
                                    }), ae(g, {
                                        class: "!children:w-full",
                                        value: !0
                                    }, {
                                        default: se(() => [U("span", null, me(e.$t("NavBar.listMode")), 1)]),
                                        _: 1
                                    })]),
                                    _: 1
                                }, 8, ["modelValue"]), ae(v, {
                                    class: "!my-10px"
                                })])) : ke("", !0)]),
                            _: 1
                        }), ae(w, null, {
                            default: se(() => [e.$route.name === "performance" ? (Z(),
                                ye("section", pY, [U("div", gY, me(e.$t("NavBar.chipsNumber")), 1), ae(y, {
                                    class: "!flex !children:flex-1",
                                    modelValue: l.displayChipsNumber,
                                    "onUpdate:modelValue": t[1] || (t[1] = V => l.displayChipsNumber = V)
                                }, {
                                    default: se(() => [ae(g, {
                                        class: "!children:w-full",
                                        value: !1
                                    }, {
                                        default: se(() => [U("span", null, me(e.$t("InfoBar.quickSettings.disable")), 1)]),
                                        _: 1
                                    }), ae(g, {
                                        class: "!children:w-full",
                                        value: !0
                                    }, {
                                        default: se(() => [U("span", null, me(e.$t("InfoBar.quickSettings.enable")), 1)]),
                                        _: 1
                                    })]),
                                    _: 1
                                }, 8, ["modelValue"]), ae(v, {
                                    class: "!my-10px"
                                })])) : ke("", !0)]),
                            _: 1
                        }), ae(T, {
                            modelValue: l.locale,
                            "onUpdate:modelValue": t[2] || (t[2] = V => l.locale = V),
                            placeholder: "Select"
                        }, {
                            default: se(() => [ae(C, {
                                label: "English",
                                value: "en"
                            }, {
                                default: se(() => t[18] || (t[18] = [at("English")])),
                                _: 1
                            }), ae(C, {
                                label: "Русский",
                                value: "ru"
                            }, {
                                default: se(() => t[19] || (t[19] = [at("Русский")])),
                                _: 1
                            }), ae(C, {
                                label: "Українська",
                                value: "ua"
                            }, {
                                default: se(() => t[20] || (t[20] = [at("Українська")])),
                                _: 1
                            }), ae(C, {
                                label: "中文",
                                value: "zh"
                            }, {
                                default: se(() => t[21] || (t[21] = [at("中文")])),
                                _: 1
                            }), ae(C, {
                                label: "فارْسِى",
                                value: "fa"
                            })]),
                            _: 1
                        }, 8, ["modelValue"]), U("div", mY, [U("div", vY, me(e.$t("InfoBar.quickSettings.themeUI")), 1), ae(y, {
                            class: "radio-icons !flex-nowrap !flex !children:children:w-full",
                            modelValue: l.theme,
                            "onUpdate:modelValue": t[3] || (t[3] = V => l.theme = V)
                        }, {
                            default: se(() => [ae(g, {
                                class: "!basis-1/2",
                                value: "light"
                            }, {
                                default: se(() => t[22] || (t[22] = [U("div", {
                                    class: "icon-uil-sun -my-2px text-18px"
                                }, null, -1)])),
                                _: 1
                            }), ae(g, {
                                class: "!basis-1/2",
                                value: "dark"
                            }, {
                                default: se(() => t[23] || (t[23] = [U("div", {
                                    class: "icon-uil-moon -m-2px text-18px"
                                }, null, -1)])),
                                _: 1
                            }), ae(g, {
                                class: "!basis-full !flex",
                                value: "auto"
                            }, {
                                default: se(() => t[24] || (t[24] = [at("OS Sync")])),
                                _: 1
                            })]),
                            _: 1
                        }, 8, ["modelValue"])]), ae(w, null, {
                            default: se(() => [_t(U("div", bY, [U("div", yY, [U("div", xY, me(e.$t("InfoBar.quickSettings.sidebarTheme")), 1), ae(y, {
                                class: "radio-icons !flex svg:w-20px svg:h-20px svg:-mx-5px svg:-my-5px !children:children:w-full",
                                modelValue: l.sidebarIsDark,
                                "onUpdate:modelValue": t[4] || (t[4] = V => l.sidebarIsDark = V)
                            }, {
                                default: se(() => [ae(g, {
                                    class: "!basis-1/2",
                                    value: !1
                                }, {
                                    default: se(() => t[25] || (t[25] = [U("div", {
                                        class: "icon-uil-sun -m-2px text-18px"
                                    }, null, -1)])),
                                    _: 1
                                }), ae(g, {
                                    class: "!basis-1/2",
                                    value: !0
                                }, {
                                    default: se(() => t[26] || (t[26] = [U("div", {
                                        class: "icon-uil-moon -m-2px text-18px"
                                    }, null, -1)])),
                                    _: 1
                                })]),
                                _: 1
                            }, 8, ["modelValue"])])], 512), [[ss, l.theme === "light"]])]),
                            _: 1
                        }), U("div", wY, [U("div", SY, me(e.$t("InfoBar.quickSettings.UIEffects")), 1), ae(y, {
                            class: "!flex !children:flex-1",
                            modelValue: l.wrapperEnableUIEffects,
                            "onUpdate:modelValue": t[5] || (t[5] = V => l.wrapperEnableUIEffects = V)
                        }, {
                            default: se(() => [ae(g, {
                                class: "!children:w-full",
                                value: !1
                            }, {
                                default: se(() => [U("span", null, me(e.$t("InfoBar.quickSettings.disable")), 1)]),
                                _: 1
                            }), ae(g, {
                                class: "!children:w-full",
                                value: !0
                            }, {
                                default: se(() => [U("span", null, me(e.$t("InfoBar.quickSettings.enable")), 1)]),
                                _: 1
                            })]),
                            _: 1
                        }, 8, ["modelValue"])]), U("section", _Y, [ae(I, {
                            class: "max-h-53px gap-5px transition duration-250 w-full children:flex-row svg:w-20px svg:h-20px svg:-mx-5px svg:-my-5px",
                            type: e.findMinerValue ? "primary" : "default",
                            style: kt(e.findMinerValue ? "animation: blink infinite 2s ease-out;" : ""),
                            onClick: t[6] || (t[6] = V => l.switcher = !l.switcher)
                        }, {
                            default: se(() => [t[27] || (t[27] = U("div", {
                                class: "icon-uil-focus-target !m-5px text-18px"
                            }, null, -1)), e.findMinerValue ? (Z(),
                                ye("span", CY, me(e.$t("StatusBar.status.findMiner")), 1)) : (Z(),
                                ye("span", kY, me(e.$t("Sidebar.menu.findMiner")), 1))]),
                            _: 1
                        }, 8, ["type", "style"])])])]),
                        _: 1
                    }, 8, ["title"]), ae(v, {
                        class: "!m-0px pr-10px",
                        direction: "vertical"
                    })]),
                    _: 1
                }), ae(F, {
                    style: {
                        display: "flex"
                    },
                    class: he({
                        dn: !e.isAuth
                    })
                }, {
                    default: se(() => [e.isChanged ? (Z(),
                        Te(I, {
                            key: 0,
                            type: "primary",
                            size: "default",
                            onClick: l.submitted
                        }, {
                            default: se(() => [t[28] || (t[28] = U("span", {
                                class: "icon-uil-check"
                            }, null, -1)), U("span", AY, me(e.$t("NavBar.action.save")), 1)]),
                            _: 1
                        }, 8, ["onClick"])) : e.isApply ? (Z(),
                        Te(I, {
                            key: 1,
                            type: "danger",
                            size: "default",
                            onClick: t[7] || (t[7] = V => l.handler("apply"))
                        }, {
                            default: se(() => [t[29] || (t[29] = U("div", {
                                class: "icon-uil-sync"
                            }, null, -1)), U("span", EY, me(e.$t("NavBar.action.apply")), 1)]),
                            _: 1
                        })) : ke("", !0), ae(O, {
                        trigger: "click",
                        class: he({
                            dn: !e.isAuth
                        })
                    }, {
                        dropdown: se(() => [ae(M, {
                            class: "!children:flex !children:items-center"
                        }, {
                            default: se(() => [e.status === "initializing" || e.status === "mining" || e.status === "auto-tuning" ? (Z(),
                                Te(P, {
                                    key: 0,
                                    onClick: t[8] || (t[8] = V => l.handler("stop"))
                                }, {
                                    default: se(() => [t[31] || (t[31] = U("div", {
                                        class: "icon-uil-pause-circle mr-5px bg-current"
                                    }, null, -1)), U("span", null, me(e.$t("NavBar.action.stopped")), 1)]),
                                    _: 1
                                })) : ke("", !0), e.status === "stopped" || e.status === "error" ? (Z(),
                                Te(P, {
                                    key: 1,
                                    onClick: t[9] || (t[9] = V => l.handler("start"))
                                }, {
                                    default: se(() => [t[32] || (t[32] = U("div", {
                                        class: "icon-uil-play-circle mr-5px bg-current"
                                    }, null, -1)), U("span", null, me(e.$t("NavBar.action.start")), 1)]),
                                    _: 1
                                })) : ke("", !0), ae(P, {
                                class: "!text-$el-color-primary",
                                onClick: t[10] || (t[10] = V => l.handler("restart"))
                            }, {
                                default: se(() => [t[33] || (t[33] = U("div", {
                                    class: "icon-uil-refresh mr-5px bg-current"
                                }, null, -1)), U("span", null, me(e.$t("NavBar.action.restart")), 1)]),
                                _: 1
                            }), ae(v, {
                                class: "!my-5px"
                            }), ae(P, {
                                class: "!text-$el-color-danger",
                                onClick: t[11] || (t[11] = V => l.handler("reboot"))
                            }, {
                                default: se(() => [t[34] || (t[34] = U("div", {
                                    class: "icon-uil-power mr-5px bg-current"
                                }, null, -1)), U("span", null, me(e.$t("NavBar.action.reboot")), 1)]),
                                _: 1
                            })]),
                            _: 1
                        })]),
                        default: se(() => [ae(I, {
                            type: !e.isChanged && e.isApply ? "danger" : "primary",
                            size: "default",
                            class: he({
                                FixRadius: !e.isChanged && !e.isApply
                            })
                        }, {
                            default: se(() => t[30] || (t[30] = [U("div", {
                                class: "icon-uil-power"
                            }, null, -1), U("div", {
                                class: "icon-uil-angle-down -mx-5px"
                            }, null, -1)])),
                            _: 1
                        }, 8, ["type", "class"])]),
                        _: 1
                    }, 8, ["class"])]),
                    _: 1
                }, 8, ["class"]), ae(I, {
                    type: "primary",
                    size: "default",
                    class: he({
                        dn: e.isAuth
                    }),
                    onClick: t[12] || (t[12] = V => e.$store.commit("ui/dialogUnLockIsVisible", !0))
                }, {
                    default: se(() => [t[35] || (t[35] = U("div", {
                        class: "icon-uil-lock-alt"
                    }, null, -1)), U("span", TY, me(e.$t("NavBar.action.unlockUI")), 1), e.unLockMuchAttempts.isProcess ? (Z(),
                        ye("span", IY, "(" + me(e.$duration(e.unLockMuchAttempts.unlockTimeInUnix).format("HH[h] mm[m] ss[s]")) + ")", 1)) : ke("", !0)]),
                    _: 1
                }, 8, ["class"]), ae(p, {
                    placement: "bottom",
                    effect: "light",
                    content: e.$t("NavBar.action.lockUI"),
                    "show-after": 1e3,
                    disabled: !!e.less980
                }, {
                    default: se(() => [ae(I, {
                        type: "danger",
                        size: "default",
                        class: he({
                            dn: !e.isAuth
                        }),
                        onClick: t[13] || (t[13] = V => e.$store.commit("ui/dialogLockIsVisible", !0))
                    }, {
                        default: se(() => t[36] || (t[36] = [U("div", {
                            class: "icon-uil-unlock-alt"
                        }, null, -1)])),
                        _: 1
                    }, 8, ["class"])]),
                    _: 1
                }, 8, ["content", "disabled"]), e.less1000 || !e.isInfobarFixed ? (Z(),
                    Te(p, {
                        key: 0,
                        placement: "bottom",
                        effect: "light",
                        content: e.$t("NavBar.infoBarTooltip"),
                        "show-after": 1400,
                        disabled: !!e.less980
                    }, {
                        default: se(() => [ae(I, {
                            class: "hidden-xs-only",
                            type: "info",
                            size: "default",
                            onClick: l.unhideInfobar
                        }, {
                            default: se(() => t[37] || (t[37] = [U("div", {
                                class: "icon-uil-web-section"
                            }, null, -1)])),
                            _: 1
                        }, 8, ["onClick"])]),
                        _: 1
                    }, 8, ["content", "disabled"])) : ke("", !0)])) : ke("", !0)]),
            _: 1
        })
}

const LY = {
    components: {
        IconButton: Mo
    },
    data: () => ({
        less980: Ti,
        more1200: aY,
        btw700and1299: nY,
        less1480: C_,
        less1000: k_,
        input: "",
        pathAuth: "",
        noActiveWidgets: !1
    }),
    computed: {
        ...ls("auth", ["isAuth", "unLockMuchAttempts"]),
        ...ls("settings", ["isLoadingGet", "isLoadingPut", "changes"]),
        ...In("settings", ["isChanged"]),
        ...ls("summary", ["status", "statusTime", "isApply"]),
        ...In("summary", ["minerDataIsNull"]),
        ...ls("findMiner", ["isLoading", "value"]),
        ...In("findMiner", ["findMinerValue"]),
        ...ls("ui", ["sidebarIsCollapsed", "sidebarIsUnhidden", "infobarIsUnhidden", "editLayout", "isInfobarFixed"]),
        Heading() {
            const e = this.$route.matched[this.$route.matched.length - 2];
            let t = "";
            return this.$route.meta.useParentHeading ? t = e.name || e.meta.headingLabel : t = this.$route.name,
                t ? Rt.global.t(`Route.${t}`) : ""
        },
        columnMode: {
            get() {
                return this.$store.state.ui.isColumnMode
            },
            set(e) {
                this.$store.commit("ui/isColumnMode", e)
            }
        },
        displayChipsNumber: {
            get() {
                return this.$store.state.ui.displayChipsNumber
            },
            set(e) {
                this.$store.commit("ui/displayChipsNumber", e)
            }
        },
        switcher: {
            get() {
                return this.value
            },
            set(e) {
                this.toggleFind(e)
            }
        },
        locale: {
            get() {
                return this.$store.state.ui.locale
            },
            set(e) {
                this.$store.commit("ui/locale", e),
                this.isAuth && this.$store.dispatch("settings/saveUI", {
                    locale: e
                })
            }
        },
        theme: {
            get() {
                return this.$store.state.ui.theme
            },
            set(e) {
                this.$store.dispatch("ui/changeTheme", e),
                this.isAuth && this.$store.dispatch("settings/saveUI", {
                    theme: e
                })
            }
        },
        sidebarIsDark: {
            get() {
                return this.$store.state.ui.sidebarIsDark
            },
            set(e) {
                this.$store.commit("ui/sidebarIsDark", e),
                this.isAuth && this.$store.dispatch("settings/saveUI", {
                    sidebarIsDark: e
                })
            }
        },
        wrapperEnableUIEffects: {
            get() {
                return !this.$store.state.ui.enableUIEffects
            },
            set(e) {
                this.$store.commit("ui/enableUIEffects", !e),
                this.isAuth && this.$store.dispatch("settings/saveUI", {
                    enableUIEffects: !e
                })
            }
        }
    },
    mounted() {
        const e = this.$store.state.ui
            , t = {
            regional: {
                locale: e.locale
            },
            ui: {
                theme: e.theme,
                sidebarIsDark: e.sidebarIsDark,
                enableUIEffects: e.enableUIEffects
            }
        };
        this.$store.commit("settings/general", t),
            this.$store.commit("settings/oldData", {
                general: t
            })
    },
    methods: {
        ...Zn("ui", ["openDialog"]),
        ...Zn("settings", ["apply", "submit", "restartMiner"]),
        ...Zn("findMiner", ["toggleFind"]),
        collapseSidebar() {
            this.$store.commit("ui/sidebarIsCollapsed", !0),
                this.$store.commit("ui/sidebarIsUnhidden", !1)
        },
        unhideSidebar() {
            this.$store.commit("ui/sidebarIsCollapsed", !1),
                this.$store.commit("ui/sidebarIsUnhidden", !0)
        },
        unhideInfobar() {
            this.$store.commit("ui/infobarIsUnhidden", !this.infobarIsUnhidden)
        },
        submitted() {
            const e = JSON.parse(JSON.stringify(this.changes));
            this.submit(e)
        },
        handler(e) {
            e === "reboot" ? this.openDialog({
                dialog: "restart",
                type: e
            }) : e === "apply" ? this.apply() : (this.$store.commit("ui/dialogRestartType", e),
                this.restartMiner())
        },
        editLayoutClick() {
            this.$store.commit("ui/editLayout", !0)
        }
    }
}
    , E_ = fs(LY, [["render", PY], ["__scopeId", "data-v-f1bf9e6a"]]);
var T_ = {
    exports: {}
};
const MY = NB(bE);
(function (e, t) {
        (function (s, a) {
                e.exports = a(MY)
            }
        )(typeof self < "u" ? self : fg, function (s) {
            return function () {
                var a = {
                    365: function (p, g, y) {
                        y.r(g);
                        var v = y(81)
                            , w = y.n(v)
                            , C = y(645)
                            , T = y.n(C)
                            , I = T()(w());
                        I.push([p.id, ".resizable-component[data-v-3de5149f]{position:relative}.resizable-component>.resizable-r[data-v-3de5149f]{z-index:90;cursor:e-resize;top:0;height:100%}.resizable-component>.resizable-r[data-v-3de5149f],.resizable-component>.resizable-rb[data-v-3de5149f]{display:block;position:absolute;touch-action:none;user-select:none;-moz-user-select:none;-webkit-user-select:none;width:12px;right:-6px}.resizable-component>.resizable-rb[data-v-3de5149f]{cursor:se-resize;height:12px;bottom:-6px;z-index:91}.resizable-component>.resizable-b[data-v-3de5149f]{z-index:90;cursor:s-resize;width:100%;left:0}.resizable-component>.resizable-b[data-v-3de5149f],.resizable-component>.resizable-lb[data-v-3de5149f]{display:block;position:absolute;touch-action:none;user-select:none;-moz-user-select:none;-webkit-user-select:none;height:12px;bottom:-6px}.resizable-component>.resizable-lb[data-v-3de5149f]{cursor:sw-resize;width:12px;left:-6px;z-index:91}.resizable-component>.resizable-l[data-v-3de5149f]{z-index:90;cursor:w-resize;height:100%;top:0}.resizable-component>.resizable-l[data-v-3de5149f],.resizable-component>.resizable-lt[data-v-3de5149f]{display:block;position:absolute;touch-action:none;user-select:none;-moz-user-select:none;-webkit-user-select:none;width:12px;left:-6px}.resizable-component>.resizable-lt[data-v-3de5149f]{cursor:nw-resize;height:12px;top:-6px;z-index:91}.resizable-component>.resizable-t[data-v-3de5149f]{z-index:90;cursor:n-resize;width:100%;left:0}.resizable-component>.resizable-rt[data-v-3de5149f],.resizable-component>.resizable-t[data-v-3de5149f]{display:block;position:absolute;touch-action:none;user-select:none;-moz-user-select:none;-webkit-user-select:none;height:12px;top:-6px}.resizable-component>.resizable-rt[data-v-3de5149f]{cursor:ne-resize;width:12px;right:-6px;z-index:91}", ""]),
                            g.default = I
                    },
                    645: function (p) {
                        p.exports = function (g) {
                            var y = [];
                            return y.toString = function () {
                                return this.map(function (v) {
                                    var w = ""
                                        , C = typeof v[5] < "u";
                                    return v[4] && (w += "@supports (".concat(v[4], ") {")),
                                    v[2] && (w += "@media ".concat(v[2], " {")),
                                    C && (w += "@layer".concat(v[5].length > 0 ? " ".concat(v[5]) : "", " {")),
                                        w += g(v),
                                    C && (w += "}"),
                                    v[2] && (w += "}"),
                                    v[4] && (w += "}"),
                                        w
                                }).join("")
                            }
                                ,
                                y.i = function (v, w, C, T, I) {
                                    typeof v == "string" && (v = [[null, v, void 0]]);
                                    var A = {};
                                    if (C)
                                        for (var R = 0; R < this.length; R++) {
                                            var P = this[R][0];
                                            P != null && (A[P] = !0)
                                        }
                                    for (var M = 0; M < v.length; M++) {
                                        var O = [].concat(v[M]);
                                        C && A[O[0]] || (typeof I < "u" && (typeof O[5] > "u" || (O[1] = "@layer".concat(O[5].length > 0 ? " ".concat(O[5]) : "", " {").concat(O[1], "}")),
                                            O[5] = I),
                                        w && (O[2] && (O[1] = "@media ".concat(O[2], " {").concat(O[1], "}")),
                                            O[2] = w),
                                        T && (O[4] ? (O[1] = "@supports (".concat(O[4], ") {").concat(O[1], "}"),
                                            O[4] = T) : O[4] = "".concat(T)),
                                            y.push(O))
                                    }
                                }
                                ,
                                y
                        }
                    },
                    81: function (p) {
                        p.exports = function (g) {
                            return g[1]
                        }
                    },
                    82: function (p, g) {
                        g.Z = (y, v) => {
                            const w = y.__vccOpts || y;
                            for (const [C, T] of v)
                                w[C] = T;
                            return w
                        }
                    },
                    733: function (p, g, y) {
                        var v = y(365);
                        v.__esModule && (v = v.default),
                        typeof v == "string" && (v = [[p.id, v, ""]]),
                        v.locals && (p.exports = v.locals);
                        var w = y(650).Z;
                        w("833bf5a8", v, !0, {
                            sourceMap: !1,
                            shadowMode: !1
                        })
                    },
                    650: function (p, g, y) {
                        function v(oe, ve) {
                            for (var be = [], de = {}, J = 0; J < ve.length; J++) {
                                var ue = ve[J]
                                    , fe = ue[0]
                                    , Me = ue[1]
                                    , Xe = ue[2]
                                    , Be = ue[3]
                                    , je = {
                                    id: oe + ":" + J,
                                    css: Me,
                                    media: Xe,
                                    sourceMap: Be
                                };
                                de[fe] ? de[fe].parts.push(je) : be.push(de[fe] = {
                                    id: fe,
                                    parts: [je]
                                })
                            }
                            return be
                        }

                        y.d(g, {
                            Z: function () {
                                return $
                            }
                        });
                        var w = typeof document < "u";
                        if (typeof DEBUG < "u" && DEBUG && !w)
                            throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");
                        var C = {}
                            , T = w && (document.head || document.getElementsByTagName("head")[0])
                            , I = null
                            , A = 0
                            , R = !1
                            , P = function () {
                        }
                            , M = null
                            , O = "data-vue-ssr-id"
                            , F = typeof navigator < "u" && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase());

                        function $(oe, ve, be, de) {
                            R = be,
                                M = de || {};
                            var J = v(oe, ve);
                            return V(J),
                                function (ue) {
                                    for (var fe = [], Me = 0; Me < J.length; Me++) {
                                        var Xe = J[Me]
                                            , Be = C[Xe.id];
                                        Be.refs--,
                                            fe.push(Be)
                                    }
                                    for (ue ? (J = v(oe, ue),
                                        V(J)) : J = [],
                                             Me = 0; Me < fe.length; Me++)
                                        if (Be = fe[Me],
                                        Be.refs === 0) {
                                            for (var je = 0; je < Be.parts.length; je++)
                                                Be.parts[je]();
                                            delete C[Be.id]
                                        }
                                }
                        }

                        function V(oe) {
                            for (var ve = 0; ve < oe.length; ve++) {
                                var be = oe[ve]
                                    , de = C[be.id];
                                if (de) {
                                    de.refs++;
                                    for (var J = 0; J < de.parts.length; J++)
                                        de.parts[J](be.parts[J]);
                                    for (; J < be.parts.length; J++)
                                        de.parts.push(ie(be.parts[J]));
                                    de.parts.length > be.parts.length && (de.parts.length = be.parts.length)
                                } else {
                                    var ue = [];
                                    for (J = 0; J < be.parts.length; J++)
                                        ue.push(ie(be.parts[J]));
                                    C[be.id] = {
                                        id: be.id,
                                        refs: 1,
                                        parts: ue
                                    }
                                }
                            }
                        }

                        function G() {
                            var oe = document.createElement("style");
                            return oe.type = "text/css",
                                T.appendChild(oe),
                                oe
                        }

                        function ie(oe) {
                            var ve, be, de = document.querySelector("style[" + O + '~="' + oe.id + '"]');
                            if (de) {
                                if (R)
                                    return P;
                                de.parentNode.removeChild(de)
                            }
                            if (F) {
                                var J = A++;
                                de = I || (I = G()),
                                    ve = ne.bind(null, de, J, !1),
                                    be = ne.bind(null, de, J, !0)
                            } else
                                de = G(),
                                    ve = le.bind(null, de),
                                    be = function () {
                                        de.parentNode.removeChild(de)
                                    }
                                ;
                            return ve(oe),
                                function (ue) {
                                    if (ue) {
                                        if (ue.css === oe.css && ue.media === oe.media && ue.sourceMap === oe.sourceMap)
                                            return;
                                        ve(oe = ue)
                                    } else
                                        be()
                                }
                        }

                        var te = function () {
                            var oe = [];
                            return function (ve, be) {
                                return oe[ve] = be,
                                    oe.filter(Boolean).join(`
`)
                            }
                        }();

                        function ne(oe, ve, be, de) {
                            var J = be ? "" : de.css;
                            if (oe.styleSheet)
                                oe.styleSheet.cssText = te(ve, J);
                            else {
                                var ue = document.createTextNode(J)
                                    , fe = oe.childNodes;
                                fe[ve] && oe.removeChild(fe[ve]),
                                    fe.length ? oe.insertBefore(ue, fe[ve]) : oe.appendChild(ue)
                            }
                        }

                        function le(oe, ve) {
                            var be = ve.css
                                , de = ve.media
                                , J = ve.sourceMap;
                            if (de && oe.setAttribute("media", de),
                            M.ssrId && oe.setAttribute(O, ve.id),
                            J && (be += `
/*# sourceURL=` + J.sources[0] + " */",
                                be += `
/*# sourceMappingURL=data:application/json;base64,` + btoa(unescape(encodeURIComponent(JSON.stringify(J)))) + " */"),
                                oe.styleSheet)
                                oe.styleSheet.cssText = be;
                            else {
                                for (; oe.firstChild;)
                                    oe.removeChild(oe.firstChild);
                                oe.appendChild(document.createTextNode(be))
                            }
                        }
                    },
                    203: function (p) {
                        p.exports = s
                    }
                }
                    , o = {};

                function l(p) {
                    var g = o[p];
                    if (g !== void 0)
                        return g.exports;
                    var y = o[p] = {
                        id: p,
                        exports: {}
                    };
                    return a[p](y, y.exports, l),
                        y.exports
                }

                (function () {
                        l.n = function (p) {
                            var g = p && p.__esModule ? function () {
                                        return p.default
                                    }
                                    : function () {
                                        return p
                                    }
                            ;
                            return l.d(g, {
                                a: g
                            }),
                                g
                        }
                    }
                )(),
                    function () {
                        l.d = function (p, g) {
                            for (var y in g)
                                l.o(g, y) && !l.o(p, y) && Object.defineProperty(p, y, {
                                    enumerable: !0,
                                    get: g[y]
                                })
                        }
                    }(),
                    function () {
                        l.o = function (p, g) {
                            return Object.prototype.hasOwnProperty.call(p, g)
                        }
                    }(),
                    function () {
                        l.r = function (p) {
                            typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(p, Symbol.toStringTag, {
                                value: "Module"
                            }),
                                Object.defineProperty(p, "__esModule", {
                                    value: !0
                                })
                        }
                    }(),
                    function () {
                        l.p = ""
                    }();
                var u = {};
                return function () {
                    if (l.r(u),
                        l.d(u, {
                            default: function () {
                                return M
                            }
                        }),
                    typeof window < "u") {
                        var p = window.document.currentScript
                            , g = p && p.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
                        g && (l.p = g[1])
                    }
                    var y = l(203);

                    function v(O, F, $, V, G, ie) {
                        return (0,
                            y.openBlock)(),
                            (0,
                                y.createElementBlock)("div", {
                                ref: "parent",
                                class: "resizable-component",
                                style: (0,
                                    y.normalizeStyle)(ie.style)
                            }, [(0,
                                y.renderSlot)(O.$slots, "default", {}, void 0, !0), ((0,
                                y.openBlock)(!0),
                                (0,
                                    y.createElementBlock)(y.Fragment, null, (0,
                                    y.renderList)($.active, te => (0,
                                    y.withDirectives)(((0,
                                    y.openBlock)(),
                                    (0,
                                        y.createElementBlock)("div", {
                                        key: te,
                                        class: (0,
                                            y.normalizeClass)("resizable-" + te)
                                    }, null, 2)), [[y.vShow, !$.maximize]])), 128))], 4)
                    }

                    const w = {
                        "resizable-r": {
                            bit: 1,
                            cursor: "e-resize"
                        },
                        "resizable-rb": {
                            bit: 3,
                            cursor: "se-resize"
                        },
                        "resizable-b": {
                            bit: 2,
                            cursor: "s-resize"
                        },
                        "resizable-lb": {
                            bit: 6,
                            cursor: "sw-resize"
                        },
                        "resizable-l": {
                            bit: 4,
                            cursor: "w-resize"
                        },
                        "resizable-lt": {
                            bit: 12,
                            cursor: "nw-resize"
                        },
                        "resizable-t": {
                            bit: 8,
                            cursor: "n-resize"
                        },
                        "resizable-rt": {
                            bit: 9,
                            cursor: "ne-resize"
                        },
                        "drag-el": {
                            bit: 15,
                            cursor: "pointer"
                        }
                    }
                        , C = {
                        l: 1,
                        t: 2,
                        w: 4,
                        h: 8
                    };
                    var T = {
                        name: "VResizable",
                        props: {
                            width: {
                                default: void 0,
                                type: [Number, String]
                            },
                            minWidth: {
                                default: 0,
                                type: Number
                            },
                            maxWidth: {
                                default: void 0,
                                type: Number
                            },
                            height: {
                                default: void 0,
                                type: [Number, String]
                            },
                            minHeight: {
                                default: 0,
                                type: Number
                            },
                            maxHeight: {
                                default: void 0,
                                type: Number
                            },
                            left: {
                                default: 0,
                                type: [Number, String]
                            },
                            top: {
                                default: 0,
                                type: [Number, String]
                            },
                            active: {
                                default: () => ["r", "rb", "b", "lb", "l", "lt", "t", "rt"],
                                validator: O => ["r", "rb", "b", "lb", "l", "lt", "t", "rt"].filter(F => O.indexOf(F) !== -1).length === O.length,
                                type: Array
                            },
                            fitParent: {
                                default: !1,
                                type: Boolean
                            },
                            dragSelector: {
                                default: void 0,
                                type: String
                            },
                            maximize: {
                                default: !1,
                                type: Boolean
                            },
                            disableAttributes: {
                                default: () => [],
                                validator: O => ["l", "t", "w", "h"].filter(F => O.indexOf(F) !== -1).length === O.length,
                                type: Array
                            }
                        },
                        emits: ["mount", "destroy", "resize:start", "resize:move", "resize:end", "drag:start", "drag:move", "drag:end", "maximize"],
                        data() {
                            return {
                                w: this.width,
                                h: this.height,
                                minW: this.minWidth,
                                minH: this.minHeight,
                                maxW: this.maxWidth,
                                maxH: this.maxHeight,
                                l: this.left,
                                t: this.top,
                                mouseX: 0,
                                mouseY: 0,
                                offsetX: 0,
                                offsetY: 0,
                                parent: {
                                    width: 0,
                                    height: 0
                                },
                                resizeState: 0,
                                dragElements: [],
                                dragState: !1,
                                calcMap: 15
                            }
                        },
                        computed: {
                            style() {
                                return {
                                    ...this.calcMap & C.w && {
                                        width: typeof this.w == "number" ? this.w + "px" : this.w
                                    },
                                    ...this.calcMap & C.h && {
                                        height: typeof this.h == "number" ? this.h + "px" : this.h
                                    },
                                    ...this.calcMap & C.l && {
                                        left: typeof this.l == "number" ? this.l + "px" : this.l
                                    },
                                    ...this.calcMap & C.t && {
                                        top: typeof this.t == "number" ? this.t + "px" : this.t
                                    }
                                }
                            }
                        },
                        watch: {
                            maxWidth(O) {
                                this.maxW = O
                            },
                            maxHeight(O) {
                                this.maxH = O
                            },
                            minWidth(O) {
                                this.minW = O
                            },
                            minHeight(O) {
                                this.minH = O
                            },
                            width(O) {
                                typeof O == "number" && (this.w = O)
                            },
                            height(O) {
                                typeof O == "number" && (this.h = O)
                            },
                            left(O) {
                                typeof O == "number" && (this.l = O)
                            },
                            top(O) {
                                typeof O == "number" && (this.t = O)
                            },
                            dragSelector(O) {
                                this.setupDragElements(O)
                            },
                            maximize(O) {
                                this.setMaximize(O),
                                    this.emitEvent("maximize", {
                                        state: O
                                    })
                            }
                        },
                        mounted() {
                            this.width ? this.width !== "auto" && typeof this.width != "number" && (this.w = this.$el.clientWidth) : this.w = this.$el.parentElement.clientWidth,
                                this.height ? this.height !== "auto" && typeof this.height != "number" && (this.h = this.$el.clientHeight) : this.h = this.$el.parentElement.clientHeight,
                            typeof this.left != "number" && (this.l = this.$el.offsetLeft - this.$el.parentElement.offsetLeft),
                            typeof this.top != "number" && (this.t = this.$el.offsetTop - this.$el.parentElement.offsetTop),
                            this.minW && this.w < this.minW && (this.w = this.minW),
                            this.minH && this.h < this.minH && (this.h = this.minH),
                            this.maxW && this.w > this.maxW && (this.w = this.maxW),
                            this.maxH && this.h > this.maxH && (this.h = this.maxH),
                                this.setMaximize(this.maximize),
                                this.setupDragElements(this.dragSelector),
                                this.disableAttributes.forEach(O => {
                                        switch (O) {
                                            case "l":
                                                this.calcMap &= ~C.l;
                                                break;
                                            case "t":
                                                this.calcMap &= ~C.t;
                                                break;
                                            case "w":
                                                this.calcMap &= ~C.w;
                                                break;
                                            case "h":
                                                this.calcMap &= ~C.h
                                        }
                                    }
                                ),
                                document.documentElement.addEventListener("mousemove", this.handleMove, !0),
                                document.documentElement.addEventListener("mousedown", this.handleDown, !0),
                                document.documentElement.addEventListener("mouseup", this.handleUp, !0),
                                document.documentElement.addEventListener("touchmove", this.handleMove, !0),
                                document.documentElement.addEventListener("touchstart", this.handleDown, !0),
                                document.documentElement.addEventListener("touchend", this.handleUp, !0),
                                this.emitEvent("mount")
                        },
                        beforeUnmount() {
                            document.documentElement.removeEventListener("mousemove", this.handleMove, !0),
                                document.documentElement.removeEventListener("mousedown", this.handleDown, !0),
                                document.documentElement.removeEventListener("mouseup", this.handleUp, !0),
                                document.documentElement.removeEventListener("touchmove", this.handleMove, !0),
                                document.documentElement.removeEventListener("touchstart", this.handleDown, !0),
                                document.documentElement.removeEventListener("touchend", this.handleUp, !0),
                                this.emitEvent("destroy")
                        },
                        methods: {
                            setMaximize(O) {
                                const F = this.$el.parentElement;
                                O ? (this.prevState = {
                                    w: this.w,
                                    h: this.h,
                                    l: this.l,
                                    t: this.t
                                },
                                    this.t = this.l = 0,
                                    this.w = F.clientWidth,
                                    this.h = F.clientHeight) : this.restoreSize()
                            },
                            restoreSize() {
                                this.prevState && (this.l = this.prevState.l,
                                    this.t = this.prevState.t,
                                    this.h = this.prevState.h,
                                    this.w = this.prevState.w)
                            },
                            setupDragElements(O) {
                                this.$el.querySelectorAll(".drag-el").forEach(V => {
                                        V.classList.remove("drag-el")
                                    }
                                );
                                const $ = this.$el.querySelectorAll(O);
                                $.forEach(V => {
                                        V.classList.add("drag-el")
                                    }
                                ),
                                    this.dragElements = Array.prototype.slice.call($)
                            },
                            emitEvent(O, F) {
                                this.$emit(O, {
                                    eventName: O,
                                    left: this.l,
                                    top: this.t,
                                    width: this.w,
                                    height: this.h,
                                    cmp: this,
                                    ...F
                                })
                            },
                            handleMove(O) {
                                if (this.resizeState !== 0) {
                                    let F, $;
                                    if (this.dragState || (isNaN(this.w) && (this.w = this.$el.clientWidth),
                                    isNaN(this.h) && (this.h = this.$el.clientHeight)),
                                        O.touches && O.touches.length >= 0 ? (F = O.touches[0].clientY,
                                            $ = O.touches[0].clientX) : (F = O.clientY,
                                            $ = O.clientX),
                                    this.maximize && this.prevState) {
                                        const te = this.parent.width
                                            , ne = this.parent.height;
                                        this.restoreSize(),
                                            this.prevState = void 0,
                                            this.t = F > ne / 2 ? ne - this.h : 0,
                                            this.l = $ > te / 2 ? te - this.w : 0,
                                            this.emitEvent("maximize", {
                                                state: !1
                                            })
                                    }
                                    let V = $ - this.mouseX + this.offsetX
                                        , G = F - this.mouseY + this.offsetY;
                                    if (this.$el.getBoundingClientRect) {
                                        const te = this.$el.getBoundingClientRect()
                                            , ne = te.width / this.$el.offsetWidth || 1
                                            , le = te.height / this.$el.offsetHeight || 1;
                                        V /= ne,
                                            G /= le
                                    }
                                    this.offsetX = this.offsetY = 0,
                                    this.resizeState & w["resizable-r"].bit && (!this.dragState && this.w + V < this.minW ? this.offsetX = V - (V = this.minW - this.w) : !this.dragState && this.maxW && this.w + V > this.maxW && (!this.fitParent || this.w + this.l < this.parent.width) ? this.offsetX = V - (V = this.maxW - this.w) : this.fitParent && this.l + this.w + V > this.parent.width && (this.offsetX = V - (V = this.parent.width - this.l - this.w)),
                                    this.calcMap & C.w && (this.w += this.dragState ? 0 : V)),
                                    this.resizeState & w["resizable-b"].bit && (!this.dragState && this.h + G < this.minH ? this.offsetY = G - (G = this.minH - this.h) : !this.dragState && this.maxH && this.h + G > this.maxH && (!this.fitParent || this.h + this.t < this.parent.height) ? this.offsetY = G - (G = this.maxH - this.h) : this.fitParent && this.t + this.h + G > this.parent.height && (this.offsetY = G - (G = this.parent.height - this.t - this.h)),
                                    this.calcMap & C.h && (this.h += this.dragState ? 0 : G)),
                                    this.resizeState & w["resizable-l"].bit && (!this.dragState && this.w - V < this.minW ? this.offsetX = V - (V = this.w - this.minW) : !this.dragState && this.maxW && this.w - V > this.maxW && this.l >= 0 ? this.offsetX = V - (V = this.w - this.maxW) : this.fitParent && this.l + V < 0 && (this.offsetX = V - (V = -this.l)),
                                    this.calcMap & C.l && (this.l += V),
                                    this.calcMap & C.w && (this.w -= this.dragState ? 0 : V)),
                                    this.resizeState & w["resizable-t"].bit && (!this.dragState && this.h - G < this.minH ? this.offsetY = G - (G = this.h - this.minH) : !this.dragState && this.maxH && this.h - G > this.maxH && this.t >= 0 ? this.offsetY = G - (G = this.h - this.maxH) : this.fitParent && this.t + G < 0 && (this.offsetY = G - (G = -this.t)),
                                    this.calcMap & C.t && (this.t += G),
                                    this.calcMap & C.h && (this.h -= this.dragState ? 0 : G)),
                                        this.mouseX = $,
                                        this.mouseY = F;
                                    const ie = this.dragState ? "drag:move" : "resize:move";
                                    this.emitEvent(ie)
                                }
                            },
                            handleDown(O) {
                                if (!O.target.closest || O.target.closest(".resizable-component") === this.$refs.parent) {
                                    for (let F in w)
                                        if (this.$el.contains(O.target) && (O.target.closest && O.target.closest(`.${F}`) || O.target.classList.contains(F))) {
                                            F === "drag-el" && (this.dragState = !0),
                                                document.body.style.cursor = w[F].cursor,
                                                O.touches && O.touches.length >= 1 ? (this.mouseX = O.touches[0].clientX,
                                                    this.mouseY = O.touches[0].clientY) : (O.preventDefault && O.preventDefault(),
                                                    this.mouseX = O.clientX,
                                                    this.mouseY = O.clientY),
                                                this.offsetX = this.offsetY = 0,
                                                this.resizeState = w[F].bit,
                                                this.parent.height = this.$el.parentElement.clientHeight,
                                                this.parent.width = this.$el.parentElement.clientWidth;
                                            const $ = this.dragState ? "drag:start" : "resize:start";
                                            this.emitEvent($);
                                            break
                                        }
                                }
                            },
                            handleUp() {
                                if (this.resizeState !== 0) {
                                    this.resizeState = 0,
                                        document.body.style.cursor = "";
                                    const O = this.dragState ? "drag:end" : "resize:end";
                                    this.emitEvent(O),
                                        this.dragState = !1
                                }
                            }
                        }
                    }
                        , I = (l(733),
                        l(82))
                        , R = (0,
                        I.Z)(T, [["render", v], ["__scopeId", "data-v-3de5149f"]])
                        , P = R
                        , M = P
                }(),
                    u
            }()
        })
    }
)(T_);
var OY = T_.exports;
const RY = pg(OY)
    , NY = {
    class: "TextArea -mt-10px"
};

function DY(e, t, s, a, o, l) {
    const u = _n
        , p = _d;
    return _t((Z(),
        ye("div", NY, [U("pre", {
            class: "targetScroll",
            ref: "preElement"
        }, me(e.logs), 513), _t(ae(u, {
            class: "ScrollDownNew animate-fade-in",
            onClick: e.scrollToBottom
        }, {
            default: se(() => t[0] || (t[0] = [U("div", {
                class: "icon-uil-angle-down text-22px"
            }, null, -1)])),
            _: 1
        }, 8, ["onClick"]), [[ss, e.isShowButton]])])), [[p, e.isLoading]])
}

const FY = Ce({
    name: "LogOutputArea",
    props: ["logs", "isLoading"],
    data: () => ({
        isShowButton: !1
    }),
    methods: {
        handleScroll() {
            const e = this.$refs.preElement;
            this.isShowButton = e.scrollTop + e.clientHeight < e.scrollHeight
        },
        scrollToBottom() {
            const e = this.$refs.preElement
                , t = e.scrollHeight
                , s = 500
                , a = performance.now()
                , o = e.scrollTop;

            function l(u) {
                const p = u - a;
                if (p < s) {
                    const g = p / s;
                    e.scrollTop = o + g * (t - o),
                        requestAnimationFrame(l)
                } else
                    e.scrollTop = t
            }

            requestAnimationFrame(l)
        }
    },
    watch: {
        logs() {
            this.isShowButton || this.$nextTick(() => {
                    $Y(this.$refs.preElement)
                }
            )
        }
    },
    mounted() {
        this.$refs.preElement.addEventListener("scroll", this.handleScroll)
    },
    beforeUnmount() {
        this.$refs.preElement.removeEventListener("scroll", this.handleScroll)
    }
});

function $Y(e) {
    e.scrollTop = e.scrollHeight
}

const I_ = fs(FY, [["render", DY], ["__scopeId", "data-v-7a0d1ae4"]])
    , BY = {
    class: "RightBlock px-10px flex <sm:flex-1 h-full items-center min-w-150px"
}
    , HY = {
    class: "text-$el-color-danger font-bold"
}
    , VY = {
    class: "flex gap-5px leading-15px"
}
    , zY = ["dir"];

function WY(e, t, s, a, o, l) {
    const u = Ai
        , p = Ei
        , g = wd
        , y = Po;
    return Z(),
        ye("div", BY, [U("section", {
            class: "Status cursor-pointer",
            onClick: t[0] || (t[0] = v => l.switcher = !l.switcher)
        }, [ae(u, {
            effect: "light",
            placement: "top",
            content: e.$t("StatusBar.status.findMiner"),
            "show-after": 300,
            disabled: e.findMinerValue
        }, {
            default: se(() => [U("div", {
                class: he(["icon-uil-focus-target hover:bg-$el-color-primary", {
                    "bg-$el-color-primary animate-ease animate-pulse animate-delay-1000": e.findMinerValue
                }])
            }, null, 2)]),
            _: 1
        }, 8, ["content", "disabled"]), _t(U("span", {
            class: "hidden-xs-only animate-pulse"
        }, me(e.$t("StatusBar.status.findMiner")), 513), [[ss, e.findMinerValue]]), ae(p, {
            direction: "vertical"
        })]), ae(fn, {
            name: "el-zoom-in-bottom",
            mode: "out-in",
            duration: 800
        }, {
            default: se(() => [e.status ? (Z(),
                ye("div", {
                    key: 0,
                    class: he(["Status", e.status])
                }, [e.status === "failure" ? (Z(),
                    ye(Ct, {
                        key: 0
                    }, [e.error_msg ? (Z(),
                        Te(u, {
                            key: 0,
                            placement: "top",
                            effect: "light",
                            offset: 20,
                            width: 200
                        }, {
                            content: se(() => [U("span", HY, me(e.error_msg), 1)]),
                            default: se(() => [U("span", VY, [t[1] || (t[1] = U("div", {
                                class: "icon-octicon-alert-fill-12 bg-$el-color-danger !text-15px"
                            }, null, -1)), U("span", null, me(e.$t("StatusBar.status.failure")) + "...", 1)])]),
                            _: 1
                        })) : (Z(),
                        ye(Ct, {
                            key: 1
                        }, [t[2] || (t[2] = U("div", {
                            class: "icon-octicon-alert-fill-12 bg-$el-color-danger !text-15px"
                        }, null, -1)), U("span", null, me(e.$t("StatusBar.status.failure")), 1)], 64))], 64)) : (Z(),
                    ye(Ct, {
                        key: 1
                    }, [ae(g, {
                        color: l.progressColor,
                        type: "circle",
                        "define-back-color": "#333",
                        "show-text": !1,
                        percentage: l.progressPercent,
                        strokeWidth: 4,
                        width: 19
                    }, null, 8, ["color", "percentage"]), U("span", {
                        class: he({
                            "hidden-xs-only": e.status === "mining"
                        })
                    }, me(e.$t("StatusBar.status." + e.status)), 3), e.status === "mining" ? (Z(),
                        ye("span", {
                            key: 0,
                            class: "Status_name",
                            dir: e.langDir
                        }, me(l.formatDuration), 9, zY)) : ke("", !0)], 64))], 2)) : ke("", !0)]),
            _: 1
        }), ae(p, {
            direction: "vertical"
        }), ae(y, {
            class: "ml-0px cursor-pointer",
            size: "small",
            effect: "plain",
            onClick: l.unhideInfobar
        }, {
            default: se(() => [at(me(e.getMinerModel), 1)]),
            _: 1
        }, 8, ["onClick"]), ae(y, {
            class: "ml-5px",
            type: "info",
            size: "small",
            effect: "plain"
        }, {
            default: se(() => [at(me(e.platform || e.$t("NA")), 1)]),
            _: 1
        }), e.minerStockInfo && e.minerStockInfo.has_pics ? (Z(),
            Te(y, {
                key: 0,
                class: "ml-5px",
                type: "info",
                size: "small",
                effect: "plain"
            }, {
                default: se(() => t[3] || (t[3] = [at("PIC")])),
                _: 1
            })) : ke("", !0), ae(y, {
            class: "ml-5px cursor-pointer",
            type: e.isStableFirmwareVersion ? "success" : "danger",
            size: "small",
            effect: "plain",
            onClick: l.openDialogReleaseNotes
        }, {
            default: se(() => [at(me(l.firmwareVersion), 1)]),
            _: 1
        }, 8, ["type", "onClick"]), e.install_type === "nand" || e.install_type === "sd" ? (Z(),
            Te(p, {
                key: 1,
                direction: "vertical"
            })) : ke("", !0), e.install_type === "sd" ? (Z(),
            Te(u, {
                key: 2,
                class: "min-w-20px -mx-3px cursor-help",
                effect: "light",
                placement: "top-end",
                content: "Firmware is running from SD Card",
                "show-after": 300,
                offset: 17
            }, {
                default: se(() => t[4] || (t[4] = [U("svg", {
                    width: "20",
                    height: "20",
                    viewBox: "0 0 20 20",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [U("path", {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M16.3 17V3C16.3 2.83432 16.1657 2.7 16 2.7H8.49836C8.42276 2.7 8.34994 2.72855 8.29448 2.77993L3.79611 6.94753C3.73483 7.00431 3.7 7.08406 3.7 7.1676V17C3.7 17.1657 3.83431 17.3 4 17.3H16C16.1657 17.3 16.3 17.1657 16.3 17ZM2.64075 5.70048C2.23222 6.07898 2 6.61068 2 7.1676V17C2 18.1046 2.89543 19 4 19H16C17.1046 19 18 18.1046 18 17V3C18 1.89543 17.1046 1 16 1H8.49836C7.99432 1 7.50886 1.19032 7.13912 1.53288L2.64075 5.70048Z",
                    fill: "#6C7684"
                }), U("path", {
                    d: "M5.07377 14.4526C5.06693 14.9881 5.2891 15.3846 5.74027 15.6421C6.19145 15.8973 6.76339 16.0249 7.45609 16.0249C8.15564 16.0249 8.72188 15.8939 9.15482 15.6318C9.59005 15.3675 9.80766 15.0007 9.80766 14.5312C9.80766 13.9935 9.62992 13.6095 9.27445 13.3794C8.92126 13.147 8.44503 12.9658 7.84574 12.8359C7.30342 12.7243 6.95935 12.6297 6.81352 12.5522C6.66768 12.4748 6.59477 12.3848 6.59477 12.2822C6.59477 12.1546 6.65629 12.0578 6.77934 11.9917C6.90238 11.9256 7.10632 11.8926 7.39115 11.8926C7.67598 11.8926 7.88562 11.9427 8.02006 12.043C8.15678 12.141 8.224 12.2674 8.22172 12.4224V12.4941H9.69486V12.3984C9.69486 11.945 9.48637 11.5736 9.06938 11.2842C8.65238 10.9948 8.10323 10.8501 7.42191 10.8501C6.73604 10.8501 6.18347 10.9834 5.7642 11.25C5.34721 11.5166 5.13871 11.8971 5.13871 12.3916C5.13871 12.8154 5.30733 13.1481 5.64457 13.3896C5.98181 13.6312 6.45577 13.8078 7.06645 13.9194C7.65889 14.0288 8.02234 14.1336 8.15678 14.2339C8.2935 14.3341 8.36186 14.4515 8.36186 14.5859C8.36186 14.7067 8.28894 14.807 8.14311 14.8867C7.99955 14.9642 7.79333 15.0029 7.52445 15.0029C7.20316 15.0029 6.96618 14.9539 6.81352 14.856C6.66313 14.758 6.58793 14.6167 6.58793 14.4321V14.3501H5.07377V14.4526ZM10.3139 15.9258H12.4638C13.3616 15.9258 14.052 15.7196 14.5351 15.3071C15.0182 14.8947 15.2597 14.3057 15.2597 13.54V13.3315C15.2597 12.5659 15.0182 11.978 14.5351 11.5679C14.052 11.1554 13.3616 10.9492 12.4638 10.9492H10.3139V15.9258ZM11.7768 14.8867V11.9951H12.4331C12.8569 11.9951 13.1816 12.1079 13.4072 12.3335C13.6351 12.5568 13.749 12.9032 13.749 13.3726V13.5195C13.749 13.9798 13.6351 14.3228 13.4072 14.5483C13.1816 14.7739 12.8569 14.8867 12.4331 14.8867H11.7768Z",
                    fill: "#6C7684"
                }), U("rect", {
                    x: "7",
                    y: "5",
                    width: "1.80225",
                    height: "3.99463",
                    rx: "0.901123",
                    fill: "#6C7684"
                }), U("rect", {
                    x: "9.98828",
                    y: "5",
                    width: "1.80225",
                    height: "3.99463",
                    rx: "0.901123",
                    fill: "#6C7684"
                }), U("rect", {
                    x: "12.9766",
                    y: "5",
                    width: "1.80225",
                    height: "3.99463",
                    rx: "0.901123",
                    fill: "#6C7684"
                })], -1)])),
                _: 1
            })) : ke("", !0), e.install_type === "nand" ? (Z(),
            Te(u, {
                key: 3,
                effect: "light",
                placement: "top-end",
                content: "Firmware is running from NAND",
                offset: 17,
                "show-after": 300
            }, {
                default: se(() => t[5] || (t[5] = [U("div", {
                    class: "icon-uil-processor cursor-help"
                }, null, -1)])),
                _: 1
            })) : ke("", !0), e.isDebug ? (Z(),
            Te(p, {
                key: 4,
                direction: "vertical"
            })) : ke("", !0), e.isDebug ? (Z(),
            Te(y, {
                key: 5,
                type: "warning",
                effect: "plain",
                size: "small"
            }, {
                default: se(() => t[6] || (t[6] = [U("span", {
                    class: "hidden xxl"
                }, "XXL", -1), U("span", {
                    class: "hidden ~xl:flex"
                }, "XL", -1), U("span", {
                    class: "hidden ~lg:flex"
                }, "LG", -1), U("span", {
                    class: "hidden ~md:flex"
                }, "MD", -1), U("span", {
                    class: "hidden ~sm:flex"
                }, "SM", -1), U("span", {
                    class: "hidden ~xs:flex"
                }, "XS", -1), U("span", {
                    class: "hidden xxs"
                }, "XXS", -1)])),
                _: 1
            })) : ke("", !0)])
}

const fh = {
    colorPrimary: "var(--el-color-primary)",
    colorDanger: "var(--el-color-danger)",
    colorInfo: "var(--el-color-info)"
}
    , vy = 86400
    , UY = 3600
    , YY = {
    name: "status",
    data: () => ({
        emptyProgress: 0,
        fullProgress: 100,
        loaderProgress: 35,
        timerProgress: 0,
        intervalHandler: null
    }),
    computed: {
        ...ls("summary", ["miner_type", "firmware_name", "isLoading", "interval", "timer", "timerBeginTime", "status", "statusTime", "platform", "install_type", "error_msg"]),
        ...ls("ui", ["locale", "langDir", "isDebug"]),
        ...ls("system", ["minerStockInfo"]),
        ...ls("findMiner", ["isLoading", "value"]),
        ...In("findMiner", ["findMinerValue"]),
        ...In("summary", ["getMinerModel", "minerDataIsNull", "getFirmwareVersion", "isStableFirmwareVersion"]),
        switcher: {
            get() {
                return this.value
            },
            set(e) {
                this.toggleFind(e)
            }
        },
        formatDuration() {
            const e = Math.floor(this.$duration(this.statusTime, "seconds").asDays())
                , t = Math.floor(this.$duration(this.statusTime - e * vy, "seconds").asHours())
                , s = Math.floor(this.$duration(this.statusTime - (e * vy + t * UY), "seconds").asMinutes());
            return this.$duration({
                minutes: s,
                hours: t,
                days: e
            }).format(`D[${this.$t("StatusBar.status.d")}] H[${this.$t("StatusBar.status.h")}] m[${this.$t("StatusBar.status.m")}]`)
        },
        progressPercent() {
            let e = 0;
            return this.status === "mining" ? e = this.timerProgress : this.status === "disconnect" || this.status === "failure" ? e = this.fullProgress : this.status === "auto-tuning" || this.status === "initializing" || this.status === "restarting" ? e = this.loaderProgress : (this.status === "stopped" || this.status === "shutting-down") && (e = this.emptyProgress),
                e
        },
        progressColor() {
            let e = "warning";
            return this.status === "mining" || this.status === "initializing" ? e = fh.colorPrimary : this.status === "disconnect" || this.status === "failure" || this.status === "restarting" ? e = fh.colorDanger : this.status === "auto-tuning" ? e = fh.colorInfo : (this.status === "stopped" || this.status === "shutting-down") && (e = ""),
                e
        },
        progressAnimation() {
            let e = "";
            return this.isLoading && (e = ""),
                e
        },
        firmwareVersion() {
            const e = this.getFirmwareVersion;
            return e ? "v" + e.replace("-stable", "") : Rt.global.t("StatusBar.version")
        }
    },
    beforeMount() {
        this.$store.dispatch("system/loadStockInfo")
    },
    mounted() {
        this.startProgressLoop()
    },
    beforeUnmount() {
        this.stopProgressLoop(),
            this.$store.dispatch("system/clearScheduleTimer")
    },
    methods: {
        unhideInfobar() {
            this.minerDataIsNull || this.$store.commit("ui/infobarIsUnhidden", !this.infobarIsUnhidden)
        },
        openDialogReleaseNotes() {
            this.$store.commit("ui/dialogReleaseNotes", !0)
        },
        startProgressLoop() {
            this.intervalHandler = setInterval(this.setProgress, 300)
        },
        stopProgressLoop() {
            clearInterval(this.intervalHandler)
        },
        setProgress() {
            let e = 0;
            this.isLoading || !this.timerBeginTime ? e = 0 : (e = (Date.now() - this.timerBeginTime) / (this.interval / 100),
                e = Number(e.toFixed()),
            e > 100 && (e = 100)),
                this.timerProgress = e
        },
        ...Zn("findMiner", ["toggleFind"])
    }
}
    , P_ = fs(YY, [["render", WY], ["__scopeId", "data-v-da73d7b9"]])
    , XY = {
    message: () => Rt.global.t("Form.errorMessages.required")
}
    , L_ = (e, t, s) => {
    t ? s() : s(new Error(XY.message()))
}
    , by = {
    validator: /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,
    message: () => Rt.global.t("Form.errorMessages.invalidFieldWithExample") + "192.168.0.1"
}
    , tK = (e, t, s) => {
    !t || by.validator.test(t) ? s() : s(new Error(by.message()))
}
    , yy = {
    validator: /^([a-zA-Z0-9])*$/,
    message: () => Rt.global.t("Form.errorMessages.invalidField")
}
    , sK = (e, t, s) => {
    !t || yy.validator.test(t) ? s() : s(new Error(yy.message()))
}
    , xy = {
    validator: new RegExp("^(((stratum\\+tcp)|(https?)):\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$", "i"),
    message: () => Rt.global.t("Form.errorMessages.invalidFieldWithExample") + "google.com"
}
    , nK = (e, t, s) => {
    !t || xy.validator.test(t) ? s() : s(new Error(xy.message()))
}
    , Tg = {
    inLength: () => Rt.global.t("Form.errorMessages.invalidLength", 32),
    max: e => Rt.global.t("Form.errorMessages.invalidMaxLength", e)
}
    , iK = (e, t, s) => {
    t && t.length && t.length !== 32 ? s(new Error(Tg.inLength())) : s()
}
    , aK = (e, t, s) => {
    e.max || console.error("elMaxLength: validator max value not set"),
        t && t.length && t.length > e.max ? s(new Error(Tg.max(e.max))) : s()
}
    , jY = (e, t, s) => {
    t && t.length && t.length > 50 ? s(new Error(Tg.max(50))) : s()
}
    , ph = {
    validator: /^[0-9]+$/,
    message: (e = "123") => Rt.global.t("Form.errorMessages.invalidFieldWithExample") + e
}
    , rK = (e, t, s) => {
    t && (ph.validator.test(t) ? (e.min && t < e.min || e.max && t > e.max) && s(new Error(ph.message(e.example || "123"))) : s(new Error(ph.message(e.example || "123")))),
        s()
}
    , oK = (e, t, s) => {
    !e.min && e.min !== 0 && console.error("elMinMaxValue: validator min value not set"),
    e.max || console.error("elMinMaxValue: validator max value not set"),
    t && (t < e.min || t > e.max ? s(new Error(Rt.global.t("Form.errorMessages.invalidMinMaxValue") + e.min + "-" + e.max)) : s()),
        s()
}
    , GY = {
    class: "issue"
};

function qY(e, t, s, a, o, l) {
    const u = qp
        , p = Kp
        , g = Sg
        , y = _n
        , v = wg
        , w = $n
        , C = _d;
    return Z(),
        Te(w, {
            modelValue: l.isVisible,
            "onUpdate:modelValue": t[1] || (t[1] = T => l.isVisible = T),
            top: "12vh",
            title: e.$t("StatusBar.report.title"),
            "append-to-body": !0,
            fullscreen: !!e.less800,
            width: "790px",
            onOpened: l.open
        }, {
            default: se(() => [ae(u, {
                class: "!mb-10px !py-15px",
                type: "info",
                "show-icon": "",
                title: e.$t("StatusBar.report.dialog.desc"),
                closable: !1
            }, null, 8, ["title"]), _t((Z(),
                ye("div", GY, [ae(v, {
                    model: e.form,
                    rules: e.rules,
                    ref: "form",
                    onSubmit: Ot(l.submit, ["prevent"])
                }, {
                    default: se(() => [ae(g, {
                        prop: "text"
                    }, {
                        default: se(() => [ae(p, {
                            class: "textareaReport",
                            modelValue: e.form.text,
                            "onUpdate:modelValue": t[0] || (t[0] = T => e.form.text = T),
                            placeholder: e.$t("StatusBar.report.dialog.issue"),
                            type: "textarea"
                        }, null, 8, ["modelValue", "placeholder"])]),
                        _: 1
                    }), ae(g, null, {
                        default: se(() => [ae(y, {
                            class: "w-full",
                            icon: "el-icon-check",
                            type: "primary",
                            "native-type": "submit"
                        }, {
                            default: se(() => [at(me(e.$t("StatusBar.report.dialog.button")), 1)]),
                            _: 1
                        })]),
                        _: 1
                    }), t[2] || (t[2] = U("a", {
                        class: "hidden-file",
                        id: "report-file"
                    }, null, -1))]),
                    _: 1
                }, 8, ["model", "rules", "onSubmit"])])), [[C, e.isLoading]])]),
            _: 1
        }, 8, ["modelValue", "title", "fullscreen", "onOpened"])
}

const KY = {
    name: "Diasgnostics-report",
    data: () => ({
        isLoading: !1,
        form: {
            text: ""
        },
        rules: {
            text: [{
                validator: L_
            }]
        },
        less800: Eg
    }),
    computed: {
        isVisible: {
            get() {
                return this.$store.state.ui.dialogReportIsVisible
            },
            set(e) {
                this.$store.commit("ui/dialogReportIsVisible", e)
            }
        }
    },
    methods: {
        open() {
            this.form.text = "",
                this.$refs.form.resetFields()
        },
        submit() {
            this.isLoading || this.$refs.form.validate(e => {
                    if (e)
                        this.createReport(),
                            this.$store.commit("ui/dialogReportIsVisible", !1);
                    else
                        return !1
                }
            )
        },
        async createReport() {
            this.isLoading = !0;
            try {
                const e = await this.$APIv1.post("/diag/report", {
                    issue: this.form.text
                }, {
                    responseType: "blob"
                })
                    , t = new Blob([e.data], {
                    type: "application/tar+gzip"
                })
                    , s = document.getElementById("report-file");
                s.href = URL.createObjectURL(t);
                const a = this.$store.state.summary.miner_model.toLowerCase().replace(/\-/g, "_").replace(/\s/g, "_") || this.$store.state.summary.hostname
                    , o = this.$store.state.summary.ip;
                s.download = `diagrep_${a}_${o}.tar.gz`,
                    s.click(),
                    URL.revokeObjectURL(s.href)
            } catch (e) {
                En(e)
            } finally {
                this.isLoading = !1
            }
        }
    }
}
    , ZY = fs(KY, [["render", qY]]);

function JY(e, t, s, a, o, l) {
    const u = sH;
    return Z(),
        Te(u, {
            class: "ElCheckboxExtend",
            modelValue: l.model,
            "onUpdate:modelValue": t[0] || (t[0] = p => l.model = p),
            value: s.value,
            border: "",
            indeterminate: s.indeterminate,
            checked: s.checked,
            onInput: l.handleInput,
            onChange: l.handleChange
        }, {
            default: se(() => [De(e.$slots, "default")]),
            _: 3
        }, 8, ["modelValue", "value", "indeterminate", "checked", "onInput", "onChange"])
}

const QY = {
    name: "ElCheckboxExtend",
    props: {
        value: {},
        indeterminate: {
            type: Boolean,
            default: !1
        },
        checked: {
            type: Boolean,
            default: !1
        }
    },
    data() {
        return {
            selfModel: !1
        }
    },
    computed: {
        model: {
            get() {
                return typeof this.value < "u" ? this.value : this.selfModel
            },
            set(e) {
                this.$emit("input", e),
                    this.selfModel = e
            }
        }
    },
    methods: {
        handleChange(e, t) {
            this.$emit("change", e, t)
        },
        handleInput(e, t) {
            this.$emit("input", e, t)
        }
    }
}
    , M_ = fs(QY, [["render", JY]])
    , e7 = {
    class: "StatusBar"
}
    , t7 = {
    class: "FixedBlock"
}
    , s7 = {
    class: "flex items-center"
}
    , n7 = {
    class: "<sm:hidden ml-5px"
}
    , i7 = {
    class: "flex gap-10px items-center"
};

function a7(e, t, s, a, o, l) {
    const u = P_
        , p = Mo
        , g = Ai
        , y = M_
        , v = Ei
        , w = nH
        , C = _n
        , T = $n
        , I = l_
        , A = o_
        , R = I_
        , P = ZY
        , M = Bt("vue-resizable")
        , O = wo("touch");
    return _t((Z(),
        ye("div", e7, [U("div", t7, [U("section", {
            class: "items-center justify-between cursor-pointer flex flex-1 h-full hover:bg-$el-color-primary-light-9 px-10px <sm:pl-10px <sm:flex-initial transition-colors duration-250",
            onClick: t[0] || (t[0] = F => e.showLogs ? l.hide() : l.show())
        }, [U("header", s7, [t[9] || (t[9] = U("div", {
            class: "icon-uil-file-alt text-18px"
        }, null, -1)), U("span", n7, me(e.$t("StatusBar.logs.title")), 1)]), U("div", {
            class: he(["icon-uil-angle-up", {
                "transition-all rotate-180": e.showLogs
            }])
        }, null, 2)]), ae(u)]), ae(M, {
            class: he(["HiddenBLock", {
                Show: e.showLogs,
                Expand: e.expandLogs
            }]),
            active: e.handlers,
            style: kt(e.resizeManual ? "transition: none;" : ""),
            height: e.height,
            "onResize:start": t[7] || (t[7] = F => e.resizeManual = !0),
            "onResize:end": t[8] || (t[8] = F => e.resizeManual = !1)
        }, {
            default: se(() => [U("header", null, [U("span", null, [U("span", null, me(e.$t("StatusBar.logs.title")), 1)]), U("div", i7, [ae(g, {
                effect: "light",
                placement: "top",
                content: e.$t("StatusBar.logs.copyAll"),
                "show-after": 500,
                disabled: !!e.less980
            }, {
                default: se(() => [ae(p, {
                    onClick: l.copyAllLogs
                }, {
                    default: se(() => t[10] || (t[10] = [U("div", {
                        class: "icon-uil-copy"
                    }, null, -1)])),
                    _: 1
                }, 8, ["onClick"])]),
                _: 1
            }, 8, ["content", "disabled"]), ae(g, {
                effect: "light",
                placement: "top",
                content: e.$t("StatusBar.report.title"),
                "show-after": 500,
                disabled: !!e.less980
            }, {
                default: se(() => [ae(p, {
                    onClick: t[1] || (t[1] = F => e.$store.commit("ui/dialogReportIsVisible", !0))
                }, {
                    default: se(() => t[11] || (t[11] = [U("div", {
                        class: "icon-uil-medkit"
                    }, null, -1)])),
                    _: 1
                })]),
                _: 1
            }, 8, ["content", "disabled"]), ae(g, {
                effect: "light",
                placement: "top",
                content: e.$t("StatusBar.logs.doClearLogs"),
                "show-after": 500,
                disabled: !!e.less980
            }, {
                default: se(() => [ae(p, {
                    onClick: t[2] || (t[2] = F => e.dialogVisible = !0)
                }, {
                    default: se(() => t[12] || (t[12] = [U("div", {
                        class: "icon-uil-trash-alt"
                    }, null, -1)])),
                    _: 1
                })]),
                _: 1
            }, 8, ["content", "disabled"]), ae(T, {
                modelValue: e.dialogVisible,
                "onUpdate:modelValue": t[5] || (t[5] = F => e.dialogVisible = F),
                top: "30vh",
                "append-to-body": !0,
                title: e.$t("StatusBar.logs.doClearLogs"),
                fullscreen: !!e.less600,
                width: "360px"
            }, {
                default: se(() => [ae(y, {
                    modelValue: e.checkAll,
                    "onUpdate:modelValue": t[3] || (t[3] = F => e.checkAll = F),
                    border: "",
                    indeterminate: e.isIndeterminate,
                    onChange: l.handleCheckAllChange
                }, {
                    default: se(() => [at(me(e.$t("StatusBar.logs.markAll")), 1)]),
                    _: 1
                }, 8, ["modelValue", "indeterminate", "onChange"]), ae(v, {
                    class: "!my-10px"
                }), ae(w, {
                    modelValue: e.checkList,
                    "onUpdate:modelValue": t[4] || (t[4] = F => e.checkList = F),
                    onChange: l.handleCheckedChange
                }, {
                    default: se(() => [(Z(!0),
                        ye(Ct, null, wi(e.clearableTabs, F => (Z(),
                            Te(y, {
                                label: F,
                                key: F,
                                border: ""
                            }, {
                                default: se(() => [at(me(e.$t("StatusBar.logs.tabs." + F)), 1)]),
                                _: 2
                            }, 1032, ["label"]))), 128))]),
                    _: 1
                }, 8, ["modelValue", "onChange"]), ae(C, {
                    class: "w-full",
                    icon: "el-icon-check",
                    type: "primary",
                    slot: "footer",
                    size: "default",
                    onClick: l.clearLogs,
                    disabled: e.isLoadingLogs || !e.checkList.length
                }, {
                    default: se(() => [at(me(e.$t("StatusBar.logs.doClearLogs")), 1)]),
                    _: 1
                }, 8, ["onClick", "disabled"])]),
                _: 1
            }, 8, ["modelValue", "title", "fullscreen"]), ae(v, {
                class: "!mx-0px",
                direction: "vertical"
            }), ae(g, {
                effect: "light",
                placement: "top",
                content: e.expandLogs ? e.$t("StatusBar.collapse") : e.$t("StatusBar.expand"),
                "show-after": 500,
                disabled: !!e.less980
            }, {
                default: se(() => [ae(p, {
                    onClick: l.toggleExpand
                }, {
                    default: se(() => [U("div", {
                        class: he(["icon-uil-angle-up", {
                            "rotate-180": e.expandLogs
                        }])
                    }, null, 2)]),
                    _: 1
                }, 8, ["onClick"])]),
                _: 1
            }, 8, ["content", "disabled"]), ae(p, {
                onClick: l.hide
            }, {
                default: se(() => t[13] || (t[13] = [U("div", {
                    class: "icon-uil-times"
                }, null, -1)])),
                _: 1
            }, 8, ["onClick"])])]), ae(A, {
                modelValue: l.activeName,
                "onUpdate:modelValue": t[6] || (t[6] = F => l.activeName = F),
                onTabChange: l.handeTabChange
            }, {
                default: se(() => [(Z(!0),
                    ye(Ct, null, wi(e.tabs, F => (Z(),
                        Te(I, {
                            label: e.$t("StatusBar.logs.tabs." + F),
                            key: F,
                            name: F
                        }, null, 8, ["label", "name"]))), 128))]),
                _: 1
            }, 8, ["modelValue", "onTabChange"]), ae(R, {
                ref: "logsArea",
                "is-loading": e.isLoadingLogs,
                logs: l.log
            }, null, 8, ["is-loading", "logs"]), ae(P)]),
            _: 1
        }, 8, ["class", "active", "style", "height"])])), [[O, void 0, "swipe", {
        stop: !0
    }]])
}

const Lf = ["status", "miner", "autotune", "system"]
    , r7 = ["status", "miner", "autotune"]
    , O_ = {}
    , R_ = {};
for (let e of Lf)
    O_[e] = "",
        R_[e] = null;
const o7 = {
    components: {
        Status: P_,
        IconButton: Mo,
        LogOutputArea: I_,
        VueResizable: RY
    },
    data: () => ({
        showButton: !1,
        less980: Ti,
        less600: sY,
        vh: 0,
        height: "30px",
        handlers: ["t"],
        disableAttributes: ["l", "w"],
        showLogs: !1,
        expandLogs: !1,
        checkList: [],
        checkAll: !1,
        isIndeterminate: !0,
        activeTab: Lf[0],
        dialogVisible: !1,
        isCanScroll: !1,
        isLoadingLogs: !1,
        logSelectionRange: null,
        tabs: Lf,
        clearableTabs: r7,
        logs: O_,
        sockets: R_,
        resizeManual: !1
    }),
    computed: {
        tab() {
            return this.activeTab
        },
        log() {
            return this.logs[this.tab]
        },
        activeName: {
            get() {
                return this.activeTab
            },
            set(e) {
                this.activeTab = e,
                    e !== "system" ? (this.checkList = [e],
                        this.isIndeterminate = !0) : (this.checkList = [],
                        this.isIndeterminate = !1),
                    this.checkAll = !1
            }
        }
    },
    created() {
        window.addEventListener("resize", this.ResizeHandler)
    },
    mounted() {
        this.checkList = [this.tabs[0]],
            this.ResizeHandler()
    },
    destroyed() {
        window.removeEventListener("resize", this.ResizeHandler)
    },
    updated() {
        this.restoreSelection()
    },
    methods: {
        ResizeHandler() {
            this.vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),
                this.showLogs ? this.height = this.expandLogs ? this.vh - 30 : this.vh / 2.1 : this.height = 0
        },
        saveLogsSelection() {
            const e = document.getSelection();
            !e.isCollapsed && e.anchorNode.parentNode === this.$refs.logs && (this.logSelectionRange = {
                anchorNode: e.anchorNode,
                anchorOffset: e.anchorOffset <= e.focusOffset ? e.anchorOffset : e.focusOffset,
                focusOffset: e.anchorOffset <= e.focusOffset ? e.focusOffset : e.anchorOffset
            })
        },
        restoreSelection() {
            const e = document.getSelection();
            if (this.logSelectionRange) {
                e.removeAllRanges();
                const t = new Range;
                t.setStart(this.logSelectionRange.anchorNode, this.logSelectionRange.anchorOffset),
                    t.setEnd(this.logSelectionRange.anchorNode, this.logSelectionRange.focusOffset),
                    e.addRange(t),
                    this.logSelectionRange = null
            }
        },
        show() {
            this.logsNullify(),
                this.showLogs = !0,
                this.expandLogs = !1,
                this.height = this.vh / 2.1,
                this.getLogs()
        },
        hide() {
            this.showLogs = !1,
                this.expandLogs = !1,
                this.height = 0,
                this.logsNullify(),
                this.socketCloseAll()
        },
        toggleExpand() {
            this.expandLogs = !this.expandLogs,
                this.height = this.expandLogs ? this.vh - 30 : this.vh / 2.1
        },
        logsNullify() {
            for (let e of this.tabs)
                this.logs[e] = ""
        },
        socketCloseAll() {
            for (let e of this.tabs)
                this.sockets[e] && (this.sockets[e].close(),
                    this.sockets[e] = null)
        },
        copyAllLogs() {
            try {
                const e = window.getSelection();
                e.removeAllRanges();
                const t = document.createRange();
                t.selectNodeContents(this.$refs.logsArea.$refs.preElement),
                    e.addRange(t),
                    document.execCommand("copy"),
                    e.removeAllRanges(),
                    bi({
                        message: Rt.global.t("Messages.logsCopied")
                    })
            } catch (e) {
                console.log("Unable to copy to clipboard", e),
                    lr(Rt.global.t("Messages.logsNotCopied"))
            }
        },
        handeTabChange(e) {
            e === "system" ? (this.sockets[e] && this.sockets[e].close(),
                this.logs[e] = "",
                this.sockets[e] = null,
                this.getLogs()) : this.sockets[e] || this.getLogs()
        },
        getLogs() {
            const e = this.tab;
            this.sockets[e] && (this.sockets[e].close(),
                this.sockets[e] = null);
            const t = document.location.host;
            this.sockets[e] = new WebSocket((document.location.protocol === "https:" ? "wss://" : "ws://") + t + "/api/v1/logs-ws/" + e),
                this.sockets[e].onmessage = s => {
                    this.addLog(s.data, e)
                }
                ,
                this.sockets[e].onerror = () => {
                    const s = this;
                    this.sockets[e].close(),
                        setTimeout(() => {
                                s.showLogs && s.getLogs()
                            }
                            , 3e3)
                }
        },
        addLog(e, t) {
            const s = document.getSelection();
            !s.isCollapsed && s.anchorNode.parentNode === this.$refs.logs && this.saveLogsSelection(),
            t || (t = this.tab),
                this.logs[t] = this.logs[t] + e
        },
        handleCheckAllChange(e) {
            this.checkList = e ? this.clearableTabs : [],
                this.isIndeterminate = !1
        },
        handleCheckedChange(e) {
            let t = e.length;
            this.checkAll = t === this.tabs.length,
                this.isIndeterminate = t > 0 && t < this.tabs.length
        },
        async clearLogs() {
            if (!this.isLoadingLogs) {
                this.isLoadingLogs = !0;
                try {
                    if (this.tabs.length === this.checkList.length)
                        await this.$APIv1.post("/logs/*/clear"),
                            this.logsNullify();
                    else
                        for (let e of this.checkList)
                            await this.$APIv1.post(`/logs/${e}/clear`),
                                this.logs[e] = "";
                    bi({
                        message: Rt.global.t("Messages.logsClear"),
                        type: "success",
                        showClose: !0
                    })
                } catch (e) {
                    En(e)
                } finally {
                    this.isLoadingLogs = !1,
                        this.dialogVisible = !1
                }
            }
        }
    }
}
    , N_ = fs(o7, [["render", a7], ["__scopeId", "data-v-fe4a7934"]])
    , l7 = {
    key: 0,
    class: "icon-uil-unlock-alt"
}
    , c7 = {
    key: 1
}
    , u7 = {
    key: 1
}
    , d7 = {
    class: "text-center lh-[21px]"
}
    , h7 = ["dir"]
    , f7 = {
    class: "ml-1 font-bold text-$el-text-color-primary"
}
    , p7 = {
    key: 0,
    class: "icon-uil-lock-alt"
}
    , g7 = {
    key: 1
};

function m7(e, t, s, a, o, l) {
    const u = Kp
        , p = Sg
        , g = _n
        , y = wg
        , v = $n;
    return Z(),
        ye("div", null, [ae(v, {
            class: "DialogUnlock heightAuto",
            modelValue: l.dialogUnLockIsVisible,
            "onUpdate:modelValue": t[2] || (t[2] = w => l.dialogUnLockIsVisible = w),
            center: "",
            top: "30vh",
            title: e.$t("NavBar.action.unlockUIDialog.title"),
            "append-to-body": !0,
            fullscreen: !!e.less980,
            width: "460px",
            onOpen: l.onDialogUnlockOpen,
            onOpened: l.afterDialogUnlockOpen,
            onClose: l.resetUnlock
        }, {
            default: se(() => [e.unLockMuchAttempts.isProcess ? (Z(),
                ye("div", u7, [U("div", d7, [U("span", null, me(e.$t("NavBar.action.unlockUIDialog.tooIncorrectPassword")), 1), U("p", {
                    dir: e.langDir
                }, [U("span", null, me(e.$t("NavBar.action.unlockUIDialog.tryAgain")) + " ", 1), U("span", f7, me(e.$duration(e.unLockMuchAttempts.unlockTimeInUnix).format("HH[h] mm[m] ss[s]")), 1)], 8, h7)]), ae(g, {
                    class: "!mt-40px",
                    type: "info",
                    style: {
                        width: "100%"
                    },
                    onClick: l.resetUnlock
                }, {
                    default: se(() => [t[4] || (t[4] = U("div", {
                        class: "icon-uil-times bg-current"
                    }, null, -1)), U("span", null, me(e.$t("Dialog.cancel")), 1)]),
                    _: 1
                }, 8, ["onClick"])])) : (Z(),
                Te(y, {
                    key: 0,
                    model: e.unlockForm,
                    rules: e.rules,
                    ref: "unlockForm",
                    "label-position": "top",
                    onSubmit: Ot(l.submitUnlock, ["prevent"])
                }, {
                    default: se(() => [ae(p, {
                        prop: "password",
                        label: e.$t("NavBar.action.unlockUIDialog.label")
                    }, {
                        default: se(() => [ae(u, {
                            modelValue: e.unlockForm.password,
                            "onUpdate:modelValue": t[0] || (t[0] = w => e.unlockForm.password = w),
                            placeholder: e.$t("NavBar.action.unlockUIDialog.password"),
                            autofocus: "",
                            "show-password": "",
                            onInput: l.hideError
                        }, null, 8, ["modelValue", "placeholder", "onInput"])]),
                        _: 1
                    }, 8, ["label"]), ae(u, {
                        modelValue: e.fakeLogin,
                        "onUpdate:modelValue": t[1] || (t[1] = w => e.fakeLogin = w),
                        style: {
                            display: "none"
                        }
                    }, null, 8, ["modelValue"]), ae(g, {
                        class: "!mt-10px",
                        type: "primary",
                        style: {
                            width: "100%"
                        },
                        "native-type": "submit",
                        loading: e.isLoadingUnlock,
                        disabled: e.isLoadingUnlock
                    }, {
                        default: se(() => [e.isLoadingUnlock ? ke("", !0) : (Z(),
                            ye("div", l7)), e.isLoadingUnlock ? ke("", !0) : (Z(),
                            ye("span", c7, me(e.$t("NavBar.action.unlockUI")), 1))]),
                        _: 1
                    }, 8, ["loading", "disabled"])]),
                    _: 1
                }, 8, ["model", "rules", "onSubmit"]))]),
            _: 1
        }, 8, ["modelValue", "title", "fullscreen", "onOpen", "onOpened", "onClose"]), ae(v, {
            class: "DialogLock heightAuto",
            modelValue: l.dialogLockIsVisible,
            "onUpdate:modelValue": t[3] || (t[3] = w => l.dialogLockIsVisible = w),
            center: "",
            top: "30vh",
            title: e.$t("NavBar.action.lockUIDialog.title"),
            "append-to-body": !0,
            fullscreen: !!e.less980,
            width: "460px"
        }, {
            default: se(() => [U("span", null, me(e.$t("NavBar.action.lockUIDialog.text")), 1), ae(g, {
                class: "!mt-20px",
                type: "danger",
                style: {
                    width: "100%"
                },
                onClick: e.lock,
                loading: e.isLoadingLock,
                disabled: e.isLoadingLock
            }, {
                default: se(() => [e.isLoadingLock ? ke("", !0) : (Z(),
                    ye("div", p7)), e.isLoadingLock ? ke("", !0) : (Z(),
                    ye("span", g7, me(e.$t("NavBar.action.lockUIDialog.button")), 1))]),
                _: 1
            }, 8, ["onClick", "loading", "disabled"])]),
            _: 1
        }, 8, ["modelValue", "title", "fullscreen"])])
}

const v7 = {
    name: "AuthDialog",
    data: () => ({
        less980: Ti,
        fakeLogin: " ",
        unlockForm: {
            password: "",
            hidden: ""
        },
        rules: {
            password: [{
                validator: L_
            }, {
                validator: jY
            }]
        }
    }),
    computed: {
        ...ls("ui", ["langDir"]),
        ...ls("auth", ["isAuth", "isLoadingUnlock", "isLoadingLock", "isAnimationLock", "isAnimationUnlock", "unLockMuchAttempts"]),
        dialogUnLockIsVisible: {
            get() {
                return gs.state.ui.dialogUnLockIsVisible
            },
            set(e) {
                gs.commit("ui/dialogUnLockIsVisible", e)
            }
        },
        dialogLockIsVisible: {
            get() {
                return gs.state.ui.dialogLockIsVisible
            },
            set(e) {
                gs.commit("ui/dialogLockIsVisible", e)
            }
        }
    },
    methods: {
        ...Zn("auth", ["unlock", "lock"]),
        submitUnlock() {
            this.isLoadingUnlock || this.$refs.unlockForm.validate(e => {
                    if (e)
                        this.unlock(this.unlockForm.password);
                    else
                        return !1
                }
            )
        },
        hideError() {
        },
        resetUnlock() {
            this.unLockMuchAttempts.isProcess ? gs.commit("ui/dialogUnLockIsVisible", !1) : (this.hideError(),
                this.$refs.unlockForm.resetFields())
        },
        onDialogUnlockOpen() {
            this.$nextTick(() => {
                    this.unLockMuchAttempts.isProcess || this.$refs.unlockForm.resetFields()
                }
            )
        },
        afterDialogUnlockOpen() {
            this.unLockMuchAttempts.isProcess || this.$refs.unlockForm.$el[0].focus()
        },
        fullScreen(e, t, s) {
            const a = this.$loading({
                customClass: e,
                lock: !0,
                text: t,
                spinner: s
            });
            setTimeout(() => {
                    a.close()
                }
                , 900)
        }
    },
    watch: {
        isLoadingUnlock(e) {
            e ? this.resetUnlock() : this.isAuth && (gs.commit("ui/dialogUnLockIsVisible", !1),
                this.resetUnlock(),
                bi({
                    message: Rt.global.t("NavBar.action.unlockUIDialog.message"),
                    type: "success",
                    duration: 3e3,
                    showClose: !0
                }))
        },
        isLoadingLock(e) {
            e || this.isAuth || (gs.commit("ui/dialogLockIsVisible", !1),
                bi({
                    message: Rt.global.t("NavBar.action.lockUIDialog.message"),
                    customClass: "el-message--error flex gap-10px",
                    type: "error",
                    showClose: !0,
                    duration: 3e3
                }))
        }
    }
}
    , D_ = fs(v7, [["render", m7]])
    , b7 = {
    class: "flex items-center gap-10px basis-65.5% grow"
}
    , y7 = {
    key: 0,
    class: "IconWrapper"
}
    , x7 = {
    class: "text-14px text-$el-text-color-primary font-semibold font-stretch-condensed leading-4 blockHeader"
}
    , w7 = {
    key: 0,
    class: "mt-5px text-11px leading-3 text-$el-text-color-regular font-medium"
};

function S7(e, t, s, a, o, l) {
    return Z(),
        ye("section", {
            class: he(["min-h-46px px-10px py-5px flex w-full gap-10px justify-between items-center border-1px border-solid rounded-$el-border-radius-base bg-$el-bg-color border-$el-border-color flex-wrap", [e.type, {
                "children:opacity-50 cursor-not-allowed": e.disabled
            }]])
        }, [U("section", b7, [e.$slots.icon ? (Z(),
            ye("div", y7, [De(e.$slots, "icon")])) : ke("", !0), U("div", x7, [U("span", null, [De(e.$slots, "header")]), e.$slots.description ? (Z(),
            ye("div", w7, [De(e.$slots, "description")])) : ke("", !0)])]), De(e.$slots, "default")], 2)
}

const _7 = Ce({
    name: "CustomBlock",
    props: {
        disabled: {
            type: Boolean,
            default: !1
        },
        type: {
            type: String,
            default: "info"
        }
    }
})
    , F_ = fs(_7, [["render", S7], ["__scopeId", "data-v-f5b1076f"]])
    , k7 = {
    class: "flex justify-between gap-10px <sm:flex-col",
    slot: "title"
}
    , C7 = {
    class: "el-dialog__title"
}
    , A7 = {
    class: "flex items-center mr-10px"
}
    , E7 = {
    class: "el-upload__text"
}
    , T7 = {
    class: "el-upload__tip"
}
    , I7 = {
    key: 0
}
    , P7 = {
    key: 1
};

function L7(e, t, s, a, o, l) {
    const u = Po
        , p = Ei
        , g = Ai
        , y = sW
        , v = F_
        , w = IS
        , C = Ag
        , T = qp
        , I = WW
        , A = _n
        , R = $n;
    return Z(),
        Te(R, {
            class: "DialogFirmware",
            modelValue: l.dialogUpdateIsVisible,
            "onUpdate:modelValue": t[1] || (t[1] = P => l.dialogUpdateIsVisible = P),
            "append-to-body": !0,
            fullscreen: !!e.less980,
            width: "700px",
            onClose: l.resetDialog
        }, {
            header: se(() => [U("header", k7, [U("span", C7, me(e.$t("Firmware.modal.title")), 1), U("section", A7, [ae(u, {
                class: "ml-0px",
                size: "small",
                effect: "plain"
            }, {
                default: se(() => [at(me(e.getMinerModel), 1)]),
                _: 1
            }), ae(u, {
                class: "ml-5px",
                type: "info",
                size: "small",
                effect: "plain"
            }, {
                default: se(() => [at(me(e.platform || e.$t("NA")), 1)]),
                _: 1
            }), ae(u, {
                class: "ml-5px",
                type: e.isStableFirmwareVersion ? "success" : "danger",
                size: "small",
                effect: "plain"
            }, {
                default: se(() => [at(me(l.firmwareVersion), 1)]),
                _: 1
            }, 8, ["type"]), e.install_type === "nand" || e.install_type === "sd" ? (Z(),
                Te(p, {
                    key: 0,
                    direction: "vertical"
                })) : ke("", !0), e.install_type === "sd" ? (Z(),
                Te(g, {
                    key: 1,
                    effect: "light",
                    placement: "top-end",
                    content: "Firmware is running from SD Card",
                    "show-after": 300
                }, {
                    default: se(() => t[2] || (t[2] = [U("svg", {
                        width: "20",
                        height: "20",
                        viewBox: "0 0 20 20",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, [U("path", {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d: "M16.3 17V3C16.3 2.83432 16.1657 2.7 16 2.7H8.49836C8.42276 2.7 8.34994 2.72855 8.29448 2.77993L3.79611 6.94753C3.73483 7.00431 3.7 7.08406 3.7 7.1676V17C3.7 17.1657 3.83431 17.3 4 17.3H16C16.1657 17.3 16.3 17.1657 16.3 17ZM2.64075 5.70048C2.23222 6.07898 2 6.61068 2 7.1676V17C2 18.1046 2.89543 19 4 19H16C17.1046 19 18 18.1046 18 17V3C18 1.89543 17.1046 1 16 1H8.49836C7.99432 1 7.50886 1.19032 7.13912 1.53288L2.64075 5.70048Z",
                        fill: "#6C7684"
                    }), U("path", {
                        d: "M5.07377 14.4526C5.06693 14.9881 5.2891 15.3846 5.74027 15.6421C6.19145 15.8973 6.76339 16.0249 7.45609 16.0249C8.15564 16.0249 8.72188 15.8939 9.15482 15.6318C9.59005 15.3675 9.80766 15.0007 9.80766 14.5312C9.80766 13.9935 9.62992 13.6095 9.27445 13.3794C8.92126 13.147 8.44503 12.9658 7.84574 12.8359C7.30342 12.7243 6.95935 12.6297 6.81352 12.5522C6.66768 12.4748 6.59477 12.3848 6.59477 12.2822C6.59477 12.1546 6.65629 12.0578 6.77934 11.9917C6.90238 11.9256 7.10632 11.8926 7.39115 11.8926C7.67598 11.8926 7.88562 11.9427 8.02006 12.043C8.15678 12.141 8.224 12.2674 8.22172 12.4224V12.4941H9.69486V12.3984C9.69486 11.945 9.48637 11.5736 9.06938 11.2842C8.65238 10.9948 8.10323 10.8501 7.42191 10.8501C6.73604 10.8501 6.18347 10.9834 5.7642 11.25C5.34721 11.5166 5.13871 11.8971 5.13871 12.3916C5.13871 12.8154 5.30733 13.1481 5.64457 13.3896C5.98181 13.6312 6.45577 13.8078 7.06645 13.9194C7.65889 14.0288 8.02234 14.1336 8.15678 14.2339C8.2935 14.3341 8.36186 14.4515 8.36186 14.5859C8.36186 14.7067 8.28894 14.807 8.14311 14.8867C7.99955 14.9642 7.79333 15.0029 7.52445 15.0029C7.20316 15.0029 6.96618 14.9539 6.81352 14.856C6.66313 14.758 6.58793 14.6167 6.58793 14.4321V14.3501H5.07377V14.4526ZM10.3139 15.9258H12.4638C13.3616 15.9258 14.052 15.7196 14.5351 15.3071C15.0182 14.8947 15.2597 14.3057 15.2597 13.54V13.3315C15.2597 12.5659 15.0182 11.978 14.5351 11.5679C14.052 11.1554 13.3616 10.9492 12.4638 10.9492H10.3139V15.9258ZM11.7768 14.8867V11.9951H12.4331C12.8569 11.9951 13.1816 12.1079 13.4072 12.3335C13.6351 12.5568 13.749 12.9032 13.749 13.3726V13.5195C13.749 13.9798 13.6351 14.3228 13.4072 14.5483C13.1816 14.7739 12.8569 14.8867 12.4331 14.8867H11.7768Z",
                        fill: "#6C7684"
                    }), U("rect", {
                        x: "7",
                        y: "5",
                        width: "1.80225",
                        height: "3.99463",
                        rx: "0.901123",
                        fill: "#6C7684"
                    }), U("rect", {
                        x: "9.98828",
                        y: "5",
                        width: "1.80225",
                        height: "3.99463",
                        rx: "0.901123",
                        fill: "#6C7684"
                    }), U("rect", {
                        x: "12.9766",
                        y: "5",
                        width: "1.80225",
                        height: "3.99463",
                        rx: "0.901123",
                        fill: "#6C7684"
                    })], -1)])),
                    _: 1
                })) : ke("", !0), e.install_type === "nand" ? (Z(),
                Te(g, {
                    key: 2,
                    effect: "light",
                    placement: "top-end",
                    content: "Firmware is running from NAND",
                    "show-after": 300
                }, {
                    default: se(() => t[3] || (t[3] = [U("div", {
                        class: "icon-uil-processor"
                    }, null, -1)])),
                    _: 1
                })) : ke("", !0)])])]),
            default: se(() => [ae(C, {
                class: "mb-3"
            }, {
                default: se(() => [ae(w, {
                    span: 24
                }, {
                    default: se(() => [ae(v, null, {
                        header: se(() => [at(me(e.$t("Firmware.modal.updateCheck")), 1)]),
                        description: se(() => [at(me(e.$t("Firmware.modal.updateCheckNote")), 1)]),
                        default: se(() => [ae(y, {
                            modelValue: e.checked,
                            "onUpdate:modelValue": t[0] || (t[0] = P => e.checked = P)
                        }, null, 8, ["modelValue"])]),
                        _: 1
                    })]),
                    _: 1
                })]),
                _: 1
            }), ae(C, null, {
                default: se(() => [ae(w, {
                    span: 24
                }, {
                    default: se(() => [e.errorMsg ? (Z(),
                        Te(T, {
                            key: 0,
                            class: "h-full z-50 top-0 !absolute children:h-full children:w-full children:text-left children:children:h-full children:children:overflow-scroll",
                            type: "error",
                            title: e.$t("Errors.error"),
                            onClose: l.showDropfile,
                            "close-text": "Close this block"
                        }, {
                            default: se(() => [U("pre", null, me(e.errorMsg), 1)]),
                            _: 1
                        }, 8, ["title", "onClose"])) : ke("", !0), ae(I, {
                        class: "upload-demo relative",
                        drag: "",
                        action: "it'sRequeriedPropInElementUI",
                        accept: "application/gzip, .gz",
                        "auto-upload": !1,
                        multiple: !1,
                        "file-list": e.files,
                        "on-change": l.fileChanged,
                        onSubmit: l.submitUpload,
                        disabled: e.hideDropfile
                    }, {
                        tip: se(() => [U("div", T7, me(e.$t("Firmware.modal.titleFileName")), 1)]),
                        default: se(() => [t[4] || (t[4] = U("div", {
                            class: "icon-uil-upload-alt !text-90px mb-20px"
                        }, null, -1)), U("div", E7, me(e.$t("Firmware.modal.updateText")), 1)]),
                        _: 1
                    }, 8, ["file-list", "on-change", "onSubmit", "disabled"])]),
                    _: 1
                })]),
                _: 1
            }), ae(C, {
                type: "flex",
                justify: "center"
            }, {
                default: se(() => [ae(w, {
                    span: 24
                }, {
                    default: se(() => [ae(A, {
                        class: "w-full mb-10px",
                        type: "danger",
                        onClick: l.submitUpload,
                        loading: e.isLoadingFile,
                        disabled: e.isLoadingFile || !e.files.length
                    }, {
                        default: se(() => [e.isLoadingFile ? (Z(),
                            ye("span", P7, me(e.$t("Firmware.modal.updateButtonFlash")), 1)) : (Z(),
                            ye("span", I7, [t[5] || (t[5] = U("div", {
                                class: "icon-uil-check"
                            }, null, -1)), U("span", null, me(e.$t("Firmware.modal.updateButton")), 1)]))]),
                        _: 1
                    }, 8, ["onClick", "loading", "disabled"])]),
                    _: 1
                })]),
                _: 1
            })]),
            _: 1
        }, 8, ["modelValue", "fullscreen", "onClose"])
}

const M7 = {
    name: "FirmwareDialog",
    components: {
        CustomBlock: F_
    },
    data: () => ({
        less980: Ti,
        activeName: "update",
        releasenotes: [],
        checked: !0,
        isLoading: !1,
        isLoadingFile: !1,
        hideDropfile: !1,
        errorMsg: "",
        files: []
    }),
    computed: {
        ...ls("summary", ["platform", "install_type"]),
        ...In("summary", ["getMinerModel", "minerDataIsNull", "getFirmwareVersion", "isStableFirmwareVersion"]),
        dialogUpdateIsVisible: {
            get() {
                return this.$store.state.ui.dialogUpdateIsVisible
            },
            set(e) {
                this.$store.commit("ui/dialogUpdateIsVisible", e)
            }
        },
        localeSuf() {
            return this.$i18n.locale === "ru" ? "" : "_en"
        },
        firmwareVersion() {
            const e = this.getFirmwareVersion;
            return e ? "v" + e.replace("-stable", "") : Rt.global.t("StatusBar.version")
        }
    },
    methods: {
        fileChanged(e) {
            this.files = [e]
        },
        async submitUpload() {
            var e;
            if (this.clearErrorMsg(),
                !!this.files.length)
                try {
                    await this.$APIv1.get("/auth-check"),
                        await this.sendFile()
                } catch (t) {
                    ((e = t == null ? void 0 : t.response) == null ? void 0 : e.status) !== 401 && En(t)
                }
        },
        async sendFile() {
            var e, t, s, a;
            this.isLoadingFile = !0;
            try {
                const o = new FormData;
                o.append("keep_settings", this.checked),
                    o.append("file", this.files[0].raw),
                    await this.$APIv1.post("/firmware/update", o, {
                        headers: {
                            "Content-Type": "multipart/form-data"
                        }
                    }),
                    bi({
                        message: Rt.global.t("Messages.firmwareUpdate"),
                        type: "success",
                        showClose: !0
                    }),
                    this.files = [],
                    this.$store.commit("ui/dialogUpdateIsVisible", !1),
                    this.$store.dispatch("auth/rebootLock")
            } catch (o) {
                ((e = o == null ? void 0 : o.response) == null ? void 0 : e.status) !== 401 && (En(o),
                ((t = o.response) == null ? void 0 : t.status) === 500 && ((a = (s = o.response) == null ? void 0 : s.data) != null && a.err) && (this.errorMsg = o.response.data.err,
                    this.hideDropfile = !0))
            } finally {
                this.isLoadingFile = !1
            }
        },
        showDropfile() {
            this.hideDropfile = !1
        },
        resetDialog() {
            this.files = [],
                this.showDropfile(),
                this.clearErrorMsg()
        },
        clearErrorMsg() {
            this.errorMsg = ""
        }
    }
}
    , $_ = fs(M7, [["render", L7]])
    , O7 = {
    class: "PlaceHolder"
}
    , R7 = {
    key: 1,
    class: "text-$el-text-color-primary !my-10px"
}
    , N7 = {
    key: 2,
    class: "text-$el-text-color-regular"
};

function D7(e, t, s, a, o, l) {
    return Z(),
        ye("div", O7, [e.$slots.icon ? De(e.$slots, "icon", {
            key: 0
        }) : ke("", !0), e.$slots.header ? (Z(),
            ye("h2", R7, [De(e.$slots, "header")])) : ke("", !0), e.$slots.description ? (Z(),
            ye("span", N7, [De(e.$slots, "description")])) : ke("", !0), e.$slots.button ? De(e.$slots, "button", {
            key: 3
        }) : ke("", !0)])
}

const F7 = {
    name: "PlaceHolder"
}
    , Ig = fs(F7, [["render", D7]])
    , $7 = {
    class: "-mb-20px"
}
    , B7 = {
    class: "text-$el-text-color-primary"
}
    , H7 = {
    class: "ReleaseContent text-14px leading-5 text-wrap"
};

function V7(e, t, s, a, o, l) {
    const u = Ig
        , p = Po
        , g = qp
        , y = bd
        , v = d_
        , w = u_
        , C = Jp
        , T = $n
        , I = _d;
    return Z(),
        Te(T, {
            class: "ReleaseNotes",
            modelValue: l.dialogReleaseNotes,
            "onUpdate:modelValue": t[0] || (t[0] = A => l.dialogReleaseNotes = A),
            top: "8vh",
            title: e.$t("Firmware.modal.releaseNote"),
            "append-to-body": !0,
            fullscreen: !!e.less980,
            width: "760px",
            onOpen: l.getNotes
        }, {
            default: se(() => [e.isDataExist ? _t((Z(),
                Te(C, {
                    key: 1,
                    class: "-mb-20px"
                }, {
                    default: se(() => [U("section", $7, [ae(w, {
                        class: "!px-5px"
                    }, {
                        default: se(() => [(Z(!0),
                            ye(Ct, null, wi(l.filteredReleaseNotes, (A, R) => (Z(),
                                Te(v, {
                                    key: R,
                                    type: l.isStable(A) ? "success" : "danger",
                                    placement: "top",
                                    timestamp: l.formatDate(A.created_at)
                                }, {
                                    default: se(() => [ae(y, {
                                        class: "!bg-$el-bg-color !children:pt-20px",
                                        shadow: "hover"
                                    }, {
                                        default: se(() => [U("header", null, [U("h3", B7, me("v" + l.versionToString(A)), 1), U("section", null, [l.versionToString(A) === e.getFirmwareVersion ? (Z(),
                                            Te(p, {
                                                key: 0,
                                                class: "ml-5px",
                                                type: "warning",
                                                size: "small",
                                                effect: "plain"
                                            }, {
                                                default: se(() => t[2] || (t[2] = [at("Current version")])),
                                                _: 1
                                            })) : ke("", !0), ae(p, {
                                            class: "ml-5px",
                                            type: l.isStable(A) ? "success" : "danger",
                                            size: "small",
                                            effect: "plain"
                                        }, {
                                            default: se(() => [at(me(A.stage), 1)]),
                                            _: 2
                                        }, 1032, ["type"])])]), U("pre", H7, me(A.descriptions[l.locale]), 1), l.isStable(A) ? ke("", !0) : (Z(),
                                            Te(g, {
                                                key: 0,
                                                class: "!mt-20px !py-10px",
                                                type: "error",
                                                "show-icon": "",
                                                title: e.$t("Firmware.modal.alertBeta"),
                                                closable: !1
                                            }, null, 8, ["title"]))]),
                                        _: 2
                                    }, 1024)]),
                                    _: 2
                                }, 1032, ["type", "timestamp"]))), 128))]),
                        _: 1
                    })])]),
                    _: 1
                })), [[I, e.isLoading]]) : (Z(),
                Te(u, {
                    key: 0,
                    class: "pb-60px pt-50px border-1 border-dashed rounded-8px border-$el-border-color"
                }, {
                    icon: se(() => t[1] || (t[1] = [U("div", {
                        class: "icon-uil-file-times text-90px"
                    }, null, -1)])),
                    header: se(() => [at(me(e.$t("StatusBar.releaseNotes.placeHolder.header")), 1)]),
                    description: se(() => [at(me(e.$t("StatusBar.releaseNotes.placeHolder.description")), 1)]),
                    _: 1
                }))]),
            _: 1
        }, 8, ["modelValue", "title", "fullscreen", "onOpen"])
}

const z7 = {
    name: "ReleaseDialog",
    data: () => ({
        isLoading: !1,
        releaseNotes: [],
        less980: Ti,
        PlaceHolder: Ig,
        isDataExist: !1
    }),
    computed: {
        ...In("summary", ["minerSeries", "getFirmwareVersion", "isStableFirmwareVersion"]),
        dialogReleaseNotes: {
            get() {
                return this.$store.state.ui.dialogReleaseNotes
            },
            set(e) {
                this.$store.commit("ui/dialogReleaseNotes", e)
            }
        },
        locale() {
            return this.$i18n.locale === "ru" ? "ru" : "en"
        },
        filteredReleaseNotes() {
            return this.releaseNotes.filter(e => e.series === this.minerSeries)
        }
    },
    methods: {
        async getNotes() {
            const e = function (t) {
                return t && t.forEach(s => {
                        const a = {};
                        s.descriptions && s.descriptions.forEach(o => {
                                a[o.language] = o.description
                            }
                        ),
                            s.descriptions = a
                    }
                ),
                    t
            };
            this.isLoading = !0,
                this.releaseNotes = [];
            try {
                const t = await U1({
                    params: {
                        is_stable: this.isStableFirmwareVersion
                    }
                });
                this.isDataExist = !!t.data,
                    this.releaseNotes = e(t.data)
            } finally {
                this.isLoading = !1
            }
        },
        isStable(e) {
            return e.stage === "stable"
        },
        versionToString(e) {
            let t = e.version;
            return this.isStable(e) || (t += "-" + e.stage + (e.stage_number ? e.stage_number : "")),
                t
        },
        formatDate(e) {
            const t = this.$i18n.locale === "ru" ? "ru-RU" : "en-GB";
            return new Date(e).toLocaleDateString(t, {
                year: "numeric",
                month: "long",
                day: "numeric"
            })
        }
    }
}
    , B_ = fs(z7, [["render", V7]]);

function W7(e, t, s, a, o, l) {
    const u = l_
        , p = o_
        , g = $n;
    return Z(),
        Te(g, {
            class: "DialogFirmware",
            modelValue: l.dialogIntegrationIsVisible,
            "onUpdate:modelValue": t[1] || (t[1] = y => l.dialogIntegrationIsVisible = y),
            title: "Интеграции",
            "append-to-body": !0,
            fullscreen: !!e.less980,
            width: "700px"
        }, {
            default: se(() => [ae(p, {
                modelValue: e.activeName,
                "onUpdate:modelValue": t[0] || (t[0] = y => e.activeName = y)
            }, {
                default: se(() => [ae(u, {
                    label: "Anthill OS",
                    name: "anthill"
                }, {
                    default: se(() => t[2] || (t[2] = [U("span", null, "Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam placeat neque rerum temporibus quidem, aspernatur dolorem quae assumenda harum eum maiores, illum quo eius iusto, consectetur vitae quam provident fugiat?", -1)])),
                    _: 1
                }), ae(u, {
                    label: "Atlas OS",
                    name: "hive"
                }, {
                    default: se(() => t[3] || (t[3] = [U("span", null, "Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita fugit cumque quisquam debitis facilis incidunt ullam aliquam officiis alias id odio veritatis quasi voluptate, placeat explicabo, earum deserunt molestiae. Vitae.", -1)])),
                    _: 1
                })]),
                _: 1
            }, 8, ["modelValue"])]),
            _: 1
        }, 8, ["modelValue", "fullscreen"])
}

const U7 = {
    name: "IntegrationDialog",
    data: () => ({
        activeName: "anthill",
        less980: Ti
    }),
    computed: {
        dialogIntegrationIsVisible: {
            get() {
                return this.$store.state.ui.dialogIntegrationIsVisible
            },
            set(e) {
                this.$store.commit("ui/dialogIntegrationIsVisible", e)
            }
        }
    },
    methods: {}
}
    , H_ = fs(U7, [["render", W7]])
    , Y7 = {
    class: "color-danger"
}
    , X7 = {
    class: "wrapper"
};

function j7(e, t, s, a, o, l) {
    const u = M_
        , p = Ei
        , g = _n
        , y = or
        , v = $n;
    return Z(),
        Te(v, {
            class: "DialogWarranty",
            modelValue: l.dialogWarrantyIsVisible,
            "onUpdate:modelValue": t[1] || (t[1] = w => l.dialogWarrantyIsVisible = w),
            title: e.$t("Warranty.modal.title"),
            "append-to-body": !0,
            fullscreen: !!e.less980,
            width: "700px"
        }, {
            default: se(() => [U("p", null, me(e.$t("Warranty.modal.p1")), 1), U("p", Y7, me(e.$t("Warranty.modal.p2")), 1), ae(u, {
                class: "mt-20px bg-$el-color-danger",
                modelValue: e.checked,
                "onUpdate:modelValue": t[0] || (t[0] = w => e.checked = w),
                border: ""
            }, {
                default: se(() => [U("span", null, me(e.$t("Warranty.modal.agreeCheckbox")), 1)]),
                _: 1
            }, 8, ["modelValue"]), ae(y, null, {
                default: se(() => [_t(U("div", X7, [ae(p), ae(g, {
                    class: "warrantyButton w-full mt-10px",
                    type: "danger",
                    onClick: l.clickWarrantyUnlock,
                    loading: e.isWarrantyLoading,
                    disabled: !e.checked
                }, {
                    default: se(() => [t[2] || (t[2] = U("div", {
                        class: "icon-uil-shield-check"
                    }, null, -1)), U("span", null, me(e.$t("Warranty.modal.buttonUnLock")), 1)]),
                    _: 1
                }, 8, ["onClick", "loading", "disabled"])], 512), [[ss, e.checked]])]),
                _: 1
            })]),
            _: 1
        }, 8, ["modelValue", "title", "fullscreen"])
}

const G7 = {
    name: "WarrantyDialog",
    data: () => ({
        activeName: "anthill",
        checked: !1,
        less980: Ti
    }),
    computed: {
        ...ls("ui", ["isWarrantyLoading", "isAnimationWarranty", "isWarrantyLimitation"]),
        ...ls("auth", ["isAuth"]),
        dialogWarrantyIsVisible: {
            get() {
                return this.$store.state.ui.dialogWarrantyIsVisible
            },
            set(e) {
                this.$store.commit("ui/dialogWarrantyIsVisible", e)
            }
        }
    },
    methods: {
        ...Zn("ui", ["warrantyUnlock"]),
        clickWarrantyUnlock() {
            this.isAuth ? this.warrantyUnlock() : this.$store.commit("ui/dialogUnLockIsVisible", !0)
        },
        showScreen(e, t, s) {
            const a = this.$loading({
                customClass: e,
                lock: !0,
                text: t,
                spinner: s
            });
            setTimeout(() => {
                    a.close()
                }
                , 1200)
        }
    },
    watch: {
        dialogWarrantyIsVisible(e) {
            e || (this.checked = !1)
        },
        isWarrantyLimitation(e, t) {
            t !== null && (e || (this.$store.commit("ui/dialogWarrantyIsVisible", !1),
                this.isAnimationWarranty ? this.showScreen("LoadingWarrantyUnlock", Rt.global.t("Warranty.modal.unlockWarranty"), "el-icon-circle-check") : this.$store.commit("ui/isAnimationWarranty", !0)))
        }
    }
}
    , V_ = fs(G7, [["render", j7]])
    , q7 = {
    class: "flex items-center children:justify-between"
}
    , K7 = {
    class: "py-0 my-5px el-dialog__title"
}
    , Z7 = {
    class: "DialogSupport__Body flex flex-wrap gap-10px !children:basis-2/5 children:flex-1 !<sm:children:basis-1/2"
};

function J7(e, t, s, a, o, l) {
    const u = bd
        , p = _g
        , g = Po
        , y = $n;
    return Z(),
        Te(y, {
            class: "DialogSupport overflow-hidden",
            modelValue: l.dialogSupportIsVisible,
            "onUpdate:modelValue": t[2] || (t[2] = v => l.dialogSupportIsVisible = v),
            "append-to-body": !0,
            fullscreen: !!e.less980,
            width: "600px"
        }, {
            header: se(() => [U("header", q7, [U("h4", K7, me(e.$t("TechSupport.title")), 1)])]),
            footer: se(() => [ae(g, {
                class: "font-bold",
                type: "warning",
                size: "small"
            }, {
                default: se(() => [at(me(e.compile_time.slice(0, 4)) + " - " + me(e.firmware_name) + " ©", 1)]),
                _: 1
            }), ae(g, {
                class: "ml-10px font-bold",
                type: "info",
                size: "small",
                plain: ""
            }, {
                default: se(() => t[7] || (t[7] = [at("pat. us-11631138")])),
                _: 1
            })]),
            default: se(() => [U("section", Z7, [U("section", null, [ae(u, {
                class: "group !bg-$el-bg-color-page children:items-center children:transition-all children:duration-500 children:ease-in-out hover:children:transform hover:children:scale-110",
                shadow: "hover",
                onClick: t[0] || (t[0] = v => e.$store.commit("ui/dialogReportIsVisible", !0))
            }, {
                default: se(() => [t[3] || (t[3] = U("div", {
                    class: "icon-uil-medkit text-80px group-hover:bg-$el-color-primary"
                }, null, -1)), U("span", null, me(e.$t("StatusBar.report.title")), 1)]),
                _: 1
            })]), U("section", null, [ae(p, {
                class: "group relative w-full children:w-full !children:block",
                href: "/docs/",
                underline: !1,
                target: "_blank"
            }, {
                default: se(() => [ae(u, {
                    class: "!bg-$el-bg-color-page children:items-center children:transition-all children:duration-500 children:ease-in-out hover:children:transform hover:children:scale-110",
                    shadow: "hover",
                    onClick: t[1] || (t[1] = v => e.$store.commit("ui/dialogSupportIsVisible", !1))
                }, {
                    default: se(() => t[4] || (t[4] = [U("div", {
                        class: "icon-uil-brackets-curly text-80px group-hover:bg-$el-color-primary"
                    }, null, -1), U("span", null, "API", -1)])),
                    _: 1
                })]),
                _: 1
            })]), U("section", null, [ae(p, {
                class: "group relative w-full children:w-full !children:block",
                disabled: "",
                href: l.telegram,
                underline: !1,
                target: "_blank"
            }, {
                default: se(() => [ae(u, {
                    class: "!bg-$el-bg-color-page children:items-center children:transition-all children:duration-500 children:ease-in-out",
                    shadow: "hover"
                }, {
                    default: se(() => [t[5] || (t[5] = U("div", {
                        class: "icon-uil-telegram text-80px group-hover:bg-$el-color-primary"
                    }, null, -1)), U("span", null, me(e.$t("TechSupport.link.telegram")), 1), ae(g, {
                        class: "absolute top-10px right-10px",
                        type: "info",
                        size: "small"
                    }, {
                        default: se(() => [at(me(e.$t("TechSupport.tagSoon")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]),
                _: 1
            }, 8, ["href"])]), U("section", null, [ae(p, {
                class: "group relative w-full children:w-full !children:block",
                disabled: "",
                href: l.site,
                underline: !1,
                target: "_blank"
            }, {
                default: se(() => [ae(u, {
                    class: "!bg-$el-bg-color-page children:items-center children:transition-all children:duration-500 children:ease-in-out",
                    shadow: "hover"
                }, {
                    default: se(() => [t[6] || (t[6] = U("div", {
                        class: "icon-uil-favorite text-80px group-hover:bg-$el-color-primary"
                    }, null, -1)), U("span", null, me(e.$t("TechSupport.link.homepage")), 1), ae(g, {
                        class: "absolute top-10px right-10px",
                        type: "info",
                        size: "small"
                    }, {
                        default: se(() => [at(me(e.$t("TechSupport.tagSoon")), 1)]),
                        _: 1
                    })]),
                    _: 1
                })]),
                _: 1
            }, 8, ["href"])])])]),
            _: 1
        }, 8, ["modelValue", "fullscreen"])
}

var Bc = {
    VITE_APP_INSTALL_TYPE: "nand",
    VITE_APP_BUILD: "6cf07eed",
    VITE_APP_COLOR_SCHEME: "anthill",
    VITE_APP_PROD_SUB_PATH: "/",
    VITE_APP_MINER_MODEL: "s19pro",
    VITE_APP_PLATFORM: "xil",
    VITE_APP_BASE_URL: "/api/v1",
    VITE_APP_BUILDER_API_URL: "https://partner.anthill.farm",
    VITE_APP_FIRMWARE_VERSION: "1.2.6",
    BASE_URL: "/",
    MODE: "production",
    DEV: !1,
    PROD: !0,
    SSR: !1
};
const Q7 = {
    name: "SupportDialog",
    data: () => ({
        less980: Ti
    }),
    computed: {
        ...ls("summary", ["firmware_name", "compile_time"]),
        dialogSupportIsVisible: {
            get() {
                return this.$store.state.ui.dialogSupportIsVisible
            },
            set(e) {
                this.$store.commit("ui/dialogSupportIsVisible", e)
            }
        },
        site() {
            let e = "";
            return Bc.VITE_APP_SITE_URL && (e = `${Bc.VITE_APP_SITE_URL}`),
                e
        },
        telegram() {
            let e = "";
            return Bc.VITE_APP_TELEGRAM_GROUP_URL && (e = `${Bc.VITE_APP_TELEGRAM_GROUP_URL}`),
                e
        },
        report() {
            return !0
        }
    },
    methods: {
        helpbarShow() {
            this.$store.commit("ui/dialogSupportIsVisible", !1),
                this.$store.commit("ui/helpbarIsShow", !0)
        }
    }
}
    , z_ = fs(Q7, [["render", J7]])
    , eX = {
    class: "flex flex-col-reverse !children:mb-10px !children:ml-0 !children:mr-0"
};

function tX(e, t, s, a, o, l) {
    const u = _n
        , p = $n;
    return Z(),
        Te(p, {
            class: "heightAuto",
            modelValue: l.dialogRestartIsVisible,
            "onUpdate:modelValue": t[1] || (t[1] = g => l.dialogRestartIsVisible = g),
            center: "",
            top: "30vh",
            title: l.title,
            "append-to-body": !0,
            fullscreen: !!e.less980,
            width: "400px"
        }, {
            default: se(() => [U("div", eX, [ae(u, {
                onClick: t[0] || (t[0] = g => e.$store.commit("ui/dialogRestartIsVisible", !1))
            }, {
                default: se(() => [at(me(l.localeSubString("no")), 1)]),
                _: 1
            }), ae(u, {
                icon: "el-icon-check",
                type: "danger",
                onClick: l.handler
            }, {
                default: se(() => [at(me(l.localeSubString("yes")), 1)]),
                _: 1
            }, 8, ["onClick"])])]),
            _: 1
        }, 8, ["modelValue", "title", "fullscreen"])
}

const sX = {
    name: "RestartDialog",
    data: () => ({
        less980: Ti
    }),
    computed: {
        ...ls("settings", ["isLoadingPut"]),
        ...ls("ui", ["dialogRestartType", "isLoadingRestart"]),
        title() {
            return this.localeSubString("title")
        },
        yes() {
            return this.localeSubString("yes")
        },
        no() {
            return this.localeSubString("no")
        },
        dialogRestartIsVisible: {
            get() {
                return this.$store.state.ui.dialogRestartIsVisible
            },
            set(e) {
                this.$store.commit("ui/dialogRestartIsVisible", e)
            }
        }
    },
    methods: {
        ...Zn("ui", ["openDialog"]),
        ...Zn("settings", ["restartMiner"]),
        localeString() {
            return "NavBar.action.restartDialog."
        },
        localeSubString(e) {
            return Rt.global.t(`NavBar.action.restartDialog.${this.dialogRestartType}.${e}`)
        },
        handler() {
            this.isLoadingRestart || this.isLoadingPut || (this.$store.commit("ui/dialogRestartIsVisible", !1),
                this.restartMiner())
        }
    }
}
    , W_ = fs(sX, [["render", tX]]);

function nX(e, t, s, a, o, l) {
    const u = t_
        , p = Sg
        , g = Ei
        , y = gH
        , v = AS
        , w = _n
        , C = IS
        , T = Ag
        , I = wg
        , A = $n;
    return Z(),
        Te(A, {
            modelValue: l.isVisible,
            "onUpdate:modelValue": t[2] || (t[2] = R => l.isVisible = R),
            title: "Инструменты разработчика",
            fullscreen: !!e.less980,
            "append-to-body": !0,
            width: "600px"
        }, {
            default: se(() => [ae(I, null, {
                default: se(() => [ae(p, {
                    label: "Статус майнера"
                }, {
                    default: se(() => [ae(u, {
                        value: "0"
                    })]),
                    _: 1
                }), ae(g, {
                    "content-position": "left"
                }, {
                    default: se(() => t[3] || (t[3] = [at("Эмуляция ошибок на майнере")])),
                    _: 1
                }), ae(v, {
                    class: "ListErrors"
                }, {
                    default: se(() => [ae(y, {
                        value: 1
                    }, {
                        default: se(() => t[4] || (t[4] = [at("Без ошибок")])),
                        _: 1
                    }), ae(y, {
                        value: 2
                    }, {
                        default: se(() => t[5] || (t[5] = [at("Поломка куллера")])),
                        _: 1
                    }), ae(y, {
                        value: 3
                    }, {
                        default: se(() => t[6] || (t[6] = [at("Плата отключена")])),
                        _: 1
                    }), ae(y, {
                        value: 4
                    }, {
                        default: se(() => t[7] || (t[7] = [at("Не найдены все чипы")])),
                        _: 1
                    }), ae(y, {
                        value: 5
                    }, {
                        default: se(() => t[8] || (t[8] = [at("Перегрев платы")])),
                        _: 1
                    })]),
                    _: 1
                }), ae(T, {
                    class: "mt-20px",
                    gutter: 20
                }, {
                    default: se(() => [ae(C, {
                        span: 6
                    }, {
                        default: se(() => [ae(w, {
                            class: "w-full",
                            type: "danger",
                            onClick: t[0] || (t[0] = R => e.dialogAPIKey = !0)
                        }, {
                            default: se(() => t[9] || (t[9] = [at("Сбросить")])),
                            _: 1
                        })]),
                        _: 1
                    }), ae(C, {
                        span: 18
                    }, {
                        default: se(() => [ae(w, {
                            class: "w-full",
                            type: "primary",
                            onClick: t[1] || (t[1] = R => e.dialogAPIKey = !0)
                        }, {
                            default: se(() => t[10] || (t[10] = [at("Применить")])),
                            _: 1
                        })]),
                        _: 1
                    })]),
                    _: 1
                })]),
                _: 1
            })]),
            _: 1
        }, 8, ["modelValue", "fullscreen"])
}

const iX = {
    name: "BugDialog",
    data: () => ({
        less980: Ti,
        miner: ["Майнер недоступен", "Инициализация", "Майнинг", "Рестарт", "Остановлен", "Автотюнинг", "Критическая ошибка"],
        errors: ["Без ошибок", "Поломка куллера", "Плата отключена", "Не найдены все чипы", "Перегрев платы"]
    }),
    computed: {
        isVisible: {
            get() {
                return this.$store.state.ui.dialogBugIsVisible
            },
            set(e) {
                this.$store.commit("ui/dialogBugIsVisible", e)
            }
        }
    },
    methods: {
        ...Zn("summary", ["emulateStatuses"])
    }
}
    , U_ = fs(iX, [["render", nX], ["__scopeId", "data-v-06ff71ca"]])
    , aX = {
    class: "GlobalDialogs"
};

function rX(e, t, s, a, o, l) {
    const u = D_
        , p = H_
        , g = V_
        , y = $_
        , v = B_
        , w = z_
        , C = W_
        , T = U_;
    return Z(),
        ye("div", aX, [ae(u), ae(p), ae(g), ae(y), ae(v), ae(w), ae(C), ae(T)])
}

const oX = {
    name: "GlobalDialogs",
    components: {
        AuthDialog: D_,
        FirmwareDialog: $_,
        ReleaseDialog: B_,
        SupportDialog: z_,
        RestartDialog: W_,
        BugDialog: U_,
        IntegrationDialog: H_,
        WarrantyDialog: V_
    }
}
    , Y_ = fs(oX, [["render", rX]])
    , cl = "chipMaxTemp"
    , X_ = "pcbMaxTemp"
    , ul = "fanDuty"
    , Qa = "hashrate"
    , dl = "power"
    , j_ = "/metrics";
let hl = null;
const lX = 1 * 60 * 1e3
    , Xr = new Map;
let kd = 0, gh = !1, mh;
const cX = 1 * 60 * 1e3
    , ba = {
    data: null,
    timezone: "",
    annotations: [],
    timestamp: 0
}
    , G_ = async () => {
    const e = new Date().getTime();
    if (gh)
        await mh;
    else if (e - ba.timestamp > cX)
        try {
            gh = !0;
            const t = {
                time_slice: 1 * 24 * 3600,
                step: 60
            };
            mh = Gt.get(j_, {
                params: t
            }).then(s => {
                    ba.timezone = s.data.timezone || "",
                        ba.data = uX(s.data.metrics),
                        ba.annotations = s.data.annotations,
                        ba.timestamp = new Date().getTime()
                }
            ),
                await mh
        } catch (t) {
            console.log("error loading metrics", t)
        } finally {
            gh = !1
        }
    return ba.data
}
    , uX = e => {
    const t = []
        , s = []
        , a = []
        , o = []
        , l = []
        , p = 60 * (Number(ba.timezone.replace("GMT", "")) || 0);
    pX(p * 60 * 1e3);
    const g = [e[0]]
        , y = 15;
    let v = 0;
    for (let C = 1; C < e.length; C++)
        e[C].data !== null && (g[v].data.hashrate && Math.abs(g[v].data.hashrate - e[C].data.hashrate) >= .01 * g[v].data.hashrate || e[C + 1] && Math.abs(e[C].data.hashrate - e[C + 1].data.hashrate) >= .01 * e[C].data.hashrate || new Date(e[C].time * 1e3).getMinutes() % y === 0 || g[v].time - e[C].time >= y * 60) && (g.push(e[C]),
            v++);
    e = g;
    for (let C = e.length - 1; C >= 0; C--) {
        const T = e[C].time * 1e3 - kd;
        e[C].data !== null && (t.push([T, e[C].data.chip_max_temp]),
            s.push([T, e[C].data.pcb_max_temp]),
            a.push([T, e[C].data.fan_duty]),
            o.push([T, e[C].data.hashrate.toFixed(2)]),
            l.push([T, e[C].data.power_consumption]))
    }
    const w = {};
    return w[cl] = t,
        w[X_] = s,
        w[ul] = a,
        w[Qa] = o,
        w[dl] = l,
        w
}
    , dX = async () => {
    const e = {
        time_slice: 3600,
        step: 60
    }
        , t = await Gt.get(j_, {
        params: e
    });
    if (t.data && t.data.metrics && t.data.metrics.length) {
        const s = t.data.metrics[0]
            , a = s.time * 1e3 - kd
            , o = {};
        o[cl] = [a, s.data.chip_max_temp],
            o[X_] = [a, s.data.pcb_max_temp],
            o[ul] = [a, s.data.fan_duty],
            o[Qa] = [a, s.data.hashrate.toFixed(2)],
            o[dl] = [a, s.data.power_consumption],
            hX(o)
    }
}
    , hX = e => {
    Xr.forEach((t, s) => {
            const a = e[s];
            t.forEach(o => o(a))
        }
    )
}
    , Yl = (e, t) => {
    const s = Xr.get(e);
    s ? s.push(t) : Xr.set(e, [t]),
    hl == null && (hl = setInterval(dX, lX))
}
    , Xl = (e, t) => {
    const s = Xr.get(e);
    if (s) {
        const a = s.indexOf(t);
        a >= 0 && s.splice(a, 1),
        s.length === 0 && Xr.delete(e)
    }
    Xr.size === 0 && hl != null && (clearInterval(hl),
        hl = null)
}
    , fX = e => {
    const t = []
        , s = a => a.charAt(0).toUpperCase() + a.slice(1);
    for (let a = 0; a < e.length; a++) {
        const o = e[a].time * 1e3 - kd;
        let l;
        switch (e[a].data.type) {
            case "reboot":
                l = {
                    x: o,
                    type: "danger",
                    label: {
                        text: s(e[a].data.type),
                        borderColor: "var(--el-color-danger)",
                        style: {
                            color: "var(--el-color-white)",
                            background: "var(--el-color-danger)",
                            fontSize: "11px",
                            fontWeight: 700,
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    borderColor: "var(--el-color-danger)"
                };
                break;
            case "restart":
                l = {
                    x: o,
                    type: "primary",
                    label: {
                        text: s(e[a].data.type),
                        borderColor: "var(--el-color-primary)",
                        style: {
                            color: "var(--el-color-white)",
                            background: "var(--el-color-primary)",
                            fontSize: "11px",
                            fontWeight: 700,
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    borderWidth: 1,
                    strokeDashArray: 0,
                    borderColor: "var(--el-color-primary)"
                };
                break;
            case "stop":
            case "start":
            default:
                l = {
                    x: o,
                    type: "info",
                    label: {
                        text: s(e[a].data.type),
                        borderColor: "var(--el-color-info)",
                        style: {
                            color: "var(--el-color-white)",
                            background: "var(--el-color-info)",
                            fontSize: "11px",
                            fontWeight: 700,
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    borderColor: "var(--el-color-info)"
                };
                break
        }
        t.push(l)
    }
    return t
}
    , Mf = () => fX(ba.annotations)
    , pX = (e = 0) => {
    kd = -e
}
    , Tu = async e => (await G_())[e]
    , gX = "6cf07eed"
    , mX = {
    class: "CoolingCardFan",
    style: {
        "container-type": "inline-size"
    }
}
    , vX = {
    class: "ValueGroup Large"
}
    , bX = {
    class: "Label"
}
    , yX = {
    class: "Value"
}
    , xX = {
    key: 1,
    class: "text-$el-color-danger w-80px animate-pulse"
}
    , wX = {
    key: 3,
    class: "icon-uil-water"
};

function SX(e, t, s, a, o, l) {
    const u = wd;
    return Z(),
        ye("div", mX, [U("div", vX, [U("div", bX, me(e.$t("Dashboard.fans.fan")) + " " + me(s.num), 1), U("div", yX, [s.status == "ok" ? (Z(),
            ye("span", {
                key: 0,
                class: he(s.rpm ? " " : "text-$el-text-color-secondary")
            }, [at(me(s.rpm || "000"), 1), t[0] || (t[0] = U("small", {
                class: "text-$el-text-color-regular text-16px"
            }, "RPM", -1))], 2)) : (Z(),
            ye("span", xX, "Error")), l.isImmersion ? (Z(),
            ye("div", wX)) : (Z(),
            ye("div", {
                key: 2,
                class: he(["FanRotate", l.spinClass])
            }, t[1] || (t[1] = [U("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                "xmlns:xlink": "http://www.w3.org/1999/xlink",
                width: "20",
                height: "20",
                viewBox: "0 0 164.97 164.97"
            }, [U("path", {
                d: `M153.679,103.607c-7.948-6.581-16.133-7.965-23.354-9.186c-4.795-0.811-8.715-1.483-12.168-3.469
	c19.313-4.195,33.809-14.162,41.238-28.565c7.123-13.809,6.648-30.314-1.299-45.279c-4.818-9.086-15.28-15.717-26.651-16.893
	c-10.926-1.129-21.093,2.913-27.905,11.106c-6.58,7.948-7.964,16.133-9.185,23.354c-0.805,4.761-1.474,8.658-3.426,12.093
	c-4.191-19.323-14.16-33.826-28.567-41.259C48.553-1.614,32.048-1.141,17.08,6.806C7.993,11.626,1.362,22.088,0.186,33.461
	C-0.943,44.386,3.1,54.552,11.292,61.363c7.949,6.581,16.134,7.965,23.355,9.186c4.796,0.811,8.716,1.483,12.17,3.47
	c-19.314,4.194-33.81,14.161-41.24,28.564c-7.123,13.809-6.649,30.314,1.298,45.28c4.819,9.087,15.282,15.718,26.655,16.893
	c1.206,0.125,2.401,0.187,3.585,0.187c9.542,0,18.257-4.005,24.316-11.292c6.581-7.948,7.965-16.133,9.186-23.354
	c0.805-4.761,1.474-8.659,3.426-12.094c4.191,19.323,14.16,33.826,28.567,41.258c6.499,3.353,13.594,5.022,20.846,5.022
	c8.157,0,16.512-2.113,24.435-6.32c9.087-4.819,15.717-15.282,16.893-26.655C165.913,120.584,161.87,110.418,153.679,103.607z
	M82.485,101.144c-10.289,0-18.66-8.371-18.66-18.659s8.371-18.659,18.66-18.659s18.66,8.371,18.66,18.659
	S92.774,101.144,82.485,101.144z M109.144,37.175c1.038-6.138,1.934-11.439,5.938-16.276c4.861-5.845,11.371-6.121,14.818-5.764
	c6.335,0.655,12.48,4.356,14.945,9.005c5.692,10.717,6.125,21.858,1.218,31.371c-5.252,10.183-15.963,17.376-30.521,20.663
	c-1.572-8.248-6.161-15.437-12.575-20.372C107.048,49.493,108.184,42.849,109.144,37.175z M20.87,49.82
	c-5.845-4.86-6.12-11.369-5.763-14.816c0.655-6.337,4.356-12.482,9.005-14.947c10.719-5.691,21.861-6.123,31.372-1.217
	c10.199,5.261,17.4,15.997,20.679,30.59c-8.23,1.571-15.403,6.147-20.335,12.54c-6.324-4.108-12.99-5.249-18.68-6.211
	C31.009,54.721,25.707,53.825,20.87,49.82z M55.827,127.795c-1.038,6.138-1.935,11.439-5.94,16.277
	c-4.86,5.845-11.373,6.12-14.815,5.763c-6.336-0.655-12.482-4.356-14.947-9.004c-5.692-10.718-6.124-21.859-1.217-31.372
	c5.252-10.182,15.962-17.376,30.52-20.661c1.572,8.248,6.162,15.436,12.576,20.371C57.923,115.477,56.786,122.122,55.827,127.795z
	M149.864,129.966c-0.655,6.337-4.356,12.482-9.004,14.947c-10.719,5.692-21.859,6.124-31.373,1.217
	c-10.199-5.261-17.4-15.997-20.678-30.591c8.23-1.571,15.403-6.146,20.335-12.541c6.324,4.109,12.99,5.25,18.679,6.212
	c6.138,1.038,11.439,1.934,16.277,5.939C149.945,120.01,150.22,126.519,149.864,129.966z`
            })], -1)]), 2))])]), ae(u, {
            percentage: s.percent,
            status: s.status == "ok" ? s.color : "exception",
            "show-text": !1
        }, null, 8, ["percentage", "status"])])
}

const _X = {
    name: "DashboardWidgetCooler",
    props: {
        status: String,
        isLoading: Boolean,
        num: String,
        rpm: [Number, String],
        max_rpm: [Number, String],
        percent: Number,
        color: [Number, String]
    },
    data: () => ({}),
    computed: {
        ...ls("summary", ["coolingMode"]),
        isImmersion() {
            return this.coolingMode === "immers"
        },
        spinClass() {
            return this.status == "ok" ? this.percent >= 1 && this.percent < 20 ? "Slow" : this.percent >= 20 && this.percent <= 90 ? "Normal" : this.percent > 90 ? "Fast" : "" : "Error"
        }
    }
}
    , kX = fs(_X, [["render", SX]])
    , CX = "ru"
    , AX = {
    months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
    shortMonths: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"],
    days: ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"],
    shortDays: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
    toolbar: {
        exportToSVG: "Сохранить SVG",
        exportToPNG: "Сохранить PNG",
        exportToCSV: "Сохранить CSV",
        menu: "Меню",
        selection: "Выбор",
        selectionZoom: "Выбор с увеличением",
        zoomIn: "Увеличить",
        zoomOut: "Уменьшить",
        pan: "Перемещение",
        reset: "Сбросить увеличение"
    }
}
    , jr = {
    name: CX,
    options: AX
}
    , EX = "en"
    , TX = {
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    toolbar: {
        exportToSVG: "Download SVG",
        exportToPNG: "Download PNG",
        exportToCSV: "Download CSV",
        menu: "Menu",
        selection: "Selection",
        selectionZoom: "Selection Zoom",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        pan: "Panning",
        reset: "Reset Zoom"
    }
}
    , Gr = {
    name: EX,
    options: TX
}
    , IX = "fa"
    , PX = {
    months: ["فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند"],
    shortMonths: ["فرو", "ارد", "خرد", "تیر", "مرد", "شهر", "مهر", "آبا", "آذر", "دی", "بهمـ", "اسفـ"],
    days: ["یکشنبه", "دوشنبه", "سه شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"],
    shortDays: ["ی", "د", "س", "چ", "پ", "ج", "ش"],
    toolbar: {
        exportToSVG: "دانلود SVG",
        exportToPNG: "دانلود PNG",
        exportToCSV: "دانلود CSV",
        menu: "منو",
        selection: "انتخاب",
        selectionZoom: "بزرگنمایی انتخابی",
        zoomIn: "بزرگنمایی",
        zoomOut: "کوچکنمایی",
        pan: "پیمایش",
        reset: "بازنشانی بزرگنمایی"
    }
}
    , qr = {
    name: IX,
    options: PX
}
    , LX = "ua"
    , MX = {
    months: ["Січень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"],
    shortMonths: ["Січ", "Лют", "Бер", "Кві", "Тра", "Чер", "Лип", "Сер", "Вер", "Жов", "Лис", "Гру"],
    days: ["Неділя", "Понеділок", "Вівторок", "Середа", "Четвер", "П'ятниця", "Субота"],
    shortDays: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
    toolbar: {
        exportToSVG: "Зберегти SVG",
        exportToPNG: "Зберегти PNG",
        exportToCSV: "Зберегти CSV",
        menu: "Меню",
        selection: "Вибір",
        selectionZoom: "Вибір із збільшенням",
        zoomIn: "Збільшити",
        zoomOut: "Зменшити",
        pan: "Переміщення",
        reset: "Скинути збільшення"
    }
}
    , Kr = {
    name: LX,
    options: MX
}
    , OX = "zh-cn"
    , RX = {
    months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
    shortMonths: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
    days: ["星期天", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
    shortDays: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
    toolbar: {
        exportToSVG: "下载 SVG",
        exportToPNG: "下载 PNG",
        exportToCSV: "下载 CSV",
        menu: "菜单",
        selection: "选择",
        selectionZoom: "选择缩放",
        zoomIn: "放大",
        zoomOut: "缩小",
        pan: "平移",
        reset: "重置缩放"
    }
}
    , Zr = {
    name: OX,
    options: RX
}
    , NX = {
    class: "gap-5px !flex"
}
    , DX = {
    class: "icon-uil-temperature-half text-18px"
}
    , FX = {
    class: "justify-between"
}
    , $X = {
    class: "footerHeader"
}
    , BX = {
    class: "mr-10px rangeHeader"
}
    , HX = {
    class: "mt-2px"
};

function VX(e, t, s, a, o, l) {
    const u = Bt("apexchart")
        , p = _g
        , g = Ei
        , y = $n
        , v = bd
        , w = wo("touch");
    return Z(),
        Te(v, {
            class: "Chart",
            shadow: "hover"
        }, {
            header: se(() => [U("header", NX, [_t(U("div", DX, null, 512), [[ss, e.$route.name !== "Dashboard"]]), U("a", {
                class: "link group",
                onClick: t[0] || (t[0] = (...C) => l.openChart && l.openChart(...C))
            }, [U("span", null, me(e.$t("Dashboard.chartChipTemp.title")), 1), t[6] || (t[6] = U("div", {
                class: "icon-uil-arrow-up-right group-hover:bg-$el-color-primary !group-hover:translate-x-5px group-hover:ease-in !group-hover:duration-300"
            }, null, -1))])])]),
            default: se(() => [U("main", null, [o.isContainerReady && o.series[0].data.length > 0 ? _t((Z(),
                Te(u, {
                    key: 0,
                    ref: "chart-temp-preview",
                    options: o.chartPreviewOptions,
                    series: o.series,
                    height: "83%",
                    width: "100%",
                    onMounted: l.onMounted
                }, null, 8, ["options", "series", "onMounted"])), [[w, void 0, "swipe", {
                stop: !0
            }]]) : ke("", !0)]), U("footer", FX, [U("header", $X, [U("a", {
                class: "link group",
                onClick: t[1] || (t[1] = (...C) => l.openChart && l.openChart(...C))
            }, [at(me(e.$t("Dashboard.chartChipTemp.title")), 1), t[7] || (t[7] = U("div", {
                class: "icon-uil-arrow-up-right text-15px group-hover:bg-$el-color-primary !group-hover:translate-x-5px group-hover:ease-in !group-hover:duration-300"
            }, null, -1))])]), U("span", BX, me(e.$t("Dashboard.charts.range")), 1), U("span", HX, [ae(p, {
                underline: !1,
                type: "primary",
                class: he(l.timeSelection === 1 ? "" : "!text-$el-text-color-regular !text-11px"),
                onClick: t[2] || (t[2] = C => l.clickTimeSelection(1))
            }, {
                default: se(() => [at(me(e.$t("Dashboard.charts.hours1")), 1)]),
                _: 1
            }, 8, ["class"]), ae(g, {
                direction: "vertical"
            }), ae(p, {
                underline: !1,
                type: "primary",
                class: he(l.timeSelection === 12 ? "" : "!text-$el-text-color-regular !text-11px"),
                onClick: t[3] || (t[3] = C => l.clickTimeSelection(12))
            }, {
                default: se(() => [at(me(e.$t("Dashboard.charts.hours12")), 1)]),
                _: 1
            }, 8, ["class"]), ae(g, {
                direction: "vertical"
            }), ae(p, {
                underline: !1,
                type: "primary",
                class: he(l.timeSelection === 24 ? "" : "!text-$el-text-color-regular !text-11px"),
                onClick: t[4] || (t[4] = C => l.clickTimeSelection(24))
            }, {
                default: se(() => [at(me(e.$t("Dashboard.charts.hours24")), 1)]),
                _: 1
            }, 8, ["class"])])]), ae(y, {
                class: "FullChartDialog",
                "append-to-body": "",
                title: e.$t("Dashboard.chartChipTemp.title"),
                modelValue: o.dialogVisible,
                "onUpdate:modelValue": t[5] || (t[5] = C => o.dialogVisible = C),
                fullscreen: !!o.less800,
                width: "80vw"
            }, {
                default: se(() => [o.series[0].data.length > 0 ? _t((Z(),
                    Te(u, {
                        key: 0,
                        class: "mr-20px",
                        ref: "chart-temp",
                        options: o.chartOptions,
                        series: o.series,
                        width: "100%",
                        height: "400px"
                    }, null, 8, ["options", "series"])), [[w, void 0, "swipe", {
                    stop: !0
                }]]) : ke("", !0)]),
                _: 1
            }, 8, ["title", "modelValue", "fullscreen"])]),
            _: 1
        })
}

const zX = {
    name: "DashboardWidgetChartChiptemp",
    data() {
        const e = () => this.$store.state.ui.theme === "auto" ? window.matchMedia && window.matchMedia("(prefers-color-scheme: light)").matches ? "light" : "dark" : this.$store.state.ui.theme
            , {t} = Ql();
        return {
            more1601: A_,
            less800: Eg,
            dialogVisible: !1,
            isContainerReady: !1,
            series: [{
                name: t("Dashboard.chartChipTemp.chipTemp"),
                type: "area",
                data: []
            }, {
                name: t("Dashboard.chartChipTemp.fanDuty"),
                type: "line",
                data: []
            }],
            chartPreviewOptions: {
                chart: {
                    locales: [jr, Gr, qr, Kr, Zr],
                    defaultLocale: this.$store.state.ui.locale === "zh" ? "zh-cn" : this.$store.state.ui.locale,
                    id: "chiptemp-chart-preview",
                    group: "group1",
                    animations: {
                        enabled: this.$store.state.ui.enableUIEffects,
                        dynamicAnimation: {
                            enabled: this.$store.state.ui.enableUIEffects
                        }
                    },
                    toolbar: {
                        autoSelected: "zoom",
                        show: !1,
                        colors: "var(--el-color-primary)",
                        tools: {}
                    },
                    zoom: {
                        autoScaleYaxis: !1,
                        zoomedArea: {
                            fill: {
                                color: "var(--el-text-color-regular)",
                                opacity: .2
                            },
                            stroke: {
                                color: "var(--el-text-color-regular)",
                                opacity: .5,
                                width: .5
                            }
                        }
                    }
                },
                theme: {
                    mode: e()
                },
                colors: ["#E54F54", "var(--el-text-color-regular)"],
                stroke: {
                    show: !0,
                    curve: "smooth",
                    lineCap: "butt",
                    width: [2, 2],
                    dashArray: [0, 3],
                    colors: ["var(--el-color-danger)", "var(--el-text-color-regular)"]
                },
                fill: {
                    type: ["gradient", "solid"],
                    gradient: {
                        type: "vertical",
                        inverseColors: !1,
                        shadeIntensity: 1,
                        opacityFrom: .6,
                        opacityTo: .3,
                        stops: [0, 90, 100],
                        gradientToColors: ["var(--el-color-white )"]
                    }
                },
                tooltip: {
                    x: {
                        format: "dd MMM / HH:mm"
                    },
                    style: {
                        fontSize: "11px"
                    },
                    onDatasetHover: {
                        highlightDataSeries: !0
                    }
                },
                xaxis: {
                    type: "datetime",
                    tickPlacement: "on",
                    labels: {
                        show: !0,
                        offsetY: -3,
                        datetimeUTC: !0,
                        format: "HH:mm",
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontSize: "10px",
                            fontWeight: 500,
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    tooltip: {
                        enabled: !1
                    }
                },
                yaxis: [{
                    seriesName: "chiptemp",
                    tickAmount: 4,
                    forceNiceScale: !1,
                    title: {
                        style: {
                            color: "var(--el-text-color-regular)"
                        }
                    },
                    labels: {
                        minWidth: 50,
                        maxWidth: 50,
                        style: {
                            colors: "var(--el-color-danger)",
                            fontSize: "10px",
                            fontWeight: 600,
                            fontFamily: "Roboto Flex Variable"
                        },
                        formatter: function (s) {
                            return s + "°"
                        }
                    },
                    axisTicks: {
                        show: !1
                    },
                    axisBorder: {
                        show: !1,
                        color: "var(--el-color-danger)"
                    }
                }, {
                    seriesName: "fanduty",
                    min: 0,
                    max: 100,
                    tickAmount: 4,
                    opposite: !0,
                    labels: {
                        minWidth: 25,
                        maxWidth: 25,
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontSize: "10px",
                            fontWeight: 600,
                            fontFamily: "Roboto Flex Variable"
                        },
                        formatter: function (s) {
                            return s + "%"
                        }
                    },
                    axisBorder: {
                        show: !1,
                        color: "var(--el-text-color-regular)"
                    }
                }],
                grid: {
                    position: "back",
                    show: !1,
                    borderColor: "var(--el-border-color)",
                    padding: {
                        left: 10,
                        right: 7,
                        top: -15
                    }
                },
                markers: {
                    size: 0
                },
                dataLabels: {
                    enabled: !1
                },
                legend: {
                    show: !1
                },
                sparkline: {
                    enabled: !1
                }
            },
            chartOptions: {
                chart: {
                    locales: [jr, Gr, qr, Kr, Zr],
                    defaultLocale: this.$store.state.ui.locale === "zh" ? "zh-cn" : this.$store.state.ui.locale,
                    id: "chiptemp-chart2",
                    type: "area",
                    animations: {
                        enabled: this.$store.state.ui.enableUIEffects,
                        dynamicAnimation: {
                            enabled: this.$store.state.ui.enableUIEffects
                        }
                    },
                    toolbar: {
                        autoSelected: "zoom",
                        show: !1,
                        colors: "var(--el-color-primary)",
                        tools: {}
                    },
                    zoom: {
                        zoomedArea: {
                            fill: {
                                color: "var(--el-text-color-regular)",
                                opacity: .2
                            },
                            stroke: {
                                color: "var(--el-text-color-regular)",
                                opacity: .5,
                                width: .5
                            }
                        }
                    }
                },
                theme: {
                    mode: e()
                },
                colors: ["#E54F54", "var(--el-text-color-regular)"],
                stroke: {
                    show: !0,
                    curve: "smooth",
                    lineCap: "butt",
                    width: [2, 2],
                    dashArray: [0, 3],
                    colors: ["var(--el-color-danger)", "var(--el-text-color-regular)"]
                },
                fill: {
                    type: ["gradient", "solid"],
                    gradient: {
                        type: "vertical",
                        shadeIntensity: 1,
                        opacityFrom: .6,
                        opacityTo: .3,
                        stops: [0, 90, 100],
                        gradientToColors: ["var(--el-color-white )"]
                    }
                },
                tooltip: {
                    x: {
                        format: "dd MMM | HH:mm"
                    }
                },
                xaxis: {
                    type: "datetime",
                    axisTicks: {
                        show: !0
                    },
                    labels: {
                        show: !0,
                        datetimeUTC: !0,
                        format: "HH:mm",
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontSize: "12px",
                            fontWeight: 500,
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    tooltip: {
                        style: {
                            fontSize: "12px"
                        }
                    }
                },
                yaxis: [{
                    seriesName: "chiptemp",
                    tickAmount: 6,
                    title: {
                        style: {
                            color: "var(--el-text-color-regular)"
                        }
                    },
                    labels: {
                        style: {
                            colors: "var(--el-color-danger)",
                            fontSize: "12px",
                            fontWeight: 500,
                            fontFamily: "Roboto Flex Variable"
                        },
                        formatter: function (s) {
                            return s.toFixed(0) + "°"
                        },
                        minWidth: 5
                    },
                    axisTicks: {
                        show: !1
                    },
                    axisBorder: {
                        show: !1,
                        color: "var(--el-color-danger)"
                    }
                }, {
                    seriesName: "fanduty",
                    tickAmount: 4,
                    opposite: !0,
                    title: {
                        text: t("Dashboard.chartChipTemp.fanDuty"),
                        style: {
                            color: "var(--el-text-color-regular)",
                            fontSize: "16px",
                            fontWeight: 600,
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    labels: {
                        minWidth: 25,
                        maxWidth: 25,
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontSize: "12px",
                            fontWeight: 600,
                            fontFamily: "Roboto Flex Variable"
                        },
                        formatter: function (s) {
                            return s + "%"
                        }
                    },
                    axisBorder: {
                        show: !1,
                        color: "var(--el-text-color-regular)"
                    }
                }],
                grid: {
                    show: !0,
                    position: "back",
                    borderColor: "var(--el-border-color)",
                    padding: {
                        left: 10,
                        right: 10,
                        top: -20,
                        bottom: 0
                    }
                },
                markers: {
                    size: 0
                },
                dataLabels: {
                    enabled: !1
                },
                legend: {
                    show: !0,
                    position: "top",
                    horizontalAlign: "center"
                },
                sparkline: {
                    enabled: !1
                }
            },
            seriesBrush: [{
                data: []
            }, {
                data: []
            }],
            chartBrushOptions: {
                chart: {
                    locales: [jr, Gr, qr, Kr, Zr],
                    defaultLocale: this.$store.state.ui.locale === "zh" ? "zh-cn" : this.$store.state.ui.locale,
                    id: "chiptemp-chart1",
                    type: "area",
                    brush: {
                        target: "chiptemp-chart2",
                        enabled: !0,
                        autoScaleYaxis: !0
                    },
                    selection: {
                        enabled: !0,
                        fill: {
                            color: "var(--el-text-color-secondary)",
                            opacity: .2
                        },
                        stroke: {
                            width: 1,
                            dashArray: 3,
                            color: "var(--el-color-primary)",
                            opacity: 1
                        },
                        xaxis: {
                            min: new Date,
                            max: new Date
                        }
                    }
                },
                theme: {
                    mode: e()
                },
                stroke: {
                    curve: "straight",
                    width: 1,
                    colors: ["var(--el-text-color-secondary)"]
                },
                fill: {
                    colors: ["var(--el-color-danger-light-8)"],
                    type: "solid"
                },
                xaxis: {
                    type: "datetime",
                    tooltip: {
                        enabled: !1
                    },
                    axisTicks: {
                        show: !0
                    },
                    labels: {
                        datetimeUTC: !0,
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontSize: "12px",
                            fontWeight: 600,
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    axisBorder: {
                        show: !0,
                        color: "var(--el-text-color-secondary)",
                        height: 1,
                        width: "100%",
                        offsetX: 0,
                        offsetY: 0
                    }
                },
                yaxis: {
                    min: 0,
                    max: 100,
                    forceNiceScale: !1,
                    tickAmount: 2,
                    labels: {
                        minWidth: 25,
                        maxWidth: 25,
                        show: !1
                    }
                },
                legend: {
                    show: !1
                },
                grid: {
                    position: "back",
                    show: !1,
                    borderColor: "var(--el-border-color)",
                    padding: {
                        left: 40,
                        right: 60,
                        top: -25
                    }
                }
            }
        }
    },
    computed: {
        timeSelection: {
            get() {
                return this.$store.state.ui.chartsTimeSelection
            },
            set(e) {
                this.$store.commit("ui/chartsTimeSelection", e)
            }
        }
    },
    watch: {
        timeSelection(e) {
            this.$nextTick(() => {
                    this.handleTimeSelection(e)
                }
            )
        }
    },
    async mounted() {
        const e = await Tu(cl);
        this.series[0].data = e,
            this.seriesBrush[0].data = e;
        const t = await Tu(ul);
        this.series[1].data = t,
            Yl(cl, this.updateChipmaxtempMetrics),
            Yl(ul, this.updateFandutyMetrics),
            xt(() => {
                    xt(() => {
                            this.isContainerReady = !0
                        }
                    )
                }
            )
    },
    beforeUnmount() {
        Xl(cl, this.updateChipmaxtempMetrics),
            Xl(ul, this.updateFandutyMetrics)
    },
    methods: {
        onMounted() {
            xt(() => {
                    this.handleTimeSelection(this.timeSelection)
                }
            )
        },
        updateChipmaxtempMetrics(e) {
            this.$refs["chart-temp-preview"] && this.$refs["chart-temp-preview"].appendData([{
                data: [e]
            }, {
                data: []
            }])
        },
        updateFandutyMetrics(e) {
            this.$refs["chart-temp-preview"] && this.$refs["chart-temp-preview"].appendData([{
                data: []
            }, {
                data: [e]
            }])
        },
        openChart() {
            this.dialogVisible = !0,
                this.$nextTick(() => {
                        this.$refs["chart-temp"],
                            new Date(this.series[0].data[0][0]),
                            new Date(this.series[0].data[this.series[0].data.length - 1][0])
                    }
                )
        },
        clickTimeSelection(e) {
            this.timeSelection = e
        },
        handleTimeSelection(e) {
            const t = this.$refs["chart-temp-preview"];
            if (typeof t > "u" || typeof this.series[0] > "u" || typeof this.series[0].data[this.series[0].data.length - 1] > "u")
                return;
            const s = new Date(this.series[0].data[this.series[0].data.length - 1][0]);
            e === 24 ? t.resetSeries(!1) : t.zoomX(new Date(s).setHours(s.getHours() - e), s)
        }
    }
}
    , WX = fs(zX, [["render", VX]])
    , UX = {
    class: "gap-5px !flex"
}
    , YX = {
    class: "icon-uil-dashboard text-17px"
}
    , XX = {
    class: "eventsControl"
}
    , jX = ["onClick"]
    , GX = {
    class: "justify-between"
}
    , qX = {
    class: "footerHeader"
}
    , KX = {
    class: "rangeHeader mr-10px"
}
    , ZX = {
    class: "-mt-2px"
}
    , JX = {
    class: "flex"
}
    , QX = {
    class: "el-dialog__title"
};

function ej(e, t, s, a, o, l) {
    const u = Bt("apexchart")
        , p = _g
        , g = Ei
        , y = $n
        , v = bd
        , w = wo("touch");
    return Z(),
        Te(v, {
            class: "Chart",
            shadow: "hover"
        }, {
            header: se(() => [U("header", UX, [_t(U("div", YX, null, 512), [[ss, e.$route.name !== "Dashboard"]]), U("a", {
                class: "link group",
                onClick: t[0] || (t[0] = (...C) => l.openChart && l.openChart(...C))
            }, [U("span", null, me(e.$t("Dashboard.chartHashrate.title")), 1), t[6] || (t[6] = U("div", {
                class: "icon-uil-arrow-up-right group-hover:bg-$el-color-primary !group-hover:translate-x-5px group-hover:ease-in !group-hover:duration-300"
            }, null, -1))])]), U("span", XX, [(Z(!0),
                ye(Ct, null, wi(o.annotationFilter, (C, T) => (Z(),
                    ye("div", {
                        class: he(["eventsControl_Button", ["!text-$el-color-" + T, o.annotationFilter[T] ? "active" : ""]]),
                        onClick: I => l.clickAnnotationFilter(T)
                    }, null, 10, jX))), 256))])]),
            default: se(() => [U("main", null, [o.isContainerReady && o.series[0].data.length > 0 ? _t((Z(),
                Te(u, {
                    key: 0,
                    ref: "chart-hashrate-preview",
                    options: o.chartPreviewOptions,
                    series: o.series,
                    height: "83%",
                    width: "100%",
                    onMounted: l.onMounted
                }, null, 8, ["options", "series", "onMounted"])), [[w, void 0, "swipe", {
                stop: !0
            }]]) : ke("", !0)]), U("footer", GX, [U("header", qX, [U("a", {
                class: "link group",
                onClick: t[1] || (t[1] = (...C) => l.openChart && l.openChart(...C))
            }, [at(me(e.$t("Dashboard.chartHashrate.title")), 1), t[7] || (t[7] = U("div", {
                class: "icon-uil-arrow-up-right text-15px group-hover:bg-$el-color-primary !group-hover:translate-x-5px group-hover:ease-in !group-hover:duration-300"
            }, null, -1))])]), U("span", KX, me(e.$t("Dashboard.charts.range")), 1), U("span", ZX, [ae(p, {
                underline: !1,
                type: "primary",
                class: he(l.timeSelection === 1 ? "" : "!text-$el-text-color-regular !text-11px"),
                onClick: t[2] || (t[2] = C => l.clickTimeSelection(1))
            }, {
                default: se(() => [at(me(e.$t("Dashboard.charts.hours1")), 1)]),
                _: 1
            }, 8, ["class"]), ae(g, {
                direction: "vertical"
            }), ae(p, {
                underline: !1,
                type: "primary",
                class: he(l.timeSelection === 12 ? "" : "!text-$el-text-color-regular !text-11px"),
                onClick: t[3] || (t[3] = C => l.clickTimeSelection(12))
            }, {
                default: se(() => [at(me(e.$t("Dashboard.charts.hours12")), 1)]),
                _: 1
            }, 8, ["class"]), ae(g, {
                direction: "vertical"
            }), ae(p, {
                underline: !1,
                type: "primary",
                class: he(l.timeSelection === 24 ? "" : "!text-$el-text-color-regular !text-11px"),
                onClick: t[4] || (t[4] = C => l.clickTimeSelection(24))
            }, {
                default: se(() => [at(me(e.$t("Dashboard.charts.hours24")), 1)]),
                _: 1
            }, 8, ["class"])])]), ae(y, {
                class: "FullChartDialog",
                "append-to-body": "",
                modelValue: o.dialogVisible,
                "onUpdate:modelValue": t[5] || (t[5] = C => o.dialogVisible = C),
                fullscreen: o.less800,
                width: "80vw"
            }, {
                header: se(() => [U("section", JX, [U("span", QX, me(e.$t("Dashboard.chartHashrate.title")), 1)])]),
                default: se(() => [o.series[0].data.length > 0 ? _t((Z(),
                    Te(u, {
                        key: 0,
                        ref: "chart-hashrate",
                        options: o.chartOptions,
                        series: o.series,
                        width: "100%",
                        height: "400px"
                    }, null, 8, ["options", "series"])), [[w, void 0, "swipe", {
                    stop: !0
                }]]) : ke("", !0)]),
                _: 1
            }, 8, ["modelValue", "fullscreen"])]),
            _: 1
        })
}

const tj = {
    name: "DashboardWidgetChartHashrate",
    data() {
        const e = () => this.$store.state.ui.theme === "auto" ? window.matchMedia && window.matchMedia("(prefers-color-scheme: light)").matches ? "light" : "dark" : this.$store.state.ui.theme
            , {t} = Ql();
        return {
            more1601: A_,
            less800: Eg,
            dialogVisible: !1,
            isContainerReady: !1,
            annotationFilter: {
                info: !0,
                primary: !0,
                danger: !0
            },
            series: [{
                name: t("Dashboard.chartHashrate.hashrate"),
                type: "area",
                data: []
            }, {
                name: t("Dashboard.chartHashrate.power"),
                type: "line",
                data: []
            }],
            chartPreviewOptions: {
                chart: {
                    locales: [jr, Gr, qr, Kr, Zr],
                    defaultLocale: this.$store.state.ui.locale === "zh" ? "zh-cn" : this.$store.state.ui.locale,
                    group: "group1",
                    id: "hashrate-chart-preview",
                    type: "area",
                    animations: {
                        enabled: this.$store.state.ui.enableUIEffects,
                        dynamicAnimation: {
                            enabled: this.$store.state.ui.enableUIEffects
                        }
                    },
                    toolbar: {
                        autoSelected: "zoom",
                        show: !1,
                        colors: "var(--el-color-primary)",
                        tools: {}
                    },
                    zoom: {
                        zoomedArea: {
                            fill: {
                                color: "var(--el-text-color-regular)",
                                opacity: .2
                            },
                            stroke: {
                                color: "var(--el-text-color-regular)",
                                opacity: .5,
                                width: .5
                            }
                        }
                    }
                },
                theme: {
                    mode: e()
                },
                colors: ["var(--el-color-primary)", "var(--el-text-color-regular)"],
                stroke: {
                    show: !0,
                    curve: "smooth",
                    lineCap: "butt",
                    width: [2, 2],
                    dashArray: [0, 3],
                    colors: ["var(--el-color-primary)", "var(--el-text-color-regular)"]
                },
                fill: {
                    type: ["gradient", "solid"],
                    gradient: {
                        shadeIntensity: 1,
                        opacityFrom: .6,
                        opacityTo: .3,
                        stops: [0, 90, 100],
                        gradientToColors: ["var(--el-color-white)"]
                    }
                },
                tooltip: {
                    enabled: !0,
                    x: {
                        format: "dd MMM / HH:mm"
                    },
                    style: {
                        fontSize: "11px"
                    },
                    y: {
                        formatter: function (s, {seriesIndex: a}) {
                            return a === 1 ? s.toFixed(0) + " " + t("Dashboard.chartHashrate.watt") : s.toFixed(2)
                        }
                    }
                },
                xaxis: {
                    type: "datetime",
                    tickPlacement: "on",
                    labels: {
                        show: !0,
                        offsetY: -3,
                        datetimeUTC: !0,
                        format: "HH:mm",
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontSize: "10px",
                            fontWeight: 500,
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    tooltip: {
                        enabled: !1
                    }
                },
                yaxis: [{
                    seriesName: "Hashrate",
                    tickAmount: 3,
                    title: {
                        style: {
                            color: "var(--el-color-primary)"
                        }
                    },
                    labels: {
                        minWidth: 50,
                        maxWidth: 50,
                        style: {
                            colors: "var(--el-color-primary)",
                            fontWeight: 600,
                            fontSize: "10px",
                            fontFamily: "Roboto Flex Variable"
                        },
                        formatter: function (s) {
                            return s.toFixed(0)
                        }
                    },
                    axisTicks: {
                        show: !1
                    },
                    axisBorder: {
                        show: !1
                    }
                }, {
                    seriesName: "Power",
                    opposite: !0,
                    tickAmount: 3,
                    title: {
                        style: {
                            color: "var(--el-text-color-regular)"
                        }
                    },
                    labels: {
                        minWidth: 50,
                        maxWidth: 50,
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontSize: "10px",
                            fontWeight: 600,
                            fontFamily: "Roboto Flex Variable"
                        },
                        formatter: function (s) {
                            return s.toFixed(0) + " " + t("Dashboard.chartHashrate.watt")
                        }
                    },
                    axisTicks: {
                        show: !1
                    },
                    axisBorder: {
                        show: !1
                    }
                }],
                annotations: {
                    xaxis: []
                },
                grid: {
                    show: !1,
                    borderColor: "var(--el-border-color)",
                    padding: {
                        left: 10,
                        right: 7,
                        top: -15
                    }
                },
                markers: {
                    size: 0
                },
                dataLabels: {
                    enabled: !1
                },
                legend: {
                    show: !1
                },
                sparkline: {
                    enabled: !1
                }
            },
            chartOptions: {
                chart: {
                    locales: [jr, Gr, qr, Kr, Zr],
                    defaultLocale: this.$store.state.ui.locale === "zh" ? "zh-cn" : this.$store.state.ui.locale,
                    id: "chart2",
                    type: "area",
                    animations: {
                        enabled: this.$store.state.ui.enableUIEffects,
                        dynamicAnimation: {
                            enabled: this.$store.state.ui.enableUIEffects
                        }
                    },
                    toolbar: {
                        autoSelected: "zoom",
                        show: !1,
                        colors: "var(--el-color-primary)",
                        tools: {}
                    },
                    zoom: {
                        zoomedArea: {
                            fill: {
                                color: "var(--el-text-color-regular)",
                                opacity: .2
                            },
                            stroke: {
                                color: "var(--el-text-color-regular)",
                                opacity: .5,
                                width: .5
                            }
                        }
                    }
                },
                theme: {
                    mode: e()
                },
                colors: ["var(--el-color-primary)", "var(--el-text-color-regular)"],
                stroke: {
                    show: !0,
                    curve: "smooth",
                    lineCap: "butt",
                    width: [2, 2],
                    dashArray: [0, 3],
                    colors: ["var(--el-color-primary)", "var(--el-text-color-regular)"]
                },
                fill: {
                    type: ["gradient", "solid"],
                    gradient: {
                        type: "vertical",
                        shadeIntensity: 1,
                        opacityFrom: .5,
                        opacityTo: .5,
                        stops: [0, 100, 100],
                        gradientToColors: ["var(--el-color-white)"]
                    }
                },
                tooltip: {
                    x: {
                        format: "dd MMM | HH:mm"
                    }
                },
                xaxis: {
                    type: "datetime",
                    tickPlacement: "on",
                    axisTicks: {
                        show: !0
                    },
                    labels: {
                        show: !0,
                        datetimeUTC: !0,
                        format: "HH:mm",
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontWeight: 500,
                            fontSize: "12px",
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    tooltip: {
                        style: {
                            fontSize: "14px"
                        }
                    }
                },
                yaxis: [{
                    seriesName: "Hashrate",
                    tickAmount: 5,
                    title: {
                        style: {
                            color: "var(--el-text-color-regular)"
                        }
                    },
                    labels: {
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontWeight: 500,
                            fontSize: "12px",
                            fontFamily: "Roboto Flex Variable"
                        },
                        formatter: function (s) {
                            return s.toFixed(2)
                        },
                        minWidth: 5
                    },
                    axisTicks: {
                        show: !1
                    },
                    axisBorder: {
                        show: !1
                    }
                }, {
                    seriesName: "Power",
                    opposite: !0,
                    tickAmount: 6,
                    min: 0,
                    forceNiceScale: !0,
                    title: {
                        text: t("Dashboard.chartHashrate.powerConsumption"),
                        style: {
                            color: "var(--el-text-color-regular)",
                            fontSize: "16px",
                            fontWeight: 600,
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    labels: {
                        minWidth: 50,
                        maxWidth: 50,
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontSize: "10px",
                            fontWeight: 600,
                            fontFamily: "Roboto Flex Variable"
                        },
                        formatter: function (s) {
                            return s.toFixed(0) + " " + t("Dashboard.chartHashrate.watt")
                        }
                    },
                    axisTicks: {
                        show: !1
                    },
                    axisBorder: {
                        show: !1
                    }
                }],
                annotations: {
                    xaxis: []
                },
                grid: {
                    show: !0,
                    position: "back",
                    borderColor: "var(--el-border-color)",
                    padding: {
                        left: 10,
                        right: 0
                    }
                },
                markers: {
                    size: 0
                },
                dataLabels: {
                    enabled: !1
                },
                legend: {
                    show: !0,
                    position: "top",
                    horizontalAlign: "center"
                },
                sparkline: {
                    enabled: !1
                }
            },
            seriesBrush: [{
                data: []
            }, {
                data: []
            }],
            chartBrushOptions: {
                chart: {
                    locales: [jr, Gr, qr, Kr, Zr],
                    defaultLocale: this.$store.state.ui.locale === "zh" ? "zh-cn" : this.$store.state.ui.locale,
                    id: "chart1",
                    type: "area",
                    brush: {
                        target: "chart2",
                        enabled: !0,
                        autoScaleYaxis: !0
                    },
                    selection: {
                        enabled: !0,
                        fill: {
                            color: "var(--el-text-color-secondary)",
                            opacity: .2
                        },
                        stroke: {
                            width: 1,
                            dashArray: 3,
                            color: "var(--el-color-primary)",
                            opacity: 1
                        },
                        xaxis: {
                            min: new Date,
                            max: new Date
                        }
                    }
                },
                theme: {
                    mode: e()
                },
                stroke: {
                    curve: "smooth",
                    width: 1,
                    colors: ["var(--el-text-color-secondary)"]
                },
                fill: {
                    colors: ["var(--el-color-primary-light-8)"],
                    type: "solid"
                },
                xaxis: {
                    type: "datetime",
                    tooltip: {
                        enabled: !1
                    },
                    axisTicks: {
                        show: !0
                    },
                    labels: {
                        datetimeUTC: !0,
                        style: {
                            colors: "var(--el-text-color-regular)",
                            fontWeight: 600,
                            fontSize: "12px",
                            fontFamily: "Roboto Flex Variable"
                        }
                    },
                    axisBorder: {
                        show: !0,
                        color: "var(--el-text-color-secondary)",
                        height: 1,
                        width: "100%",
                        offsetX: 0,
                        offsetY: 0
                    }
                },
                yaxis: {
                    forceNiceScale: !0,
                    tickAmount: 2,
                    labels: {
                        show: !1
                    }
                },
                annotations: {
                    xaxis: []
                },
                grid: {
                    show: !0,
                    borderColor: "var(--el-border-color)",
                    padding: {
                        left: 40,
                        right: 0,
                        top: -25
                    }
                }
            }
        }
    },
    computed: {
        timeSelection: {
            get() {
                return this.$store.state.ui.chartsTimeSelection
            },
            set(e) {
                this.$store.commit("ui/chartsTimeSelection", e)
            }
        }
    },
    watch: {
        timeSelection(e) {
            this.handleTimeSelection(e)
        }
    },
    async mounted() {
        const e = await Tu(Qa);
        this.series[0].data = e,
            this.seriesBrush[0].data = e;
        const t = await Tu(dl);
        this.series[1].data = t,
            this.buildFilterFromAnnotations();
        const s = this.getFilteredAnnotations();
        this.chartOptions.annotations.xaxis = s,
            this.chartBrushOptions.annotations.xaxis = s,
            this.chartPreviewOptions.annotations.xaxis = s,
            Yl(Qa, this.updateHashrateMetrics),
            Yl(dl, this.updatePowerMetrics),
            xt(() => {
                    xt(() => {
                            this.isContainerReady = !0
                        }
                    )
                }
            )
    },
    beforeUnmount() {
        Xl(Qa, this.updateHashrateMetrics),
            Xl(dl, this.updatePowerMetrics)
    },
    methods: {
        onMounted() {
            this.handleTimeSelection(this.timeSelection)
        },
        buildFilterFromAnnotations() {
            const e = Mf()
                , t = {
                info: 0,
                primary: 0,
                danger: 0
            };
            e.forEach(a => {
                    t[a.type] += 1
                }
            );
            const s = {};
            for (let a in t)
                t[a] && (s[a] = typeof this.annotationFilter[a] == "boolean" ? this.annotationFilter[a] : !0);
            this.annotationFilter = s
        },
        getFilteredAnnotations() {
            return Mf().filter(t => this.annotationFilter[t.type])
        },
        updateAnnotations() {
            this.$refs["chart-hashrate-preview"],
                this.$refs["chart-hashrate-brush"];
            const e = this.$refs["chart-hashrate-preview"]
                , t = this.getFilteredAnnotations();
            this.chartPreviewOptions.annotations.xaxis = t,
            e && e.updateOptions({
                annotations: {
                    xaxis: t
                }
            }, !1, !1, !1)
        },
        updateHashrateMetrics(e) {
            this.$refs["chart-hashrate-preview"] && this.$refs["chart-hashrate-preview"].appendData([{
                data: [e]
            }, {
                data: []
            }])
        },
        updatePowerMetrics(e) {
            this.$refs["chart-hashrate-preview"] && this.$refs["chart-hashrate-preview"].appendData([{
                data: []
            }, {
                data: [e]
            }])
        },
        openChart() {
            this.dialogVisible = !0,
                this.$nextTick(() => {
                        this.$refs["chart-hashrate"],
                            new Date(this.series[0].data[0][0]),
                            new Date(this.series[0].data[this.series[0].data.length - 1][0])
                    }
                )
        },
        clickAnnotationFilter(e) {
            this.annotationFilter[e] = !this.annotationFilter[e],
                this.updateAnnotations()
        },
        clickTimeSelection(e) {
            this.timeSelection = e
        },
        handleTimeSelection(e) {
            const t = this.$refs["chart-hashrate-preview"];
            if (typeof t > "u" || typeof this.series[0] > "u" || typeof this.series[0].data[this.series[0].data.length - 1] > "u")
                return;
            const s = new Date(this.series[0].data[this.series[0].data.length - 1][0]);
            e === 24 ? t.resetSeries(!1) : t.zoomX(new Date(s).setHours(s.getHours() - e), s)
        }
    }
}
    , sj = fs(tj, [["render", ej]])
    , nj = {
    class: "main"
}
    , ij = {
    key: 0
}
    , aj = {
    key: 1
}
    , rj = {
    class: "filter"
}
    , oj = {
    class: "justify-end flex flex-row mr-10px children:ml-15px"
}
    , lj = ["onClick"]
    , cj = {
    key: 0,
    class: "timeline"
}
    , uj = {
    slot: "description"
}
    , dj = {
    class: "time"
}
    , hj = {
    class: "ValueGroup Medium"
}
    , fj = {
    class: "Value !text-$el-color-primary !text-base"
}
    , pj = {
    class: "ValueGroup Medium Row"
}
    , gj = {
    class: "Label flex-1"
}
    , mj = {
    class: "Value !flex-[0.82]"
}
    , vj = {
    class: "flex"
}
    , bj = {
    class: "ValueGroup Small"
}
    , yj = {
    class: "Label"
}
    , xj = {
    class: "Value"
}
    , wj = {
    class: "ValueGroup Small"
}
    , Sj = {
    class: "Label"
}
    , _j = {
    class: "Value"
}
    , kj = {
    class: "flex mt-10px"
}
    , Cj = {
    class: "ValueGroup Small"
}
    , Aj = {
    class: "Label"
}
    , Ej = {
    class: "Value"
}
    , Tj = {
    class: "ValueGroup Small w-60px"
}
    , Ij = {
    class: "Label"
}
    , Pj = {
    class: "Value overflow-hidden !inline-block text-nowrap text-ellipsis"
}
    , Lj = {
    class: "flex mt-10px"
}
    , Mj = {
    class: "ValueGroup Small"
}
    , Oj = {
    class: "Label"
}
    , Rj = {
    class: "Value"
}
    , Nj = {
    class: "ValueGroup Small"
}
    , Dj = {
    class: "Label"
}
    , Fj = {
    class: "Value uppercase"
}
    , $j = {
    class: "flex"
}
    , Bj = {
    key: 0,
    class: "ValueGroup Small"
}
    , Hj = {
    class: "Label"
}
    , Vj = {
    class: "Value"
}
    , zj = {
    key: 1,
    class: "ValueGroup Small"
}
    , Wj = {
    class: "Label"
}
    , Uj = {
    class: "Value"
}
    , Yj = {
    key: 0,
    class: "py-10px pl-35px mt-5px bg-$el-bg-color-page border-t-$el-border-color border-t-1px border-solid"
}
    , Xj = {
    class: "ValueGroup Small Row !gap-5px"
}
    , jj = {
    class: "Label !flex-[0] whitespace-nowrap"
}
    , Gj = {
    class: "Value"
}
    , qj = {
    class: "card"
}
    , Kj = {
    class: "flex"
}
    , Zj = {
    class: "ValueGroup Medium Row"
}
    , Jj = {
    class: "Label flex-1"
}
    , Qj = {
    class: "Value !flex-[0.8] !text-$el-color-primary !text-base"
}
    , eG = {
    class: "flex"
}
    , tG = {
    class: "ValueGroup Medium"
}
    , sG = {
    class: "Label"
}
    , nG = {
    class: "Value !text-base"
}
    , iG = {
    class: "ValueGroup Medium"
}
    , aG = {
    class: "Label"
}
    , rG = {
    class: "Value !text-base"
}
    , oG = {
    class: "flex"
}
    , lG = {
    class: "ValueGroup Medium"
}
    , cG = {
    class: "Label"
}
    , uG = {
    class: "Value !text-base"
}
    , dG = {
    class: "ValueGroup Medium"
}
    , hG = {
    class: "Label"
}
    , fG = {
    class: "Value !text-base"
}
    , pG = {
    class: "flex"
}
    , gG = {
    class: "ValueGroup Medium"
}
    , mG = {
    class: "Label"
}
    , vG = {
    class: "Value !text-base"
}
    , bG = {
    class: "ValueGroup Medium"
}
    , yG = {
    class: "Label"
}
    , xG = {
    class: "Value !text-base"
}
    , wG = {
    class: "card CoolingCard"
}
    , SG = {
    class: "ValueGroup Medium Row"
}
    , _G = {
    class: "Label"
}
    , kG = {
    class: "Value pl-26px"
}
    , CG = {
    key: 0,
    class: "ValueGroup Medium Row"
}
    , AG = {
    class: "Label"
}
    , EG = {
    class: "Value pl-26px"
}
    , TG = {
    key: 1,
    class: "h-120px flex flex-wrap gap-10px"
}
    , IG = {
    class: "card"
}
    , PG = {
    class: "ValueGroup Medium Row"
}
    , LG = {
    class: "Label"
}
    , MG = {
    class: "Value"
}
    , OG = {
    class: "ValueGroup Medium Row"
}
    , RG = {
    class: "Label"
}
    , NG = {
    class: "Value"
}
    , DG = {
    class: "flex gap-5px"
}
    , FG = {
    class: "ValueGroup Medium !flex-[0.8]"
}
    , $G = {
    class: "Label"
}
    , BG = {
    class: "Value"
}
    , HG = {
    class: "ValueGroup Medium"
}
    , VG = {
    class: "Label"
}
    , zG = {
    class: "Value"
}
    , WG = {
    class: "flex gap-5px"
}
    , UG = {
    class: "ValueGroup Medium !flex-[0.8]"
}
    , YG = {
    class: "Label"
}
    , XG = {
    class: "Value"
}
    , jG = {
    class: "ValueGroup Medium"
}
    , GG = {
    class: "Value"
}
    , qG = {
    class: "ValueGroup Medium Row"
}
    , KG = {
    class: "Value"
}
    , ZG = {
    key: 1,
    class: "ValueGroup Medium Row"
}
    , JG = {
    class: "card"
}
    , QG = {
    class: "ValueGroup Medium Row"
}
    , eq = {
    class: "Label text-$el-text-color-primary"
}
    , tq = {
    class: "Value",
    style: {
        flex: "0"
    }
}
    , sq = {
    class: "ValueGroup Medium Row"
}
    , nq = {
    class: "Label",
    style: {
        "font-weight": "600"
    }
}
    , iq = {
    class: "Label color-text-regular",
    style: {
        flex: "0",
        "font-weight": "600",
        "margin-right": "0"
    }
};

function aq(e, t, s, a, o, l) {
    const u = Ai
        , p = Po
        , g = or
        , y = d_
        , v = u_
        , w = Ig
        , C = Bt("router-link")
        , T = Ei
        , I = sj
        , A = WX
        , R = kX
        , P = wd;
    return Z(),
        ye("section", {
            class: he(["Infobar", {
                Unhide: e.infobarIsUnhidden,
                Fixed: !o.less1000 && e.isInfobarFixed
            }])
        }, [U("section", nj, [ae(u, {
            effect: "light",
            placement: "bottom",
            content: e.$t("InfoBar.pin"),
            "show-after": 1e3
        }, {
            default: se(() => [U("div", {
                class: "pinIcon hidden-sm-and-down",
                onClick: t[0] || (t[0] = (...M) => l.clickInfobarPin && l.clickInfobarPin(...M))
            }, [e.isInfobarFixed ? ke("", !0) : (Z(),
                ye("span", ij, "Pin")), e.isInfobarFixed ? (Z(),
                ye("span", aj, "Unpin")) : ke("", !0)])]),
            _: 1
        }, 8, ["content"]), U("section", {
            class: "card eventsCard",
            onMouseleave: t[3] || (t[3] = M => o.hover_events = !1)
        }, [U("header", {
            class: "pointer-events-none",
            onClick: t[1] || (t[1] = M => o.hover_events = !o.hover_events)
        }, [t[6] || (t[6] = U("div", {
            class: "icon-uil-sign-left text-18px"
        }, null, -1)), U("span", null, me(e.$t("InfoBar.events.title")), 1), ae(p, {
            class: "ml-10px",
            type: o.allMinerEvents.length == 0 ? "info" : "warning",
            size: "small"
        }, {
            default: se(() => [at(me(o.allMinerEvents.length), 1)]),
            _: 1
        }, 8, ["type"])]), ae(g, null, {
            default: se(() => [U("main", null, [ae(g, null, {
                default: se(() => [_t(U("div", rj, [U("span", null, me(e.$t("InfoBar.events.filter")), 1), U("span", oj, [(Z(!0),
                    ye(Ct, null, wi(o.eventFilter, (M, O) => (Z(),
                        ye("div", {
                            class: he(["eventsControl_Button", ["text-$el-color-" + O, o.eventFilter[O] ? "active" : ""]]),
                            onClick: F => l.clickEventsFilter(O)
                        }, null, 10, lj))), 256))])], 512), [[ss, o.hover_events]])]),
                _: 1
            }), this.allMinerEvents.length ? (Z(),
                ye("section", cj, [ae(v, {
                    class: "pt-20px !pl-10px"
                }, {
                    default: se(() => [ae(Gu, {
                        name: "list"
                    }, {
                        default: se(() => [(Z(!0),
                            ye(Ct, null, wi(l.getEventsList, (M, O) => (Z(),
                                Te(y, {
                                    class: "list-item ml-2px",
                                    key: O + 0,
                                    type: M.type,
                                    timestamp: l.formatDate(l.adjustToLocalTimezone(M.x))
                                }, {
                                    default: se(() => [U("span", null, me(M.label.text), 1)]),
                                    _: 2
                                }, 1032, ["type", "timestamp"]))), 128))]),
                        _: 1
                    })]),
                    _: 1
                })])) : (Z(),
                Te(w, {
                    key: 1,
                    class: "min-h-60px border-2 border-dashed border-$el-border-color rounded-md my-10px"
                }, {
                    default: se(() => [U("template", uj, [at(me(e.$t("InfoBar.events.placeHolder")), 1)])]),
                    _: 1
                })), U("footer", {
                class: "border-$el-border-color border-t-1px cursor-pointer arrow",
                onClick: t[2] || (t[2] = M => o.hover_events = !o.hover_events)
            }, [U("div", dj, [U("span", {
                class: he(["time__icon icon-uil-angle-up", {
                    time__icon_expand: o.hover_events
                }])
            }, null, 2), U("span", null, me(l.minerTime), 1)]), ae(C, {
                class: "link group",
                to: "/system/general"
            }, {
                default: se(() => [U("span", null, me(e.timezone), 1), t[7] || (t[7] = U("div", {
                    class: "icon-uil-arrow-up-right group-hover:bg-$el-color-primary !group-hover:translate-x-5px group-hover:ease-in !group-hover:duration-300"
                }, null, -1))]),
                _: 1
            })])])]),
            _: 1
        })], 32), U("section", {
            class: "card",
            onClick: t[4] || (t[4] = M => o.hover_sys = !o.hover_sys),
            onMouseleave: t[5] || (t[5] = M => o.hover_sys = !1)
        }, [U("header", null, [t[8] || (t[8] = U("div", {
            class: "icon-uil-info-circle text-18px"
        }, null, -1)), U("span", null, me(e.$t("InfoBar.systemInfo.title")), 1)]), U("main", null, [U("div", hj, [U("div", fj, me(e.getMinerModel), 1)]), ae(T, {
            class: "!my-5px"
        }), U("div", pj, [U("div", gj, me(e.$t("InfoBar.monitoring.hashrateStock") + ":"), 1), U("div", mj, me(l.formatHashrate(l.wrapperStockHashrate)), 1)]), ae(T, {
            class: "!my-5px"
        }), U("div", vj, [U("div", bj, [U("div", yj, me(e.$t("InfoBar.systemInfo.minerFirmware")), 1), U("div", xj, me(l.firmwareVersion), 1)]), U("div", wj, [U("div", Sj, me(e.$t("InfoBar.systemInfo.compileDate")), 1), U("div", _j, me(e.compile_time), 1)])]), U("div", kj, [U("div", Cj, [U("div", Aj, me(e.$t("InfoBar.systemInfo.buildName")), 1), U("div", Ej, me(e.build_name), 1)]), U("div", Tj, [U("div", Ij, me(e.$t("InfoBar.systemInfo.buildUUID")), 1), U("div", Pj, [ae(u, {
            effect: "light",
            placement: "bottom",
            content: e.build_uuid,
            "show-after": 500
        }, {
            default: se(() => [U("span", null, me(e.build_uuid), 1)]),
            _: 1
        }, 8, ["content"])])])]), ae(T, {
            class: "!my-5px"
        }), U("div", Lj, [U("div", Mj, [U("div", Oj, me(e.$t("InfoBar.systemInfo.platform")), 1), U("div", Rj, me(e.platform || e.$t("NA")), 1)]), U("div", Nj, [U("div", Dj, me(e.$t("InfoBar.systemInfo.installationType")), 1), U("div", Fj, me(e.install_type || e.$t("NA")), 1)])]), ae(T, {
            class: "!my-5px"
        }), U("div", $j, [e.psuModel ? (Z(),
            ye("div", Bj, [U("div", Hj, me(e.$t("InfoBar.systemInfo.psuModel")), 1), U("div", Vj, me(e.psuModel), 1)])) : ke("", !0), e.psuSerial ? (Z(),
            ye("div", zj, [U("div", Wj, me(e.$t("InfoBar.systemInfo.psuSerial")), 1), U("div", Uj, me(e.psuSerial), 1)])) : ke("", !0)])]), e.serial_number ? (Z(),
            ye("footer", Yj, [U("div", Xj, [U("div", jj, me(e.$t("InfoBar.systemInfo.serialNumber")) + ":", 1), U("div", Gj, me(e.serial_number || e.$t("NA")), 1)])])) : ke("", !0)], 32), _t(U("section", qj, [U("header", null, [t[9] || (t[9] = U("div", {
            class: "icon-uil-chart text-18px"
        }, null, -1)), U("span", null, me(e.$t("InfoBar.monitoring.title")), 1)]), U("main", null, [U("div", Kj, [U("div", Zj, [U("div", Jj, me(e.$t("InfoBar.monitoring.hashrateAvg")), 1), U("div", Qj, me(l.formatHashrate(l.wrapperAverageHashrate)), 1)])]), ae(T, {
            class: "!my-5px"
        }), U("div", eG, [U("div", tG, [U("div", sG, me(e.$t("InfoBar.monitoring.hashrateCurrent")), 1), U("div", nG, me(l.formatHashrate(l.wrapperCurrentHashrate)), 1)]), U("div", iG, [U("div", aG, me(e.$t("InfoBar.monitoring.hashrateIdeal")), 1), U("div", rG, me(l.formatHashrate(l.wrapperIdealHashrate)), 1)])]), ae(T, {
            class: "!my-5px"
        }), U("div", oG, [U("div", lG, [U("div", cG, me(e.$t("InfoBar.monitoring.power")), 1), U("div", uG, me(e.power_consumption), 1)]), U("div", dG, [U("div", hG, me(e.$t("InfoBar.monitoring.errors")), 1), U("div", fG, me(e.hw_errors_percent + "%"), 1)])]), ae(T, {
            class: "!my-5px"
        }), U("div", pG, [U("div", gG, [U("div", mG, me(e.$t("InfoBar.monitoring.tempBoard")), 1), U("div", vG, me(e.pcb_temp), 1)]), U("div", bG, [U("div", yG, me(e.$t("InfoBar.monitoring.tempChips")), 1), U("div", xG, me(e.chip_temp), 1)])])])], 512), [[ss, e.$route.name !== "Dashboard"]]), e.$route.name !== "Dashboard" && e.$route.fullPath !== "/" ? (Z(),
            Te(I, {
                key: 0,
                class: "card max-h-200px"
            })) : ke("", !0), e.$route.name !== "Dashboard" && e.$route.fullPath !== "/" ? (Z(),
            Te(A, {
                key: 1,
                class: "card max-h-200px"
            })) : ke("", !0), _t(U("section", wG, [U("header", null, [t[11] || (t[11] = U("div", {
            class: "icon-uil-wind text-18px"
        }, null, -1)), ae(C, {
            class: "link group",
            to: "/mining/cooling"
        }, {
            default: se(() => [U("span", null, me(e.$t("InfoBar.fan.title")), 1), t[10] || (t[10] = U("div", {
                class: "icon-uil-arrow-up-right group-hover:bg-$el-color-primary !group-hover:translate-x-5px group-hover:ease-in !group-hover:duration-300"
            }, null, -1))]),
            _: 1
        })]), U("main", null, [U("div", SG, [U("div", _G, me(e.$t("InfoBar.fan.mode")) + ":", 1), U("div", kG, me(e.coolingMode ? e.$t("Dashboard.fans." + e.coolingMode) : ""), 1)]), e.coolingMode !== "immers" ? (Z(),
            ye("div", CG, [U("div", AG, me(e.$t("InfoBar.fan.fanDuty")) + ":", 1), U("div", EG, me(e.coolingValue), 1)])) : ke("", !0), ae(T, {
            class: "!my-5px"
        }), e.fans.length ? (Z(),
            ye("section", TG, [ae(R, vs(e.fans[0], {
                num: "1"
            }), null, 16), ae(R, vs(e.fans[1], {
                num: "2"
            }), null, 16), e.fans.length > 2 ? (Z(),
                Te(R, vs({
                    key: 0
                }, e.fans[2], {
                    num: "3"
                }), null, 16)) : ke("", !0), e.fans.length > 2 ? (Z(),
                Te(R, vs({
                    key: 1
                }, e.fans[3], {
                    num: "4"
                }), null, 16)) : ke("", !0)])) : ke("", !0)])], 512), [[ss, !e.isHydroOnly && e.$route.name !== "Dashboard"]]), U("section", IG, [U("header", null, [t[13] || (t[13] = U("div", {
            class: "icon-uil-server-network text-18px"
        }, null, -1)), ae(C, {
            class: "link group",
            to: "/system/network"
        }, {
            default: se(() => [U("span", null, me(e.$t("InfoBar.network.title")), 1), t[12] || (t[12] = U("div", {
                class: "icon-uil-arrow-up-right group-hover:bg-$el-color-primary !group-hover:translate-x-5px group-hover:ease-in !group-hover:duration-300"
            }, null, -1))]),
            _: 1
        })]), U("main", null, [U("div", PG, [U("div", LG, me(e.$t("InfoBar.systemInfo.hostname")) + ":", 1), U("div", MG, me(e.hostname), 1)]), ae(T, {
            class: "!my-5px"
        }), U("div", OG, [U("div", RG, me(e.$t("InfoBar.network.mode")), 1), U("div", NG, me(e.dhcp ? "dhcp" : e.$t("InfoBar.network.static")), 1)]), ae(T, {
            class: "!my-5px"
        }), U("div", DG, [U("div", FG, [U("div", $G, me(e.$t("InfoBar.network.labelIp")), 1), U("div", BG, me(e.ip), 1)]), U("div", HG, [U("div", VG, me(e.$t("InfoBar.network.labelMask")), 1), U("div", zG, me(e.netmask), 1)])]), ae(T, {
            class: "!my-5px"
        }), U("div", WG, [U("div", UG, [U("div", YG, me(e.$t("InfoBar.network.gateway")), 1), U("div", XG, me(e.gateway), 1)]), U("div", jG, [t[14] || (t[14] = U("div", {
            class: "Label"
        }, me("DNS"), -1)), U("div", GG, me(e.dns), 1)])]), ae(T, {
            class: "!my-5px"
        }), U("div", qG, [t[15] || (t[15] = U("div", {
            class: "Label"
        }, "MAC-addres:", -1)), U("div", KG, me(e.mac), 1)]), e.isDebug ? (Z(),
            Te(T, {
                key: 0,
                class: "!my-5px"
            })) : ke("", !0), e.isDebug ? (Z(),
            ye("div", ZG, t[16] || (t[16] = [U("div", {
                class: "Label"
            }, "Ping (avg):", -1), U("div", {
                class: "Value color-danger"
            }, "34.34 ms *", -1)]))) : ke("", !0)])]), U("section", JG, [U("header", null, [t[17] || (t[17] = U("div", {
            class: "icon-uil-database text-18px"
        }, null, -1)), U("span", null, me(e.$t("InfoBar.memory.title")), 1)]), U("main", null, [U("div", QG, [U("div", eq, me(e.$t("InfoBar.memory.inuse")), 1), U("div", tq, me(e.mem_used_percent + "%"), 1)]), ae(P, {
            class: "mb-5px",
            color: o.customColorsForMemory,
            "stroke-width": 5,
            percentage: e.mem_used_percent,
            "show-text": !1
        }, null, 8, ["color", "percentage"]), U("div", sq, [U("div", nq, me(e.$t("InfoBar.memory.fullMem") + ": " + (e.mem_total / 1e3).toFixed(0) + " Mb"), 1), U("div", iq, me((e.mem_used / 1e3).toFixed(0) + " Mb"), 1)])])])])], 2)
}

const rq = {
    computed: {
        ...ls("summary", ["isLoading", "miner_type", "platform", "install_type", "serial_number", "hostname", "os", "firmware_name", "build_name", "build_uuid", "file_system_version", "compile_time", "hr_average", "hr_realtime", "hr_nominal", "hr_stock", "hr_base_measure", "power_consumption", "hw_errors_percent", "pcb_temp", "chip_temp", "coolingMode", "coolingValue", "fans", "dhcp", "ip", "netmask", "gateway", "dns", "mac", "mem_total", "mem_used", "mem_used_percent", "mem_free", "mem_free_percent", "mem_buf", "mem_buf_percent", "link"]),
        ...ls("ui", ["isDebug", "timezone", "timezoneOffset", "isInfobarFixed", "infobarIsUnhidden"]),
        ...ls("auth", ["isAuth"]),
        ...ls("system", ["psuModel", "psuSerial"]),
        ...In("summary", ["getMinerModel", "getFirmwareVersion"]),
        ...In("settings", ["isHydroOnly"]),
        wrapperAverageHashrate() {
            return jo({
                hashrate: this.hr_average,
                measure: this.hr_base_measure
            })
        },
        wrapperCurrentHashrate() {
            return jo({
                hashrate: this.hr_realtime,
                measure: this.hr_base_measure
            })
        },
        wrapperIdealHashrate() {
            return jo({
                hashrate: this.hr_nominal,
                measure: this.hr_base_measure
            })
        },
        wrapperStockHashrate() {
            return jo({
                hashrate: this.hr_stock,
                measure: this.hr_base_measure
            })
        },
        minerTime() {
            var e;
            return (e = this.time) == null ? void 0 : e.toLocaleTimeString(Rt.global.locale, {
                hour: "2-digit",
                minute: "2-digit",
                hour12: !1
            })
        },
        getFilteredEvents() {
            return this.allMinerEvents.filter(e => this.eventFilter[e.type])
        },
        getEventsList() {
            return this.hover_events ? this.getFilteredEvents : this.getFilteredEvents.slice(0, 4)
        },
        firmwareVersion() {
            return this.firmware_name + " v" + this.getFirmwareVersion.replace("-stable", "") + (this.isDebug ? ` (${gX})` : "")
        }
    },
    data() {
        return {
            customColorsForMemory: [{
                color: "var(--el-text-color-placeholder)",
                percentage: 20
            }, {
                color: "var(--el-color-warning)",
                percentage: 90
            }, {
                color: "var(--el-color-danger)",
                percentage: 100
            }],
            hover_sys: !1,
            hover_mon: !1,
            hover_fan: !1,
            hover_events: !1,
            hover_help: !1,
            allMinerEvents: [],
            eventFilter: {
                info: !0,
                primary: !0,
                danger: !0
            },
            time: null,
            timerId: null,
            less1000: k_
        }
    },
    watch: {
        timezoneOffset(e) {
            this.time = new Date,
                this.time.setUTCMinutes(this.time.getUTCMinutes() + this.time.getTimezoneOffset() + 60 * e)
        }
    },
    async mounted() {
        this.time = new Date,
            this.time.setUTCMinutes(this.time.getUTCMinutes() + 60 * this.timezoneOffset),
            this.timerId = setInterval(() => {
                    this.time = new Date,
                        this.time.setUTCMinutes(this.time.getUTCMinutes() + this.time.getTimezoneOffset() + 60 * this.timezoneOffset)
                }
                , 10 * 1e3),
            await G_(),
            this.getMinerEvents(),
            Yl(Qa, this.getMinerEvents)
    },
    beforeUnmount() {
        clearInterval(this.timerId),
            this.time = null,
            Xl(Qa, this.getMinerEvents)
    },
    created() {
        window.addEventListener("resize", this.onceHideFixedInfobar)
    },
    destroyed() {
        window.removeEventListener("resize", this.onceHideFixedInfobar)
    },
    methods: {
        getMinerEvents() {
            this.allMinerEvents = Mf(),
                this.buildEventsFilter()
        },
        unHiddenInfobar() {
            this.$store.commit("ui/infobarIsUnhidden", !1)
        },
        clickInfobarPin() {
            this.isInfobarFixed && this.unHiddenInfobar(),
                this.$store.commit("ui/isInfobarFixed", !this.isInfobarFixed)
        },
        onceHideFixedInfobar() {
            this.less1000 && this.isInfobarFixed && this.infobarIsUnhidden && (this.unHiddenInfobar(),
                this.$store.commit("ui/isInfobarFixed", !1))
        },
        formatHashrate(e) {
            return e.hashrate || e.hashrate === 0 ? e.hashrate.toFixed(2) + " " + e.measure : ""
        },
        adjustToLocalTimezone(e) {
            const t = new Date().getTimezoneOffset()
                , s = e + t * 60 * 1e3;
            return new Date(s)
        },
        formatDate(e) {
            return e ? e.toLocaleTimeString(Rt.global.locale, {
                hour12: !1
            }) + ", " + e.toLocaleDateString(Rt.global.locale, {
                day: "numeric",
                month: "long"
            }) : ""
        },
        buildEventsFilter() {
            const e = {}
                , t = {
                info: 0,
                primary: 0,
                danger: 0
            };
            this.allMinerEvents.forEach(s => {
                    t[s.type] += 1
                }
            );
            for (let s in t)
                t[s] && (e[s] = typeof this.eventFilter[s] == "boolean" ? this.eventFilter[s] : !0);
            this.eventFilter = e
        },
        clickEventsFilter(e) {
            this.eventFilter[e] = !this.eventFilter[e]
        },
        ...Zn("findMiner", ["toggleFind"])
    }
}
    , q_ = fs(rq, [["render", aq], ["__scopeId", "data-v-e046a5eb"]])
    , oq = "/img/logo-dark.svg"
    , lq = "/img/logo-light.svg"
    , cq = {
    key: 0,
    class: "flex justify-center items-center h-60px mb-10px"
}
    , uq = {
    class: "el-select-group__title"
}
    , dq = {
    class: "el-select-group__title collapse"
}
    , hq = {
    class: "el-select-group__title"
}
    , fq = {
    class: "flex-1"
}
    , pq = {
    class: "flex-1"
}
    , gq = {
    key: 0,
    class: "p-10px -mt-10px"
}
    , mq = {
    class: "p-10px -mt-10px"
};

function vq(e, t, s, a, o, l) {
    const u = Mo
        , p = Bt("router-link")
        , g = Mt
        , y = g9
        , v = Ei
        , w = _n
        , C = or
        , T = p9;
    return Z(),
        ye("section", {
            class: he(["Sidebar overflow-hidden", {
                Unhide: e.sidebarIsUnhidden,
                dark: e.sidebarIsDark
            }])
        }, [ae(T, {
            class: "overflow-y-auto overflow-x-hidden dark:border-l-$el-bg-color-overlay border-l-$el-color-primary border-l-5px border-solid",
            router: "",
            "show-timeout": 100,
            "default-active": l.activeMenu,
            collapse: e.sidebarIsCollapsed || e.isInfobarFixed && e.less1480 || e.btw980and1299
        }, {
            default: se(() => [e.sidebarIsCollapsed || e.less1480 && e.isInfobarFixed || e.btw980and1299 ? (Z(),
                ye("section", cq, [ae(u, {
                    onClick: l.expandSidebar
                }, {
                    default: se(() => t[4] || (t[4] = [U("div", {
                        class: "icon-uil-left-arrow-to-left rotate-z-180"
                    }, null, -1)])),
                    _: 1
                }, 8, ["onClick"])])) : ke("", !0), U("div", {
                class: he(["Logo group dark:flex hidden", e.sidebarIsCollapsed || e.less1480 && e.isInfobarFixed || e.btw980and1299 ? "collapse" : ""])
            }, [ae(p, {
                to: "/"
            }, {
                default: se(() => t[5] || (t[5] = [U("img", {
                    src: oq
                }, null, -1)])),
                _: 1
            }), t[6] || (t[6] = U("span", {
                class: "grd absolute -left-80px top-0px children:opacity-60 children:transition-opacity children:duration-1000 group-hover:children:opacity-100 -z-10 drag-none select-none mix animate-fade-in transform-gpu animate-duration-500"
            }, [U("svg", {
                class: "grdSvg",
                width: "334",
                height: "96",
                viewBox: "0 0 334 96",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, [U("g", {
                "clip-path": "url(#clip0_4401_109452)"
            }, [U("g", {
                opacity: "0.6",
                filter: "url(#filter0_f_4401_109452)"
            }, [U("path", {
                class: "path1",
                d: "M283 -77C283 -138.304 240.243 -188 187.5 -188C134.757 -188 92 -138.304 92 -77C92 -15.6964 134.757 34 187.5 34C240.243 34 283 -15.6964 283 -77Z",
                fill: "url(#paint0_linear_4401_109452)"
            }), U("path", {
                class: "path2",
                d: "M283 -77C283 -138.304 240.243 -188 187.5 -188C134.757 -188 92 -138.304 92 -77C92 -15.6964 134.757 34 187.5 34C240.243 34 283 -15.6964 283 -77Z",
                fill: "url(#paint1_linear_4401_109452)"
            }), U("path", {
                class: "path3",
                d: "M283 -77C283 -138.304 240.243 -188 187.5 -188C134.757 -188 92 -138.304 92 -77C92 -15.6964 134.757 34 187.5 34C240.243 34 283 -15.6964 283 -77Z",
                fill: "url(#paint2_radial_4401_109452)"
            }), U("path", {
                class: "path4",
                d: "M283 -77C283 -138.304 240.243 -188 187.5 -188C134.757 -188 92 -138.304 92 -77C92 -15.6964 134.757 34 187.5 34C240.243 34 283 -15.6964 283 -77Z",
                fill: "url(#paint3_radial_4401_109452)",
                "fill-opacity": "0.73"
            }), U("path", {
                class: "path5",
                d: "M283 -77C283 -138.304 240.243 -188 187.5 -188C134.757 -188 92 -138.304 92 -77C92 -15.6964 134.757 34 187.5 34C240.243 34 283 -15.6964 283 -77Z",
                fill: "url(#paint4_radial_4401_109452)",
                "fill-opacity": "0.65"
            })])]), U("defs", null, [U("filter", {
                id: "filter0_f_4401_109452",
                x: "26.091",
                y: "-253.909",
                width: "322.818",
                height: "353.818",
                filterUnits: "userSpaceOnUse",
                "color-interpolation-filters": "sRGB"
            }, [U("feFlood", {
                "flood-opacity": "0",
                result: "BackgroundImageFix"
            }), U("feBlend", {
                mode: "normal",
                in: "SourceGraphic",
                in2: "BackgroundImageFix",
                result: "shape"
            }), U("feGaussianBlur", {
                stdDeviation: "32.9545",
                result: "effect1_foregroundBlur_4401_109452"
            })]), U("linearGradient", {
                id: "paint0_linear_4401_109452",
                x1: "118.007",
                y1: "-2.42162",
                x2: "305.463",
                y2: "-84.9372",
                gradientUnits: "userSpaceOnUse"
            }, [U("stop", {
                "stop-color": "#C79432"
            }), U("stop", {
                offset: "1",
                "stop-color": "#8532C7",
                "stop-opacity": "0"
            })]), U("linearGradient", {
                id: "paint1_linear_4401_109452",
                x1: "187.5",
                y1: "-188",
                x2: "187.5",
                y2: "34",
                gradientUnits: "userSpaceOnUse"
            }, [U("stop", {
                "stop-color": "#DC8858"
            }), U("stop", {
                offset: "1",
                "stop-color": "#D9DC58",
                "stop-opacity": "0"
            })]), U("radialGradient", {
                id: "paint2_radial_4401_109452",
                cx: "0",
                cy: "0",
                r: "1",
                gradientUnits: "userSpaceOnUse",
                gradientTransform: "translate(94.5581 -180.484) rotate(50.3197) scale(216.34 227.309)"
            }, [U("stop", {
                "stop-color": "#F74E76"
            }), U("stop", {
                offset: "1",
                "stop-color": "#F74E76",
                "stop-opacity": "0"
            })]), U("radialGradient", {
                id: "paint3_radial_4401_109452",
                cx: "0",
                cy: "0",
                r: "1",
                gradientUnits: "userSpaceOnUse",
                gradientTransform: "translate(279.589 26.4843) rotate(-122.231) scale(179.062 137.87)"
            }, [U("stop", {
                "stop-color": "#D1BA41"
            }), U("stop", {
                offset: "0.578242",
                "stop-color": "#41D1B7",
                "stop-opacity": "0.46"
            }), U("stop", {
                offset: "1",
                "stop-color": "#41D1B7",
                "stop-opacity": "0"
            })]), U("radialGradient", {
                id: "paint4_radial_4401_109452",
                cx: "0",
                cy: "0",
                r: "1",
                gradientUnits: "userSpaceOnUse",
                gradientTransform: "translate(283 -188) rotate(94.6059) scale(138.039 119.406)"
            }, [U("stop", {
                "stop-color": "#1E7793"
            }), U("stop", {
                offset: "0.497724",
                "stop-color": "#201E93",
                "stop-opacity": "0.37"
            }), U("stop", {
                offset: "1",
                "stop-color": "#201E93",
                "stop-opacity": "0"
            })]), U("clipPath", {
                id: "clip0_4401_109452"
            }, [U("rect", {
                width: "334",
                height: "96",
                fill: "white"
            })])])])], -1))], 2), U("div", {
                class: he(["Logo flex dark:hidden", e.sidebarIsCollapsed || e.less1480 && e.isInfobarFixed || e.btw980and1299 ? "collapse" : ""])
            }, [ae(p, {
                to: "/"
            }, {
                default: se(() => t[7] || (t[7] = [U("img", {
                    src: lq
                }, null, -1)])),
                _: 1
            })], 2), U("div", uq, [U("span", null, me(e.$t("Sidebar.menu.title")), 1)]), U("div", dq, [U("span", null, me(e.$t("Sidebar.menu.collapsedTitle")), 1)]), ae(y, {
                class: he(["group", [e.editLayout ? "is-disabled" : ""]]),
                route: "/dashboard",
                index: "/dashboard",
                onClick: l.unHiddenSidebar,
                disabled: e.editLayout
            }, {
                title: se(() => [at(me(e.$t("Sidebar.menu.dashboard")), 1)]),
                default: se(() => [ae(g, null, {
                    default: se(() => [U("div", {
                        class: he(e.editLayout ? "icon-uil-lock-alt" : "icon-uil-chart group-hover:scale-120 group-hover:will-change-transform")
                    }, null, 2)]),
                    _: 1
                })]),
                _: 1
            }, 8, ["class", "onClick", "disabled"]), U("div", hq, [U("span", null, me(e.$t("Sidebar.menu.settings")), 1)]), ae(y, {
                class: he(["group", [e.editLayout || !e.isAuth ? "is-disabled" : ""]]),
                route: "/mining",
                index: "/mining",
                onClick: [l.unHiddenSidebar, t[0] || (t[0] = I => l.clickLockedMenuItem("/mining"))],
                disabled: e.editLayout
            }, {
                title: se(() => [at(me(e.$t("Sidebar.menu.mining")), 1)]),
                default: se(() => [ae(g, null, {
                    default: se(() => [U("div", {
                        class: he(!e.isAuth || e.editLayout ? "icon-uil-lock-alt group-hover:animate-animated group-hover:animate-flip group-hover:icon-animation group-hover:animate-slower" : "icon-uil-hard-hat group-hover:scale-120 group-hover:will-change-transform")
                    }, null, 2)]),
                    _: 1
                })]),
                _: 1
            }, 8, ["class", "onClick", "disabled"]), ae(y, {
                class: he(["group", [e.editLayout || !e.isAuth ? "is-disabled" : ""]]),
                route: "/system",
                index: "/system",
                onClick: [l.unHiddenSidebar, t[1] || (t[1] = I => l.clickLockedMenuItem("/system"))],
                disabled: e.editLayout
            }, {
                title: se(() => [at(me(e.$t("Sidebar.menu.system")), 1)]),
                default: se(() => [ae(g, null, {
                    default: se(() => [U("div", {
                        class: he(!e.isAuth || e.editLayout ? "icon-uil-lock-alt group-hover:animate-animated group-hover:animate-flip group-hover:icon-animation group-hover:animate-slower" : "icon-uil-sliders-v-alt group-hover:scale-120 group-hover:will-change-transform")
                    }, null, 2)]),
                    _: 1
                })]),
                _: 1
            }, 8, ["class", "onClick", "disabled"]), t[15] || (t[15] = U("div", {
                class: "flex-1"
            }, null, -1)), l.isSupportIntegration ? (Z(),
                Te(y, {
                    key: 1,
                    class: "group",
                    index: ".integration",
                    route: l.currentRoute,
                    onClick: t[2] || (t[2] = I => e.$store.commit("ui/dialogIntegrationIsVisible", !0)),
                    disabled: e.editLayout
                }, {
                    title: se(() => [at(me(e.$t("Sidebar.menu.integration")), 1)]),
                    default: se(() => [ae(g, null, {
                        default: se(() => t[8] || (t[8] = [U("div", {
                            class: "icon-uil-channel-add mr-10px group-hover:scale-120 group-hover:will-change-transform"
                        }, null, -1)])),
                        _: 1
                    })]),
                    _: 1
                }, 8, ["route", "disabled"])) : ke("", !0), ae(y, {
                class: "inline-flex items-center group",
                index: ".support",
                route: l.currentRoute,
                onClick: t[3] || (t[3] = I => e.$store.commit("ui/dialogSupportIsVisible", !0)),
                disabled: e.editLayout
            }, {
                default: se(() => [ae(g, null, {
                    default: se(() => t[9] || (t[9] = [U("div", {
                        class: "icon-uil-comments-alt group-hover:scale-120 group-hover:will-change-transform"
                    }, null, -1)])),
                    _: 1
                }), U("span", fq, me(e.$t("Sidebar.menu.support")), 1), t[10] || (t[10] = U("span", {
                    class: "icon-uil-arrow-up-right group-hover:bg-$el-color-primary !group-hover:translate-x-5px group-hover:ease-in !group-hover:duration-300"
                }, null, -1))]),
                _: 1
            }, 8, ["route", "disabled"]), ae(v, {
                class: "!my-10px !mx-20px !w-auto"
            }), ae(y, {
                class: "group",
                index: ".download",
                route: l.currentRoute,
                onClick: l.firmware,
                disabled: e.editLayout
            }, {
                default: se(() => [ae(g, null, {
                    default: se(() => t[11] || (t[11] = [U("div", {
                        class: "icon-uil-circuit group-hover:scale-120 group-hover:will-change-transform"
                    }, null, -1)])),
                    _: 1
                }), U("span", pq, me(e.$t("Sidebar.menu.update")), 1), t[12] || (t[12] = U("span", {
                    class: "icon-uil-arrow-up-right group-hover:bg-$el-color-primary !group-hover:translate-x-5px group-hover:ease-in !group-hover:duration-300"
                }, null, -1))]),
                _: 1
            }, 8, ["route", "onClick", "disabled"]), ae(C, null, {
                default: se(() => [e.isAuth && e.warrantyStatus === "inactive" ? (Z(),
                    ye("li", gq, [ae(w, {
                        class: "warrantyButton w-full",
                        type: "primary",
                        size: "small",
                        onClick: l.clickActivateWarranty
                    }, {
                        default: se(() => [t[13] || (t[13] = U("div", {
                            class: "icon-uil-shield-check mr-10px"
                        }, null, -1)), U("strong", null, me(e.$t("Sidebar.Warranty.buttonActivate")), 1)]),
                        _: 1
                    }, 8, ["onClick"])])) : ke("", !0)]),
                _: 1
            }), ae(C, null, {
                default: se(() => [_t(U("li", mq, [ae(w, {
                    class: "warrantyButton w-full",
                    type: "danger",
                    size: "small",
                    onClick: l.clickWarrantyButton
                }, {
                    default: se(() => [t[14] || (t[14] = U("div", {
                        class: "icon-uil-shield-check mr-10px"
                    }, null, -1)), U("strong", null, me(e.$t("Sidebar.Warranty.button")), 1)]),
                    _: 1
                }, 8, ["onClick"])], 512), [[ss, e.isWarrantyLimitation]])]),
                _: 1
            })]),
            _: 1
        }, 8, ["default-active", "collapse"])], 2)
}

var vh = {
    VITE_APP_INSTALL_TYPE: "nand",
    VITE_APP_BUILD: "6cf07eed",
    VITE_APP_COLOR_SCHEME: "anthill",
    VITE_APP_PROD_SUB_PATH: "/",
    VITE_APP_MINER_MODEL: "s19pro",
    VITE_APP_PLATFORM: "xil",
    VITE_APP_BASE_URL: "/api/v1",
    VITE_APP_BUILDER_API_URL: "https://partner.anthill.farm",
    VITE_APP_FIRMWARE_VERSION: "1.2.6",
    BASE_URL: "/",
    MODE: "production",
    DEV: !1,
    PROD: !0,
    SSR: !1
};
const bq = {
    components: {
        IconButton: Mo
    },
    data: () => ({
        btw980and1299: iY,
        less1480: C_
    }),
    computed: {
        ...ls("auth", ["isAuth", "isLoadingLock"]),
        ...ls("ui", ["isDebug", "sidebarIsCollapsed", "sidebarIsUnhidden", "sidebarIsDark", "isInfobarFixed", "dialogUnLockIsVisible", "editLayout", "theme", "warrantyStatus", "isWarrantyLimitation"]),
        ...In("ui", ["getAppliedTheme"]),
        ...In("summary", ["minerDataIsNull"]),
        activeMenu() {
            return "/" + this.$route.path.split("/")[1]
        },
        currentRoute() {
            return this.$route.path
        },
        isSupportIntegration() {
            return vh.VITE_APP_SUPPORT_INTEGRATION
        },
        isSupport() {
            return vh.VITE_APP_SITE_URL || vh.VITE_APP_TELEGRAM_GROUP_URL || "https://partner.anthill.farm"
        }
    },
    methods: {
        ...Zn("ui", ["activateWarranty"]),
        expandSidebar() {
            this.$store.commit("ui/sidebarIsCollapsed", !1),
                this.$store.commit("ui/sidebarIsUnhidden", !1)
        },
        unHiddenSidebar() {
            this.$store.commit("ui/sidebarIsUnhidden", !1)
        },
        clickLockedMenuItem(e) {
            this.isAuth || this.$router.push(e)
        },
        clickEditLayout() {
            this.$store.commit("ui/editLayout", !0),
                this.$store.commit("ui/sidebarIsUnhidden", !1)
        },
        clickWarrantyButton() {
            this.isAuth ? this.$store.commit("ui/dialogWarrantyIsVisible", !0) : this.$store.commit("ui/dialogUnLockIsVisible", !0)
        },
        clickActivateWarranty() {
            this.isAuth ? bU.confirm(Rt.global.t("Warranty.activation.activateConfirm")).then(() => {
                    this.activateWarranty()
                }
            ).catch(() => {
                }
            ) : this.$store.commit("ui/dialogUnLockIsVisible", !0)
        },
        firmware() {
            this.isAuth ? this.$store.commit("ui/dialogUpdateIsVisible", !0) : (this.$store.commit("ui/dialogUnLockIsVisible", !0),
                this.$store.commit("auth/isAnimationUnlock", !1),
                this.$store.commit("auth/reOpenDialog", "firmware"))
        }
    }
}
    , K_ = fs(bq, [["render", vq]]);

function yq(e, t, s, a, o, l) {
    const u = K_
        , p = VH
        , g = E_
        , y = Bt("router-view")
        , v = WH
        , w = N_
        , C = HH
        , T = q_
        , I = Y_
        , A = wo("touch")
        , R = _d;
    return Z(),
        Te(C, null, {
            default: se(() => [ae(p, {
                class: "flex overflow-hidden basis-auto",
                width: "auto"
            }, {
                default: se(() => [_t(ae(u, null, null, 512), [[A, l.unHiddenSidebar, "swipe", {
                    left: !0
                }]]), U("div", {
                    class: he(["drawer-bg v-modal", {
                        Visible: e.sidebarIsUnhidden
                    }]),
                    style: {
                        "z-index": "1999"
                    },
                    onClick: t[0] || (t[0] = (...P) => l.unHiddenSidebar && l.unHiddenSidebar(...P))
                }, null, 2)]),
                _: 1
            }), _t((Z(),
                Te(C, {
                    class: "MainContainer",
                    direction: "vertical"
                }, {
                    default: se(() => [ae(g), _t((Z(),
                        Te(v, {
                            class: he({
                                openSidebar: e.sidebarIsUnhidden,
                                openInfobar: e.infobarIsUnhidden,
                                fixedInfobar: e.isInfobarFixed
                            })
                        }, {
                            default: se(() => [ae(y, {
                                class: "2xl:max-w-1400px max-w-1200px"
                            }, {
                                default: se(({Component: P}) => [ae(fn, {
                                    name: "fade-transform",
                                    mode: "out-in",
                                    onAfterLeave: l.scrollMainToTop
                                }, {
                                    default: se(() => [(Z(),
                                        Te(Vt(P)))]),
                                    _: 2
                                }, 1032, ["onAfterLeave"])]),
                                _: 1
                            })]),
                            _: 1
                        }, 8, ["class"])), [[R, e.isLoading]]), ae(w)]),
                    _: 1
                })), [[A, l.hiddenSidebar, "swipe", {
                right: !0
            }], [A, l.hiddenInfobar, "swipe", {
                left: !0
            }]]), ae(p, {
                width: "auto"
            }, {
                default: se(() => [_t(ae(T, null, null, 512), [[A, l.unHiddenInfobar, "swipe", {
                    right: !0
                }]]), _t(U("div", {
                    class: he(["drawer-bg v-modal", {
                        Visible: e.infobarIsUnhidden
                    }]),
                    style: {
                        "z-index": "2001"
                    },
                    onClick: t[1] || (t[1] = (...P) => l.unHiddenInfobar && l.unHiddenInfobar(...P))
                }, null, 2), [[ss, !e.isInfobarFixed]])]),
                _: 1
            }), ae(I)]),
            _: 1
        })
}

const xq = {
    name: "default",
    components: {
        Sidebar: K_,
        Infobar: q_,
        GlobalDialogs: Y_,
        StatusBar: N_,
        Navbar: E_
    },
    computed: {
        ...ls("ui", ["editLayout", "infobarIsUnhidden", "sidebarIsUnhidden", "isInfobarFixed", "isLoading"]),
        ...In("summary", ["minerDataIsNull"])
    },
    methods: {
        hiddenSidebar() {
            this.editLayout || this.belowMd && (this.$store.commit("ui/sidebarIsCollapsed", !1),
                this.$store.commit("ui/sidebarIsUnhidden", !0))
        },
        unHiddenSidebar() {
            this.$store.commit("ui/sidebarIsUnhidden", !1)
        },
        hiddenInfobar() {
            this.editLayout || this.$store.commit("ui/infobarIsUnhidden", !this.infobarIsUnhidden)
        },
        unHiddenInfobar() {
            this.$store.commit("ui/infobarIsUnhidden", !1)
        },
        fixedInfobar() {
            this.$store.commit("ui/isInfobarFixed", !1)
        },
        scrollMainToTop(e, t) {
            document.getElementsByClassName("el-main")[0].scrollTop = 0
        }
    }
}
    , wq = fs(xq, [["render", yq]]);
var Z_ = {
    exports: {}
};
(function (e, t) {
        (function (s, a) {
                e.exports = a()
            }
        )(fg, function () {
            var s, a, o = 1e3, l = 6e4, u = 36e5, p = 864e5,
                g = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, y = 31536e6,
                v = 2628e6,
                w = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/,
                C = {
                    years: y,
                    months: v,
                    days: p,
                    hours: u,
                    minutes: l,
                    seconds: o,
                    milliseconds: 1,
                    weeks: 6048e5
                }, T = function (V) {
                    return V instanceof F
                }, I = function (V, G, ie) {
                    return new F(V, ie, G.$l)
                }, A = function (V) {
                    return a.p(V) + "s"
                }, R = function (V) {
                    return V < 0
                }, P = function (V) {
                    return R(V) ? Math.ceil(V) : Math.floor(V)
                }, M = function (V) {
                    return Math.abs(V)
                }, O = function (V, G) {
                    return V ? R(V) ? {
                        negative: !0,
                        format: "" + M(V) + G
                    } : {
                        negative: !1,
                        format: "" + V + G
                    } : {
                        negative: !1,
                        format: ""
                    }
                }, F = function () {
                    function V(ie, te, ne) {
                        var le = this;
                        if (this.$d = {},
                            this.$l = ne,
                        ie === void 0 && (this.$ms = 0,
                            this.parseFromMilliseconds()),
                            te)
                            return I(ie * C[A(te)], this);
                        if (typeof ie == "number")
                            return this.$ms = ie,
                                this.parseFromMilliseconds(),
                                this;
                        if (typeof ie == "object")
                            return Object.keys(ie).forEach(function (be) {
                                le.$d[A(be)] = ie[be]
                            }),
                                this.calMilliseconds(),
                                this;
                        if (typeof ie == "string") {
                            var oe = ie.match(w);
                            if (oe) {
                                var ve = oe.slice(2).map(function (be) {
                                    return be != null ? Number(be) : 0
                                });
                                return this.$d.years = ve[0],
                                    this.$d.months = ve[1],
                                    this.$d.weeks = ve[2],
                                    this.$d.days = ve[3],
                                    this.$d.hours = ve[4],
                                    this.$d.minutes = ve[5],
                                    this.$d.seconds = ve[6],
                                    this.calMilliseconds(),
                                    this
                            }
                        }
                        return this
                    }

                    var G = V.prototype;
                    return G.calMilliseconds = function () {
                        var ie = this;
                        this.$ms = Object.keys(this.$d).reduce(function (te, ne) {
                            return te + (ie.$d[ne] || 0) * C[ne]
                        }, 0)
                    }
                        ,
                        G.parseFromMilliseconds = function () {
                            var ie = this.$ms;
                            this.$d.years = P(ie / y),
                                ie %= y,
                                this.$d.months = P(ie / v),
                                ie %= v,
                                this.$d.days = P(ie / p),
                                ie %= p,
                                this.$d.hours = P(ie / u),
                                ie %= u,
                                this.$d.minutes = P(ie / l),
                                ie %= l,
                                this.$d.seconds = P(ie / o),
                                ie %= o,
                                this.$d.milliseconds = ie
                        }
                        ,
                        G.toISOString = function () {
                            var ie = O(this.$d.years, "Y")
                                , te = O(this.$d.months, "M")
                                , ne = +this.$d.days || 0;
                            this.$d.weeks && (ne += 7 * this.$d.weeks);
                            var le = O(ne, "D")
                                , oe = O(this.$d.hours, "H")
                                , ve = O(this.$d.minutes, "M")
                                , be = this.$d.seconds || 0;
                            this.$d.milliseconds && (be += this.$d.milliseconds / 1e3,
                                be = Math.round(1e3 * be) / 1e3);
                            var de = O(be, "S")
                                , J = ie.negative || te.negative || le.negative || oe.negative || ve.negative || de.negative
                                , ue = oe.format || ve.format || de.format ? "T" : ""
                                ,
                                fe = (J ? "-" : "") + "P" + ie.format + te.format + le.format + ue + oe.format + ve.format + de.format;
                            return fe === "P" || fe === "-P" ? "P0D" : fe
                        }
                        ,
                        G.toJSON = function () {
                            return this.toISOString()
                        }
                        ,
                        G.format = function (ie) {
                            var te = ie || "YYYY-MM-DDTHH:mm:ss"
                                , ne = {
                                Y: this.$d.years,
                                YY: a.s(this.$d.years, 2, "0"),
                                YYYY: a.s(this.$d.years, 4, "0"),
                                M: this.$d.months,
                                MM: a.s(this.$d.months, 2, "0"),
                                D: this.$d.days,
                                DD: a.s(this.$d.days, 2, "0"),
                                H: this.$d.hours,
                                HH: a.s(this.$d.hours, 2, "0"),
                                m: this.$d.minutes,
                                mm: a.s(this.$d.minutes, 2, "0"),
                                s: this.$d.seconds,
                                ss: a.s(this.$d.seconds, 2, "0"),
                                SSS: a.s(this.$d.milliseconds, 3, "0")
                            };
                            return te.replace(g, function (le, oe) {
                                return oe || String(ne[le])
                            })
                        }
                        ,
                        G.as = function (ie) {
                            return this.$ms / C[A(ie)]
                        }
                        ,
                        G.get = function (ie) {
                            var te = this.$ms
                                , ne = A(ie);
                            return ne === "milliseconds" ? te %= 1e3 : te = ne === "weeks" ? P(te / C[ne]) : this.$d[ne],
                            te || 0
                        }
                        ,
                        G.add = function (ie, te, ne) {
                            var le;
                            return le = te ? ie * C[A(te)] : T(ie) ? ie.$ms : I(ie, this).$ms,
                                I(this.$ms + le * (ne ? -1 : 1), this)
                        }
                        ,
                        G.subtract = function (ie, te) {
                            return this.add(ie, te, !0)
                        }
                        ,
                        G.locale = function (ie) {
                            var te = this.clone();
                            return te.$l = ie,
                                te
                        }
                        ,
                        G.clone = function () {
                            return I(this.$ms, this)
                        }
                        ,
                        G.humanize = function (ie) {
                            return s().add(this.$ms, "ms").locale(this.$l).fromNow(!ie)
                        }
                        ,
                        G.valueOf = function () {
                            return this.asMilliseconds()
                        }
                        ,
                        G.milliseconds = function () {
                            return this.get("milliseconds")
                        }
                        ,
                        G.asMilliseconds = function () {
                            return this.as("milliseconds")
                        }
                        ,
                        G.seconds = function () {
                            return this.get("seconds")
                        }
                        ,
                        G.asSeconds = function () {
                            return this.as("seconds")
                        }
                        ,
                        G.minutes = function () {
                            return this.get("minutes")
                        }
                        ,
                        G.asMinutes = function () {
                            return this.as("minutes")
                        }
                        ,
                        G.hours = function () {
                            return this.get("hours")
                        }
                        ,
                        G.asHours = function () {
                            return this.as("hours")
                        }
                        ,
                        G.days = function () {
                            return this.get("days")
                        }
                        ,
                        G.asDays = function () {
                            return this.as("days")
                        }
                        ,
                        G.weeks = function () {
                            return this.get("weeks")
                        }
                        ,
                        G.asWeeks = function () {
                            return this.as("weeks")
                        }
                        ,
                        G.months = function () {
                            return this.get("months")
                        }
                        ,
                        G.asMonths = function () {
                            return this.as("months")
                        }
                        ,
                        G.years = function () {
                            return this.get("years")
                        }
                        ,
                        G.asYears = function () {
                            return this.as("years")
                        }
                        ,
                        V
                }(), $ = function (V, G, ie) {
                    return V.add(G.years() * ie, "y").add(G.months() * ie, "M").add(G.days() * ie, "d").add(G.hours() * ie, "h").add(G.minutes() * ie, "m").add(G.seconds() * ie, "s").add(G.milliseconds() * ie, "ms")
                };
            return function (V, G, ie) {
                s = ie,
                    a = ie().$utils(),
                    ie.duration = function (le, oe) {
                        var ve = ie.locale();
                        return I(le, {
                            $l: ve
                        }, oe)
                    }
                    ,
                    ie.isDuration = T;
                var te = G.prototype.add
                    , ne = G.prototype.subtract;
                G.prototype.add = function (le, oe) {
                    return T(le) ? $(this, le, 1) : te.bind(this)(le, oe)
                }
                    ,
                    G.prototype.subtract = function (le, oe) {
                        return T(le) ? $(this, le, -1) : ne.bind(this)(le, oe)
                    }
            }
        })
    }
)(Z_);
var Sq = Z_.exports;
const _q = pg(Sq);

function kq(e) {
    return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
}

var Of = {
    exports: {}
};
/*!
 * ApexCharts v3.45.2
 * (c) 2018-2024 ApexCharts
 * Released under the MIT License.
 */
(function (e, t) {
        function s(j, n) {
            var i = Object.keys(j);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(j);
                n && (r = r.filter(function (c) {
                    return Object.getOwnPropertyDescriptor(j, c).enumerable
                })),
                    i.push.apply(i, r)
            }
            return i
        }

        function a(j) {
            for (var n = 1; n < arguments.length; n++) {
                var i = arguments[n] != null ? arguments[n] : {};
                n % 2 ? s(Object(i), !0).forEach(function (r) {
                    g(j, r, i[r])
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(j, Object.getOwnPropertyDescriptors(i)) : s(Object(i)).forEach(function (r) {
                    Object.defineProperty(j, r, Object.getOwnPropertyDescriptor(i, r))
                })
            }
            return j
        }

        function o(j) {
            return o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (n) {
                    return typeof n
                }
                : function (n) {
                    return n && typeof Symbol == "function" && n.constructor === Symbol && n !== Symbol.prototype ? "symbol" : typeof n
                }
                ,
                o(j)
        }

        function l(j, n) {
            if (!(j instanceof n))
                throw new TypeError("Cannot call a class as a function")
        }

        function u(j, n) {
            for (var i = 0; i < n.length; i++) {
                var r = n[i];
                r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                "value" in r && (r.writable = !0),
                    Object.defineProperty(j, r.key, r)
            }
        }

        function p(j, n, i) {
            return n && u(j.prototype, n),
            i && u(j, i),
                j
        }

        function g(j, n, i) {
            return n in j ? Object.defineProperty(j, n, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : j[n] = i,
                j
        }

        function y(j, n) {
            if (typeof n != "function" && n !== null)
                throw new TypeError("Super expression must either be null or a function");
            j.prototype = Object.create(n && n.prototype, {
                constructor: {
                    value: j,
                    writable: !0,
                    configurable: !0
                }
            }),
            n && w(j, n)
        }

        function v(j) {
            return v = Object.setPrototypeOf ? Object.getPrototypeOf : function (n) {
                return n.__proto__ || Object.getPrototypeOf(n)
            }
                ,
                v(j)
        }

        function w(j, n) {
            return w = Object.setPrototypeOf || function (i, r) {
                return i.__proto__ = r,
                    i
            }
                ,
                w(j, n)
        }

        function C(j) {
            if (j === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return j
        }

        function T(j) {
            var n = function () {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                    return !1;
                if (typeof Proxy == "function")
                    return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {
                    })),
                        !0
                } catch {
                    return !1
                }
            }();
            return function () {
                var i, r = v(j);
                if (n) {
                    var c = v(this).constructor;
                    i = Reflect.construct(r, arguments, c)
                } else
                    i = r.apply(this, arguments);
                return function (d, h) {
                    if (h && (typeof h == "object" || typeof h == "function"))
                        return h;
                    if (h !== void 0)
                        throw new TypeError("Derived constructors may only return object or undefined");
                    return C(d)
                }(this, i)
            }
        }

        function I(j, n) {
            return function (i) {
                if (Array.isArray(i))
                    return i
            }(j) || function (i, r) {
                var c = i == null ? null : typeof Symbol < "u" && i[Symbol.iterator] || i["@@iterator"];
                if (c != null) {
                    var d, h, f = [], m = !0, x = !1;
                    try {
                        for (c = c.call(i); !(m = (d = c.next()).done) && (f.push(d.value),
                        !r || f.length !== r); m = !0)
                            ;
                    } catch (S) {
                        x = !0,
                            h = S
                    } finally {
                        try {
                            m || c.return == null || c.return()
                        } finally {
                            if (x)
                                throw h
                        }
                    }
                    return f
                }
            }(j, n) || R(j, n) || function () {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
            }()
        }

        function A(j) {
            return function (n) {
                if (Array.isArray(n))
                    return P(n)
            }(j) || function (n) {
                if (typeof Symbol < "u" && n[Symbol.iterator] != null || n["@@iterator"] != null)
                    return Array.from(n)
            }(j) || R(j) || function () {
                throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
            }()
        }

        function R(j, n) {
            if (j) {
                if (typeof j == "string")
                    return P(j, n);
                var i = Object.prototype.toString.call(j).slice(8, -1);
                return i === "Object" && j.constructor && (i = j.constructor.name),
                    i === "Map" || i === "Set" ? Array.from(j) : i === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? P(j, n) : void 0
            }
        }

        function P(j, n) {
            (n == null || n > j.length) && (n = j.length);
            for (var i = 0, r = new Array(n); i < n; i++)
                r[i] = j[i];
            return r
        }

        var M = function () {
            function j() {
                l(this, j)
            }

            return p(j, [{
                key: "shadeRGBColor",
                value: function (n, i) {
                    var r = i.split(",")
                        , c = n < 0 ? 0 : 255
                        , d = n < 0 ? -1 * n : n
                        , h = parseInt(r[0].slice(4), 10)
                        , f = parseInt(r[1], 10)
                        , m = parseInt(r[2], 10);
                    return "rgb(" + (Math.round((c - h) * d) + h) + "," + (Math.round((c - f) * d) + f) + "," + (Math.round((c - m) * d) + m) + ")"
                }
            }, {
                key: "shadeHexColor",
                value: function (n, i) {
                    var r = parseInt(i.slice(1), 16)
                        , c = n < 0 ? 0 : 255
                        , d = n < 0 ? -1 * n : n
                        , h = r >> 16
                        , f = r >> 8 & 255
                        , m = 255 & r;
                    return "#" + (16777216 + 65536 * (Math.round((c - h) * d) + h) + 256 * (Math.round((c - f) * d) + f) + (Math.round((c - m) * d) + m)).toString(16).slice(1)
                }
            }, {
                key: "shadeColor",
                value: function (n, i) {
                    return j.isColorHex(i) ? this.shadeHexColor(n, i) : this.shadeRGBColor(n, i)
                }
            }], [{
                key: "bind",
                value: function (n, i) {
                    return function () {
                        return n.apply(i, arguments)
                    }
                }
            }, {
                key: "isObject",
                value: function (n) {
                    return n && o(n) === "object" && !Array.isArray(n) && n != null
                }
            }, {
                key: "is",
                value: function (n, i) {
                    return Object.prototype.toString.call(i) === "[object " + n + "]"
                }
            }, {
                key: "listToArray",
                value: function (n) {
                    var i, r = [];
                    for (i = 0; i < n.length; i++)
                        r[i] = n[i];
                    return r
                }
            }, {
                key: "extend",
                value: function (n, i) {
                    var r = this;
                    typeof Object.assign != "function" && (Object.assign = function (d) {
                            if (d == null)
                                throw new TypeError("Cannot convert undefined or null to object");
                            for (var h = Object(d), f = 1; f < arguments.length; f++) {
                                var m = arguments[f];
                                if (m != null)
                                    for (var x in m)
                                        m.hasOwnProperty(x) && (h[x] = m[x])
                            }
                            return h
                        }
                    );
                    var c = Object.assign({}, n);
                    return this.isObject(n) && this.isObject(i) && Object.keys(i).forEach(function (d) {
                        r.isObject(i[d]) && d in n ? c[d] = r.extend(n[d], i[d]) : Object.assign(c, g({}, d, i[d]))
                    }),
                        c
                }
            }, {
                key: "extendArray",
                value: function (n, i) {
                    var r = [];
                    return n.map(function (c) {
                        r.push(j.extend(i, c))
                    }),
                        n = r
                }
            }, {
                key: "monthMod",
                value: function (n) {
                    return n % 12
                }
            }, {
                key: "clone",
                value: function (n) {
                    if (j.is("Array", n)) {
                        for (var i = [], r = 0; r < n.length; r++)
                            i[r] = this.clone(n[r]);
                        return i
                    }
                    if (j.is("Null", n))
                        return null;
                    if (j.is("Date", n))
                        return n;
                    if (o(n) === "object") {
                        var c = {};
                        for (var d in n)
                            n.hasOwnProperty(d) && (c[d] = this.clone(n[d]));
                        return c
                    }
                    return n
                }
            }, {
                key: "log10",
                value: function (n) {
                    return Math.log(n) / Math.LN10
                }
            }, {
                key: "roundToBase10",
                value: function (n) {
                    return Math.pow(10, Math.floor(Math.log10(n)))
                }
            }, {
                key: "roundToBase",
                value: function (n, i) {
                    return Math.pow(i, Math.floor(Math.log(n) / Math.log(i)))
                }
            }, {
                key: "parseNumber",
                value: function (n) {
                    return n === null ? n : parseFloat(n)
                }
            }, {
                key: "stripNumber",
                value: function (n) {
                    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
                    return Number.isInteger(n) ? n : parseFloat(n.toPrecision(i))
                }
            }, {
                key: "randomId",
                value: function () {
                    return (Math.random() + 1).toString(36).substring(4)
                }
            }, {
                key: "noExponents",
                value: function (n) {
                    var i = String(n).split(/[eE]/);
                    if (i.length === 1)
                        return i[0];
                    var r = ""
                        , c = n < 0 ? "-" : ""
                        , d = i[0].replace(".", "")
                        , h = Number(i[1]) + 1;
                    if (h < 0) {
                        for (r = c + "0."; h++;)
                            r += "0";
                        return r + d.replace(/^-/, "")
                    }
                    for (h -= d.length; h--;)
                        r += "0";
                    return d + r
                }
            }, {
                key: "getDimensions",
                value: function (n) {
                    var i = getComputedStyle(n, null)
                        , r = n.clientHeight
                        , c = n.clientWidth;
                    return r -= parseFloat(i.paddingTop) + parseFloat(i.paddingBottom),
                        [c -= parseFloat(i.paddingLeft) + parseFloat(i.paddingRight), r]
                }
            }, {
                key: "getBoundingClientRect",
                value: function (n) {
                    var i = n.getBoundingClientRect();
                    return {
                        top: i.top,
                        right: i.right,
                        bottom: i.bottom,
                        left: i.left,
                        width: n.clientWidth,
                        height: n.clientHeight,
                        x: i.left,
                        y: i.top
                    }
                }
            }, {
                key: "getLargestStringFromArr",
                value: function (n) {
                    return n.reduce(function (i, r) {
                        return Array.isArray(r) && (r = r.reduce(function (c, d) {
                            return c.length > d.length ? c : d
                        })),
                            i.length > r.length ? i : r
                    }, 0)
                }
            }, {
                key: "hexToRgba",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "#999999"
                        , i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : .6;
                    n.substring(0, 1) !== "#" && (n = "#999999");
                    var r = n.replace("#", "");
                    r = r.match(new RegExp("(.{" + r.length / 3 + "})", "g"));
                    for (var c = 0; c < r.length; c++)
                        r[c] = parseInt(r[c].length === 1 ? r[c] + r[c] : r[c], 16);
                    return i !== void 0 && r.push(i),
                    "rgba(" + r.join(",") + ")"
                }
            }, {
                key: "getOpacityFromRGBA",
                value: function (n) {
                    return parseFloat(n.replace(/^.*,(.+)\)/, "$1"))
                }
            }, {
                key: "rgb2hex",
                value: function (n) {
                    return (n = n.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && n.length === 4 ? "#" + ("0" + parseInt(n[1], 10).toString(16)).slice(-2) + ("0" + parseInt(n[2], 10).toString(16)).slice(-2) + ("0" + parseInt(n[3], 10).toString(16)).slice(-2) : ""
                }
            }, {
                key: "isColorHex",
                value: function (n) {
                    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(n)
                }
            }, {
                key: "getPolygonPos",
                value: function (n, i) {
                    for (var r = [], c = 2 * Math.PI / i, d = 0; d < i; d++) {
                        var h = {};
                        h.x = n * Math.sin(d * c),
                            h.y = -n * Math.cos(d * c),
                            r.push(h)
                    }
                    return r
                }
            }, {
                key: "polarToCartesian",
                value: function (n, i, r, c) {
                    var d = (c - 90) * Math.PI / 180;
                    return {
                        x: n + r * Math.cos(d),
                        y: i + r * Math.sin(d)
                    }
                }
            }, {
                key: "escapeString",
                value: function (n) {
                    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "x"
                        , r = n.toString().slice();
                    return r = r.replace(/[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi, i)
                }
            }, {
                key: "negToZero",
                value: function (n) {
                    return n < 0 ? 0 : n
                }
            }, {
                key: "moveIndexInArray",
                value: function (n, i, r) {
                    if (r >= n.length)
                        for (var c = r - n.length + 1; c--;)
                            n.push(void 0);
                    return n.splice(r, 0, n.splice(i, 1)[0]),
                        n
                }
            }, {
                key: "extractNumber",
                value: function (n) {
                    return parseFloat(n.replace(/[^\d.]*/g, ""))
                }
            }, {
                key: "findAncestor",
                value: function (n, i) {
                    for (; (n = n.parentElement) && !n.classList.contains(i);)
                        ;
                    return n
                }
            }, {
                key: "setELstyles",
                value: function (n, i) {
                    for (var r in i)
                        i.hasOwnProperty(r) && (n.style.key = i[r])
                }
            }, {
                key: "isNumber",
                value: function (n) {
                    return !isNaN(n) && parseFloat(Number(n)) === n && !isNaN(parseInt(n, 10))
                }
            }, {
                key: "isFloat",
                value: function (n) {
                    return Number(n) === n && n % 1 != 0
                }
            }, {
                key: "isSafari",
                value: function () {
                    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
                }
            }, {
                key: "isFirefox",
                value: function () {
                    return navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                }
            }, {
                key: "isIE11",
                value: function () {
                    if (window.navigator.userAgent.indexOf("MSIE") !== -1 || window.navigator.appVersion.indexOf("Trident/") > -1)
                        return !0
                }
            }, {
                key: "isIE",
                value: function () {
                    var n = window.navigator.userAgent
                        , i = n.indexOf("MSIE ");
                    if (i > 0)
                        return parseInt(n.substring(i + 5, n.indexOf(".", i)), 10);
                    if (n.indexOf("Trident/") > 0) {
                        var r = n.indexOf("rv:");
                        return parseInt(n.substring(r + 3, n.indexOf(".", r)), 10)
                    }
                    var c = n.indexOf("Edge/");
                    return c > 0 && parseInt(n.substring(c + 5, n.indexOf(".", c)), 10)
                }
            }]),
                j
        }()
            , O = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.setEasingFunctions()
            }

            return p(j, [{
                key: "setEasingFunctions",
                value: function () {
                    var n;
                    if (!this.w.globals.easing) {
                        switch (this.w.config.chart.animations.easing) {
                            case "linear":
                                n = "-";
                                break;
                            case "easein":
                                n = "<";
                                break;
                            case "easeout":
                                n = ">";
                                break;
                            case "easeinout":
                            default:
                                n = "<>";
                                break;
                            case "swing":
                                n = function (i) {
                                    var r = 1.70158;
                                    return (i -= 1) * i * ((r + 1) * i + r) + 1
                                }
                                ;
                                break;
                            case "bounce":
                                n = function (i) {
                                    return i < 1 / 2.75 ? 7.5625 * i * i : i < 2 / 2.75 ? 7.5625 * (i -= 1.5 / 2.75) * i + .75 : i < 2.5 / 2.75 ? 7.5625 * (i -= 2.25 / 2.75) * i + .9375 : 7.5625 * (i -= 2.625 / 2.75) * i + .984375
                                }
                                ;
                                break;
                            case "elastic":
                                n = function (i) {
                                    return i === !!i ? i : Math.pow(2, -10 * i) * Math.sin((i - .075) * (2 * Math.PI) / .3) + 1
                                }
                        }
                        this.w.globals.easing = n
                    }
                }
            }, {
                key: "animateLine",
                value: function (n, i, r, c) {
                    n.attr(i).animate(c).attr(r)
                }
            }, {
                key: "animateMarker",
                value: function (n, i, r, c, d, h) {
                    i || (i = 0),
                        n.attr({
                            r: i,
                            width: i,
                            height: i
                        }).animate(c, d).attr({
                            r,
                            width: r.width,
                            height: r.height
                        }).afterAll(function () {
                            h()
                        })
                }
            }, {
                key: "animateCircle",
                value: function (n, i, r, c, d) {
                    n.attr({
                        r: i.r,
                        cx: i.cx,
                        cy: i.cy
                    }).animate(c, d).attr({
                        r: r.r,
                        cx: r.cx,
                        cy: r.cy
                    })
                }
            }, {
                key: "animateRect",
                value: function (n, i, r, c, d) {
                    n.attr(i).animate(c).attr(r).afterAll(function () {
                        return d()
                    })
                }
            }, {
                key: "animatePathsGradually",
                value: function (n) {
                    var i = n.el
                        , r = n.realIndex
                        , c = n.j
                        , d = n.fill
                        , h = n.pathFrom
                        , f = n.pathTo
                        , m = n.speed
                        , x = n.delay
                        , S = this.w
                        , _ = 0;
                    S.config.chart.animations.animateGradually.enabled && (_ = S.config.chart.animations.animateGradually.delay),
                    S.config.chart.animations.dynamicAnimation.enabled && S.globals.dataChanged && S.config.chart.type !== "bar" && (_ = 0),
                        this.morphSVG(i, r, c, S.config.chart.type !== "line" || S.globals.comboCharts ? d : "stroke", h, f, m, x * _)
                }
            }, {
                key: "showDelayedElements",
                value: function () {
                    this.w.globals.delayedElements.forEach(function (n) {
                        var i = n.el;
                        i.classList.remove("apexcharts-element-hidden"),
                            i.classList.add("apexcharts-hidden-element-shown")
                    })
                }
            }, {
                key: "animationCompleted",
                value: function (n) {
                    var i = this.w;
                    i.globals.animationEnded || (i.globals.animationEnded = !0,
                        this.showDelayedElements(),
                    typeof i.config.chart.events.animationEnd == "function" && i.config.chart.events.animationEnd(this.ctx, {
                        el: n,
                        w: i
                    }))
                }
            }, {
                key: "morphSVG",
                value: function (n, i, r, c, d, h, f, m) {
                    var x = this
                        , S = this.w;
                    d || (d = n.attr("pathFrom")),
                    h || (h = n.attr("pathTo"));
                    var _ = function (k) {
                        return S.config.chart.type === "radar" && (f = 1),
                            "M 0 ".concat(S.globals.gridHeight)
                    };
                    (!d || d.indexOf("undefined") > -1 || d.indexOf("NaN") > -1) && (d = _()),
                    (!h || h.indexOf("undefined") > -1 || h.indexOf("NaN") > -1) && (h = _()),
                    S.globals.shouldAnimate || (f = 1),
                        n.plot(d).animate(1, S.globals.easing, m).plot(d).animate(f, S.globals.easing, m).plot(h).afterAll(function () {
                            M.isNumber(r) ? r === S.globals.series[S.globals.maxValsInArrayIndex].length - 2 && S.globals.shouldAnimate && x.animationCompleted(n) : c !== "none" && S.globals.shouldAnimate && (!S.globals.comboCharts && i === S.globals.series.length - 1 || S.globals.comboCharts) && x.animationCompleted(n),
                                x.showDelayedElements()
                        })
                }
            }]),
                j
        }()
            , F = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "getDefaultFilter",
                value: function (n, i) {
                    var r = this.w;
                    n.unfilter(!0),
                        new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"),
                        r.config.states.normal.filter !== "none" ? this.applyFilter(n, i, r.config.states.normal.filter.type, r.config.states.normal.filter.value) : r.config.chart.dropShadow.enabled && this.dropShadow(n, r.config.chart.dropShadow, i)
                }
            }, {
                key: "addNormalFilter",
                value: function (n, i) {
                    var r = this.w;
                    r.config.chart.dropShadow.enabled && !n.node.classList.contains("apexcharts-marker") && this.dropShadow(n, r.config.chart.dropShadow, i)
                }
            }, {
                key: "addLightenFilter",
                value: function (n, i, r) {
                    var c = this
                        , d = this.w
                        , h = r.intensity;
                    n.unfilter(!0),
                        new window.SVG.Filter,
                        n.filter(function (f) {
                            var m = d.config.chart.dropShadow;
                            (m.enabled ? c.addShadow(f, i, m) : f).componentTransfer({
                                rgb: {
                                    type: "linear",
                                    slope: 1.5,
                                    intercept: h
                                }
                            })
                        }),
                        n.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                        this._scaleFilterSize(n.filterer.node)
                }
            }, {
                key: "addDarkenFilter",
                value: function (n, i, r) {
                    var c = this
                        , d = this.w
                        , h = r.intensity;
                    n.unfilter(!0),
                        new window.SVG.Filter,
                        n.filter(function (f) {
                            var m = d.config.chart.dropShadow;
                            (m.enabled ? c.addShadow(f, i, m) : f).componentTransfer({
                                rgb: {
                                    type: "linear",
                                    slope: h
                                }
                            })
                        }),
                        n.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                        this._scaleFilterSize(n.filterer.node)
                }
            }, {
                key: "applyFilter",
                value: function (n, i, r) {
                    var c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : .5;
                    switch (r) {
                        case "none":
                            this.addNormalFilter(n, i);
                            break;
                        case "lighten":
                            this.addLightenFilter(n, i, {
                                intensity: c
                            });
                            break;
                        case "darken":
                            this.addDarkenFilter(n, i, {
                                intensity: c
                            })
                    }
                }
            }, {
                key: "addShadow",
                value: function (n, i, r) {
                    var c = r.blur
                        , d = r.top
                        , h = r.left
                        , f = r.color
                        , m = r.opacity
                        ,
                        x = n.flood(Array.isArray(f) ? f[i] : f, m).composite(n.sourceAlpha, "in").offset(h, d).gaussianBlur(c).merge(n.source);
                    return n.blend(n.source, x)
                }
            }, {
                key: "dropShadow",
                value: function (n, i) {
                    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0
                        , c = i.top
                        , d = i.left
                        , h = i.blur
                        , f = i.color
                        , m = i.opacity
                        , x = i.noUserSpaceOnUse
                        , S = this.w;
                    return n.unfilter(!0),
                    M.isIE() && S.config.chart.type === "radialBar" || (f = Array.isArray(f) ? f[r] : f,
                        n.filter(function (_) {
                            var k = null;
                            k = M.isSafari() || M.isFirefox() || M.isIE() ? _.flood(f, m).composite(_.sourceAlpha, "in").offset(d, c).gaussianBlur(h) : _.flood(f, m).composite(_.sourceAlpha, "in").offset(d, c).gaussianBlur(h).merge(_.source),
                                _.blend(_.source, k)
                        }),
                    x || n.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                        this._scaleFilterSize(n.filterer.node)),
                        n
                }
            }, {
                key: "setSelectionFilter",
                value: function (n, i, r) {
                    var c = this.w;
                    if (c.globals.selectedDataPoints[i] !== void 0 && c.globals.selectedDataPoints[i].indexOf(r) > -1) {
                        n.node.setAttribute("selected", !0);
                        var d = c.config.states.active.filter;
                        d !== "none" && this.applyFilter(n, i, d.type, d.value)
                    }
                }
            }, {
                key: "_scaleFilterSize",
                value: function (n) {
                    (function (i) {
                            for (var r in i)
                                i.hasOwnProperty(r) && n.setAttribute(r, i[r])
                        }
                    )({
                        width: "200%",
                        height: "200%",
                        x: "-50%",
                        y: "-50%"
                    })
                }
            }]),
                j
        }()
            , $ = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "roundPathCorners",
                value: function (n, i) {
                    function r(ee, pe, ge) {
                        var Ie = pe.x - ee.x
                            , $e = pe.y - ee.y
                            , Fe = Math.sqrt(Ie * Ie + $e * $e);
                        return c(ee, pe, Math.min(1, ge / Fe))
                    }

                    function c(ee, pe, ge) {
                        return {
                            x: ee.x + (pe.x - ee.x) * ge,
                            y: ee.y + (pe.y - ee.y) * ge
                        }
                    }

                    function d(ee, pe) {
                        ee.length > 2 && (ee[ee.length - 2] = pe.x,
                            ee[ee.length - 1] = pe.y)
                    }

                    function h(ee) {
                        return {
                            x: parseFloat(ee[ee.length - 2]),
                            y: parseFloat(ee[ee.length - 1])
                        }
                    }

                    n.indexOf("NaN") > -1 && (n = "");
                    var f = n.split(/[,\s]/).reduce(function (ee, pe) {
                        var ge = pe.match("([a-zA-Z])(.+)");
                        return ge ? (ee.push(ge[1]),
                            ee.push(ge[2])) : ee.push(pe),
                            ee
                    }, []).reduce(function (ee, pe) {
                        return parseFloat(pe) == pe && ee.length ? ee[ee.length - 1].push(pe) : ee.push([pe]),
                            ee
                    }, [])
                        , m = [];
                    if (f.length > 1) {
                        var x = h(f[0])
                            , S = null;
                        f[f.length - 1][0] == "Z" && f[0].length > 2 && (S = ["L", x.x, x.y],
                            f[f.length - 1] = S),
                            m.push(f[0]);
                        for (var _ = 1; _ < f.length; _++) {
                            var k = m[m.length - 1]
                                , L = f[_]
                                , N = L == S ? f[1] : f[_ + 1];
                            if (N && k && k.length > 2 && L[0] == "L" && N.length > 2 && N[0] == "L") {
                                var H, z, q = h(k), Q = h(L), b = h(N);
                                H = r(Q, q, i),
                                    z = r(Q, b, i),
                                    d(L, H),
                                    L.origPoint = Q,
                                    m.push(L);
                                var E = c(H, Q, .5)
                                    , B = c(Q, z, .5)
                                    , X = ["C", E.x, E.y, B.x, B.y, z.x, z.y];
                                X.origPoint = Q,
                                    m.push(X)
                            } else
                                m.push(L)
                        }
                        if (S) {
                            var K = h(m[m.length - 1]);
                            m.push(["Z"]),
                                d(m[0], K)
                        }
                    } else
                        m = f;
                    return m.reduce(function (ee, pe) {
                        return ee + pe.join(" ") + " "
                    }, "")
                }
            }, {
                key: "drawLine",
                value: function (n, i, r, c) {
                    var d = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "#a8a8a8"
                        , h = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0
                        , f = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : null
                        , m = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : "butt";
                    return this.w.globals.dom.Paper.line().attr({
                        x1: n,
                        y1: i,
                        x2: r,
                        y2: c,
                        stroke: d,
                        "stroke-dasharray": h,
                        "stroke-width": f,
                        "stroke-linecap": m
                    })
                }
            }, {
                key: "drawRect",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0
                        , i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0
                        , r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0
                        , c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0
                        , d = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0
                        , h = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : "#fefefe"
                        , f = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 1
                        , m = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : null
                        , x = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : null
                        , S = arguments.length > 9 && arguments[9] !== void 0 ? arguments[9] : 0
                        , _ = this.w.globals.dom.Paper.rect();
                    return _.attr({
                        x: n,
                        y: i,
                        width: r > 0 ? r : 0,
                        height: c > 0 ? c : 0,
                        rx: d,
                        ry: d,
                        opacity: f,
                        "stroke-width": m !== null ? m : 0,
                        stroke: x !== null ? x : "none",
                        "stroke-dasharray": S
                    }),
                        _.node.setAttribute("fill", h),
                        _
                }
            }, {
                key: "drawPolygon",
                value: function (n) {
                    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "#e1e1e1"
                        , r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1
                        , c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "none";
                    return this.w.globals.dom.Paper.polygon(n).attr({
                        fill: c,
                        stroke: i,
                        "stroke-width": r
                    })
                }
            }, {
                key: "drawCircle",
                value: function (n) {
                    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                    n < 0 && (n = 0);
                    var r = this.w.globals.dom.Paper.circle(2 * n);
                    return i !== null && r.attr(i),
                        r
                }
            }, {
                key: "drawPath",
                value: function (n) {
                    var i = n.d
                        , r = i === void 0 ? "" : i
                        , c = n.stroke
                        , d = c === void 0 ? "#a8a8a8" : c
                        , h = n.strokeWidth
                        , f = h === void 0 ? 1 : h
                        , m = n.fill
                        , x = n.fillOpacity
                        , S = x === void 0 ? 1 : x
                        , _ = n.strokeOpacity
                        , k = _ === void 0 ? 1 : _
                        , L = n.classes
                        , N = n.strokeLinecap
                        , H = N === void 0 ? null : N
                        , z = n.strokeDashArray
                        , q = z === void 0 ? 0 : z
                        , Q = this.w;
                    return H === null && (H = Q.config.stroke.lineCap),
                    (r.indexOf("undefined") > -1 || r.indexOf("NaN") > -1) && (r = "M 0 ".concat(Q.globals.gridHeight)),
                        Q.globals.dom.Paper.path(r).attr({
                            fill: m,
                            "fill-opacity": S,
                            stroke: d,
                            "stroke-opacity": k,
                            "stroke-linecap": H,
                            "stroke-width": f,
                            "stroke-dasharray": q,
                            class: L
                        })
                }
            }, {
                key: "group",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null
                        , i = this.w.globals.dom.Paper.group();
                    return n !== null && i.attr(n),
                        i
                }
            }, {
                key: "move",
                value: function (n, i) {
                    var r = ["M", n, i].join(" ");
                    return r
                }
            }, {
                key: "line",
                value: function (n, i) {
                    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null
                        , c = null;
                    return r === null ? c = [" L", n, i].join(" ") : r === "H" ? c = [" H", n].join(" ") : r === "V" && (c = [" V", i].join(" ")),
                        c
                }
            }, {
                key: "curve",
                value: function (n, i, r, c, d, h) {
                    var f = ["C", n, i, r, c, d, h].join(" ");
                    return f
                }
            }, {
                key: "quadraticCurve",
                value: function (n, i, r, c) {
                    return ["Q", n, i, r, c].join(" ")
                }
            }, {
                key: "arc",
                value: function (n, i, r, c, d, h, f) {
                    var m = "A";
                    arguments.length > 7 && arguments[7] !== void 0 && arguments[7] && (m = "a");
                    var x = [m, n, i, r, c, d, h, f].join(" ");
                    return x
                }
            }, {
                key: "renderPaths",
                value: function (n) {
                    var i, r = n.j, c = n.realIndex, d = n.pathFrom, h = n.pathTo, f = n.stroke, m = n.strokeWidth,
                        x = n.strokeLinecap, S = n.fill, _ = n.animationDelay, k = n.initialSpeed,
                        L = n.dataChangeSpeed, N = n.className, H = n.shouldClipToGrid, z = H === void 0 || H,
                        q = n.bindEventsOnPaths, Q = q === void 0 || q, b = n.drawShadow, E = b === void 0 || b,
                        B = this.w, X = new F(this.ctx), K = new O(this.ctx),
                        ee = this.w.config.chart.animations.enabled,
                        pe = ee && this.w.config.chart.animations.dynamicAnimation.enabled,
                        ge = !!(ee && !B.globals.resized || pe && B.globals.dataChanged && B.globals.shouldAnimate);
                    ge ? i = d : (i = h,
                        B.globals.animationEnded = !0);
                    var Ie = B.config.stroke.dashArray
                        , $e = 0;
                    $e = Array.isArray(Ie) ? Ie[c] : B.config.stroke.dashArray;
                    var Fe = this.drawPath({
                        d: i,
                        stroke: f,
                        strokeWidth: m,
                        fill: S,
                        fillOpacity: 1,
                        classes: N,
                        strokeLinecap: x,
                        strokeDashArray: $e
                    });
                    if (Fe.attr("index", c),
                    z && Fe.attr({
                        "clip-path": "url(#gridRectMask".concat(B.globals.cuid, ")")
                    }),
                    B.config.states.normal.filter.type !== "none")
                        X.getDefaultFilter(Fe, c);
                    else if (B.config.chart.dropShadow.enabled && E && (!B.config.chart.dropShadow.enabledOnSeries || B.config.chart.dropShadow.enabledOnSeries && B.config.chart.dropShadow.enabledOnSeries.indexOf(c) !== -1)) {
                        var Je = B.config.chart.dropShadow;
                        X.dropShadow(Fe, Je, c)
                    }
                    Q && (Fe.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, Fe)),
                        Fe.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, Fe)),
                        Fe.node.addEventListener("mousedown", this.pathMouseDown.bind(this, Fe))),
                        Fe.attr({
                            pathTo: h,
                            pathFrom: d
                        });
                    var ut = {
                        el: Fe,
                        j: r,
                        realIndex: c,
                        pathFrom: d,
                        pathTo: h,
                        fill: S,
                        strokeWidth: m,
                        delay: _
                    };
                    return !ee || B.globals.resized || B.globals.dataChanged ? !B.globals.resized && B.globals.dataChanged || K.showDelayedElements() : K.animatePathsGradually(a(a({}, ut), {}, {
                        speed: k
                    })),
                    B.globals.dataChanged && pe && ge && K.animatePathsGradually(a(a({}, ut), {}, {
                        speed: L
                    })),
                        Fe
                }
            }, {
                key: "drawPattern",
                value: function (n, i, r) {
                    var c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "#a8a8a8"
                        , d = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
                    return this.w.globals.dom.Paper.pattern(i, r, function (h) {
                        n === "horizontalLines" ? h.line(0, 0, r, 0).stroke({
                            color: c,
                            width: d + 1
                        }) : n === "verticalLines" ? h.line(0, 0, 0, i).stroke({
                            color: c,
                            width: d + 1
                        }) : n === "slantedLines" ? h.line(0, 0, i, r).stroke({
                            color: c,
                            width: d
                        }) : n === "squares" ? h.rect(i, r).fill("none").stroke({
                            color: c,
                            width: d
                        }) : n === "circles" && h.circle(i).fill("none").stroke({
                            color: c,
                            width: d
                        })
                    })
                }
            }, {
                key: "drawGradient",
                value: function (n, i, r, c, d) {
                    var h, f = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : null,
                        m = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : null,
                        x = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : null,
                        S = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : 0, _ = this.w;
                    i.length < 9 && i.indexOf("#") === 0 && (i = M.hexToRgba(i, c)),
                    r.length < 9 && r.indexOf("#") === 0 && (r = M.hexToRgba(r, d));
                    var k = 0
                        , L = 1
                        , N = 1
                        , H = null;
                    m !== null && (k = m[0] !== void 0 ? m[0] / 100 : 0,
                        L = m[1] !== void 0 ? m[1] / 100 : 1,
                        N = m[2] !== void 0 ? m[2] / 100 : 1,
                        H = m[3] !== void 0 ? m[3] / 100 : null);
                    var z = !(_.config.chart.type !== "donut" && _.config.chart.type !== "pie" && _.config.chart.type !== "polarArea" && _.config.chart.type !== "bubble");
                    if (h = x === null || x.length === 0 ? _.globals.dom.Paper.gradient(z ? "radial" : "linear", function (b) {
                        b.at(k, i, c),
                            b.at(L, r, d),
                            b.at(N, r, d),
                        H !== null && b.at(H, i, c)
                    }) : _.globals.dom.Paper.gradient(z ? "radial" : "linear", function (b) {
                        (Array.isArray(x[S]) ? x[S] : x).forEach(function (E) {
                            b.at(E.offset / 100, E.color, E.opacity)
                        })
                    }),
                        z) {
                        var q = _.globals.gridWidth / 2
                            , Q = _.globals.gridHeight / 2;
                        _.config.chart.type !== "bubble" ? h.attr({
                            gradientUnits: "userSpaceOnUse",
                            cx: q,
                            cy: Q,
                            r: f
                        }) : h.attr({
                            cx: .5,
                            cy: .5,
                            r: .8,
                            fx: .2,
                            fy: .2
                        })
                    } else
                        n === "vertical" ? h.from(0, 0).to(0, 1) : n === "diagonal" ? h.from(0, 0).to(1, 1) : n === "horizontal" ? h.from(0, 1).to(1, 1) : n === "diagonal2" && h.from(1, 0).to(0, 1);
                    return h
                }
            }, {
                key: "getTextBasedOnMaxWidth",
                value: function (n) {
                    var i = n.text
                        , r = n.maxWidth
                        , c = n.fontSize
                        , d = n.fontFamily
                        , h = this.getTextRects(i, c, d)
                        , f = h.width / i.length
                        , m = Math.floor(r / f);
                    return r < h.width ? i.slice(0, m - 3) + "..." : i
                }
            }, {
                key: "drawText",
                value: function (n) {
                    var i = this
                        , r = n.x
                        , c = n.y
                        , d = n.text
                        , h = n.textAnchor
                        , f = n.fontSize
                        , m = n.fontFamily
                        , x = n.fontWeight
                        , S = n.foreColor
                        , _ = n.opacity
                        , k = n.maxWidth
                        , L = n.cssClass
                        , N = L === void 0 ? "" : L
                        , H = n.isPlainText
                        , z = H === void 0 || H
                        , q = n.dominantBaseline
                        , Q = q === void 0 ? "auto" : q
                        , b = this.w;
                    d === void 0 && (d = "");
                    var E = d;
                    h || (h = "start"),
                    S && S.length || (S = b.config.chart.foreColor),
                        m = m || b.config.chart.fontFamily,
                        x = x || "regular";
                    var B, X = {
                        maxWidth: k,
                        fontSize: f = f || "11px",
                        fontFamily: m
                    };
                    return Array.isArray(d) ? B = b.globals.dom.Paper.text(function (K) {
                        for (var ee = 0; ee < d.length; ee++)
                            E = d[ee],
                            k && (E = i.getTextBasedOnMaxWidth(a({
                                text: d[ee]
                            }, X))),
                                ee === 0 ? K.tspan(E) : K.tspan(E).newLine()
                    }) : (k && (E = this.getTextBasedOnMaxWidth(a({
                        text: d
                    }, X))),
                        B = z ? b.globals.dom.Paper.plain(d) : b.globals.dom.Paper.text(function (K) {
                            return K.tspan(E)
                        })),
                        B.attr({
                            x: r,
                            y: c,
                            "text-anchor": h,
                            "dominant-baseline": Q,
                            "font-size": f,
                            "font-family": m,
                            "font-weight": x,
                            fill: S,
                            class: "apexcharts-text " + N
                        }),
                        B.node.style.fontFamily = m,
                        B.node.style.opacity = _,
                        B
                }
            }, {
                key: "drawMarker",
                value: function (n, i, r) {
                    n = n || 0;
                    var c = r.pSize || 0
                        , d = null;
                    if (r.shape === "square" || r.shape === "rect") {
                        var h = r.pRadius === void 0 ? c / 2 : r.pRadius;
                        i !== null && c || (c = 0,
                            h = 0);
                        var f = 1.2 * c + h
                            , m = this.drawRect(f, f, f, f, h);
                        m.attr({
                            x: n - f / 2,
                            y: i - f / 2,
                            cx: n,
                            cy: i,
                            class: r.class ? r.class : "",
                            fill: r.pointFillColor,
                            "fill-opacity": r.pointFillOpacity ? r.pointFillOpacity : 1,
                            stroke: r.pointStrokeColor,
                            "stroke-width": r.pointStrokeWidth ? r.pointStrokeWidth : 0,
                            "stroke-opacity": r.pointStrokeOpacity ? r.pointStrokeOpacity : 1
                        }),
                            d = m
                    } else
                        r.shape !== "circle" && r.shape || (M.isNumber(i) || (c = 0,
                            i = 0),
                            d = this.drawCircle(c, {
                                cx: n,
                                cy: i,
                                class: r.class ? r.class : "",
                                stroke: r.pointStrokeColor,
                                fill: r.pointFillColor,
                                "fill-opacity": r.pointFillOpacity ? r.pointFillOpacity : 1,
                                "stroke-width": r.pointStrokeWidth ? r.pointStrokeWidth : 0,
                                "stroke-opacity": r.pointStrokeOpacity ? r.pointStrokeOpacity : 1
                            }));
                    return d
                }
            }, {
                key: "pathMouseEnter",
                value: function (n, i) {
                    var r = this.w
                        , c = new F(this.ctx)
                        , d = parseInt(n.node.getAttribute("index"), 10)
                        , h = parseInt(n.node.getAttribute("j"), 10);
                    if (typeof r.config.chart.events.dataPointMouseEnter == "function" && r.config.chart.events.dataPointMouseEnter(i, this.ctx, {
                        seriesIndex: d,
                        dataPointIndex: h,
                        w: r
                    }),
                        this.ctx.events.fireEvent("dataPointMouseEnter", [i, this.ctx, {
                            seriesIndex: d,
                            dataPointIndex: h,
                            w: r
                        }]),
                    (r.config.states.active.filter.type === "none" || n.node.getAttribute("selected") !== "true") && r.config.states.hover.filter.type !== "none" && !r.globals.isTouchDevice) {
                        var f = r.config.states.hover.filter;
                        c.applyFilter(n, d, f.type, f.value)
                    }
                }
            }, {
                key: "pathMouseLeave",
                value: function (n, i) {
                    var r = this.w
                        , c = new F(this.ctx)
                        , d = parseInt(n.node.getAttribute("index"), 10)
                        , h = parseInt(n.node.getAttribute("j"), 10);
                    typeof r.config.chart.events.dataPointMouseLeave == "function" && r.config.chart.events.dataPointMouseLeave(i, this.ctx, {
                        seriesIndex: d,
                        dataPointIndex: h,
                        w: r
                    }),
                        this.ctx.events.fireEvent("dataPointMouseLeave", [i, this.ctx, {
                            seriesIndex: d,
                            dataPointIndex: h,
                            w: r
                        }]),
                    r.config.states.active.filter.type !== "none" && n.node.getAttribute("selected") === "true" || r.config.states.hover.filter.type !== "none" && c.getDefaultFilter(n, d)
                }
            }, {
                key: "pathMouseDown",
                value: function (n, i) {
                    var r = this.w
                        , c = new F(this.ctx)
                        , d = parseInt(n.node.getAttribute("index"), 10)
                        , h = parseInt(n.node.getAttribute("j"), 10)
                        , f = "false";
                    if (n.node.getAttribute("selected") === "true") {
                        if (n.node.setAttribute("selected", "false"),
                        r.globals.selectedDataPoints[d].indexOf(h) > -1) {
                            var m = r.globals.selectedDataPoints[d].indexOf(h);
                            r.globals.selectedDataPoints[d].splice(m, 1)
                        }
                    } else {
                        if (!r.config.states.active.allowMultipleDataPointsSelection && r.globals.selectedDataPoints.length > 0) {
                            r.globals.selectedDataPoints = [];
                            var x = r.globals.dom.Paper.select(".apexcharts-series path").members
                                ,
                                S = r.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members
                                , _ = function (N) {
                                    Array.prototype.forEach.call(N, function (H) {
                                        H.node.setAttribute("selected", "false"),
                                            c.getDefaultFilter(H, d)
                                    })
                                };
                            _(x),
                                _(S)
                        }
                        n.node.setAttribute("selected", "true"),
                            f = "true",
                        r.globals.selectedDataPoints[d] === void 0 && (r.globals.selectedDataPoints[d] = []),
                            r.globals.selectedDataPoints[d].push(h)
                    }
                    if (f === "true") {
                        var k = r.config.states.active.filter;
                        if (k !== "none")
                            c.applyFilter(n, d, k.type, k.value);
                        else if (r.config.states.hover.filter !== "none" && !r.globals.isTouchDevice) {
                            var L = r.config.states.hover.filter;
                            c.applyFilter(n, d, L.type, L.value)
                        }
                    } else
                        r.config.states.active.filter.type !== "none" && (r.config.states.hover.filter.type === "none" || r.globals.isTouchDevice ? c.getDefaultFilter(n, d) : (L = r.config.states.hover.filter,
                            c.applyFilter(n, d, L.type, L.value)));
                    typeof r.config.chart.events.dataPointSelection == "function" && r.config.chart.events.dataPointSelection(i, this.ctx, {
                        selectedDataPoints: r.globals.selectedDataPoints,
                        seriesIndex: d,
                        dataPointIndex: h,
                        w: r
                    }),
                    i && this.ctx.events.fireEvent("dataPointSelection", [i, this.ctx, {
                        selectedDataPoints: r.globals.selectedDataPoints,
                        seriesIndex: d,
                        dataPointIndex: h,
                        w: r
                    }])
                }
            }, {
                key: "rotateAroundCenter",
                value: function (n) {
                    var i = {};
                    return n && typeof n.getBBox == "function" && (i = n.getBBox()),
                        {
                            x: i.x + i.width / 2,
                            y: i.y + i.height / 2
                        }
                }
            }, {
                key: "getTextRects",
                value: function (n, i, r, c) {
                    var d = !(arguments.length > 4 && arguments[4] !== void 0) || arguments[4]
                        , h = this.w
                        , f = this.drawText({
                        x: -200,
                        y: -200,
                        text: n,
                        textAnchor: "start",
                        fontSize: i,
                        fontFamily: r,
                        foreColor: "#fff",
                        opacity: 0
                    });
                    c && f.attr("transform", c),
                        h.globals.dom.Paper.add(f);
                    var m = f.bbox();
                    return d || (m = f.node.getBoundingClientRect()),
                        f.remove(),
                        {
                            width: m.width,
                            height: m.height
                        }
                }
            }, {
                key: "placeTextWithEllipsis",
                value: function (n, i, r) {
                    if (typeof n.getComputedTextLength == "function" && (n.textContent = i,
                    i.length > 0 && n.getComputedTextLength() >= r / 1.1)) {
                        for (var c = i.length - 3; c > 0; c -= 3)
                            if (n.getSubStringLength(0, c) <= r / 1.1)
                                return void (n.textContent = i.substring(0, c) + "...");
                        n.textContent = "."
                    }
                }
            }], [{
                key: "setAttrs",
                value: function (n, i) {
                    for (var r in i)
                        i.hasOwnProperty(r) && n.setAttribute(r, i[r])
                }
            }]),
                j
        }()
            , V = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "getStackedSeriesTotals",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : []
                        , i = this.w
                        , r = [];
                    if (i.globals.series.length === 0)
                        return r;
                    for (var c = 0; c < i.globals.series[i.globals.maxValsInArrayIndex].length; c++) {
                        for (var d = 0, h = 0; h < i.globals.series.length; h++)
                            i.globals.series[h][c] !== void 0 && n.indexOf(h) === -1 && (d += i.globals.series[h][c]);
                        r.push(d)
                    }
                    return r
                }
            }, {
                key: "getSeriesTotalByIndex",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
                    return n === null ? this.w.config.series.reduce(function (i, r) {
                        return i + r
                    }, 0) : this.w.globals.series[n].reduce(function (i, r) {
                        return i + r
                    }, 0)
                }
            }, {
                key: "getStackedSeriesTotalsByGroups",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = [];
                    return i.globals.seriesGroups.forEach(function (c) {
                        var d = [];
                        i.config.series.forEach(function (f, m) {
                            c.indexOf(f.name) > -1 && d.push(m)
                        });
                        var h = i.globals.series.map(function (f, m) {
                            return d.indexOf(m) === -1 ? m : -1
                        }).filter(function (f) {
                            return f !== -1
                        });
                        r.push(n.getStackedSeriesTotals(h))
                    }),
                        r
                }
            }, {
                key: "isSeriesNull",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
                    return (n === null ? this.w.config.series.filter(function (i) {
                        return i !== null
                    }) : this.w.config.series[n].data.filter(function (i) {
                        return i !== null
                    })).length === 0
                }
            }, {
                key: "seriesHaveSameValues",
                value: function (n) {
                    return this.w.globals.series[n].every(function (i, r, c) {
                        return i === c[0]
                    })
                }
            }, {
                key: "getCategoryLabels",
                value: function (n) {
                    var i = this.w
                        , r = n.slice();
                    return i.config.xaxis.convertedCatToNumeric && (r = n.map(function (c, d) {
                        return i.config.xaxis.labels.formatter(c - i.globals.minX + 1)
                    })),
                        r
                }
            }, {
                key: "getLargestSeries",
                value: function () {
                    var n = this.w;
                    n.globals.maxValsInArrayIndex = n.globals.series.map(function (i) {
                        return i.length
                    }).indexOf(Math.max.apply(Math, n.globals.series.map(function (i) {
                        return i.length
                    })))
                }
            }, {
                key: "getLargestMarkerSize",
                value: function () {
                    var n = this.w
                        , i = 0;
                    return n.globals.markers.size.forEach(function (r) {
                        i = Math.max(i, r)
                    }),
                    n.config.markers.discrete && n.config.markers.discrete.length && n.config.markers.discrete.forEach(function (r) {
                        i = Math.max(i, r.size)
                    }),
                    i > 0 && (i += n.config.markers.hover.sizeOffset + 1),
                        n.globals.markers.largestSize = i,
                        i
                }
            }, {
                key: "getSeriesTotals",
                value: function () {
                    var n = this.w;
                    n.globals.seriesTotals = n.globals.series.map(function (i, r) {
                        var c = 0;
                        if (Array.isArray(i))
                            for (var d = 0; d < i.length; d++)
                                c += i[d];
                        else
                            c += i;
                        return c
                    })
                }
            }, {
                key: "getSeriesTotalsXRange",
                value: function (n, i) {
                    var r = this.w;
                    return r.globals.series.map(function (c, d) {
                        for (var h = 0, f = 0; f < c.length; f++)
                            r.globals.seriesX[d][f] > n && r.globals.seriesX[d][f] < i && (h += c[f]);
                        return h
                    })
                }
            }, {
                key: "getPercentSeries",
                value: function () {
                    var n = this.w;
                    n.globals.seriesPercent = n.globals.series.map(function (i, r) {
                        var c = [];
                        if (Array.isArray(i))
                            for (var d = 0; d < i.length; d++) {
                                var h = n.globals.stackedSeriesTotals[d]
                                    , f = 0;
                                h && (f = 100 * i[d] / h),
                                    c.push(f)
                            }
                        else {
                            var m = 100 * i / n.globals.seriesTotals.reduce(function (x, S) {
                                return x + S
                            }, 0);
                            c.push(m)
                        }
                        return c
                    })
                }
            }, {
                key: "getCalculatedRatios",
                value: function () {
                    var n, i, r, c = this.w.globals, d = [], h = 0, f = [], m = .1, x = 0;
                    if (c.yRange = [],
                        c.isMultipleYAxis)
                        for (var S = 0; S < c.minYArr.length; S++)
                            c.yRange.push(Math.abs(c.minYArr[S] - c.maxYArr[S])),
                                f.push(0);
                    else
                        c.yRange.push(Math.abs(c.minY - c.maxY));
                    c.xRange = Math.abs(c.maxX - c.minX),
                        c.zRange = Math.abs(c.maxZ - c.minZ);
                    for (var _ = 0; _ < c.yRange.length; _++)
                        d.push(c.yRange[_] / c.gridHeight);
                    if (i = c.xRange / c.gridWidth,
                        n = c.yRange / c.gridWidth,
                        r = c.xRange / c.gridHeight,
                    (h = c.zRange / c.gridHeight * 16) || (h = 1),
                    c.minY !== Number.MIN_VALUE && Math.abs(c.minY) !== 0 && (c.hasNegs = !0),
                        c.isMultipleYAxis) {
                        f = [];
                        for (var k = 0; k < d.length; k++)
                            f.push(-c.minYArr[k] / d[k])
                    } else
                        f.push(-c.minY / d[0]),
                        c.minY !== Number.MIN_VALUE && Math.abs(c.minY) !== 0 && (m = -c.minY / n,
                            x = c.minX / i);
                    return {
                        yRatio: d,
                        invertedYRatio: n,
                        zRatio: h,
                        xRatio: i,
                        invertedXRatio: r,
                        baseLineInvertedY: m,
                        baseLineY: f,
                        baseLineX: x
                    }
                }
            }, {
                key: "getLogSeries",
                value: function (n) {
                    var i = this
                        , r = this.w;
                    return r.globals.seriesLog = n.map(function (c, d) {
                        return r.config.yaxis[d] && r.config.yaxis[d].logarithmic ? c.map(function (h) {
                            return h === null ? null : i.getLogVal(r.config.yaxis[d].logBase, h, d)
                        }) : c
                    }),
                        r.globals.invalidLogScale ? n : r.globals.seriesLog
                }
            }, {
                key: "getBaseLog",
                value: function (n, i) {
                    return Math.log(i) / Math.log(n)
                }
            }, {
                key: "getLogVal",
                value: function (n, i, r) {
                    if (i === 0)
                        return 0;
                    var c = this.w
                        , d = c.globals.minYArr[r] === 0 ? -1 : this.getBaseLog(n, c.globals.minYArr[r])
                        , h = (c.globals.maxYArr[r] === 0 ? 0 : this.getBaseLog(n, c.globals.maxYArr[r])) - d;
                    return i < 1 ? i / h : (this.getBaseLog(n, i) - d) / h
                }
            }, {
                key: "getLogYRatios",
                value: function (n) {
                    var i = this
                        , r = this.w
                        , c = this.w.globals;
                    return c.yLogRatio = n.slice(),
                        c.logYRange = c.yRange.map(function (d, h) {
                            if (r.config.yaxis[h] && i.w.config.yaxis[h].logarithmic) {
                                var f, m = -Number.MAX_VALUE, x = Number.MIN_VALUE;
                                return c.seriesLog.forEach(function (S, _) {
                                    S.forEach(function (k) {
                                        r.config.yaxis[_] && r.config.yaxis[_].logarithmic && (m = Math.max(k, m),
                                            x = Math.min(k, x))
                                    })
                                }),
                                    f = Math.pow(c.yRange[h], Math.abs(x - m) / c.yRange[h]),
                                    c.yLogRatio[h] = f / c.gridHeight,
                                    f
                            }
                        }),
                        c.invalidLogScale ? n.slice() : c.yLogRatio
                }
            }], [{
                key: "checkComboSeries",
                value: function (n) {
                    var i = !1
                        , r = 0
                        , c = 0;
                    return n.length && n[0].type !== void 0 && n.forEach(function (d) {
                        d.type !== "bar" && d.type !== "column" && d.type !== "candlestick" && d.type !== "boxPlot" || r++,
                        d.type !== void 0 && c++
                    }),
                    c > 0 && (i = !0),
                        {
                            comboBarCount: r,
                            comboCharts: i
                        }
                }
            }, {
                key: "extendArrayProps",
                value: function (n, i, r) {
                    return i.yaxis && (i = n.extendYAxis(i, r)),
                    i.annotations && (i.annotations.yaxis && (i = n.extendYAxisAnnotations(i)),
                    i.annotations.xaxis && (i = n.extendXAxisAnnotations(i)),
                    i.annotations.points && (i = n.extendPointAnnotations(i))),
                        i
                }
            }]),
                j
        }()
            , G = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.annoCtx = n
            }

            return p(j, [{
                key: "setOrientations",
                value: function (n) {
                    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null
                        , r = this.w;
                    if (n.label.orientation === "vertical") {
                        var c = i !== null ? i : 0
                            ,
                            d = r.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(c, "']"));
                        if (d !== null) {
                            var h = d.getBoundingClientRect();
                            d.setAttribute("x", parseFloat(d.getAttribute("x")) - h.height + 4),
                                n.label.position === "top" ? d.setAttribute("y", parseFloat(d.getAttribute("y")) + h.width) : d.setAttribute("y", parseFloat(d.getAttribute("y")) - h.width);
                            var f = this.annoCtx.graphics.rotateAroundCenter(d)
                                , m = f.x
                                , x = f.y;
                            d.setAttribute("transform", "rotate(-90 ".concat(m, " ").concat(x, ")"))
                        }
                    }
                }
            }, {
                key: "addBackgroundToAnno",
                value: function (n, i) {
                    var r = this.w;
                    if (!n || i.label.text === void 0 || i.label.text !== void 0 && !String(i.label.text).trim())
                        return null;
                    var c = r.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect()
                        , d = n.getBoundingClientRect()
                        , h = i.label.style.padding.left
                        , f = i.label.style.padding.right
                        , m = i.label.style.padding.top
                        , x = i.label.style.padding.bottom;
                    i.label.orientation === "vertical" && (m = i.label.style.padding.left,
                        x = i.label.style.padding.right,
                        h = i.label.style.padding.top,
                        f = i.label.style.padding.bottom);
                    var S = d.left - c.left - h
                        , _ = d.top - c.top - m
                        ,
                        k = this.annoCtx.graphics.drawRect(S - r.globals.barPadForNumericAxis, _, d.width + h + f, d.height + m + x, i.label.borderRadius, i.label.style.background, 1, i.label.borderWidth, i.label.borderColor, 0);
                    return i.id && k.node.classList.add(i.id),
                        k
                }
            }, {
                key: "annotationsBackground",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = function (c, d, h) {
                        var f = i.globals.dom.baseEl.querySelector(".apexcharts-".concat(h, "-annotations .apexcharts-").concat(h, "-annotation-label[rel='").concat(d, "']"));
                        if (f) {
                            var m = f.parentNode
                                , x = n.addBackgroundToAnno(f, c);
                            x && (m.insertBefore(x.node, f),
                            c.label.mouseEnter && x.node.addEventListener("mouseenter", c.label.mouseEnter.bind(n, c)),
                            c.label.mouseLeave && x.node.addEventListener("mouseleave", c.label.mouseLeave.bind(n, c)),
                            c.label.click && x.node.addEventListener("click", c.label.click.bind(n, c)))
                        }
                    };
                    i.config.annotations.xaxis.map(function (c, d) {
                        r(c, d, "xaxis")
                    }),
                        i.config.annotations.yaxis.map(function (c, d) {
                            r(c, d, "yaxis")
                        }),
                        i.config.annotations.points.map(function (c, d) {
                            r(c, d, "point")
                        })
                }
            }, {
                key: "getY1Y2",
                value: function (n, i) {
                    var r, c = n === "y1" ? i.y : i.y2, d = this.w;
                    if (this.annoCtx.invertAxis) {
                        var h = d.globals.labels.indexOf(c);
                        d.config.xaxis.convertedCatToNumeric && (h = d.globals.categoryLabels.indexOf(c));
                        var f = d.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (h + 1) + ")");
                        f && (r = parseFloat(f.getAttribute("y"))),
                        i.seriesIndex !== void 0 && d.globals.barHeight && (r = r - d.globals.barHeight / 2 * (d.globals.series.length - 1) + d.globals.barHeight * i.seriesIndex)
                    } else {
                        var m;
                        d.config.yaxis[i.yAxisIndex].logarithmic ? m = (c = new V(this.annoCtx.ctx).getLogVal(c, i.yAxisIndex)) / d.globals.yLogRatio[i.yAxisIndex] : m = (c - d.globals.minYArr[i.yAxisIndex]) / (d.globals.yRange[i.yAxisIndex] / d.globals.gridHeight),
                            r = d.globals.gridHeight - m,
                        !i.marker || i.y !== void 0 && i.y !== null || (r = 0),
                        d.config.yaxis[i.yAxisIndex] && d.config.yaxis[i.yAxisIndex].reversed && (r = m)
                    }
                    return typeof c == "string" && c.indexOf("px") > -1 && (r = parseFloat(c)),
                        r
                }
            }, {
                key: "getX1X2",
                value: function (n, i) {
                    var r = this.w
                        , c = this.annoCtx.invertAxis ? r.globals.minY : r.globals.minX
                        , d = this.annoCtx.invertAxis ? r.globals.maxY : r.globals.maxX
                        , h = this.annoCtx.invertAxis ? r.globals.yRange[0] : r.globals.xRange
                        , f = (i.x - c) / (h / r.globals.gridWidth);
                    this.annoCtx.inversedReversedAxis && (f = (d - i.x) / (h / r.globals.gridWidth)),
                    r.config.xaxis.type !== "category" && !r.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || r.globals.dataFormatXNumeric || (f = this.getStringX(i.x));
                    var m = (i.x2 - c) / (h / r.globals.gridWidth);
                    return this.annoCtx.inversedReversedAxis && (m = (d - i.x2) / (h / r.globals.gridWidth)),
                    r.config.xaxis.type !== "category" && !r.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || r.globals.dataFormatXNumeric || (m = this.getStringX(i.x2)),
                    i.x !== void 0 && i.x !== null || !i.marker || (f = r.globals.gridWidth),
                    n === "x1" && typeof i.x == "string" && i.x.indexOf("px") > -1 && (f = parseFloat(i.x)),
                    n === "x2" && typeof i.x2 == "string" && i.x2.indexOf("px") > -1 && (m = parseFloat(i.x2)),
                    i.seriesIndex !== void 0 && r.globals.barWidth && !this.annoCtx.invertAxis && (f = f - r.globals.barWidth / 2 * (r.globals.series.length - 1) + r.globals.barWidth * i.seriesIndex),
                        n === "x1" ? f : m
                }
            }, {
                key: "getStringX",
                value: function (n) {
                    var i = this.w
                        , r = n;
                    i.config.xaxis.convertedCatToNumeric && i.globals.categoryLabels.length && (n = i.globals.categoryLabels.indexOf(n) + 1);
                    var c = i.globals.labels.indexOf(n)
                        ,
                        d = i.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (c + 1) + ")");
                    return d && (r = parseFloat(d.getAttribute("x"))),
                        r
                }
            }]),
                j
        }()
            , ie = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.annoCtx = n,
                    this.invertAxis = this.annoCtx.invertAxis,
                    this.helpers = new G(this.annoCtx)
            }

            return p(j, [{
                key: "addXaxisAnnotation",
                value: function (n, i, r) {
                    var c, d = this.w, h = this.helpers.getX1X2("x1", n), f = n.label.text, m = n.strokeDashArray;
                    if (M.isNumber(h)) {
                        if (n.x2 === null || n.x2 === void 0) {
                            var x = this.annoCtx.graphics.drawLine(h + n.offsetX, 0 + n.offsetY, h + n.offsetX, d.globals.gridHeight + n.offsetY, n.borderColor, m, n.borderWidth);
                            i.appendChild(x.node),
                            n.id && x.node.classList.add(n.id)
                        } else {
                            if ((c = this.helpers.getX1X2("x2", n)) < h) {
                                var S = h;
                                h = c,
                                    c = S
                            }
                            var _ = this.annoCtx.graphics.drawRect(h + n.offsetX, 0 + n.offsetY, c - h, d.globals.gridHeight + n.offsetY, 0, n.fillColor, n.opacity, 1, n.borderColor, m);
                            _.node.classList.add("apexcharts-annotation-rect"),
                                _.attr("clip-path", "url(#gridRectMask".concat(d.globals.cuid, ")")),
                                i.appendChild(_.node),
                            n.id && _.node.classList.add(n.id)
                        }
                        var k = this.annoCtx.graphics.getTextRects(f, parseFloat(n.label.style.fontSize))
                            ,
                            L = n.label.position === "top" ? 4 : n.label.position === "center" ? d.globals.gridHeight / 2 + (n.label.orientation === "vertical" ? k.width / 2 : 0) : d.globals.gridHeight
                            , N = this.annoCtx.graphics.drawText({
                                x: h + n.label.offsetX,
                                y: L + n.label.offsetY - (n.label.orientation === "vertical" ? n.label.position === "top" ? k.width / 2 - 12 : -k.width / 2 : 0),
                                text: f,
                                textAnchor: n.label.textAnchor,
                                fontSize: n.label.style.fontSize,
                                fontFamily: n.label.style.fontFamily,
                                fontWeight: n.label.style.fontWeight,
                                foreColor: n.label.style.color,
                                cssClass: "apexcharts-xaxis-annotation-label ".concat(n.label.style.cssClass, " ").concat(n.id ? n.id : "")
                            });
                        N.attr({
                            rel: r
                        }),
                            i.appendChild(N.node),
                            this.annoCtx.helpers.setOrientations(n, r)
                    }
                }
            }, {
                key: "drawXAxisAnnotations",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = this.annoCtx.graphics.group({
                        class: "apexcharts-xaxis-annotations"
                    });
                    return i.config.annotations.xaxis.map(function (c, d) {
                        n.addXaxisAnnotation(c, r.node, d)
                    }),
                        r
                }
            }]),
                j
        }()
            , te = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.annoCtx = n,
                    this.helpers = new G(this.annoCtx)
            }

            return p(j, [{
                key: "addYaxisAnnotation",
                value: function (n, i, r) {
                    var c, d = this.w, h = n.strokeDashArray, f = this.helpers.getY1Y2("y1", n), m = n.label.text;
                    if (n.y2 === null || n.y2 === void 0) {
                        var x = this.annoCtx.graphics.drawLine(0 + n.offsetX, f + n.offsetY, this._getYAxisAnnotationWidth(n), f + n.offsetY, n.borderColor, h, n.borderWidth);
                        i.appendChild(x.node),
                        n.id && x.node.classList.add(n.id)
                    } else {
                        if ((c = this.helpers.getY1Y2("y2", n)) > f) {
                            var S = f;
                            f = c,
                                c = S
                        }
                        var _ = this.annoCtx.graphics.drawRect(0 + n.offsetX, c + n.offsetY, this._getYAxisAnnotationWidth(n), f - c, 0, n.fillColor, n.opacity, 1, n.borderColor, h);
                        _.node.classList.add("apexcharts-annotation-rect"),
                            _.attr("clip-path", "url(#gridRectMask".concat(d.globals.cuid, ")")),
                            i.appendChild(_.node),
                        n.id && _.node.classList.add(n.id)
                    }
                    var k = n.label.position === "right" ? d.globals.gridWidth : n.label.position === "center" ? d.globals.gridWidth / 2 : 0
                        , L = this.annoCtx.graphics.drawText({
                        x: k + n.label.offsetX,
                        y: (c ?? f) + n.label.offsetY - 3,
                        text: m,
                        textAnchor: n.label.textAnchor,
                        fontSize: n.label.style.fontSize,
                        fontFamily: n.label.style.fontFamily,
                        fontWeight: n.label.style.fontWeight,
                        foreColor: n.label.style.color,
                        cssClass: "apexcharts-yaxis-annotation-label ".concat(n.label.style.cssClass, " ").concat(n.id ? n.id : "")
                    });
                    L.attr({
                        rel: r
                    }),
                        i.appendChild(L.node)
                }
            }, {
                key: "_getYAxisAnnotationWidth",
                value: function (n) {
                    var i = this.w;
                    return i.globals.gridWidth,
                    (n.width.indexOf("%") > -1 ? i.globals.gridWidth * parseInt(n.width, 10) / 100 : parseInt(n.width, 10)) + n.offsetX
                }
            }, {
                key: "drawYAxisAnnotations",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = this.annoCtx.graphics.group({
                        class: "apexcharts-yaxis-annotations"
                    });
                    return i.config.annotations.yaxis.map(function (c, d) {
                        n.addYaxisAnnotation(c, r.node, d)
                    }),
                        r
                }
            }]),
                j
        }()
            , ne = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.annoCtx = n,
                    this.helpers = new G(this.annoCtx)
            }

            return p(j, [{
                key: "addPointAnnotation",
                value: function (n, i, r) {
                    this.w;
                    var c = this.helpers.getX1X2("x1", n)
                        , d = this.helpers.getY1Y2("y1", n);
                    if (M.isNumber(c)) {
                        var h = {
                            pSize: n.marker.size,
                            pointStrokeWidth: n.marker.strokeWidth,
                            pointFillColor: n.marker.fillColor,
                            pointStrokeColor: n.marker.strokeColor,
                            shape: n.marker.shape,
                            pRadius: n.marker.radius,
                            class: "apexcharts-point-annotation-marker ".concat(n.marker.cssClass, " ").concat(n.id ? n.id : "")
                        }
                            , f = this.annoCtx.graphics.drawMarker(c + n.marker.offsetX, d + n.marker.offsetY, h);
                        i.appendChild(f.node);
                        var m = n.label.text ? n.label.text : ""
                            , x = this.annoCtx.graphics.drawText({
                            x: c + n.label.offsetX,
                            y: d + n.label.offsetY - n.marker.size - parseFloat(n.label.style.fontSize) / 1.6,
                            text: m,
                            textAnchor: n.label.textAnchor,
                            fontSize: n.label.style.fontSize,
                            fontFamily: n.label.style.fontFamily,
                            fontWeight: n.label.style.fontWeight,
                            foreColor: n.label.style.color,
                            cssClass: "apexcharts-point-annotation-label ".concat(n.label.style.cssClass, " ").concat(n.id ? n.id : "")
                        });
                        if (x.attr({
                            rel: r
                        }),
                            i.appendChild(x.node),
                            n.customSVG.SVG) {
                            var S = this.annoCtx.graphics.group({
                                class: "apexcharts-point-annotations-custom-svg " + n.customSVG.cssClass
                            });
                            S.attr({
                                transform: "translate(".concat(c + n.customSVG.offsetX, ", ").concat(d + n.customSVG.offsetY, ")")
                            }),
                                S.node.innerHTML = n.customSVG.SVG,
                                i.appendChild(S.node)
                        }
                        if (n.image.path) {
                            var _ = n.image.width ? n.image.width : 20
                                , k = n.image.height ? n.image.height : 20;
                            f = this.annoCtx.addImage({
                                x: c + n.image.offsetX - _ / 2,
                                y: d + n.image.offsetY - k / 2,
                                width: _,
                                height: k,
                                path: n.image.path,
                                appendTo: ".apexcharts-point-annotations"
                            })
                        }
                        n.mouseEnter && f.node.addEventListener("mouseenter", n.mouseEnter.bind(this, n)),
                        n.mouseLeave && f.node.addEventListener("mouseleave", n.mouseLeave.bind(this, n)),
                        n.click && f.node.addEventListener("click", n.click.bind(this, n))
                    }
                }
            }, {
                key: "drawPointAnnotations",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = this.annoCtx.graphics.group({
                        class: "apexcharts-point-annotations"
                    });
                    return i.config.annotations.points.map(function (c, d) {
                        n.addPointAnnotation(c, r.node, d)
                    }),
                        r
                }
            }]),
                j
        }()
            , le = {
            name: "en",
            options: {
                months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                toolbar: {
                    exportToSVG: "Download SVG",
                    exportToPNG: "Download PNG",
                    exportToCSV: "Download CSV",
                    menu: "Menu",
                    selection: "Selection",
                    selectionZoom: "Selection Zoom",
                    zoomIn: "Zoom In",
                    zoomOut: "Zoom Out",
                    pan: "Panning",
                    reset: "Reset Zoom"
                }
            }
        }
            , oe = function () {
            function j() {
                l(this, j),
                    this.yAxis = {
                        show: !0,
                        showAlways: !1,
                        showForNullSeries: !0,
                        seriesName: void 0,
                        opposite: !1,
                        reversed: !1,
                        logarithmic: !1,
                        logBase: 10,
                        tickAmount: void 0,
                        stepSize: void 0,
                        forceNiceScale: !1,
                        max: void 0,
                        min: void 0,
                        floating: !1,
                        decimalsInFloat: void 0,
                        labels: {
                            show: !0,
                            minWidth: 0,
                            maxWidth: 160,
                            offsetX: 0,
                            offsetY: 0,
                            align: void 0,
                            rotate: 0,
                            padding: 20,
                            style: {
                                colors: [],
                                fontSize: "11px",
                                fontWeight: 400,
                                fontFamily: void 0,
                                cssClass: ""
                            },
                            formatter: void 0
                        },
                        axisBorder: {
                            show: !1,
                            color: "#e0e0e0",
                            width: 1,
                            offsetX: 0,
                            offsetY: 0
                        },
                        axisTicks: {
                            show: !1,
                            color: "#e0e0e0",
                            width: 6,
                            offsetX: 0,
                            offsetY: 0
                        },
                        title: {
                            text: void 0,
                            rotate: -90,
                            offsetY: 0,
                            offsetX: 0,
                            style: {
                                color: void 0,
                                fontSize: "11px",
                                fontWeight: 900,
                                fontFamily: void 0,
                                cssClass: ""
                            }
                        },
                        tooltip: {
                            enabled: !1,
                            offsetX: 0
                        },
                        crosshairs: {
                            show: !0,
                            position: "front",
                            stroke: {
                                color: "#b6b6b6",
                                width: 1,
                                dashArray: 0
                            }
                        }
                    },
                    this.pointAnnotation = {
                        id: void 0,
                        x: 0,
                        y: null,
                        yAxisIndex: 0,
                        seriesIndex: void 0,
                        mouseEnter: void 0,
                        mouseLeave: void 0,
                        click: void 0,
                        marker: {
                            size: 4,
                            fillColor: "#fff",
                            strokeWidth: 2,
                            strokeColor: "#333",
                            shape: "circle",
                            offsetX: 0,
                            offsetY: 0,
                            radius: 2,
                            cssClass: ""
                        },
                        label: {
                            borderColor: "#c2c2c2",
                            borderWidth: 1,
                            borderRadius: 2,
                            text: void 0,
                            textAnchor: "middle",
                            offsetX: 0,
                            offsetY: 0,
                            mouseEnter: void 0,
                            mouseLeave: void 0,
                            click: void 0,
                            style: {
                                background: "#fff",
                                color: void 0,
                                fontSize: "11px",
                                fontFamily: void 0,
                                fontWeight: 400,
                                cssClass: "",
                                padding: {
                                    left: 5,
                                    right: 5,
                                    top: 2,
                                    bottom: 2
                                }
                            }
                        },
                        customSVG: {
                            SVG: void 0,
                            cssClass: void 0,
                            offsetX: 0,
                            offsetY: 0
                        },
                        image: {
                            path: void 0,
                            width: 20,
                            height: 20,
                            offsetX: 0,
                            offsetY: 0
                        }
                    },
                    this.yAxisAnnotation = {
                        id: void 0,
                        y: 0,
                        y2: null,
                        strokeDashArray: 1,
                        fillColor: "#c2c2c2",
                        borderColor: "#c2c2c2",
                        borderWidth: 1,
                        opacity: .3,
                        offsetX: 0,
                        offsetY: 0,
                        width: "100%",
                        yAxisIndex: 0,
                        label: {
                            borderColor: "#c2c2c2",
                            borderWidth: 1,
                            borderRadius: 2,
                            text: void 0,
                            textAnchor: "end",
                            position: "right",
                            offsetX: 0,
                            offsetY: -3,
                            mouseEnter: void 0,
                            mouseLeave: void 0,
                            click: void 0,
                            style: {
                                background: "#fff",
                                color: void 0,
                                fontSize: "11px",
                                fontFamily: void 0,
                                fontWeight: 400,
                                cssClass: "",
                                padding: {
                                    left: 5,
                                    right: 5,
                                    top: 2,
                                    bottom: 2
                                }
                            }
                        }
                    },
                    this.xAxisAnnotation = {
                        id: void 0,
                        x: 0,
                        x2: null,
                        strokeDashArray: 1,
                        fillColor: "#c2c2c2",
                        borderColor: "#c2c2c2",
                        borderWidth: 1,
                        opacity: .3,
                        offsetX: 0,
                        offsetY: 0,
                        label: {
                            borderColor: "#c2c2c2",
                            borderWidth: 1,
                            borderRadius: 2,
                            text: void 0,
                            textAnchor: "middle",
                            orientation: "vertical",
                            position: "top",
                            offsetX: 0,
                            offsetY: 0,
                            mouseEnter: void 0,
                            mouseLeave: void 0,
                            click: void 0,
                            style: {
                                background: "#fff",
                                color: void 0,
                                fontSize: "11px",
                                fontFamily: void 0,
                                fontWeight: 400,
                                cssClass: "",
                                padding: {
                                    left: 5,
                                    right: 5,
                                    top: 2,
                                    bottom: 2
                                }
                            }
                        }
                    },
                    this.text = {
                        x: 0,
                        y: 0,
                        text: "",
                        textAnchor: "start",
                        foreColor: void 0,
                        fontSize: "13px",
                        fontFamily: void 0,
                        fontWeight: 400,
                        appendTo: ".apexcharts-annotations",
                        backgroundColor: "transparent",
                        borderColor: "#c2c2c2",
                        borderRadius: 0,
                        borderWidth: 0,
                        paddingLeft: 4,
                        paddingRight: 4,
                        paddingTop: 2,
                        paddingBottom: 2
                    }
            }

            return p(j, [{
                key: "init",
                value: function () {
                    return {
                        annotations: {
                            yaxis: [this.yAxisAnnotation],
                            xaxis: [this.xAxisAnnotation],
                            points: [this.pointAnnotation],
                            texts: [],
                            images: [],
                            shapes: []
                        },
                        chart: {
                            animations: {
                                enabled: !0,
                                easing: "easeinout",
                                speed: 800,
                                animateGradually: {
                                    delay: 150,
                                    enabled: !0
                                },
                                dynamicAnimation: {
                                    enabled: !0,
                                    speed: 350
                                }
                            },
                            background: "transparent",
                            locales: [le],
                            defaultLocale: "en",
                            dropShadow: {
                                enabled: !1,
                                enabledOnSeries: void 0,
                                top: 2,
                                left: 2,
                                blur: 4,
                                color: "#000",
                                opacity: .35
                            },
                            events: {
                                animationEnd: void 0,
                                beforeMount: void 0,
                                mounted: void 0,
                                updated: void 0,
                                click: void 0,
                                mouseMove: void 0,
                                mouseLeave: void 0,
                                xAxisLabelClick: void 0,
                                legendClick: void 0,
                                markerClick: void 0,
                                selection: void 0,
                                dataPointSelection: void 0,
                                dataPointMouseEnter: void 0,
                                dataPointMouseLeave: void 0,
                                beforeZoom: void 0,
                                beforeResetZoom: void 0,
                                zoomed: void 0,
                                scrolled: void 0,
                                brushScrolled: void 0
                            },
                            foreColor: "#373d3f",
                            fontFamily: "Helvetica, Arial, sans-serif",
                            height: "auto",
                            parentHeightOffset: 15,
                            redrawOnParentResize: !0,
                            redrawOnWindowResize: !0,
                            id: void 0,
                            group: void 0,
                            nonce: void 0,
                            offsetX: 0,
                            offsetY: 0,
                            selection: {
                                enabled: !1,
                                type: "x",
                                fill: {
                                    color: "#24292e",
                                    opacity: .1
                                },
                                stroke: {
                                    width: 1,
                                    color: "#24292e",
                                    opacity: .4,
                                    dashArray: 3
                                },
                                xaxis: {
                                    min: void 0,
                                    max: void 0
                                },
                                yaxis: {
                                    min: void 0,
                                    max: void 0
                                }
                            },
                            sparkline: {
                                enabled: !1
                            },
                            brush: {
                                enabled: !1,
                                autoScaleYaxis: !0,
                                target: void 0,
                                targets: void 0
                            },
                            stacked: !1,
                            stackOnlyBar: !0,
                            stackType: "normal",
                            toolbar: {
                                show: !0,
                                offsetX: 0,
                                offsetY: 0,
                                tools: {
                                    download: !0,
                                    selection: !0,
                                    zoom: !0,
                                    zoomin: !0,
                                    zoomout: !0,
                                    pan: !0,
                                    reset: !0,
                                    customIcons: []
                                },
                                export: {
                                    csv: {
                                        filename: void 0,
                                        columnDelimiter: ",",
                                        headerCategory: "category",
                                        headerValue: "value",
                                        dateFormatter: function (n) {
                                            return new Date(n).toDateString()
                                        }
                                    },
                                    png: {
                                        filename: void 0
                                    },
                                    svg: {
                                        filename: void 0
                                    }
                                },
                                autoSelected: "zoom"
                            },
                            type: "line",
                            width: "100%",
                            zoom: {
                                enabled: !0,
                                type: "x",
                                autoScaleYaxis: !1,
                                zoomedArea: {
                                    fill: {
                                        color: "#90CAF9",
                                        opacity: .4
                                    },
                                    stroke: {
                                        color: "#0D47A1",
                                        opacity: .4,
                                        width: 1
                                    }
                                }
                            }
                        },
                        plotOptions: {
                            area: {
                                fillTo: "origin"
                            },
                            bar: {
                                horizontal: !1,
                                columnWidth: "70%",
                                barHeight: "70%",
                                distributed: !1,
                                borderRadius: 0,
                                borderRadiusApplication: "around",
                                borderRadiusWhenStacked: "last",
                                rangeBarOverlap: !0,
                                rangeBarGroupRows: !1,
                                hideZeroBarsWhenGrouped: !1,
                                isDumbbell: !1,
                                dumbbellColors: void 0,
                                isFunnel: !1,
                                isFunnel3d: !0,
                                colors: {
                                    ranges: [],
                                    backgroundBarColors: [],
                                    backgroundBarOpacity: 1,
                                    backgroundBarRadius: 0
                                },
                                dataLabels: {
                                    position: "top",
                                    maxItems: 100,
                                    hideOverflowingLabels: !0,
                                    orientation: "horizontal",
                                    total: {
                                        enabled: !1,
                                        formatter: void 0,
                                        offsetX: 0,
                                        offsetY: 0,
                                        style: {
                                            color: "#373d3f",
                                            fontSize: "12px",
                                            fontFamily: void 0,
                                            fontWeight: 600
                                        }
                                    }
                                }
                            },
                            bubble: {
                                zScaling: !0,
                                minBubbleRadius: void 0,
                                maxBubbleRadius: void 0
                            },
                            candlestick: {
                                colors: {
                                    upward: "#00B746",
                                    downward: "#EF403C"
                                },
                                wick: {
                                    useFillColor: !0
                                }
                            },
                            boxPlot: {
                                colors: {
                                    upper: "#00E396",
                                    lower: "#008FFB"
                                }
                            },
                            heatmap: {
                                radius: 2,
                                enableShades: !0,
                                shadeIntensity: .5,
                                reverseNegativeShade: !1,
                                distributed: !1,
                                useFillColorAsStroke: !1,
                                colorScale: {
                                    inverse: !1,
                                    ranges: [],
                                    min: void 0,
                                    max: void 0
                                }
                            },
                            treemap: {
                                enableShades: !0,
                                shadeIntensity: .5,
                                distributed: !1,
                                reverseNegativeShade: !1,
                                useFillColorAsStroke: !1,
                                borderRadius: 4,
                                dataLabels: {
                                    format: "scale"
                                },
                                colorScale: {
                                    inverse: !1,
                                    ranges: [],
                                    min: void 0,
                                    max: void 0
                                }
                            },
                            radialBar: {
                                inverseOrder: !1,
                                startAngle: 0,
                                endAngle: 360,
                                offsetX: 0,
                                offsetY: 0,
                                hollow: {
                                    margin: 5,
                                    size: "50%",
                                    background: "transparent",
                                    image: void 0,
                                    imageWidth: 150,
                                    imageHeight: 150,
                                    imageOffsetX: 0,
                                    imageOffsetY: 0,
                                    imageClipped: !0,
                                    position: "front",
                                    dropShadow: {
                                        enabled: !1,
                                        top: 0,
                                        left: 0,
                                        blur: 3,
                                        color: "#000",
                                        opacity: .5
                                    }
                                },
                                track: {
                                    show: !0,
                                    startAngle: void 0,
                                    endAngle: void 0,
                                    background: "#f2f2f2",
                                    strokeWidth: "97%",
                                    opacity: 1,
                                    margin: 5,
                                    dropShadow: {
                                        enabled: !1,
                                        top: 0,
                                        left: 0,
                                        blur: 3,
                                        color: "#000",
                                        opacity: .5
                                    }
                                },
                                dataLabels: {
                                    show: !0,
                                    name: {
                                        show: !0,
                                        fontSize: "16px",
                                        fontFamily: void 0,
                                        fontWeight: 600,
                                        color: void 0,
                                        offsetY: 0,
                                        formatter: function (n) {
                                            return n
                                        }
                                    },
                                    value: {
                                        show: !0,
                                        fontSize: "14px",
                                        fontFamily: void 0,
                                        fontWeight: 400,
                                        color: void 0,
                                        offsetY: 16,
                                        formatter: function (n) {
                                            return n + "%"
                                        }
                                    },
                                    total: {
                                        show: !1,
                                        label: "Total",
                                        fontSize: "16px",
                                        fontWeight: 600,
                                        fontFamily: void 0,
                                        color: void 0,
                                        formatter: function (n) {
                                            return n.globals.seriesTotals.reduce(function (i, r) {
                                                return i + r
                                            }, 0) / n.globals.series.length + "%"
                                        }
                                    }
                                },
                                barLabels: {
                                    enabled: !1,
                                    margin: 5,
                                    useSeriesColors: !0,
                                    fontFamily: void 0,
                                    fontWeight: 600,
                                    fontSize: "16px",
                                    formatter: function (n) {
                                        return n
                                    },
                                    onClick: void 0
                                }
                            },
                            pie: {
                                customScale: 1,
                                offsetX: 0,
                                offsetY: 0,
                                startAngle: 0,
                                endAngle: 360,
                                expandOnClick: !0,
                                dataLabels: {
                                    offset: 0,
                                    minAngleToShowLabel: 10
                                },
                                donut: {
                                    size: "65%",
                                    background: "transparent",
                                    labels: {
                                        show: !1,
                                        name: {
                                            show: !0,
                                            fontSize: "16px",
                                            fontFamily: void 0,
                                            fontWeight: 600,
                                            color: void 0,
                                            offsetY: -10,
                                            formatter: function (n) {
                                                return n
                                            }
                                        },
                                        value: {
                                            show: !0,
                                            fontSize: "20px",
                                            fontFamily: void 0,
                                            fontWeight: 400,
                                            color: void 0,
                                            offsetY: 10,
                                            formatter: function (n) {
                                                return n
                                            }
                                        },
                                        total: {
                                            show: !1,
                                            showAlways: !1,
                                            label: "Total",
                                            fontSize: "16px",
                                            fontWeight: 400,
                                            fontFamily: void 0,
                                            color: void 0,
                                            formatter: function (n) {
                                                return n.globals.seriesTotals.reduce(function (i, r) {
                                                    return i + r
                                                }, 0)
                                            }
                                        }
                                    }
                                }
                            },
                            polarArea: {
                                rings: {
                                    strokeWidth: 1,
                                    strokeColor: "#e8e8e8"
                                },
                                spokes: {
                                    strokeWidth: 1,
                                    connectorColors: "#e8e8e8"
                                }
                            },
                            radar: {
                                size: void 0,
                                offsetX: 0,
                                offsetY: 0,
                                polygons: {
                                    strokeWidth: 1,
                                    strokeColors: "#e8e8e8",
                                    connectorColors: "#e8e8e8",
                                    fill: {
                                        colors: void 0
                                    }
                                }
                            }
                        },
                        colors: void 0,
                        dataLabels: {
                            enabled: !0,
                            enabledOnSeries: void 0,
                            formatter: function (n) {
                                return n !== null ? n : ""
                            },
                            textAnchor: "middle",
                            distributed: !1,
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                fontSize: "12px",
                                fontFamily: void 0,
                                fontWeight: 600,
                                colors: void 0
                            },
                            background: {
                                enabled: !0,
                                foreColor: "#fff",
                                borderRadius: 2,
                                padding: 4,
                                opacity: .9,
                                borderWidth: 1,
                                borderColor: "#fff",
                                dropShadow: {
                                    enabled: !1,
                                    top: 1,
                                    left: 1,
                                    blur: 1,
                                    color: "#000",
                                    opacity: .45
                                }
                            },
                            dropShadow: {
                                enabled: !1,
                                top: 1,
                                left: 1,
                                blur: 1,
                                color: "#000",
                                opacity: .45
                            }
                        },
                        fill: {
                            type: "solid",
                            colors: void 0,
                            opacity: .85,
                            gradient: {
                                shade: "dark",
                                type: "horizontal",
                                shadeIntensity: .5,
                                gradientToColors: void 0,
                                inverseColors: !0,
                                opacityFrom: 1,
                                opacityTo: 1,
                                stops: [0, 50, 100],
                                colorStops: []
                            },
                            image: {
                                src: [],
                                width: void 0,
                                height: void 0
                            },
                            pattern: {
                                style: "squares",
                                width: 6,
                                height: 6,
                                strokeWidth: 2
                            }
                        },
                        forecastDataPoints: {
                            count: 0,
                            fillOpacity: .5,
                            strokeWidth: void 0,
                            dashArray: 4
                        },
                        grid: {
                            show: !0,
                            borderColor: "#e0e0e0",
                            strokeDashArray: 0,
                            position: "back",
                            xaxis: {
                                lines: {
                                    show: !1
                                }
                            },
                            yaxis: {
                                lines: {
                                    show: !0
                                }
                            },
                            row: {
                                colors: void 0,
                                opacity: .5
                            },
                            column: {
                                colors: void 0,
                                opacity: .5
                            },
                            padding: {
                                top: 0,
                                right: 10,
                                bottom: 0,
                                left: 12
                            }
                        },
                        labels: [],
                        legend: {
                            show: !0,
                            showForSingleSeries: !1,
                            showForNullSeries: !0,
                            showForZeroSeries: !0,
                            floating: !1,
                            position: "bottom",
                            horizontalAlign: "center",
                            inverseOrder: !1,
                            fontSize: "12px",
                            fontFamily: void 0,
                            fontWeight: 400,
                            width: void 0,
                            height: void 0,
                            formatter: void 0,
                            tooltipHoverFormatter: void 0,
                            offsetX: -20,
                            offsetY: 4,
                            customLegendItems: [],
                            labels: {
                                colors: void 0,
                                useSeriesColors: !1
                            },
                            markers: {
                                width: 12,
                                height: 12,
                                strokeWidth: 0,
                                fillColors: void 0,
                                strokeColor: "#fff",
                                radius: 12,
                                customHTML: void 0,
                                offsetX: 0,
                                offsetY: 0,
                                onClick: void 0
                            },
                            itemMargin: {
                                horizontal: 5,
                                vertical: 2
                            },
                            onItemClick: {
                                toggleDataSeries: !0
                            },
                            onItemHover: {
                                highlightDataSeries: !0
                            }
                        },
                        markers: {
                            discrete: [],
                            size: 0,
                            colors: void 0,
                            strokeColors: "#fff",
                            strokeWidth: 2,
                            strokeOpacity: .9,
                            strokeDashArray: 0,
                            fillOpacity: 1,
                            shape: "circle",
                            width: 8,
                            height: 8,
                            radius: 2,
                            offsetX: 0,
                            offsetY: 0,
                            onClick: void 0,
                            onDblClick: void 0,
                            showNullDataPoints: !0,
                            hover: {
                                size: void 0,
                                sizeOffset: 3
                            }
                        },
                        noData: {
                            text: void 0,
                            align: "center",
                            verticalAlign: "middle",
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: void 0,
                                fontSize: "14px",
                                fontFamily: void 0
                            }
                        },
                        responsive: [],
                        series: void 0,
                        states: {
                            normal: {
                                filter: {
                                    type: "none",
                                    value: 0
                                }
                            },
                            hover: {
                                filter: {
                                    type: "lighten",
                                    value: .1
                                }
                            },
                            active: {
                                allowMultipleDataPointsSelection: !1,
                                filter: {
                                    type: "darken",
                                    value: .5
                                }
                            }
                        },
                        title: {
                            text: void 0,
                            align: "left",
                            margin: 5,
                            offsetX: 0,
                            offsetY: 0,
                            floating: !1,
                            style: {
                                fontSize: "14px",
                                fontWeight: 900,
                                fontFamily: void 0,
                                color: void 0
                            }
                        },
                        subtitle: {
                            text: void 0,
                            align: "left",
                            margin: 5,
                            offsetX: 0,
                            offsetY: 30,
                            floating: !1,
                            style: {
                                fontSize: "12px",
                                fontWeight: 400,
                                fontFamily: void 0,
                                color: void 0
                            }
                        },
                        stroke: {
                            show: !0,
                            curve: "smooth",
                            lineCap: "butt",
                            width: 2,
                            colors: void 0,
                            dashArray: 0,
                            fill: {
                                type: "solid",
                                colors: void 0,
                                opacity: .85,
                                gradient: {
                                    shade: "dark",
                                    type: "horizontal",
                                    shadeIntensity: .5,
                                    gradientToColors: void 0,
                                    inverseColors: !0,
                                    opacityFrom: 1,
                                    opacityTo: 1,
                                    stops: [0, 50, 100],
                                    colorStops: []
                                }
                            }
                        },
                        tooltip: {
                            enabled: !0,
                            enabledOnSeries: void 0,
                            shared: !0,
                            hideEmptySeries: !1,
                            followCursor: !1,
                            intersect: !1,
                            inverseOrder: !1,
                            custom: void 0,
                            fillSeriesColor: !1,
                            theme: "light",
                            cssClass: "",
                            style: {
                                fontSize: "12px",
                                fontFamily: void 0
                            },
                            onDatasetHover: {
                                highlightDataSeries: !1
                            },
                            x: {
                                show: !0,
                                format: "dd MMM",
                                formatter: void 0
                            },
                            y: {
                                formatter: void 0,
                                title: {
                                    formatter: function (n) {
                                        return n ? n + ": " : ""
                                    }
                                }
                            },
                            z: {
                                formatter: void 0,
                                title: "Size: "
                            },
                            marker: {
                                show: !0,
                                fillColors: void 0
                            },
                            items: {
                                display: "flex"
                            },
                            fixed: {
                                enabled: !1,
                                position: "topRight",
                                offsetX: 0,
                                offsetY: 0
                            }
                        },
                        xaxis: {
                            type: "category",
                            categories: [],
                            convertedCatToNumeric: !1,
                            offsetX: 0,
                            offsetY: 0,
                            overwriteCategories: void 0,
                            labels: {
                                show: !0,
                                rotate: -45,
                                rotateAlways: !1,
                                hideOverlappingLabels: !0,
                                trim: !1,
                                minHeight: void 0,
                                maxHeight: 120,
                                showDuplicates: !0,
                                style: {
                                    colors: [],
                                    fontSize: "12px",
                                    fontWeight: 400,
                                    fontFamily: void 0,
                                    cssClass: ""
                                },
                                offsetX: 0,
                                offsetY: 0,
                                format: void 0,
                                formatter: void 0,
                                datetimeUTC: !0,
                                datetimeFormatter: {
                                    year: "yyyy",
                                    month: "MMM 'yy",
                                    day: "dd MMM",
                                    hour: "HH:mm",
                                    minute: "HH:mm:ss",
                                    second: "HH:mm:ss"
                                }
                            },
                            group: {
                                groups: [],
                                style: {
                                    colors: [],
                                    fontSize: "12px",
                                    fontWeight: 400,
                                    fontFamily: void 0,
                                    cssClass: ""
                                }
                            },
                            axisBorder: {
                                show: !0,
                                color: "#e0e0e0",
                                width: "100%",
                                height: 1,
                                offsetX: 0,
                                offsetY: 0
                            },
                            axisTicks: {
                                show: !0,
                                color: "#e0e0e0",
                                height: 6,
                                offsetX: 0,
                                offsetY: 0
                            },
                            stepSize: void 0,
                            tickAmount: void 0,
                            tickPlacement: "on",
                            min: void 0,
                            max: void 0,
                            range: void 0,
                            floating: !1,
                            decimalsInFloat: void 0,
                            position: "bottom",
                            title: {
                                text: void 0,
                                offsetX: 0,
                                offsetY: 0,
                                style: {
                                    color: void 0,
                                    fontSize: "12px",
                                    fontWeight: 900,
                                    fontFamily: void 0,
                                    cssClass: ""
                                }
                            },
                            crosshairs: {
                                show: !0,
                                width: 1,
                                position: "back",
                                opacity: .9,
                                stroke: {
                                    color: "#b6b6b6",
                                    width: 1,
                                    dashArray: 3
                                },
                                fill: {
                                    type: "solid",
                                    color: "#B1B9C4",
                                    gradient: {
                                        colorFrom: "#D8E3F0",
                                        colorTo: "#BED1E6",
                                        stops: [0, 100],
                                        opacityFrom: .4,
                                        opacityTo: .5
                                    }
                                },
                                dropShadow: {
                                    enabled: !1,
                                    left: 0,
                                    top: 0,
                                    blur: 1,
                                    opacity: .4
                                }
                            },
                            tooltip: {
                                enabled: !0,
                                offsetY: 0,
                                formatter: void 0,
                                style: {
                                    fontSize: "12px",
                                    fontFamily: void 0
                                }
                            }
                        },
                        yaxis: this.yAxis,
                        theme: {
                            mode: "light",
                            palette: "palette1",
                            monochrome: {
                                enabled: !1,
                                color: "#008FFB",
                                shadeTo: "light",
                                shadeIntensity: .65
                            }
                        }
                    }
                }
            }]),
                j
        }()
            , ve = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.graphics = new $(this.ctx),
                this.w.globals.isBarHorizontal && (this.invertAxis = !0),
                    this.helpers = new G(this),
                    this.xAxisAnnotations = new ie(this),
                    this.yAxisAnnotations = new te(this),
                    this.pointsAnnotations = new ne(this),
                this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed && (this.inversedReversedAxis = !0),
                    this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints
            }

            return p(j, [{
                key: "drawAxesAnnotations",
                value: function () {
                    var n = this.w;
                    if (n.globals.axisCharts) {
                        for (var i = this.yAxisAnnotations.drawYAxisAnnotations(), r = this.xAxisAnnotations.drawXAxisAnnotations(), c = this.pointsAnnotations.drawPointAnnotations(), d = n.config.chart.animations.enabled, h = [i, r, c], f = [r.node, i.node, c.node], m = 0; m < 3; m++)
                            n.globals.dom.elGraphical.add(h[m]),
                            !d || n.globals.resized || n.globals.dataChanged || n.config.chart.type !== "scatter" && n.config.chart.type !== "bubble" && n.globals.dataPoints > 1 && f[m].classList.add("apexcharts-element-hidden"),
                                n.globals.delayedElements.push({
                                    el: f[m],
                                    index: 0
                                });
                        this.helpers.annotationsBackground()
                    }
                }
            }, {
                key: "drawImageAnnos",
                value: function () {
                    var n = this;
                    this.w.config.annotations.images.map(function (i, r) {
                        n.addImage(i, r)
                    })
                }
            }, {
                key: "drawTextAnnos",
                value: function () {
                    var n = this;
                    this.w.config.annotations.texts.map(function (i, r) {
                        n.addText(i, r)
                    })
                }
            }, {
                key: "addXaxisAnnotation",
                value: function (n, i, r) {
                    this.xAxisAnnotations.addXaxisAnnotation(n, i, r)
                }
            }, {
                key: "addYaxisAnnotation",
                value: function (n, i, r) {
                    this.yAxisAnnotations.addYaxisAnnotation(n, i, r)
                }
            }, {
                key: "addPointAnnotation",
                value: function (n, i, r) {
                    this.pointsAnnotations.addPointAnnotation(n, i, r)
                }
            }, {
                key: "addText",
                value: function (n, i) {
                    var r = n.x
                        , c = n.y
                        , d = n.text
                        , h = n.textAnchor
                        , f = n.foreColor
                        , m = n.fontSize
                        , x = n.fontFamily
                        , S = n.fontWeight
                        , _ = n.cssClass
                        , k = n.backgroundColor
                        , L = n.borderWidth
                        , N = n.strokeDashArray
                        , H = n.borderRadius
                        , z = n.borderColor
                        , q = n.appendTo
                        , Q = q === void 0 ? ".apexcharts-svg" : q
                        , b = n.paddingLeft
                        , E = b === void 0 ? 4 : b
                        , B = n.paddingRight
                        , X = B === void 0 ? 4 : B
                        , K = n.paddingBottom
                        , ee = K === void 0 ? 2 : K
                        , pe = n.paddingTop
                        , ge = pe === void 0 ? 2 : pe
                        , Ie = this.w
                        , $e = this.graphics.drawText({
                        x: r,
                        y: c,
                        text: d,
                        textAnchor: h || "start",
                        fontSize: m || "12px",
                        fontWeight: S || "regular",
                        fontFamily: x || Ie.config.chart.fontFamily,
                        foreColor: f || Ie.config.chart.foreColor,
                        cssClass: _
                    })
                        , Fe = Ie.globals.dom.baseEl.querySelector(Q);
                    Fe && Fe.appendChild($e.node);
                    var Je = $e.bbox();
                    if (d) {
                        var ut = this.graphics.drawRect(Je.x - E, Je.y - ge, Je.width + E + X, Je.height + ee + ge, H, k || "transparent", 1, L, z, N);
                        Fe.insertBefore(ut.node, $e.node)
                    }
                }
            }, {
                key: "addImage",
                value: function (n, i) {
                    var r = this.w
                        , c = n.path
                        , d = n.x
                        , h = d === void 0 ? 0 : d
                        , f = n.y
                        , m = f === void 0 ? 0 : f
                        , x = n.width
                        , S = x === void 0 ? 20 : x
                        , _ = n.height
                        , k = _ === void 0 ? 20 : _
                        , L = n.appendTo
                        , N = L === void 0 ? ".apexcharts-svg" : L
                        , H = r.globals.dom.Paper.image(c);
                    H.size(S, k).move(h, m);
                    var z = r.globals.dom.baseEl.querySelector(N);
                    return z && z.appendChild(H.node),
                        H
                }
            }, {
                key: "addXaxisAnnotationExternal",
                value: function (n, i, r) {
                    return this.addAnnotationExternal({
                        params: n,
                        pushToMemory: i,
                        context: r,
                        type: "xaxis",
                        contextMethod: r.addXaxisAnnotation
                    }),
                        r
                }
            }, {
                key: "addYaxisAnnotationExternal",
                value: function (n, i, r) {
                    return this.addAnnotationExternal({
                        params: n,
                        pushToMemory: i,
                        context: r,
                        type: "yaxis",
                        contextMethod: r.addYaxisAnnotation
                    }),
                        r
                }
            }, {
                key: "addPointAnnotationExternal",
                value: function (n, i, r) {
                    return this.invertAxis === void 0 && (this.invertAxis = r.w.globals.isBarHorizontal),
                        this.addAnnotationExternal({
                            params: n,
                            pushToMemory: i,
                            context: r,
                            type: "point",
                            contextMethod: r.addPointAnnotation
                        }),
                        r
                }
            }, {
                key: "addAnnotationExternal",
                value: function (n) {
                    var i = n.params
                        , r = n.pushToMemory
                        , c = n.context
                        , d = n.type
                        , h = n.contextMethod
                        , f = c
                        , m = f.w
                        , x = m.globals.dom.baseEl.querySelector(".apexcharts-".concat(d, "-annotations"))
                        , S = x.childNodes.length + 1
                        , _ = new oe
                        ,
                        k = Object.assign({}, d === "xaxis" ? _.xAxisAnnotation : d === "yaxis" ? _.yAxisAnnotation : _.pointAnnotation)
                        , L = M.extend(k, i);
                    switch (d) {
                        case "xaxis":
                            this.addXaxisAnnotation(L, x, S);
                            break;
                        case "yaxis":
                            this.addYaxisAnnotation(L, x, S);
                            break;
                        case "point":
                            this.addPointAnnotation(L, x, S)
                    }
                    var N = m.globals.dom.baseEl.querySelector(".apexcharts-".concat(d, "-annotations .apexcharts-").concat(d, "-annotation-label[rel='").concat(S, "']"))
                        , H = this.helpers.addBackgroundToAnno(N, L);
                    return H && x.insertBefore(H.node, N),
                    r && m.globals.memory.methodsToExec.push({
                        context: f,
                        id: L.id ? L.id : M.randomId(),
                        method: h,
                        label: "addAnnotation",
                        params: i
                    }),
                        c
                }
            }, {
                key: "clearAnnotations",
                value: function (n) {
                    var i = n.w
                        ,
                        r = i.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
                    i.globals.memory.methodsToExec.map(function (c, d) {
                        c.label !== "addText" && c.label !== "addAnnotation" || i.globals.memory.methodsToExec.splice(d, 1)
                    }),
                        r = M.listToArray(r),
                        Array.prototype.forEach.call(r, function (c) {
                            for (; c.firstChild;)
                                c.removeChild(c.firstChild)
                        })
                }
            }, {
                key: "removeAnnotation",
                value: function (n, i) {
                    var r = n.w
                        , c = r.globals.dom.baseEl.querySelectorAll(".".concat(i));
                    c && (r.globals.memory.methodsToExec.map(function (d, h) {
                        d.id === i && r.globals.memory.methodsToExec.splice(h, 1)
                    }),
                        Array.prototype.forEach.call(c, function (d) {
                            d.parentElement.removeChild(d)
                        }))
                }
            }]),
                j
        }()
            , be = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.months31 = [1, 3, 5, 7, 8, 10, 12],
                    this.months30 = [2, 4, 6, 9, 11],
                    this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
            }

            return p(j, [{
                key: "isValidDate",
                value: function (n) {
                    return typeof n != "number" && !isNaN(this.parseDate(n))
                }
            }, {
                key: "getTimeStamp",
                value: function (n) {
                    return Date.parse(n) ? this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(n).toISOString().substr(0, 25)).getTime() : new Date(n).getTime() : n
                }
            }, {
                key: "getDate",
                value: function (n) {
                    return this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(n).toUTCString()) : new Date(n)
                }
            }, {
                key: "parseDate",
                value: function (n) {
                    var i = Date.parse(n);
                    if (!isNaN(i))
                        return this.getTimeStamp(n);
                    var r = Date.parse(n.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
                    return r = this.getTimeStamp(r)
                }
            }, {
                key: "parseDateWithTimezone",
                value: function (n) {
                    return Date.parse(n.replace(/-/g, "/").replace(/[a-z]+/gi, " "))
                }
            }, {
                key: "formatDate",
                value: function (n, i) {
                    var r = this.w.globals.locale
                        , c = this.w.config.xaxis.labels.datetimeUTC
                        , d = ["\0"].concat(A(r.months))
                        , h = [""].concat(A(r.shortMonths))
                        , f = [""].concat(A(r.days))
                        , m = [""].concat(A(r.shortDays));

                    function x(ee, pe) {
                        var ge = ee + "";
                        for (pe = pe || 2; ge.length < pe;)
                            ge = "0" + ge;
                        return ge
                    }

                    var S = c ? n.getUTCFullYear() : n.getFullYear();
                    i = (i = (i = i.replace(/(^|[^\\])yyyy+/g, "$1" + S)).replace(/(^|[^\\])yy/g, "$1" + S.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + S);
                    var _ = (c ? n.getUTCMonth() : n.getMonth()) + 1;
                    i = (i = (i = (i = i.replace(/(^|[^\\])MMMM+/g, "$1" + d[0])).replace(/(^|[^\\])MMM/g, "$1" + h[0])).replace(/(^|[^\\])MM/g, "$1" + x(_))).replace(/(^|[^\\])M/g, "$1" + _);
                    var k = c ? n.getUTCDate() : n.getDate();
                    i = (i = (i = (i = i.replace(/(^|[^\\])dddd+/g, "$1" + f[0])).replace(/(^|[^\\])ddd/g, "$1" + m[0])).replace(/(^|[^\\])dd/g, "$1" + x(k))).replace(/(^|[^\\])d/g, "$1" + k);
                    var L = c ? n.getUTCHours() : n.getHours()
                        , N = L > 12 ? L - 12 : L === 0 ? 12 : L;
                    i = (i = (i = (i = i.replace(/(^|[^\\])HH+/g, "$1" + x(L))).replace(/(^|[^\\])H/g, "$1" + L)).replace(/(^|[^\\])hh+/g, "$1" + x(N))).replace(/(^|[^\\])h/g, "$1" + N);
                    var H = c ? n.getUTCMinutes() : n.getMinutes();
                    i = (i = i.replace(/(^|[^\\])mm+/g, "$1" + x(H))).replace(/(^|[^\\])m/g, "$1" + H);
                    var z = c ? n.getUTCSeconds() : n.getSeconds();
                    i = (i = i.replace(/(^|[^\\])ss+/g, "$1" + x(z))).replace(/(^|[^\\])s/g, "$1" + z);
                    var q = c ? n.getUTCMilliseconds() : n.getMilliseconds();
                    i = i.replace(/(^|[^\\])fff+/g, "$1" + x(q, 3)),
                        q = Math.round(q / 10),
                        i = i.replace(/(^|[^\\])ff/g, "$1" + x(q)),
                        q = Math.round(q / 10);
                    var Q = L < 12 ? "AM" : "PM";
                    i = (i = (i = i.replace(/(^|[^\\])f/g, "$1" + q)).replace(/(^|[^\\])TT+/g, "$1" + Q)).replace(/(^|[^\\])T/g, "$1" + Q.charAt(0));
                    var b = Q.toLowerCase();
                    i = (i = i.replace(/(^|[^\\])tt+/g, "$1" + b)).replace(/(^|[^\\])t/g, "$1" + b.charAt(0));
                    var E = -n.getTimezoneOffset()
                        , B = c || !E ? "Z" : E > 0 ? "+" : "-";
                    if (!c) {
                        var X = (E = Math.abs(E)) % 60;
                        B += x(Math.floor(E / 60)) + ":" + x(X)
                    }
                    i = i.replace(/(^|[^\\])K/g, "$1" + B);
                    var K = (c ? n.getUTCDay() : n.getDay()) + 1;
                    return i = (i = (i = (i = (i = i.replace(new RegExp(f[0], "g"), f[K])).replace(new RegExp(m[0], "g"), m[K])).replace(new RegExp(d[0], "g"), d[_])).replace(new RegExp(h[0], "g"), h[_])).replace(/\\(.)/g, "$1")
                }
            }, {
                key: "getTimeUnitsfromTimestamp",
                value: function (n, i, r) {
                    var c = this.w;
                    c.config.xaxis.min !== void 0 && (n = c.config.xaxis.min),
                    c.config.xaxis.max !== void 0 && (i = c.config.xaxis.max);
                    var d = this.getDate(n)
                        , h = this.getDate(i)
                        , f = this.formatDate(d, "yyyy MM dd HH mm ss fff").split(" ")
                        , m = this.formatDate(h, "yyyy MM dd HH mm ss fff").split(" ");
                    return {
                        minMillisecond: parseInt(f[6], 10),
                        maxMillisecond: parseInt(m[6], 10),
                        minSecond: parseInt(f[5], 10),
                        maxSecond: parseInt(m[5], 10),
                        minMinute: parseInt(f[4], 10),
                        maxMinute: parseInt(m[4], 10),
                        minHour: parseInt(f[3], 10),
                        maxHour: parseInt(m[3], 10),
                        minDate: parseInt(f[2], 10),
                        maxDate: parseInt(m[2], 10),
                        minMonth: parseInt(f[1], 10) - 1,
                        maxMonth: parseInt(m[1], 10) - 1,
                        minYear: parseInt(f[0], 10),
                        maxYear: parseInt(m[0], 10)
                    }
                }
            }, {
                key: "isLeapYear",
                value: function (n) {
                    return n % 4 == 0 && n % 100 != 0 || n % 400 == 0
                }
            }, {
                key: "calculcateLastDaysOfMonth",
                value: function (n, i, r) {
                    return this.determineDaysOfMonths(n, i) - r
                }
            }, {
                key: "determineDaysOfYear",
                value: function (n) {
                    var i = 365;
                    return this.isLeapYear(n) && (i = 366),
                        i
                }
            }, {
                key: "determineRemainingDaysOfYear",
                value: function (n, i, r) {
                    var c = this.daysCntOfYear[i] + r;
                    return i > 1 && this.isLeapYear() && c++,
                        c
                }
            }, {
                key: "determineDaysOfMonths",
                value: function (n, i) {
                    var r = 30;
                    switch (n = M.monthMod(n),
                        !0) {
                        case this.months30.indexOf(n) > -1:
                            n === 2 && (r = this.isLeapYear(i) ? 29 : 28);
                            break;
                        case this.months31.indexOf(n) > -1:
                        default:
                            r = 31
                    }
                    return r
                }
            }]),
                j
        }()
            , de = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.tooltipKeyFormat = "dd MMM"
            }

            return p(j, [{
                key: "xLabelFormat",
                value: function (n, i, r, c) {
                    var d = this.w;
                    if (d.config.xaxis.type === "datetime" && d.config.xaxis.labels.formatter === void 0 && d.config.tooltip.x.formatter === void 0) {
                        var h = new be(this.ctx);
                        return h.formatDate(h.getDate(i), d.config.tooltip.x.format)
                    }
                    return n(i, r, c)
                }
            }, {
                key: "defaultGeneralFormatter",
                value: function (n) {
                    return Array.isArray(n) ? n.map(function (i) {
                        return i
                    }) : n
                }
            }, {
                key: "defaultYFormatter",
                value: function (n, i, r) {
                    var c = this.w;
                    return M.isNumber(n) && (n = c.globals.yValueDecimal !== 0 ? n.toFixed(i.decimalsInFloat !== void 0 ? i.decimalsInFloat : c.globals.yValueDecimal) : c.globals.maxYArr[r] - c.globals.minYArr[r] < 5 ? n.toFixed(1) : n.toFixed(0)),
                        n
                }
            }, {
                key: "setLabelFormatters",
                value: function () {
                    var n = this
                        , i = this.w;
                    return i.globals.xaxisTooltipFormatter = function (r) {
                        return n.defaultGeneralFormatter(r)
                    }
                        ,
                        i.globals.ttKeyFormatter = function (r) {
                            return n.defaultGeneralFormatter(r)
                        }
                        ,
                        i.globals.ttZFormatter = function (r) {
                            return r
                        }
                        ,
                        i.globals.legendFormatter = function (r) {
                            return n.defaultGeneralFormatter(r)
                        }
                        ,
                        i.config.xaxis.labels.formatter !== void 0 ? i.globals.xLabelFormatter = i.config.xaxis.labels.formatter : i.globals.xLabelFormatter = function (r) {
                            if (M.isNumber(r)) {
                                if (!i.config.xaxis.convertedCatToNumeric && i.config.xaxis.type === "numeric") {
                                    if (M.isNumber(i.config.xaxis.decimalsInFloat))
                                        return r.toFixed(i.config.xaxis.decimalsInFloat);
                                    var c = i.globals.maxX - i.globals.minX;
                                    return c > 0 && c < 100 ? r.toFixed(1) : r.toFixed(0)
                                }
                                return i.globals.isBarHorizontal && i.globals.maxY - i.globals.minYArr < 4 ? r.toFixed(1) : r.toFixed(0)
                            }
                            return r
                        }
                        ,
                        typeof i.config.tooltip.x.formatter == "function" ? i.globals.ttKeyFormatter = i.config.tooltip.x.formatter : i.globals.ttKeyFormatter = i.globals.xLabelFormatter,
                    typeof i.config.xaxis.tooltip.formatter == "function" && (i.globals.xaxisTooltipFormatter = i.config.xaxis.tooltip.formatter),
                    (Array.isArray(i.config.tooltip.y) || i.config.tooltip.y.formatter !== void 0) && (i.globals.ttVal = i.config.tooltip.y),
                    i.config.tooltip.z.formatter !== void 0 && (i.globals.ttZFormatter = i.config.tooltip.z.formatter),
                    i.config.legend.formatter !== void 0 && (i.globals.legendFormatter = i.config.legend.formatter),
                        i.config.yaxis.forEach(function (r, c) {
                            r.labels.formatter !== void 0 ? i.globals.yLabelFormatters[c] = r.labels.formatter : i.globals.yLabelFormatters[c] = function (d) {
                                return i.globals.xyCharts ? Array.isArray(d) ? d.map(function (h) {
                                    return n.defaultYFormatter(h, r, c)
                                }) : n.defaultYFormatter(d, r, c) : d
                            }
                        }),
                        i.globals
                }
            }, {
                key: "heatmapLabelFormatters",
                value: function () {
                    var n = this.w;
                    if (n.config.chart.type === "heatmap") {
                        n.globals.yAxisScale[0].result = n.globals.seriesNames.slice();
                        var i = n.globals.seriesNames.reduce(function (r, c) {
                            return r.length > c.length ? r : c
                        }, 0);
                        n.globals.yAxisScale[0].niceMax = i,
                            n.globals.yAxisScale[0].niceMin = i
                    }
                }
            }]),
                j
        }()
            , J = function (j) {
            var n, i = j.isTimeline, r = j.ctx, c = j.seriesIndex, d = j.dataPointIndex, h = j.y1, f = j.y2, m = j.w,
                x = m.globals.seriesRangeStart[c][d], S = m.globals.seriesRangeEnd[c][d], _ = m.globals.labels[d],
                k = m.config.series[c].name ? m.config.series[c].name : "", L = m.globals.ttKeyFormatter,
                N = m.config.tooltip.y.title.formatter, H = {
                    w: m,
                    seriesIndex: c,
                    dataPointIndex: d,
                    start: x,
                    end: S
                };
            typeof N == "function" && (k = N(k, H)),
            (n = m.config.series[c].data[d]) !== null && n !== void 0 && n.x && (_ = m.config.series[c].data[d].x),
            i || m.config.xaxis.type === "datetime" && (_ = new de(r).xLabelFormat(m.globals.ttKeyFormatter, _, _, {
                i: void 0,
                dateFormatter: new be(r).formatDate,
                w: m
            })),
            typeof L == "function" && (_ = L(_, H)),
            Number.isFinite(h) && Number.isFinite(f) && (x = h,
                S = f);
            var z = ""
                , q = ""
                , Q = m.globals.colors[c];
            if (m.config.tooltip.x.formatter === void 0)
                if (m.config.xaxis.type === "datetime") {
                    var b = new be(r);
                    z = b.formatDate(b.getDate(x), m.config.tooltip.x.format),
                        q = b.formatDate(b.getDate(S), m.config.tooltip.x.format)
                } else
                    z = x,
                        q = S;
            else
                z = m.config.tooltip.x.formatter(x),
                    q = m.config.tooltip.x.formatter(S);
            return {
                start: x,
                end: S,
                startVal: z,
                endVal: q,
                ylabel: _,
                color: Q,
                seriesName: k
            }
        }
            , ue = function (j) {
            var n = j.color
                , i = j.seriesName
                , r = j.ylabel
                , c = j.start
                , d = j.end
                , h = j.seriesIndex
                , f = j.dataPointIndex
                , m = j.ctx.tooltip.tooltipLabels.getFormatters(h);
            c = m.yLbFormatter(c),
                d = m.yLbFormatter(d);
            var x = m.yLbFormatter(j.w.globals.series[h][f])
                , S = `<span class="value start-value">
  `.concat(c, `
  </span> <span class="separator">-</span> <span class="value end-value">
  `).concat(d, `
  </span>`);
            return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + n + '">' + (i || "") + '</span></div><div> <span class="category">' + r + ": </span> " + (j.w.globals.comboCharts ? j.w.config.series[h].type === "rangeArea" || j.w.config.series[h].type === "rangeBar" ? S : "<span>".concat(x, "</span>") : S) + " </div></div>"
        }
            , fe = function () {
            function j(n) {
                l(this, j),
                    this.opts = n
            }

            return p(j, [{
                key: "hideYAxis",
                value: function () {
                    this.opts.yaxis[0].show = !1,
                        this.opts.yaxis[0].title.text = "",
                        this.opts.yaxis[0].axisBorder.show = !1,
                        this.opts.yaxis[0].axisTicks.show = !1,
                        this.opts.yaxis[0].floating = !0
                }
            }, {
                key: "line",
                value: function () {
                    return {
                        chart: {
                            animations: {
                                easing: "swing"
                            }
                        },
                        dataLabels: {
                            enabled: !1
                        },
                        stroke: {
                            width: 5,
                            curve: "straight"
                        },
                        markers: {
                            size: 0,
                            hover: {
                                sizeOffset: 6
                            }
                        },
                        xaxis: {
                            crosshairs: {
                                width: 1
                            }
                        }
                    }
                }
            }, {
                key: "sparkline",
                value: function (n) {
                    return this.hideYAxis(),
                        M.extend(n, {
                            grid: {
                                show: !1,
                                padding: {
                                    left: 0,
                                    right: 0,
                                    top: 0,
                                    bottom: 0
                                }
                            },
                            legend: {
                                show: !1
                            },
                            xaxis: {
                                labels: {
                                    show: !1
                                },
                                tooltip: {
                                    enabled: !1
                                },
                                axisBorder: {
                                    show: !1
                                },
                                axisTicks: {
                                    show: !1
                                }
                            },
                            chart: {
                                toolbar: {
                                    show: !1
                                },
                                zoom: {
                                    enabled: !1
                                }
                            },
                            dataLabels: {
                                enabled: !1
                            }
                        })
                }
            }, {
                key: "bar",
                value: function () {
                    return {
                        chart: {
                            stacked: !1,
                            animations: {
                                easing: "swing"
                            }
                        },
                        plotOptions: {
                            bar: {
                                dataLabels: {
                                    position: "center"
                                }
                            }
                        },
                        dataLabels: {
                            style: {
                                colors: ["#fff"]
                            },
                            background: {
                                enabled: !1
                            }
                        },
                        stroke: {
                            width: 0,
                            lineCap: "round"
                        },
                        fill: {
                            opacity: .85
                        },
                        legend: {
                            markers: {
                                shape: "square",
                                radius: 2,
                                size: 8
                            }
                        },
                        tooltip: {
                            shared: !1,
                            intersect: !0
                        },
                        xaxis: {
                            tooltip: {
                                enabled: !1
                            },
                            tickPlacement: "between",
                            crosshairs: {
                                width: "barWidth",
                                position: "back",
                                fill: {
                                    type: "gradient"
                                },
                                dropShadow: {
                                    enabled: !1
                                },
                                stroke: {
                                    width: 0
                                }
                            }
                        }
                    }
                }
            }, {
                key: "funnel",
                value: function () {
                    return this.hideYAxis(),
                        a(a({}, this.bar()), {}, {
                            chart: {
                                animations: {
                                    easing: "linear",
                                    speed: 800,
                                    animateGradually: {
                                        enabled: !1
                                    }
                                }
                            },
                            plotOptions: {
                                bar: {
                                    horizontal: !0,
                                    borderRadiusApplication: "around",
                                    borderRadius: 0,
                                    dataLabels: {
                                        position: "center"
                                    }
                                }
                            },
                            grid: {
                                show: !1,
                                padding: {
                                    left: 0,
                                    right: 0
                                }
                            },
                            xaxis: {
                                labels: {
                                    show: !1
                                },
                                tooltip: {
                                    enabled: !1
                                },
                                axisBorder: {
                                    show: !1
                                },
                                axisTicks: {
                                    show: !1
                                }
                            }
                        })
                }
            }, {
                key: "candlestick",
                value: function () {
                    var n = this;
                    return {
                        stroke: {
                            width: 1,
                            colors: ["#333"]
                        },
                        fill: {
                            opacity: 1
                        },
                        dataLabels: {
                            enabled: !1
                        },
                        tooltip: {
                            shared: !0,
                            custom: function (i) {
                                var r = i.seriesIndex
                                    , c = i.dataPointIndex
                                    , d = i.w;
                                return n._getBoxTooltip(d, r, c, ["Open", "High", "", "Low", "Close"], "candlestick")
                            }
                        },
                        states: {
                            active: {
                                filter: {
                                    type: "none"
                                }
                            }
                        },
                        xaxis: {
                            crosshairs: {
                                width: 1
                            }
                        }
                    }
                }
            }, {
                key: "boxPlot",
                value: function () {
                    var n = this;
                    return {
                        chart: {
                            animations: {
                                dynamicAnimation: {
                                    enabled: !1
                                }
                            }
                        },
                        stroke: {
                            width: 1,
                            colors: ["#24292e"]
                        },
                        dataLabels: {
                            enabled: !1
                        },
                        tooltip: {
                            shared: !0,
                            custom: function (i) {
                                var r = i.seriesIndex
                                    , c = i.dataPointIndex
                                    , d = i.w;
                                return n._getBoxTooltip(d, r, c, ["Minimum", "Q1", "Median", "Q3", "Maximum"], "boxPlot")
                            }
                        },
                        markers: {
                            size: 5,
                            strokeWidth: 1,
                            strokeColors: "#111"
                        },
                        xaxis: {
                            crosshairs: {
                                width: 1
                            }
                        }
                    }
                }
            }, {
                key: "rangeBar",
                value: function () {
                    return {
                        chart: {
                            animations: {
                                animateGradually: !1
                            }
                        },
                        stroke: {
                            width: 0,
                            lineCap: "square"
                        },
                        plotOptions: {
                            bar: {
                                borderRadius: 0,
                                dataLabels: {
                                    position: "center"
                                }
                            }
                        },
                        dataLabels: {
                            enabled: !1,
                            formatter: function (n, i) {
                                i.ctx;
                                var r = i.seriesIndex
                                    , c = i.dataPointIndex
                                    , d = i.w
                                    , h = function () {
                                    var f = d.globals.seriesRangeStart[r][c];
                                    return d.globals.seriesRangeEnd[r][c] - f
                                };
                                return d.globals.comboCharts ? d.config.series[r].type === "rangeBar" || d.config.series[r].type === "rangeArea" ? h() : n : h()
                            },
                            background: {
                                enabled: !1
                            },
                            style: {
                                colors: ["#fff"]
                            }
                        },
                        markers: {
                            size: 10
                        },
                        tooltip: {
                            shared: !1,
                            followCursor: !0,
                            custom: function (n) {
                                return n.w.config.plotOptions && n.w.config.plotOptions.bar && n.w.config.plotOptions.bar.horizontal ? function (i) {
                                    var r = J(a(a({}, i), {}, {
                                        isTimeline: !0
                                    }))
                                        , c = r.color
                                        , d = r.seriesName
                                        , h = r.ylabel
                                        , f = r.startVal
                                        , m = r.endVal;
                                    return ue(a(a({}, i), {}, {
                                        color: c,
                                        seriesName: d,
                                        ylabel: h,
                                        start: f,
                                        end: m
                                    }))
                                }(n) : function (i) {
                                    var r = J(i)
                                        , c = r.color
                                        , d = r.seriesName
                                        , h = r.ylabel
                                        , f = r.start
                                        , m = r.end;
                                    return ue(a(a({}, i), {}, {
                                        color: c,
                                        seriesName: d,
                                        ylabel: h,
                                        start: f,
                                        end: m
                                    }))
                                }(n)
                            }
                        },
                        xaxis: {
                            tickPlacement: "between",
                            tooltip: {
                                enabled: !1
                            },
                            crosshairs: {
                                stroke: {
                                    width: 0
                                }
                            }
                        }
                    }
                }
            }, {
                key: "dumbbell",
                value: function (n) {
                    var i, r;
                    return (i = n.plotOptions.bar) !== null && i !== void 0 && i.barHeight || (n.plotOptions.bar.barHeight = 2),
                    (r = n.plotOptions.bar) !== null && r !== void 0 && r.columnWidth || (n.plotOptions.bar.columnWidth = 2),
                        n
                }
            }, {
                key: "area",
                value: function () {
                    return {
                        stroke: {
                            width: 4,
                            fill: {
                                type: "solid",
                                gradient: {
                                    inverseColors: !1,
                                    shade: "light",
                                    type: "vertical",
                                    opacityFrom: .65,
                                    opacityTo: .5,
                                    stops: [0, 100, 100]
                                }
                            }
                        },
                        fill: {
                            type: "gradient",
                            gradient: {
                                inverseColors: !1,
                                shade: "light",
                                type: "vertical",
                                opacityFrom: .65,
                                opacityTo: .5,
                                stops: [0, 100, 100]
                            }
                        },
                        markers: {
                            size: 0,
                            hover: {
                                sizeOffset: 6
                            }
                        },
                        tooltip: {
                            followCursor: !1
                        }
                    }
                }
            }, {
                key: "rangeArea",
                value: function () {
                    return {
                        stroke: {
                            curve: "straight",
                            width: 0
                        },
                        fill: {
                            type: "solid",
                            opacity: .6
                        },
                        markers: {
                            size: 0
                        },
                        states: {
                            hover: {
                                filter: {
                                    type: "none"
                                }
                            },
                            active: {
                                filter: {
                                    type: "none"
                                }
                            }
                        },
                        tooltip: {
                            intersect: !1,
                            shared: !0,
                            followCursor: !0,
                            custom: function (n) {
                                return function (i) {
                                    var r = J(i)
                                        , c = r.color
                                        , d = r.seriesName
                                        , h = r.ylabel
                                        , f = r.start
                                        , m = r.end;
                                    return ue(a(a({}, i), {}, {
                                        color: c,
                                        seriesName: d,
                                        ylabel: h,
                                        start: f,
                                        end: m
                                    }))
                                }(n)
                            }
                        }
                    }
                }
            }, {
                key: "brush",
                value: function (n) {
                    return M.extend(n, {
                        chart: {
                            toolbar: {
                                autoSelected: "selection",
                                show: !1
                            },
                            zoom: {
                                enabled: !1
                            }
                        },
                        dataLabels: {
                            enabled: !1
                        },
                        stroke: {
                            width: 1
                        },
                        tooltip: {
                            enabled: !1
                        },
                        xaxis: {
                            tooltip: {
                                enabled: !1
                            }
                        }
                    })
                }
            }, {
                key: "stacked100",
                value: function (n) {
                    n.dataLabels = n.dataLabels || {},
                        n.dataLabels.formatter = n.dataLabels.formatter || void 0;
                    var i = n.dataLabels.formatter;
                    return n.yaxis.forEach(function (r, c) {
                        n.yaxis[c].min = 0,
                            n.yaxis[c].max = 100
                    }),
                    n.chart.type === "bar" && (n.dataLabels.formatter = i || function (r) {
                            return typeof r == "number" && r ? r.toFixed(0) + "%" : r
                        }
                    ),
                        n
                }
            }, {
                key: "stackedBars",
                value: function () {
                    var n = this.bar();
                    return a(a({}, n), {}, {
                        plotOptions: a(a({}, n.plotOptions), {}, {
                            bar: a(a({}, n.plotOptions.bar), {}, {
                                borderRadiusApplication: "end",
                                borderRadiusWhenStacked: "last"
                            })
                        })
                    })
                }
            }, {
                key: "convertCatToNumeric",
                value: function (n) {
                    return n.xaxis.convertedCatToNumeric = !0,
                        n
                }
            }, {
                key: "convertCatToNumericXaxis",
                value: function (n, i, r) {
                    n.xaxis.type = "numeric",
                        n.xaxis.labels = n.xaxis.labels || {},
                        n.xaxis.labels.formatter = n.xaxis.labels.formatter || function (h) {
                            return M.isNumber(h) ? Math.floor(h) : h
                        }
                    ;
                    var c = n.xaxis.labels.formatter
                        , d = n.xaxis.categories && n.xaxis.categories.length ? n.xaxis.categories : n.labels;
                    return r && r.length && (d = r.map(function (h) {
                        return Array.isArray(h) ? h : String(h)
                    })),
                    d && d.length && (n.xaxis.labels.formatter = function (h) {
                            return M.isNumber(h) ? c(d[Math.floor(h) - 1]) : c(h)
                        }
                    ),
                        n.xaxis.categories = [],
                        n.labels = [],
                        n.xaxis.tickAmount = n.xaxis.tickAmount || "dataPoints",
                        n
                }
            }, {
                key: "bubble",
                value: function () {
                    return {
                        dataLabels: {
                            style: {
                                colors: ["#fff"]
                            }
                        },
                        tooltip: {
                            shared: !1,
                            intersect: !0
                        },
                        xaxis: {
                            crosshairs: {
                                width: 0
                            }
                        },
                        fill: {
                            type: "solid",
                            gradient: {
                                shade: "light",
                                inverse: !0,
                                shadeIntensity: .55,
                                opacityFrom: .4,
                                opacityTo: .8
                            }
                        }
                    }
                }
            }, {
                key: "scatter",
                value: function () {
                    return {
                        dataLabels: {
                            enabled: !1
                        },
                        tooltip: {
                            shared: !1,
                            intersect: !0
                        },
                        markers: {
                            size: 6,
                            strokeWidth: 1,
                            hover: {
                                sizeOffset: 2
                            }
                        }
                    }
                }
            }, {
                key: "heatmap",
                value: function () {
                    return {
                        chart: {
                            stacked: !1
                        },
                        fill: {
                            opacity: 1
                        },
                        dataLabels: {
                            style: {
                                colors: ["#fff"]
                            }
                        },
                        stroke: {
                            colors: ["#fff"]
                        },
                        tooltip: {
                            followCursor: !0,
                            marker: {
                                show: !1
                            },
                            x: {
                                show: !1
                            }
                        },
                        legend: {
                            position: "top",
                            markers: {
                                shape: "square",
                                size: 10,
                                offsetY: 2
                            }
                        },
                        grid: {
                            padding: {
                                right: 20
                            }
                        }
                    }
                }
            }, {
                key: "treemap",
                value: function () {
                    return {
                        chart: {
                            zoom: {
                                enabled: !1
                            }
                        },
                        dataLabels: {
                            style: {
                                fontSize: 14,
                                fontWeight: 600,
                                colors: ["#fff"]
                            }
                        },
                        stroke: {
                            show: !0,
                            width: 2,
                            colors: ["#fff"]
                        },
                        legend: {
                            show: !1
                        },
                        fill: {
                            gradient: {
                                stops: [0, 100]
                            }
                        },
                        tooltip: {
                            followCursor: !0,
                            x: {
                                show: !1
                            }
                        },
                        grid: {
                            padding: {
                                left: 0,
                                right: 0
                            }
                        },
                        xaxis: {
                            crosshairs: {
                                show: !1
                            },
                            tooltip: {
                                enabled: !1
                            }
                        }
                    }
                }
            }, {
                key: "pie",
                value: function () {
                    return {
                        chart: {
                            toolbar: {
                                show: !1
                            }
                        },
                        plotOptions: {
                            pie: {
                                donut: {
                                    labels: {
                                        show: !1
                                    }
                                }
                            }
                        },
                        dataLabels: {
                            formatter: function (n) {
                                return n.toFixed(1) + "%"
                            },
                            style: {
                                colors: ["#fff"]
                            },
                            background: {
                                enabled: !1
                            },
                            dropShadow: {
                                enabled: !0
                            }
                        },
                        stroke: {
                            colors: ["#fff"]
                        },
                        fill: {
                            opacity: 1,
                            gradient: {
                                shade: "light",
                                stops: [0, 100]
                            }
                        },
                        tooltip: {
                            theme: "dark",
                            fillSeriesColor: !0
                        },
                        legend: {
                            position: "right"
                        }
                    }
                }
            }, {
                key: "donut",
                value: function () {
                    return {
                        chart: {
                            toolbar: {
                                show: !1
                            }
                        },
                        dataLabels: {
                            formatter: function (n) {
                                return n.toFixed(1) + "%"
                            },
                            style: {
                                colors: ["#fff"]
                            },
                            background: {
                                enabled: !1
                            },
                            dropShadow: {
                                enabled: !0
                            }
                        },
                        stroke: {
                            colors: ["#fff"]
                        },
                        fill: {
                            opacity: 1,
                            gradient: {
                                shade: "light",
                                shadeIntensity: .35,
                                stops: [80, 100],
                                opacityFrom: 1,
                                opacityTo: 1
                            }
                        },
                        tooltip: {
                            theme: "dark",
                            fillSeriesColor: !0
                        },
                        legend: {
                            position: "right"
                        }
                    }
                }
            }, {
                key: "polarArea",
                value: function () {
                    return this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6,
                        {
                            chart: {
                                toolbar: {
                                    show: !1
                                }
                            },
                            dataLabels: {
                                formatter: function (n) {
                                    return n.toFixed(1) + "%"
                                },
                                enabled: !1
                            },
                            stroke: {
                                show: !0,
                                width: 2
                            },
                            fill: {
                                opacity: .7
                            },
                            tooltip: {
                                theme: "dark",
                                fillSeriesColor: !0
                            },
                            legend: {
                                position: "right"
                            }
                        }
                }
            }, {
                key: "radar",
                value: function () {
                    return this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6,
                        {
                            dataLabels: {
                                enabled: !1,
                                style: {
                                    fontSize: "11px"
                                }
                            },
                            stroke: {
                                width: 2
                            },
                            markers: {
                                size: 3,
                                strokeWidth: 1,
                                strokeOpacity: 1
                            },
                            fill: {
                                opacity: .2
                            },
                            tooltip: {
                                shared: !1,
                                intersect: !0,
                                followCursor: !0
                            },
                            grid: {
                                show: !1
                            },
                            xaxis: {
                                labels: {
                                    formatter: function (n) {
                                        return n
                                    },
                                    style: {
                                        colors: ["#a8a8a8"],
                                        fontSize: "11px"
                                    }
                                },
                                tooltip: {
                                    enabled: !1
                                },
                                crosshairs: {
                                    show: !1
                                }
                            }
                        }
                }
            }, {
                key: "radialBar",
                value: function () {
                    return {
                        chart: {
                            animations: {
                                dynamicAnimation: {
                                    enabled: !0,
                                    speed: 800
                                }
                            },
                            toolbar: {
                                show: !1
                            }
                        },
                        fill: {
                            gradient: {
                                shade: "dark",
                                shadeIntensity: .4,
                                inverseColors: !1,
                                type: "diagonal2",
                                opacityFrom: 1,
                                opacityTo: 1,
                                stops: [70, 98, 100]
                            }
                        },
                        legend: {
                            show: !1,
                            position: "right"
                        },
                        tooltip: {
                            enabled: !1,
                            fillSeriesColor: !0
                        }
                    }
                }
            }, {
                key: "_getBoxTooltip",
                value: function (n, i, r, c, d) {
                    var h = n.globals.seriesCandleO[i][r]
                        , f = n.globals.seriesCandleH[i][r]
                        , m = n.globals.seriesCandleM[i][r]
                        , x = n.globals.seriesCandleL[i][r]
                        , S = n.globals.seriesCandleC[i][r];
                    return n.config.series[i].type && n.config.series[i].type !== d ? `<div class="apexcharts-custom-tooltip">
          `.concat(n.config.series[i].name ? n.config.series[i].name : "series-" + (i + 1), ": <strong>").concat(n.globals.series[i][r], `</strong>
        </div>`) : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(n.config.chart.type, '">') + "<div>".concat(c[0], ': <span class="value">') + h + "</span></div>" + "<div>".concat(c[1], ': <span class="value">') + f + "</span></div>" + (m ? "<div>".concat(c[2], ': <span class="value">') + m + "</span></div>" : "") + "<div>".concat(c[3], ': <span class="value">') + x + "</span></div>" + "<div>".concat(c[4], ': <span class="value">') + S + "</span></div></div>"
                }
            }]),
                j
        }()
            , Me = function () {
            function j(n) {
                l(this, j),
                    this.opts = n
            }

            return p(j, [{
                key: "init",
                value: function (n) {
                    var i = n.responsiveOverride
                        , r = this.opts
                        , c = new oe
                        , d = new fe(r);
                    this.chartType = r.chart.type,
                        r = this.extendYAxis(r),
                        r = this.extendAnnotations(r);
                    var h = c.init()
                        , f = {};
                    if (r && o(r) === "object") {
                        var m, x, S, _, k, L, N, H, z = {};
                        z = ["line", "area", "bar", "candlestick", "boxPlot", "rangeBar", "rangeArea", "bubble", "scatter", "heatmap", "treemap", "pie", "polarArea", "donut", "radar", "radialBar"].indexOf(r.chart.type) !== -1 ? d[r.chart.type]() : d.line(),
                        (m = r.plotOptions) !== null && m !== void 0 && (x = m.bar) !== null && x !== void 0 && x.isFunnel && (z = d.funnel()),
                        r.chart.stacked && r.chart.type === "bar" && (z = d.stackedBars()),
                        (S = r.chart.brush) !== null && S !== void 0 && S.enabled && (z = d.brush(z)),
                        r.chart.stacked && r.chart.stackType === "100%" && (r = d.stacked100(r)),
                        (_ = r.plotOptions) !== null && _ !== void 0 && (k = _.bar) !== null && k !== void 0 && k.isDumbbell && (r = d.dumbbell(r)),
                            this.checkForDarkTheme(window.Apex),
                            this.checkForDarkTheme(r),
                            r.xaxis = r.xaxis || window.Apex.xaxis || {},
                        i || (r.xaxis.convertedCatToNumeric = !1),
                        ((L = (r = this.checkForCatToNumericXAxis(this.chartType, z, r)).chart.sparkline) !== null && L !== void 0 && L.enabled || (N = window.Apex.chart) !== null && N !== void 0 && (H = N.sparkline) !== null && H !== void 0 && H.enabled) && (z = d.sparkline(z)),
                            f = M.extend(h, z)
                    }
                    var q = M.extend(f, window.Apex);
                    return h = M.extend(q, r),
                        h = this.handleUserInputErrors(h)
                }
            }, {
                key: "checkForCatToNumericXAxis",
                value: function (n, i, r) {
                    var c, d, h = new fe(r),
                        f = (n === "bar" || n === "boxPlot") && ((c = r.plotOptions) === null || c === void 0 || (d = c.bar) === null || d === void 0 ? void 0 : d.horizontal),
                        m = n === "pie" || n === "polarArea" || n === "donut" || n === "radar" || n === "radialBar" || n === "heatmap",
                        x = r.xaxis.type !== "datetime" && r.xaxis.type !== "numeric",
                        S = r.xaxis.tickPlacement ? r.xaxis.tickPlacement : i.xaxis && i.xaxis.tickPlacement;
                    return f || m || !x || S === "between" || (r = h.convertCatToNumeric(r)),
                        r
                }
            }, {
                key: "extendYAxis",
                value: function (n, i) {
                    var r = new oe;
                    (n.yaxis === void 0 || !n.yaxis || Array.isArray(n.yaxis) && n.yaxis.length === 0) && (n.yaxis = {}),
                    n.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (n.yaxis = M.extend(n.yaxis, window.Apex.yaxis)),
                        n.yaxis.constructor !== Array ? n.yaxis = [M.extend(r.yAxis, n.yaxis)] : n.yaxis = M.extendArray(n.yaxis, r.yAxis);
                    var c = !1;
                    n.yaxis.forEach(function (h) {
                        h.logarithmic && (c = !0)
                    });
                    var d = n.series;
                    return i && !d && (d = i.config.series),
                    c && d.length !== n.yaxis.length && d.length && (n.yaxis = d.map(function (h, f) {
                        if (h.name || (d[f].name = "series-".concat(f + 1)),
                            n.yaxis[f])
                            return n.yaxis[f].seriesName = d[f].name,
                                n.yaxis[f];
                        var m = M.extend(r.yAxis, n.yaxis[0]);
                        return m.show = !1,
                            m
                    })),
                    c && d.length > 1 && d.length !== n.yaxis.length && console.warn("A multi-series logarithmic chart should have equal number of series and y-axes"),
                        n
                }
            }, {
                key: "extendAnnotations",
                value: function (n) {
                    return n.annotations === void 0 && (n.annotations = {},
                        n.annotations.yaxis = [],
                        n.annotations.xaxis = [],
                        n.annotations.points = []),
                        n = this.extendYAxisAnnotations(n),
                        n = this.extendXAxisAnnotations(n),
                        n = this.extendPointAnnotations(n)
                }
            }, {
                key: "extendYAxisAnnotations",
                value: function (n) {
                    var i = new oe;
                    return n.annotations.yaxis = M.extendArray(n.annotations.yaxis !== void 0 ? n.annotations.yaxis : [], i.yAxisAnnotation),
                        n
                }
            }, {
                key: "extendXAxisAnnotations",
                value: function (n) {
                    var i = new oe;
                    return n.annotations.xaxis = M.extendArray(n.annotations.xaxis !== void 0 ? n.annotations.xaxis : [], i.xAxisAnnotation),
                        n
                }
            }, {
                key: "extendPointAnnotations",
                value: function (n) {
                    var i = new oe;
                    return n.annotations.points = M.extendArray(n.annotations.points !== void 0 ? n.annotations.points : [], i.pointAnnotation),
                        n
                }
            }, {
                key: "checkForDarkTheme",
                value: function (n) {
                    n.theme && n.theme.mode === "dark" && (n.tooltip || (n.tooltip = {}),
                    n.tooltip.theme !== "light" && (n.tooltip.theme = "dark"),
                    n.chart.foreColor || (n.chart.foreColor = "#f6f7f8"),
                    n.chart.background || (n.chart.background = "#424242"),
                    n.theme.palette || (n.theme.palette = "palette4"))
                }
            }, {
                key: "handleUserInputErrors",
                value: function (n) {
                    var i = n;
                    if (i.tooltip.shared && i.tooltip.intersect)
                        throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");
                    if (i.chart.type === "bar" && i.plotOptions.bar.horizontal) {
                        if (i.yaxis.length > 1)
                            throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
                        i.yaxis[0].reversed && (i.yaxis[0].opposite = !0),
                            i.xaxis.tooltip.enabled = !1,
                            i.yaxis[0].tooltip.enabled = !1,
                            i.chart.zoom.enabled = !1
                    }
                    return i.chart.type !== "bar" && i.chart.type !== "rangeBar" || i.tooltip.shared && i.xaxis.crosshairs.width === "barWidth" && i.series.length > 1 && (i.xaxis.crosshairs.width = "tickWidth"),
                    i.chart.type !== "candlestick" && i.chart.type !== "boxPlot" || i.yaxis[0].reversed && (console.warn("Reversed y-axis in ".concat(i.chart.type, " chart is not supported.")),
                        i.yaxis[0].reversed = !1),
                        i
                }
            }]),
                j
        }()
            , Xe = function () {
            function j() {
                l(this, j)
            }

            return p(j, [{
                key: "initGlobalVars",
                value: function (n) {
                    n.series = [],
                        n.seriesCandleO = [],
                        n.seriesCandleH = [],
                        n.seriesCandleM = [],
                        n.seriesCandleL = [],
                        n.seriesCandleC = [],
                        n.seriesRangeStart = [],
                        n.seriesRangeEnd = [],
                        n.seriesRange = [],
                        n.seriesPercent = [],
                        n.seriesGoals = [],
                        n.seriesX = [],
                        n.seriesZ = [],
                        n.seriesNames = [],
                        n.seriesTotals = [],
                        n.seriesLog = [],
                        n.seriesColors = [],
                        n.stackedSeriesTotals = [],
                        n.seriesXvalues = [],
                        n.seriesYvalues = [],
                        n.labels = [],
                        n.hasXaxisGroups = !1,
                        n.groups = [],
                        n.hasSeriesGroups = !1,
                        n.seriesGroups = [],
                        n.categoryLabels = [],
                        n.timescaleLabels = [],
                        n.noLabelsProvided = !1,
                        n.resizeTimer = null,
                        n.selectionResizeTimer = null,
                        n.delayedElements = [],
                        n.pointsArray = [],
                        n.dataLabelsRects = [],
                        n.isXNumeric = !1,
                        n.skipLastTimelinelabel = !1,
                        n.skipFirstTimelinelabel = !1,
                        n.isDataXYZ = !1,
                        n.isMultiLineX = !1,
                        n.isMultipleYAxis = !1,
                        n.maxY = -Number.MAX_VALUE,
                        n.minY = Number.MIN_VALUE,
                        n.minYArr = [],
                        n.maxYArr = [],
                        n.maxX = -Number.MAX_VALUE,
                        n.minX = Number.MAX_VALUE,
                        n.initialMaxX = -Number.MAX_VALUE,
                        n.initialMinX = Number.MAX_VALUE,
                        n.maxDate = 0,
                        n.minDate = Number.MAX_VALUE,
                        n.minZ = Number.MAX_VALUE,
                        n.maxZ = -Number.MAX_VALUE,
                        n.minXDiff = Number.MAX_VALUE,
                        n.yAxisScale = [],
                        n.xAxisScale = null,
                        n.xAxisTicksPositions = [],
                        n.yLabelsCoords = [],
                        n.yTitleCoords = [],
                        n.barPadForNumericAxis = 0,
                        n.padHorizontal = 0,
                        n.xRange = 0,
                        n.yRange = [],
                        n.zRange = 0,
                        n.dataPoints = 0,
                        n.xTickAmount = 0
                }
            }, {
                key: "globalVars",
                value: function (n) {
                    return {
                        chartID: null,
                        cuid: null,
                        events: {
                            beforeMount: [],
                            mounted: [],
                            updated: [],
                            clicked: [],
                            selection: [],
                            dataPointSelection: [],
                            zoomed: [],
                            scrolled: []
                        },
                        colors: [],
                        clientX: null,
                        clientY: null,
                        fill: {
                            colors: []
                        },
                        stroke: {
                            colors: []
                        },
                        dataLabels: {
                            style: {
                                colors: []
                            }
                        },
                        radarPolygons: {
                            fill: {
                                colors: []
                            }
                        },
                        markers: {
                            colors: [],
                            size: n.markers.size,
                            largestSize: 0
                        },
                        animationEnded: !1,
                        isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints,
                        isDirty: !1,
                        isExecCalled: !1,
                        initialConfig: null,
                        initialSeries: [],
                        lastXAxis: [],
                        lastYAxis: [],
                        columnSeries: null,
                        labels: [],
                        timescaleLabels: [],
                        noLabelsProvided: !1,
                        allSeriesCollapsed: !1,
                        collapsedSeries: [],
                        collapsedSeriesIndices: [],
                        ancillaryCollapsedSeries: [],
                        ancillaryCollapsedSeriesIndices: [],
                        risingSeries: [],
                        dataFormatXNumeric: !1,
                        capturedSeriesIndex: -1,
                        capturedDataPointIndex: -1,
                        selectedDataPoints: [],
                        goldenPadding: 35,
                        invalidLogScale: !1,
                        ignoreYAxisIndexes: [],
                        yAxisSameScaleIndices: [],
                        maxValsInArrayIndex: 0,
                        radialSize: 0,
                        selection: void 0,
                        zoomEnabled: n.chart.toolbar.autoSelected === "zoom" && n.chart.toolbar.tools.zoom && n.chart.zoom.enabled,
                        panEnabled: n.chart.toolbar.autoSelected === "pan" && n.chart.toolbar.tools.pan,
                        selectionEnabled: n.chart.toolbar.autoSelected === "selection" && n.chart.toolbar.tools.selection,
                        yaxis: null,
                        mousedown: !1,
                        lastClientPosition: {},
                        visibleXRange: void 0,
                        yValueDecimal: 0,
                        total: 0,
                        SVGNS: "http://www.w3.org/2000/svg",
                        svgWidth: 0,
                        svgHeight: 0,
                        noData: !1,
                        locale: {},
                        dom: {},
                        memory: {
                            methodsToExec: []
                        },
                        shouldAnimate: !0,
                        skipLastTimelinelabel: !1,
                        skipFirstTimelinelabel: !1,
                        delayedElements: [],
                        axisCharts: !0,
                        isDataXYZ: !1,
                        resized: !1,
                        resizeTimer: null,
                        comboCharts: !1,
                        dataChanged: !1,
                        previousPaths: [],
                        allSeriesHasEqualX: !0,
                        pointsArray: [],
                        dataLabelsRects: [],
                        lastDrawnDataLabelsIndexes: [],
                        hasNullValues: !1,
                        easing: null,
                        zoomed: !1,
                        gridWidth: 0,
                        gridHeight: 0,
                        rotateXLabels: !1,
                        defaultLabels: !1,
                        xLabelFormatter: void 0,
                        yLabelFormatters: [],
                        xaxisTooltipFormatter: void 0,
                        ttKeyFormatter: void 0,
                        ttVal: void 0,
                        ttZFormatter: void 0,
                        LINE_HEIGHT_RATIO: 1.618,
                        xAxisLabelsHeight: 0,
                        xAxisGroupLabelsHeight: 0,
                        xAxisLabelsWidth: 0,
                        yAxisLabelsWidth: 0,
                        scaleX: 1,
                        scaleY: 1,
                        translateX: 0,
                        translateY: 0,
                        translateYAxisX: [],
                        yAxisWidths: [],
                        translateXAxisY: 0,
                        translateXAxisX: 0,
                        tooltip: null
                    }
                }
            }, {
                key: "init",
                value: function (n) {
                    var i = this.globalVars(n);
                    return this.initGlobalVars(i),
                        i.initialConfig = M.extend({}, n),
                        i.initialSeries = M.clone(n.series),
                        i.lastXAxis = M.clone(i.initialConfig.xaxis),
                        i.lastYAxis = M.clone(i.initialConfig.yaxis),
                        i
                }
            }]),
                j
        }()
            , Be = function () {
            function j(n) {
                l(this, j),
                    this.opts = n
            }

            return p(j, [{
                key: "init",
                value: function () {
                    var n = new Me(this.opts).init({
                        responsiveOverride: !1
                    });
                    return {
                        config: n,
                        globals: new Xe().init(n)
                    }
                }
            }]),
                j
        }()
            , je = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.opts = null,
                    this.seriesIndex = 0
            }

            return p(j, [{
                key: "clippedImgArea",
                value: function (n) {
                    var i = this.w
                        , r = i.config
                        , c = parseInt(i.globals.gridWidth, 10)
                        , d = parseInt(i.globals.gridHeight, 10)
                        , h = c > d ? c : d
                        , f = n.image
                        , m = 0
                        , x = 0;
                    n.width === void 0 && n.height === void 0 ? r.fill.image.width !== void 0 && r.fill.image.height !== void 0 ? (m = r.fill.image.width + 1,
                        x = r.fill.image.height) : (m = h + 1,
                        x = h) : (m = n.width,
                        x = n.height);
                    var S = document.createElementNS(i.globals.SVGNS, "pattern");
                    $.setAttrs(S, {
                        id: n.patternID,
                        patternUnits: n.patternUnits ? n.patternUnits : "userSpaceOnUse",
                        width: m + "px",
                        height: x + "px"
                    });
                    var _ = document.createElementNS(i.globals.SVGNS, "image");
                    S.appendChild(_),
                        _.setAttributeNS(window.SVG.xlink, "href", f),
                        $.setAttrs(_, {
                            x: 0,
                            y: 0,
                            preserveAspectRatio: "none",
                            width: m + "px",
                            height: x + "px"
                        }),
                        _.style.opacity = n.opacity,
                        i.globals.dom.elDefs.node.appendChild(S)
                }
            }, {
                key: "getSeriesIndex",
                value: function (n) {
                    var i = this.w
                        , r = i.config.chart.type;
                    return (r === "bar" || r === "rangeBar") && i.config.plotOptions.bar.distributed || r === "heatmap" || r === "treemap" ? this.seriesIndex = n.seriesNumber : this.seriesIndex = n.seriesNumber % i.globals.series.length,
                        this.seriesIndex
                }
            }, {
                key: "fillPath",
                value: function (n) {
                    var i = this.w;
                    this.opts = n;
                    var r, c, d, h = this.w.config;
                    this.seriesIndex = this.getSeriesIndex(n);
                    var f = this.getFillColors()[this.seriesIndex];
                    i.globals.seriesColors[this.seriesIndex] !== void 0 && (f = i.globals.seriesColors[this.seriesIndex]),
                    typeof f == "function" && (f = f({
                        seriesIndex: this.seriesIndex,
                        dataPointIndex: n.dataPointIndex,
                        value: n.value,
                        w: i
                    }));
                    var m = n.fillType ? n.fillType : this.getFillType(this.seriesIndex)
                        , x = Array.isArray(h.fill.opacity) ? h.fill.opacity[this.seriesIndex] : h.fill.opacity;
                    n.color && (f = n.color),
                    f || (f = "#fff",
                        console.warn("undefined color - ApexCharts"));
                    var S = f;
                    if (f.indexOf("rgb") === -1 ? f.length < 9 && (S = M.hexToRgba(f, x)) : f.indexOf("rgba") > -1 && (x = M.getOpacityFromRGBA(f)),
                    n.opacity && (x = n.opacity),
                    m === "pattern" && (c = this.handlePatternFill({
                        fillConfig: n.fillConfig,
                        patternFill: c,
                        fillColor: f,
                        fillOpacity: x,
                        defaultColor: S
                    })),
                    m === "gradient" && (d = this.handleGradientFill({
                        fillConfig: n.fillConfig,
                        fillColor: f,
                        fillOpacity: x,
                        i: this.seriesIndex
                    })),
                    m === "image") {
                        var _ = h.fill.image.src
                            , k = n.patternID ? n.patternID : "";
                        this.clippedImgArea({
                            opacity: x,
                            image: Array.isArray(_) ? n.seriesNumber < _.length ? _[n.seriesNumber] : _[0] : _,
                            width: n.width ? n.width : void 0,
                            height: n.height ? n.height : void 0,
                            patternUnits: n.patternUnits,
                            patternID: "pattern".concat(i.globals.cuid).concat(n.seriesNumber + 1).concat(k)
                        }),
                            r = "url(#pattern".concat(i.globals.cuid).concat(n.seriesNumber + 1).concat(k, ")")
                    } else
                        r = m === "gradient" ? d : m === "pattern" ? c : S;
                    return n.solid && (r = S),
                        r
                }
            }, {
                key: "getFillType",
                value: function (n) {
                    var i = this.w;
                    return Array.isArray(i.config.fill.type) ? i.config.fill.type[n] : i.config.fill.type
                }
            }, {
                key: "getFillColors",
                value: function () {
                    var n = this.w
                        , i = n.config
                        , r = this.opts
                        , c = [];
                    return n.globals.comboCharts ? n.config.series[this.seriesIndex].type === "line" ? Array.isArray(n.globals.stroke.colors) ? c = n.globals.stroke.colors : c.push(n.globals.stroke.colors) : Array.isArray(n.globals.fill.colors) ? c = n.globals.fill.colors : c.push(n.globals.fill.colors) : i.chart.type === "line" ? Array.isArray(n.globals.stroke.colors) ? c = n.globals.stroke.colors : c.push(n.globals.stroke.colors) : Array.isArray(n.globals.fill.colors) ? c = n.globals.fill.colors : c.push(n.globals.fill.colors),
                    r.fillColors !== void 0 && (c = [],
                        Array.isArray(r.fillColors) ? c = r.fillColors.slice() : c.push(r.fillColors)),
                        c
                }
            }, {
                key: "handlePatternFill",
                value: function (n) {
                    var i = n.fillConfig
                        , r = n.patternFill
                        , c = n.fillColor
                        , d = n.fillOpacity
                        , h = n.defaultColor
                        , f = this.w.config.fill;
                    i && (f = i);
                    var m = this.opts
                        , x = new $(this.ctx)
                        ,
                        S = Array.isArray(f.pattern.strokeWidth) ? f.pattern.strokeWidth[this.seriesIndex] : f.pattern.strokeWidth
                        , _ = c;
                    return Array.isArray(f.pattern.style) ? r = f.pattern.style[m.seriesNumber] !== void 0 ? x.drawPattern(f.pattern.style[m.seriesNumber], f.pattern.width, f.pattern.height, _, S, d) : h : r = x.drawPattern(f.pattern.style, f.pattern.width, f.pattern.height, _, S, d),
                        r
                }
            }, {
                key: "handleGradientFill",
                value: function (n) {
                    var i = n.fillColor
                        , r = n.fillOpacity
                        , c = n.fillConfig
                        , d = n.i
                        , h = this.w.config.fill;
                    c && (h = a(a({}, h), c));
                    var f, m = this.opts, x = new $(this.ctx), S = new M, _ = h.gradient.type, k = i,
                        L = h.gradient.opacityFrom === void 0 ? r : Array.isArray(h.gradient.opacityFrom) ? h.gradient.opacityFrom[d] : h.gradient.opacityFrom;
                    k.indexOf("rgba") > -1 && (L = M.getOpacityFromRGBA(k));
                    var N = h.gradient.opacityTo === void 0 ? r : Array.isArray(h.gradient.opacityTo) ? h.gradient.opacityTo[d] : h.gradient.opacityTo;
                    if (h.gradient.gradientToColors === void 0 || h.gradient.gradientToColors.length === 0)
                        f = h.gradient.shade === "dark" ? S.shadeColor(-1 * parseFloat(h.gradient.shadeIntensity), i.indexOf("rgb") > -1 ? M.rgb2hex(i) : i) : S.shadeColor(parseFloat(h.gradient.shadeIntensity), i.indexOf("rgb") > -1 ? M.rgb2hex(i) : i);
                    else if (h.gradient.gradientToColors[m.seriesNumber]) {
                        var H = h.gradient.gradientToColors[m.seriesNumber];
                        f = H,
                        H.indexOf("rgba") > -1 && (N = M.getOpacityFromRGBA(H))
                    } else
                        f = i;
                    if (h.gradient.gradientFrom && (k = h.gradient.gradientFrom),
                    h.gradient.gradientTo && (f = h.gradient.gradientTo),
                        h.gradient.inverseColors) {
                        var z = k;
                        k = f,
                            f = z
                    }
                    return k.indexOf("rgb") > -1 && (k = M.rgb2hex(k)),
                    f.indexOf("rgb") > -1 && (f = M.rgb2hex(f)),
                        x.drawGradient(_, k, f, L, N, m.size, h.gradient.stops, h.gradient.colorStops, d)
                }
            }]),
                j
        }()
            , tt = function () {
            function j(n, i) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "setGlobalMarkerSize",
                value: function () {
                    var n = this.w;
                    if (n.globals.markers.size = Array.isArray(n.config.markers.size) ? n.config.markers.size : [n.config.markers.size],
                    n.globals.markers.size.length > 0) {
                        if (n.globals.markers.size.length < n.globals.series.length + 1)
                            for (var i = 0; i <= n.globals.series.length; i++)
                                n.globals.markers.size[i] === void 0 && n.globals.markers.size.push(n.globals.markers.size[0])
                    } else
                        n.globals.markers.size = n.config.series.map(function (r) {
                            return n.config.markers.size
                        })
                }
            }, {
                key: "plotChartMarkers",
                value: function (n, i, r, c) {
                    var d, h = arguments.length > 4 && arguments[4] !== void 0 && arguments[4], f = this.w, m = i,
                        x = n, S = null, _ = new $(this.ctx),
                        k = f.config.markers.discrete && f.config.markers.discrete.length;
                    if ((f.globals.markers.size[i] > 0 || h || k) && (S = _.group({
                        class: h || k ? "" : "apexcharts-series-markers"
                    })).attr("clip-path", "url(#gridRectMarkerMask".concat(f.globals.cuid, ")")),
                        Array.isArray(x.x))
                        for (var L = 0; L < x.x.length; L++) {
                            var N = r;
                            r === 1 && L === 0 && (N = 0),
                            r === 1 && L === 1 && (N = 1);
                            var H = "apexcharts-marker";
                            if (f.config.chart.type !== "line" && f.config.chart.type !== "area" || f.globals.comboCharts || f.config.tooltip.intersect || (H += " no-pointer-events"),
                            (Array.isArray(f.config.markers.size) ? f.globals.markers.size[i] > 0 : f.config.markers.size > 0) || h || k) {
                                M.isNumber(x.y[L]) ? H += " w".concat(M.randomId()) : H = "apexcharts-nullpoint";
                                var z = this.getMarkerConfig({
                                    cssClass: H,
                                    seriesIndex: i,
                                    dataPointIndex: N
                                });
                                f.config.series[m].data[N] && (f.config.series[m].data[N].fillColor && (z.pointFillColor = f.config.series[m].data[N].fillColor),
                                f.config.series[m].data[N].strokeColor && (z.pointStrokeColor = f.config.series[m].data[N].strokeColor)),
                                c && (z.pSize = c),
                                (x.x[L] < 0 || x.x[L] > f.globals.gridWidth || x.y[L] < -f.globals.markers.largestSize || x.y[L] > f.globals.gridHeight + f.globals.markers.largestSize) && (z.pSize = 0),
                                    (d = _.drawMarker(x.x[L], x.y[L], z)).attr("rel", N),
                                    d.attr("j", N),
                                    d.attr("index", i),
                                    d.node.setAttribute("default-marker-size", z.pSize),
                                    new F(this.ctx).setSelectionFilter(d, i, N),
                                    this.addEvents(d),
                                S && S.add(d)
                            } else
                                f.globals.pointsArray[i] === void 0 && (f.globals.pointsArray[i] = []),
                                    f.globals.pointsArray[i].push([x.x[L], x.y[L]])
                        }
                    return S
                }
            }, {
                key: "getMarkerConfig",
                value: function (n) {
                    var i = n.cssClass
                        , r = n.seriesIndex
                        , c = n.dataPointIndex
                        , d = c === void 0 ? null : c
                        , h = n.finishRadius
                        , f = h === void 0 ? null : h
                        , m = this.w
                        , x = this.getMarkerStyle(r)
                        , S = m.globals.markers.size[r]
                        , _ = m.config.markers;
                    return d !== null && _.discrete.length && _.discrete.map(function (k) {
                        k.seriesIndex === r && k.dataPointIndex === d && (x.pointStrokeColor = k.strokeColor,
                            x.pointFillColor = k.fillColor,
                            S = k.size,
                            x.pointShape = k.shape)
                    }),
                        {
                            pSize: f === null ? S : f,
                            pRadius: _.radius,
                            width: Array.isArray(_.width) ? _.width[r] : _.width,
                            height: Array.isArray(_.height) ? _.height[r] : _.height,
                            pointStrokeWidth: Array.isArray(_.strokeWidth) ? _.strokeWidth[r] : _.strokeWidth,
                            pointStrokeColor: x.pointStrokeColor,
                            pointFillColor: x.pointFillColor,
                            shape: x.pointShape || (Array.isArray(_.shape) ? _.shape[r] : _.shape),
                            class: i,
                            pointStrokeOpacity: Array.isArray(_.strokeOpacity) ? _.strokeOpacity[r] : _.strokeOpacity,
                            pointStrokeDashArray: Array.isArray(_.strokeDashArray) ? _.strokeDashArray[r] : _.strokeDashArray,
                            pointFillOpacity: Array.isArray(_.fillOpacity) ? _.fillOpacity[r] : _.fillOpacity,
                            seriesIndex: r
                        }
                }
            }, {
                key: "addEvents",
                value: function (n) {
                    var i = this.w
                        , r = new $(this.ctx);
                    n.node.addEventListener("mouseenter", r.pathMouseEnter.bind(this.ctx, n)),
                        n.node.addEventListener("mouseleave", r.pathMouseLeave.bind(this.ctx, n)),
                        n.node.addEventListener("mousedown", r.pathMouseDown.bind(this.ctx, n)),
                        n.node.addEventListener("click", i.config.markers.onClick),
                        n.node.addEventListener("dblclick", i.config.markers.onDblClick),
                        n.node.addEventListener("touchstart", r.pathMouseDown.bind(this.ctx, n), {
                            passive: !0
                        })
                }
            }, {
                key: "getMarkerStyle",
                value: function (n) {
                    var i = this.w
                        , r = i.globals.markers.colors
                        , c = i.config.markers.strokeColor || i.config.markers.strokeColors;
                    return {
                        pointStrokeColor: Array.isArray(c) ? c[n] : c,
                        pointFillColor: Array.isArray(r) ? r[n] : r
                    }
                }
            }]),
                j
        }()
            , ft = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.initialAnim = this.w.config.chart.animations.enabled,
                    this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled
            }

            return p(j, [{
                key: "draw",
                value: function (n, i, r) {
                    var c = this.w
                        , d = new $(this.ctx)
                        , h = r.realIndex
                        , f = r.pointsPos
                        , m = r.zRatio
                        , x = r.elParent
                        , S = d.group({
                        class: "apexcharts-series-markers apexcharts-series-".concat(c.config.chart.type)
                    });
                    if (S.attr("clip-path", "url(#gridRectMarkerMask".concat(c.globals.cuid, ")")),
                        Array.isArray(f.x))
                        for (var _ = 0; _ < f.x.length; _++) {
                            var k = i + 1
                                , L = !0;
                            i === 0 && _ === 0 && (k = 0),
                            i === 0 && _ === 1 && (k = 1);
                            var N = 0
                                , H = c.globals.markers.size[h];
                            if (m !== 1 / 0) {
                                var z = c.config.plotOptions.bubble;
                                H = c.globals.seriesZ[h][k],
                                z.zScaling && (H /= m),
                                z.minBubbleRadius && H < z.minBubbleRadius && (H = z.minBubbleRadius),
                                z.maxBubbleRadius && H > z.maxBubbleRadius && (H = z.maxBubbleRadius)
                            }
                            c.config.chart.animations.enabled || (N = H);
                            var q = f.x[_]
                                , Q = f.y[_];
                            if (N = N || 0,
                            Q !== null && c.globals.series[h][k] !== void 0 || (L = !1),
                                L) {
                                var b = this.drawPoint(q, Q, N, H, h, k, i);
                                S.add(b)
                            }
                            x.add(S)
                        }
                }
            }, {
                key: "drawPoint",
                value: function (n, i, r, c, d, h, f) {
                    var m = this.w
                        , x = d
                        , S = new O(this.ctx)
                        , _ = new F(this.ctx)
                        , k = new je(this.ctx)
                        , L = new tt(this.ctx)
                        , N = new $(this.ctx)
                        , H = L.getMarkerConfig({
                        cssClass: "apexcharts-marker",
                        seriesIndex: x,
                        dataPointIndex: h,
                        finishRadius: m.config.chart.type === "bubble" || m.globals.comboCharts && m.config.series[d] && m.config.series[d].type === "bubble" ? c : null
                    });
                    c = H.pSize;
                    var z, q = k.fillPath({
                        seriesNumber: d,
                        dataPointIndex: h,
                        color: H.pointFillColor,
                        patternUnits: "objectBoundingBox",
                        value: m.globals.series[d][f]
                    });
                    if (H.shape === "circle" ? z = N.drawCircle(r) : H.shape !== "square" && H.shape !== "rect" || (z = N.drawRect(0, 0, H.width - H.pointStrokeWidth / 2, H.height - H.pointStrokeWidth / 2, H.pRadius)),
                    m.config.series[x].data[h] && m.config.series[x].data[h].fillColor && (q = m.config.series[x].data[h].fillColor),
                        z.attr({
                            x: n - H.width / 2 - H.pointStrokeWidth / 2,
                            y: i - H.height / 2 - H.pointStrokeWidth / 2,
                            cx: n,
                            cy: i,
                            fill: q,
                            "fill-opacity": H.pointFillOpacity,
                            stroke: H.pointStrokeColor,
                            r: c,
                            "stroke-width": H.pointStrokeWidth,
                            "stroke-dasharray": H.pointStrokeDashArray,
                            "stroke-opacity": H.pointStrokeOpacity
                        }),
                        m.config.chart.dropShadow.enabled) {
                        var Q = m.config.chart.dropShadow;
                        _.dropShadow(z, Q, d)
                    }
                    if (!this.initialAnim || m.globals.dataChanged || m.globals.resized)
                        m.globals.animationEnded = !0;
                    else {
                        var b = m.config.chart.animations.speed;
                        S.animateMarker(z, 0, H.shape === "circle" ? c : {
                            width: H.width,
                            height: H.height
                        }, b, m.globals.easing, function () {
                            window.setTimeout(function () {
                                S.animationCompleted(z)
                            }, 100)
                        })
                    }
                    if (m.globals.dataChanged && H.shape === "circle")
                        if (this.dynamicAnim) {
                            var E, B, X, K, ee = m.config.chart.animations.dynamicAnimation.speed;
                            (K = m.globals.previousPaths[d] && m.globals.previousPaths[d][f]) != null && (E = K.x,
                                B = K.y,
                                X = K.r !== void 0 ? K.r : c);
                            for (var pe = 0; pe < m.globals.collapsedSeries.length; pe++)
                                m.globals.collapsedSeries[pe].index === d && (ee = 1,
                                    c = 0);
                            n === 0 && i === 0 && (c = 0),
                                S.animateCircle(z, {
                                    cx: E,
                                    cy: B,
                                    r: X
                                }, {
                                    cx: n,
                                    cy: i,
                                    r: c
                                }, ee, m.globals.easing)
                        } else
                            z.attr({
                                r: c
                            });
                    return z.attr({
                        rel: h,
                        j: h,
                        index: d,
                        "default-marker-size": c
                    }),
                        _.setSelectionFilter(z, d, h),
                        L.addEvents(z),
                        z.node.classList.add("apexcharts-marker"),
                        z
                }
            }, {
                key: "centerTextInBubble",
                value: function (n) {
                    var i = this.w;
                    return {
                        y: n += parseInt(i.config.dataLabels.style.fontSize, 10) / 4
                    }
                }
            }]),
                j
        }()
            , mt = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "dataLabelsCorrection",
                value: function (n, i, r, c, d, h, f) {
                    var m = this.w
                        , x = !1
                        , S = new $(this.ctx).getTextRects(r, f)
                        , _ = S.width
                        , k = S.height;
                    i < 0 && (i = 0),
                    i > m.globals.gridHeight + k && (i = m.globals.gridHeight + k / 2),
                    m.globals.dataLabelsRects[c] === void 0 && (m.globals.dataLabelsRects[c] = []),
                        m.globals.dataLabelsRects[c].push({
                            x: n,
                            y: i,
                            width: _,
                            height: k
                        });
                    var L = m.globals.dataLabelsRects[c].length - 2
                        ,
                        N = m.globals.lastDrawnDataLabelsIndexes[c] !== void 0 ? m.globals.lastDrawnDataLabelsIndexes[c][m.globals.lastDrawnDataLabelsIndexes[c].length - 1] : 0;
                    if (m.globals.dataLabelsRects[c][L] !== void 0) {
                        var H = m.globals.dataLabelsRects[c][N];
                        (n > H.x + H.width || i > H.y + H.height || i + k < H.y || n + _ < H.x) && (x = !0)
                    }
                    return (d === 0 || h) && (x = !0),
                        {
                            x: n,
                            y: i,
                            textRects: S,
                            drawnextLabel: x
                        }
                }
            }, {
                key: "drawDataLabel",
                value: function (n) {
                    var i = this
                        , r = n.type
                        , c = n.pos
                        , d = n.i
                        , h = n.j
                        , f = n.isRangeStart
                        , m = n.strokeWidth
                        , x = m === void 0 ? 2 : m
                        , S = this.w
                        , _ = new $(this.ctx)
                        , k = S.config.dataLabels
                        , L = 0
                        , N = 0
                        , H = h
                        , z = null;
                    if (!k.enabled || !Array.isArray(c.x))
                        return z;
                    z = _.group({
                        class: "apexcharts-data-labels"
                    });
                    for (var q = 0; q < c.x.length; q++)
                        if (L = c.x[q] + k.offsetX,
                            N = c.y[q] + k.offsetY + x,
                            !isNaN(L)) {
                            h === 1 && q === 0 && (H = 0),
                            h === 1 && q === 1 && (H = 1);
                            var Q = S.globals.series[d][H];
                            r === "rangeArea" && (Q = f ? S.globals.seriesRangeStart[d][H] : S.globals.seriesRangeEnd[d][H]);
                            var b = ""
                                , E = function (B) {
                                return S.config.dataLabels.formatter(B, {
                                    ctx: i.ctx,
                                    seriesIndex: d,
                                    dataPointIndex: H,
                                    w: S
                                })
                            };
                            S.config.chart.type === "bubble" ? (b = E(Q = S.globals.seriesZ[d][H]),
                                N = c.y[q],
                                N = new ft(this.ctx).centerTextInBubble(N, d, H).y) : Q !== void 0 && (b = E(Q)),
                                this.plotDataLabelsText({
                                    x: L,
                                    y: N,
                                    text: b,
                                    i: d,
                                    j: H,
                                    parent: z,
                                    offsetCorrection: !0,
                                    dataLabelsConfig: S.config.dataLabels
                                })
                        }
                    return z
                }
            }, {
                key: "plotDataLabelsText",
                value: function (n) {
                    var i = this.w
                        , r = new $(this.ctx)
                        , c = n.x
                        , d = n.y
                        , h = n.i
                        , f = n.j
                        , m = n.text
                        , x = n.textAnchor
                        , S = n.fontSize
                        , _ = n.parent
                        , k = n.dataLabelsConfig
                        , L = n.color
                        , N = n.alwaysDrawDataLabel
                        , H = n.offsetCorrection;
                    if (!(Array.isArray(i.config.dataLabels.enabledOnSeries) && i.config.dataLabels.enabledOnSeries.indexOf(h) < 0)) {
                        var z = {
                            x: c,
                            y: d,
                            drawnextLabel: !0,
                            textRects: null
                        };
                        H && (z = this.dataLabelsCorrection(c, d, m, h, f, N, parseInt(k.style.fontSize, 10))),
                        i.globals.zoomed || (c = z.x,
                            d = z.y),
                        z.textRects && (c < -20 - z.textRects.width || c > i.globals.gridWidth + z.textRects.width + 30) && (m = "");
                        var q = i.globals.dataLabels.style.colors[h];
                        ((i.config.chart.type === "bar" || i.config.chart.type === "rangeBar") && i.config.plotOptions.bar.distributed || i.config.dataLabels.distributed) && (q = i.globals.dataLabels.style.colors[f]),
                        typeof q == "function" && (q = q({
                            series: i.globals.series,
                            seriesIndex: h,
                            dataPointIndex: f,
                            w: i
                        })),
                        L && (q = L);
                        var Q = k.offsetX
                            , b = k.offsetY;
                        if (i.config.chart.type !== "bar" && i.config.chart.type !== "rangeBar" || (Q = 0,
                            b = 0),
                            z.drawnextLabel) {
                            var E = r.drawText({
                                width: 100,
                                height: parseInt(k.style.fontSize, 10),
                                x: c + Q,
                                y: d + b,
                                foreColor: q,
                                textAnchor: x || k.textAnchor,
                                text: m,
                                fontSize: S || k.style.fontSize,
                                fontFamily: k.style.fontFamily,
                                fontWeight: k.style.fontWeight || "normal"
                            });
                            if (E.attr({
                                class: "apexcharts-datalabel",
                                cx: c,
                                cy: d
                            }),
                                k.dropShadow.enabled) {
                                var B = k.dropShadow;
                                new F(this.ctx).dropShadow(E, B)
                            }
                            _.add(E),
                            i.globals.lastDrawnDataLabelsIndexes[h] === void 0 && (i.globals.lastDrawnDataLabelsIndexes[h] = []),
                                i.globals.lastDrawnDataLabelsIndexes[h].push(f)
                        }
                    }
                }
            }, {
                key: "addBackgroundToDataLabel",
                value: function (n, i) {
                    var r = this.w
                        , c = r.config.dataLabels.background
                        , d = c.padding
                        , h = c.padding / 2
                        , f = i.width
                        , m = i.height
                        ,
                        x = new $(this.ctx).drawRect(i.x - d, i.y - h / 2, f + 2 * d, m + h, c.borderRadius, r.config.chart.background === "transparent" ? "#fff" : r.config.chart.background, c.opacity, c.borderWidth, c.borderColor);
                    return c.dropShadow.enabled && new F(this.ctx).dropShadow(x, c.dropShadow),
                        x
                }
            }, {
                key: "dataLabelsBackground",
                value: function () {
                    var n = this.w;
                    if (n.config.chart.type !== "bubble")
                        for (var i = n.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"), r = 0; r < i.length; r++) {
                            var c = i[r]
                                , d = c.getBBox()
                                , h = null;
                            if (d.width && d.height && (h = this.addBackgroundToDataLabel(c, d)),
                                h) {
                                c.parentNode.insertBefore(h.node, c);
                                var f = c.getAttribute("fill");
                                n.config.chart.animations.enabled && !n.globals.resized && !n.globals.dataChanged ? h.animate().attr({
                                    fill: f
                                }) : h.attr({
                                    fill: f
                                }),
                                    c.setAttribute("fill", n.config.dataLabels.background.foreColor)
                            }
                        }
                }
            }, {
                key: "bringForward",
                value: function () {
                    for (var n = this.w, i = n.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"), r = n.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"), c = 0; c < i.length; c++)
                        r && r.insertBefore(i[c], r.nextSibling)
                }
            }]),
                j
        }()
            , bt = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.legendInactiveClass = "legend-mouseover-inactive"
            }

            return p(j, [{
                key: "getAllSeriesEls",
                value: function () {
                    return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series")
                }
            }, {
                key: "getSeriesByName",
                value: function (n) {
                    return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(M.escapeString(n), "']"))
                }
            }, {
                key: "isSeriesHidden",
                value: function (n) {
                    var i = this.getSeriesByName(n)
                        , r = parseInt(i.getAttribute("data:realIndex"), 10);
                    return {
                        isHidden: i.classList.contains("apexcharts-series-collapsed"),
                        realIndex: r
                    }
                }
            }, {
                key: "addCollapsedClassToSeries",
                value: function (n, i) {
                    var r = this.w;

                    function c(d) {
                        for (var h = 0; h < d.length; h++)
                            d[h].index === i && n.node.classList.add("apexcharts-series-collapsed")
                    }

                    c(r.globals.collapsedSeries),
                        c(r.globals.ancillaryCollapsedSeries)
                }
            }, {
                key: "toggleSeries",
                value: function (n) {
                    var i = this.isSeriesHidden(n);
                    return this.ctx.legend.legendHelpers.toggleDataSeries(i.realIndex, i.isHidden),
                        i.isHidden
                }
            }, {
                key: "showSeries",
                value: function (n) {
                    var i = this.isSeriesHidden(n);
                    i.isHidden && this.ctx.legend.legendHelpers.toggleDataSeries(i.realIndex, !0)
                }
            }, {
                key: "hideSeries",
                value: function (n) {
                    var i = this.isSeriesHidden(n);
                    i.isHidden || this.ctx.legend.legendHelpers.toggleDataSeries(i.realIndex, !1)
                }
            }, {
                key: "resetSeries",
                value: function () {
                    var n = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0]
                        , i = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1]
                        , r = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2]
                        , c = this.w
                        , d = M.clone(c.globals.initialSeries);
                    c.globals.previousPaths = [],
                        r ? (c.globals.collapsedSeries = [],
                            c.globals.ancillaryCollapsedSeries = [],
                            c.globals.collapsedSeriesIndices = [],
                            c.globals.ancillaryCollapsedSeriesIndices = []) : d = this.emptyCollapsedSeries(d),
                        c.config.series = d,
                    n && (i && (c.globals.zoomed = !1,
                        this.ctx.updateHelpers.revertDefaultAxisMinMax()),
                        this.ctx.updateHelpers._updateSeries(d, c.config.chart.animations.dynamicAnimation.enabled))
                }
            }, {
                key: "emptyCollapsedSeries",
                value: function (n) {
                    for (var i = this.w, r = 0; r < n.length; r++)
                        i.globals.collapsedSeriesIndices.indexOf(r) > -1 && (n[r].data = []);
                    return n
                }
            }, {
                key: "toggleSeriesOnHover",
                value: function (n, i) {
                    var r = this.w;
                    i || (i = n.target);
                    var c = r.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");
                    if (n.type === "mousemove") {
                        var d = parseInt(i.getAttribute("rel"), 10) - 1
                            , h = null
                            , f = null;
                        r.globals.axisCharts || r.config.chart.type === "radialBar" ? r.globals.axisCharts ? (h = r.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(d, "']")),
                            f = r.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(d, "']"))) : h = r.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(d + 1, "']")) : h = r.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(d + 1, "'] path"));
                        for (var m = 0; m < c.length; m++)
                            c[m].classList.add(this.legendInactiveClass);
                        h !== null && (r.globals.axisCharts || h.parentNode.classList.remove(this.legendInactiveClass),
                            h.classList.remove(this.legendInactiveClass),
                        f !== null && f.classList.remove(this.legendInactiveClass))
                    } else if (n.type === "mouseout")
                        for (var x = 0; x < c.length; x++)
                            c[x].classList.remove(this.legendInactiveClass)
                }
            }, {
                key: "highlightRangeInSeries",
                value: function (n, i) {
                    var r = this
                        , c = this.w
                        , d = c.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect")
                        , h = function (m) {
                        for (var x = 0; x < d.length; x++)
                            d[x].classList[m](r.legendInactiveClass)
                    };
                    if (n.type === "mousemove") {
                        var f = parseInt(i.getAttribute("rel"), 10) - 1;
                        h("add"),
                            function (m) {
                                for (var x = 0; x < d.length; x++) {
                                    var S = parseInt(d[x].getAttribute("val"), 10);
                                    S >= m.from && S <= m.to && d[x].classList.remove(r.legendInactiveClass)
                                }
                            }(c.config.plotOptions.heatmap.colorScale.ranges[f])
                    } else
                        n.type === "mouseout" && h("remove")
                }
            }, {
                key: "getActiveConfigSeriesIndex",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "asc"
                        , i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : []
                        , r = this.w
                        , c = 0;
                    if (r.config.series.length > 1) {
                        for (var d = r.config.series.map(function (f, m) {
                            return f.data && f.data.length > 0 && r.globals.collapsedSeriesIndices.indexOf(m) === -1 && (!r.globals.comboCharts || i.length === 0 || i.length && i.indexOf(r.config.series[m].type) > -1) ? m : -1
                        }), h = n === "asc" ? 0 : d.length - 1; n === "asc" ? h < d.length : h >= 0; n === "asc" ? h++ : h--)
                            if (d[h] !== -1) {
                                c = d[h];
                                break
                            }
                    }
                    return c
                }
            }, {
                key: "getBarSeriesIndices",
                value: function () {
                    return this.w.globals.comboCharts ? this.w.config.series.map(function (n, i) {
                        return n.type === "bar" || n.type === "column" ? i : -1
                    }).filter(function (n) {
                        return n !== -1
                    }) : this.w.config.series.map(function (n, i) {
                        return i
                    })
                }
            }, {
                key: "getPreviousPaths",
                value: function () {
                    var n = this.w;

                    function i(h, f, m) {
                        for (var x = h[f].childNodes, S = {
                            type: m,
                            paths: [],
                            realIndex: h[f].getAttribute("data:realIndex")
                        }, _ = 0; _ < x.length; _++)
                            if (x[_].hasAttribute("pathTo")) {
                                var k = x[_].getAttribute("pathTo");
                                S.paths.push({
                                    d: k
                                })
                            }
                        n.globals.previousPaths.push(S)
                    }

                    n.globals.previousPaths = [],
                        ["line", "area", "bar", "rangebar", "rangeArea", "candlestick", "radar"].forEach(function (h) {
                            for (var f, m = (f = h,
                                n.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(f, "-series .apexcharts-series"))), x = 0; x < m.length; x++)
                                i(m, x, h)
                        }),
                        this.handlePrevBubbleScatterPaths("bubble"),
                        this.handlePrevBubbleScatterPaths("scatter");
                    var r = n.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(n.config.chart.type, " .apexcharts-series"));
                    if (r.length > 0)
                        for (var c = function (h) {
                            for (var f = n.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(n.config.chart.type, " .apexcharts-series[data\\:realIndex='").concat(h, "'] rect")), m = [], x = function (_) {
                                var k = function (N) {
                                    return f[_].getAttribute(N)
                                }
                                    , L = {
                                    x: parseFloat(k("x")),
                                    y: parseFloat(k("y")),
                                    width: parseFloat(k("width")),
                                    height: parseFloat(k("height"))
                                };
                                m.push({
                                    rect: L,
                                    color: f[_].getAttribute("color")
                                })
                            }, S = 0; S < f.length; S++)
                                x(S);
                            n.globals.previousPaths.push(m)
                        }, d = 0; d < r.length; d++)
                            c(d);
                    n.globals.axisCharts || (n.globals.previousPaths = n.globals.series)
                }
            }, {
                key: "handlePrevBubbleScatterPaths",
                value: function (n) {
                    var i = this.w
                        ,
                        r = i.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(n, "-series .apexcharts-series"));
                    if (r.length > 0)
                        for (var c = 0; c < r.length; c++) {
                            for (var d = i.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(n, "-series .apexcharts-series[data\\:realIndex='").concat(c, "'] circle")), h = [], f = 0; f < d.length; f++)
                                h.push({
                                    x: d[f].getAttribute("cx"),
                                    y: d[f].getAttribute("cy"),
                                    r: d[f].getAttribute("r")
                                });
                            i.globals.previousPaths.push(h)
                        }
                }
            }, {
                key: "clearPreviousPaths",
                value: function () {
                    var n = this.w;
                    n.globals.previousPaths = [],
                        n.globals.allSeriesCollapsed = !1
                }
            }, {
                key: "handleNoData",
                value: function () {
                    var n = this.w
                        , i = n.config.noData
                        , r = new $(this.ctx)
                        , c = n.globals.svgWidth / 2
                        , d = n.globals.svgHeight / 2
                        , h = "middle";
                    if (n.globals.noData = !0,
                        n.globals.animationEnded = !0,
                        i.align === "left" ? (c = 10,
                            h = "start") : i.align === "right" && (c = n.globals.svgWidth - 10,
                            h = "end"),
                        i.verticalAlign === "top" ? d = 50 : i.verticalAlign === "bottom" && (d = n.globals.svgHeight - 50),
                        c += i.offsetX,
                        d = d + parseInt(i.style.fontSize, 10) + 2 + i.offsetY,
                    i.text !== void 0 && i.text !== "") {
                        var f = r.drawText({
                            x: c,
                            y: d,
                            text: i.text,
                            textAnchor: h,
                            fontSize: i.style.fontSize,
                            fontFamily: i.style.fontFamily,
                            foreColor: i.style.color,
                            opacity: 1,
                            class: "apexcharts-text-nodata"
                        });
                        n.globals.dom.Paper.add(f)
                    }
                }
            }, {
                key: "setNullSeriesToZeroValues",
                value: function (n) {
                    for (var i = this.w, r = 0; r < n.length; r++)
                        if (n[r].length === 0)
                            for (var c = 0; c < n[i.globals.maxValsInArrayIndex].length; c++)
                                n[r].push(0);
                    return n
                }
            }, {
                key: "hasAllSeriesEqualX",
                value: function () {
                    for (var n = !0, i = this.w, r = this.filteredSeriesX(), c = 0; c < r.length - 1; c++)
                        if (r[c][0] !== r[c + 1][0]) {
                            n = !1;
                            break
                        }
                    return i.globals.allSeriesHasEqualX = n,
                        n
                }
            }, {
                key: "filteredSeriesX",
                value: function () {
                    var n = this.w.globals.seriesX.map(function (i) {
                        return i.length > 0 ? i : []
                    });
                    return n
                }
            }]),
                j
        }()
            , Pe = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.twoDSeries = [],
                    this.threeDSeries = [],
                    this.twoDSeriesX = [],
                    this.seriesGoals = [],
                    this.coreUtils = new V(this.ctx)
            }

            return p(j, [{
                key: "isMultiFormat",
                value: function () {
                    return this.isFormatXY() || this.isFormat2DArray()
                }
            }, {
                key: "isFormatXY",
                value: function () {
                    var n = this.w.config.series.slice()
                        , i = new bt(this.ctx);
                    if (this.activeSeriesIndex = i.getActiveConfigSeriesIndex(),
                    n[this.activeSeriesIndex].data !== void 0 && n[this.activeSeriesIndex].data.length > 0 && n[this.activeSeriesIndex].data[0] !== null && n[this.activeSeriesIndex].data[0].x !== void 0 && n[this.activeSeriesIndex].data[0] !== null)
                        return !0
                }
            }, {
                key: "isFormat2DArray",
                value: function () {
                    var n = this.w.config.series.slice()
                        , i = new bt(this.ctx);
                    if (this.activeSeriesIndex = i.getActiveConfigSeriesIndex(),
                    n[this.activeSeriesIndex].data !== void 0 && n[this.activeSeriesIndex].data.length > 0 && n[this.activeSeriesIndex].data[0] !== void 0 && n[this.activeSeriesIndex].data[0] !== null && n[this.activeSeriesIndex].data[0].constructor === Array)
                        return !0
                }
            }, {
                key: "handleFormat2DArray",
                value: function (n, i) {
                    for (var r = this.w.config, c = this.w.globals, d = r.chart.type === "boxPlot" || r.series[i].type === "boxPlot", h = 0; h < n[i].data.length; h++)
                        if (n[i].data[h][1] !== void 0 && (Array.isArray(n[i].data[h][1]) && n[i].data[h][1].length === 4 && !d ? this.twoDSeries.push(M.parseNumber(n[i].data[h][1][3])) : n[i].data[h].length >= 5 ? this.twoDSeries.push(M.parseNumber(n[i].data[h][4])) : this.twoDSeries.push(M.parseNumber(n[i].data[h][1])),
                            c.dataFormatXNumeric = !0),
                        r.xaxis.type === "datetime") {
                            var f = new Date(n[i].data[h][0]);
                            f = new Date(f).getTime(),
                                this.twoDSeriesX.push(f)
                        } else
                            this.twoDSeriesX.push(n[i].data[h][0]);
                    for (var m = 0; m < n[i].data.length; m++)
                        n[i].data[m][2] !== void 0 && (this.threeDSeries.push(n[i].data[m][2]),
                            c.isDataXYZ = !0)
                }
            }, {
                key: "handleFormatXY",
                value: function (n, i) {
                    var r = this.w.config
                        , c = this.w.globals
                        , d = new be(this.ctx)
                        , h = i;
                    c.collapsedSeriesIndices.indexOf(i) > -1 && (h = this.activeSeriesIndex);
                    for (var f = 0; f < n[i].data.length; f++)
                        n[i].data[f].y !== void 0 && (Array.isArray(n[i].data[f].y) ? this.twoDSeries.push(M.parseNumber(n[i].data[f].y[n[i].data[f].y.length - 1])) : this.twoDSeries.push(M.parseNumber(n[i].data[f].y))),
                            n[i].data[f].goals !== void 0 && Array.isArray(n[i].data[f].goals) ? (this.seriesGoals[i] === void 0 && (this.seriesGoals[i] = []),
                                this.seriesGoals[i].push(n[i].data[f].goals)) : (this.seriesGoals[i] === void 0 && (this.seriesGoals[i] = []),
                                this.seriesGoals[i].push(null));
                    for (var m = 0; m < n[h].data.length; m++) {
                        var x = typeof n[h].data[m].x == "string"
                            , S = Array.isArray(n[h].data[m].x)
                            , _ = !S && !!d.isValidDate(n[h].data[m].x);
                        if (x || _)
                            if (x || r.xaxis.convertedCatToNumeric) {
                                var k = c.isBarHorizontal && c.isRangeData;
                                r.xaxis.type !== "datetime" || k ? (this.fallbackToCategory = !0,
                                    this.twoDSeriesX.push(n[h].data[m].x),
                                isNaN(n[h].data[m].x) || this.w.config.xaxis.type === "category" || typeof n[h].data[m].x == "string" || (c.isXNumeric = !0)) : this.twoDSeriesX.push(d.parseDate(n[h].data[m].x))
                            } else
                                r.xaxis.type === "datetime" ? this.twoDSeriesX.push(d.parseDate(n[h].data[m].x.toString())) : (c.dataFormatXNumeric = !0,
                                    c.isXNumeric = !0,
                                    this.twoDSeriesX.push(parseFloat(n[h].data[m].x)));
                        else
                            S ? (this.fallbackToCategory = !0,
                                this.twoDSeriesX.push(n[h].data[m].x)) : (c.isXNumeric = !0,
                                c.dataFormatXNumeric = !0,
                                this.twoDSeriesX.push(n[h].data[m].x))
                    }
                    if (n[i].data[0] && n[i].data[0].z !== void 0) {
                        for (var L = 0; L < n[i].data.length; L++)
                            this.threeDSeries.push(n[i].data[L].z);
                        c.isDataXYZ = !0
                    }
                }
            }, {
                key: "handleRangeData",
                value: function (n, i) {
                    var r = this.w.globals
                        , c = {};
                    return this.isFormat2DArray() ? c = this.handleRangeDataFormat("array", n, i) : this.isFormatXY() && (c = this.handleRangeDataFormat("xy", n, i)),
                        r.seriesRangeStart.push(c.start),
                        r.seriesRangeEnd.push(c.end),
                        r.seriesRange.push(c.rangeUniques),
                        r.seriesRange.forEach(function (d, h) {
                            d && d.forEach(function (f, m) {
                                f.y.forEach(function (x, S) {
                                    for (var _ = 0; _ < f.y.length; _++)
                                        if (S !== _) {
                                            var k = x.y1
                                                , L = x.y2
                                                , N = f.y[_].y1;
                                            k <= f.y[_].y2 && N <= L && (f.overlaps.indexOf(x.rangeName) < 0 && f.overlaps.push(x.rangeName),
                                            f.overlaps.indexOf(f.y[_].rangeName) < 0 && f.overlaps.push(f.y[_].rangeName))
                                        }
                                })
                            })
                        }),
                        c
                }
            }, {
                key: "handleCandleStickBoxData",
                value: function (n, i) {
                    var r = this.w.globals
                        , c = {};
                    return this.isFormat2DArray() ? c = this.handleCandleStickBoxDataFormat("array", n, i) : this.isFormatXY() && (c = this.handleCandleStickBoxDataFormat("xy", n, i)),
                        r.seriesCandleO[i] = c.o,
                        r.seriesCandleH[i] = c.h,
                        r.seriesCandleM[i] = c.m,
                        r.seriesCandleL[i] = c.l,
                        r.seriesCandleC[i] = c.c,
                        c
                }
            }, {
                key: "handleRangeDataFormat",
                value: function (n, i, r) {
                    var c = []
                        , d = []
                        , h = i[r].data.filter(function (S, _, k) {
                        return _ === k.findIndex(function (L) {
                            return L.x === S.x
                        })
                    }).map(function (S, _) {
                        return {
                            x: S.x,
                            overlaps: [],
                            y: []
                        }
                    });
                    if (n === "array")
                        for (var f = 0; f < i[r].data.length; f++)
                            Array.isArray(i[r].data[f]) ? (c.push(i[r].data[f][1][0]),
                                d.push(i[r].data[f][1][1])) : (c.push(i[r].data[f]),
                                d.push(i[r].data[f]));
                    else if (n === "xy")
                        for (var m = function (S) {
                            var _ = Array.isArray(i[r].data[S].y)
                                , k = M.randomId()
                                , L = i[r].data[S].x
                                , N = {
                                y1: _ ? i[r].data[S].y[0] : i[r].data[S].y,
                                y2: _ ? i[r].data[S].y[1] : i[r].data[S].y,
                                rangeName: k
                            };
                            i[r].data[S].rangeName = k;
                            var H = h.findIndex(function (z) {
                                return z.x === L
                            });
                            h[H].y.push(N),
                                c.push(N.y1),
                                d.push(N.y2)
                        }, x = 0; x < i[r].data.length; x++)
                            m(x);
                    return {
                        start: c,
                        end: d,
                        rangeUniques: h
                    }
                }
            }, {
                key: "handleCandleStickBoxDataFormat",
                value: function (n, i, r) {
                    var c = this.w
                        , d = c.config.chart.type === "boxPlot" || c.config.series[r].type === "boxPlot"
                        , h = []
                        , f = []
                        , m = []
                        , x = []
                        , S = [];
                    if (n === "array")
                        if (d && i[r].data[0].length === 6 || !d && i[r].data[0].length === 5)
                            for (var _ = 0; _ < i[r].data.length; _++)
                                h.push(i[r].data[_][1]),
                                    f.push(i[r].data[_][2]),
                                    d ? (m.push(i[r].data[_][3]),
                                        x.push(i[r].data[_][4]),
                                        S.push(i[r].data[_][5])) : (x.push(i[r].data[_][3]),
                                        S.push(i[r].data[_][4]));
                        else
                            for (var k = 0; k < i[r].data.length; k++)
                                Array.isArray(i[r].data[k][1]) && (h.push(i[r].data[k][1][0]),
                                    f.push(i[r].data[k][1][1]),
                                    d ? (m.push(i[r].data[k][1][2]),
                                        x.push(i[r].data[k][1][3]),
                                        S.push(i[r].data[k][1][4])) : (x.push(i[r].data[k][1][2]),
                                        S.push(i[r].data[k][1][3])));
                    else if (n === "xy")
                        for (var L = 0; L < i[r].data.length; L++)
                            Array.isArray(i[r].data[L].y) && (h.push(i[r].data[L].y[0]),
                                f.push(i[r].data[L].y[1]),
                                d ? (m.push(i[r].data[L].y[2]),
                                    x.push(i[r].data[L].y[3]),
                                    S.push(i[r].data[L].y[4])) : (x.push(i[r].data[L].y[2]),
                                    S.push(i[r].data[L].y[3])));
                    return {
                        o: h,
                        h: f,
                        m,
                        l: x,
                        c: S
                    }
                }
            }, {
                key: "parseDataAxisCharts",
                value: function (n) {
                    var i, r = this, c = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.ctx,
                        d = this.w.config, h = this.w.globals, f = new be(c),
                        m = d.labels.length > 0 ? d.labels.slice() : d.xaxis.categories.slice();
                    if (h.isRangeBar = d.chart.type === "rangeBar" && h.isBarHorizontal,
                        h.hasXaxisGroups = d.xaxis.type === "category" && d.xaxis.group.groups.length > 0,
                    h.hasXaxisGroups && (h.groups = d.xaxis.group.groups),
                        h.hasSeriesGroups = (i = n[0]) === null || i === void 0 ? void 0 : i.group,
                        h.hasSeriesGroups) {
                        var x = []
                            , S = A(new Set(n.map(function (N) {
                            return N.group
                        })));
                        n.forEach(function (N, H) {
                            var z = S.indexOf(N.group);
                            x[z] || (x[z] = []),
                                x[z].push(N.name)
                        }),
                            h.seriesGroups = x
                    }
                    for (var _ = function () {
                        for (var N = 0; N < m.length; N++)
                            if (typeof m[N] == "string") {
                                if (!f.isValidDate(m[N]))
                                    throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
                                r.twoDSeriesX.push(f.parseDate(m[N]))
                            } else
                                r.twoDSeriesX.push(m[N])
                    }, k = 0; k < n.length; k++) {
                        if (this.twoDSeries = [],
                            this.twoDSeriesX = [],
                            this.threeDSeries = [],
                        n[k].data === void 0)
                            return void console.error("It is a possibility that you may have not included 'data' property in series.");
                        if (d.chart.type !== "rangeBar" && d.chart.type !== "rangeArea" && n[k].type !== "rangeBar" && n[k].type !== "rangeArea" || (h.isRangeData = !0,
                        d.chart.type !== "rangeBar" && d.chart.type !== "rangeArea" || this.handleRangeData(n, k)),
                            this.isMultiFormat())
                            this.isFormat2DArray() ? this.handleFormat2DArray(n, k) : this.isFormatXY() && this.handleFormatXY(n, k),
                            d.chart.type !== "candlestick" && n[k].type !== "candlestick" && d.chart.type !== "boxPlot" && n[k].type !== "boxPlot" || this.handleCandleStickBoxData(n, k),
                                h.series.push(this.twoDSeries),
                                h.labels.push(this.twoDSeriesX),
                                h.seriesX.push(this.twoDSeriesX),
                                h.seriesGoals = this.seriesGoals,
                            k !== this.activeSeriesIndex || this.fallbackToCategory || (h.isXNumeric = !0);
                        else {
                            d.xaxis.type === "datetime" ? (h.isXNumeric = !0,
                                _(),
                                h.seriesX.push(this.twoDSeriesX)) : d.xaxis.type === "numeric" && (h.isXNumeric = !0,
                            m.length > 0 && (this.twoDSeriesX = m,
                                h.seriesX.push(this.twoDSeriesX))),
                                h.labels.push(this.twoDSeriesX);
                            var L = n[k].data.map(function (N) {
                                return M.parseNumber(N)
                            });
                            h.series.push(L)
                        }
                        h.seriesZ.push(this.threeDSeries),
                            n[k].name !== void 0 ? h.seriesNames.push(n[k].name) : h.seriesNames.push("series-" + parseInt(k + 1, 10)),
                            n[k].color !== void 0 ? h.seriesColors.push(n[k].color) : h.seriesColors.push(void 0)
                    }
                    return this.w
                }
            }, {
                key: "parseDataNonAxisCharts",
                value: function (n) {
                    var i = this.w.globals
                        , r = this.w.config;
                    i.series = n.slice(),
                        i.seriesNames = r.labels.slice();
                    for (var c = 0; c < i.series.length; c++)
                        i.seriesNames[c] === void 0 && i.seriesNames.push("series-" + (c + 1));
                    return this.w
                }
            }, {
                key: "handleExternalLabelsData",
                value: function (n) {
                    var i = this.w.config
                        , r = this.w.globals;
                    i.xaxis.categories.length > 0 ? r.labels = i.xaxis.categories : i.labels.length > 0 ? r.labels = i.labels.slice() : this.fallbackToCategory ? (r.labels = r.labels[0],
                    r.seriesRange.length && (r.seriesRange.map(function (c) {
                        c.forEach(function (d) {
                            r.labels.indexOf(d.x) < 0 && d.x && r.labels.push(d.x)
                        })
                    }),
                        r.labels = Array.from(new Set(r.labels.map(JSON.stringify)), JSON.parse)),
                    i.xaxis.convertedCatToNumeric && (new fe(i).convertCatToNumericXaxis(i, this.ctx, r.seriesX[0]),
                        this._generateExternalLabels(n))) : this._generateExternalLabels(n)
                }
            }, {
                key: "_generateExternalLabels",
                value: function (n) {
                    var i = this.w.globals
                        , r = this.w.config
                        , c = [];
                    if (i.axisCharts) {
                        if (i.series.length > 0)
                            if (this.isFormatXY())
                                for (var d = r.series.map(function (_, k) {
                                    return _.data.filter(function (L, N, H) {
                                        return H.findIndex(function (z) {
                                            return z.x === L.x
                                        }) === N
                                    })
                                }), h = d.reduce(function (_, k, L, N) {
                                    return N[_].length > k.length ? _ : L
                                }, 0), f = 0; f < d[h].length; f++)
                                    c.push(f + 1);
                            else
                                for (var m = 0; m < i.series[i.maxValsInArrayIndex].length; m++)
                                    c.push(m + 1);
                        i.seriesX = [];
                        for (var x = 0; x < n.length; x++)
                            i.seriesX.push(c);
                        this.w.globals.isBarHorizontal || (i.isXNumeric = !0)
                    }
                    if (c.length === 0) {
                        c = i.axisCharts ? [] : i.series.map(function (_, k) {
                            return k + 1
                        });
                        for (var S = 0; S < n.length; S++)
                            i.seriesX.push(c)
                    }
                    i.labels = c,
                    r.xaxis.convertedCatToNumeric && (i.categoryLabels = c.map(function (_) {
                        return r.xaxis.labels.formatter(_)
                    })),
                        i.noLabelsProvided = !0
                }
            }, {
                key: "parseData",
                value: function (n) {
                    var i = this.w
                        , r = i.config
                        , c = i.globals;
                    if (this.excludeCollapsedSeriesInYAxis(),
                        this.fallbackToCategory = !1,
                        this.ctx.core.resetGlobals(),
                        this.ctx.core.isMultipleY(),
                        c.axisCharts ? (this.parseDataAxisCharts(n),
                            this.coreUtils.getLargestSeries()) : this.parseDataNonAxisCharts(n),
                        r.chart.stacked) {
                        var d = new bt(this.ctx);
                        c.series = d.setNullSeriesToZeroValues(c.series)
                    }
                    this.coreUtils.getSeriesTotals(),
                    c.axisCharts && (c.stackedSeriesTotals = this.coreUtils.getStackedSeriesTotals(),
                        c.stackedSeriesTotalsByGroups = this.coreUtils.getStackedSeriesTotalsByGroups()),
                        this.coreUtils.getPercentSeries(),
                    c.dataFormatXNumeric || c.isXNumeric && (r.xaxis.type !== "numeric" || r.labels.length !== 0 || r.xaxis.categories.length !== 0) || this.handleExternalLabelsData(n);
                    for (var h = this.coreUtils.getCategoryLabels(c.labels), f = 0; f < h.length; f++)
                        if (Array.isArray(h[f])) {
                            c.isMultiLineX = !0;
                            break
                        }
                }
            }, {
                key: "excludeCollapsedSeriesInYAxis",
                value: function () {
                    var n = this
                        , i = this.w;
                    i.globals.ignoreYAxisIndexes = i.globals.collapsedSeries.map(function (r, c) {
                        if (n.w.globals.isMultipleYAxis && !i.config.chart.stacked)
                            return r.index
                    })
                }
            }]),
                j
        }()
            , Ae = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "getLabel",
                value: function (n, i, r, c) {
                    var d = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : []
                        , h = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : "12px"
                        , f = !(arguments.length > 6 && arguments[6] !== void 0) || arguments[6]
                        , m = this.w
                        , x = n[c] === void 0 ? "" : n[c]
                        , S = x
                        , _ = m.globals.xLabelFormatter
                        , k = m.config.xaxis.labels.formatter
                        , L = !1
                        , N = new de(this.ctx)
                        , H = x;
                    f && (S = N.xLabelFormat(_, x, H, {
                        i: c,
                        dateFormatter: new be(this.ctx).formatDate,
                        w: m
                    }),
                    k !== void 0 && (S = k(x, n[c], {
                        i: c,
                        dateFormatter: new be(this.ctx).formatDate,
                        w: m
                    })));
                    var z, q;
                    i.length > 0 ? (z = i[c].unit,
                        q = null,
                        i.forEach(function (B) {
                            B.unit === "month" ? q = "year" : B.unit === "day" ? q = "month" : B.unit === "hour" ? q = "day" : B.unit === "minute" && (q = "hour")
                        }),
                        L = q === z,
                        r = i[c].position,
                        S = i[c].value) : m.config.xaxis.type === "datetime" && k === void 0 && (S = ""),
                    S === void 0 && (S = ""),
                        S = Array.isArray(S) ? S : S.toString();
                    var Q = new $(this.ctx)
                        , b = {};
                    b = m.globals.rotateXLabels && f ? Q.getTextRects(S, parseInt(h, 10), null, "rotate(".concat(m.config.xaxis.labels.rotate, " 0 0)"), !1) : Q.getTextRects(S, parseInt(h, 10));
                    var E = !m.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
                    return !Array.isArray(S) && (S.indexOf("NaN") === 0 || S.toLowerCase().indexOf("invalid") === 0 || S.toLowerCase().indexOf("infinity") >= 0 || d.indexOf(S) >= 0 && E) && (S = ""),
                        {
                            x: r,
                            text: S,
                            textRect: b,
                            isBold: L
                        }
                }
            }, {
                key: "checkLabelBasedOnTickamount",
                value: function (n, i, r) {
                    var c = this.w
                        , d = c.config.xaxis.tickAmount;
                    return d === "dataPoints" && (d = Math.round(c.globals.gridWidth / 120)),
                    d > r || n % Math.round(r / (d + 1)) == 0 || (i.text = ""),
                        i
                }
            }, {
                key: "checkForOverflowingLabels",
                value: function (n, i, r, c, d) {
                    var h = this.w;
                    if (n === 0 && h.globals.skipFirstTimelinelabel && (i.text = ""),
                    n === r - 1 && h.globals.skipLastTimelinelabel && (i.text = ""),
                    h.config.xaxis.labels.hideOverlappingLabels && c.length > 0) {
                        var f = d[d.length - 1];
                        i.x < f.textRect.width / (h.globals.rotateXLabels ? Math.abs(h.config.xaxis.labels.rotate) / 12 : 1.01) + f.x && (i.text = "")
                    }
                    return i
                }
            }, {
                key: "checkForReversedLabels",
                value: function (n, i) {
                    var r = this.w;
                    return r.config.yaxis[n] && r.config.yaxis[n].reversed && i.reverse(),
                        i
                }
            }, {
                key: "isYAxisHidden",
                value: function (n) {
                    var i = this.w
                        , r = new V(this.ctx);
                    return !i.config.yaxis[n].show || !i.config.yaxis[n].showForNullSeries && r.isSeriesNull(n) && i.globals.collapsedSeriesIndices.indexOf(n) === -1
                }
            }, {
                key: "getYAxisForeColor",
                value: function (n, i) {
                    var r = this.w;
                    return Array.isArray(n) && r.globals.yAxisScale[i] && this.ctx.theme.pushExtraColors(n, r.globals.yAxisScale[i].result.length, !1),
                        n
                }
            }, {
                key: "drawYAxisTicks",
                value: function (n, i, r, c, d, h, f) {
                    var m = this.w
                        , x = new $(this.ctx)
                        , S = m.globals.translateY;
                    if (c.show && i > 0) {
                        m.config.yaxis[d].opposite === !0 && (n += c.width);
                        for (var _ = i; _ >= 0; _--) {
                            var k = S + i / 10 + m.config.yaxis[d].labels.offsetY - 1;
                            m.globals.isBarHorizontal && (k = h * _),
                            m.config.chart.type === "heatmap" && (k += h / 2);
                            var L = x.drawLine(n + r.offsetX - c.width + c.offsetX, k + c.offsetY, n + r.offsetX + c.offsetX, k + c.offsetY, c.color);
                            f.add(L),
                                S += h
                        }
                    }
                }
            }]),
                j
        }()
            , Ne = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "scaleSvgNode",
                value: function (n, i) {
                    var r = parseFloat(n.getAttributeNS(null, "width"))
                        , c = parseFloat(n.getAttributeNS(null, "height"));
                    n.setAttributeNS(null, "width", r * i),
                        n.setAttributeNS(null, "height", c * i),
                        n.setAttributeNS(null, "viewBox", "0 0 " + r + " " + c)
                }
            }, {
                key: "fixSvgStringForIe11",
                value: function (n) {
                    if (!M.isIE11())
                        return n.replace(/&nbsp;/g, "&#160;");
                    var i = 0
                        , r = n.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g, function (c) {
                        return ++i === 2 ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"' : c
                    });
                    return r = (r = r.replace(/xmlns:NS\d+=""/g, "")).replace(/NS\d+:(\w+:\w+=")/g, "$1")
                }
            }, {
                key: "getSvgString",
                value: function (n) {
                    n == null && (n = 1);
                    var i = this.w.globals.dom.Paper.svg();
                    if (n !== 1) {
                        var r = this.w.globals.dom.Paper.node.cloneNode(!0);
                        this.scaleSvgNode(r, n),
                            i = new XMLSerializer().serializeToString(r)
                    }
                    return this.fixSvgStringForIe11(i)
                }
            }, {
                key: "cleanup",
                value: function () {
                    var n = this.w
                        , i = n.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs")
                        , r = n.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs")
                        ,
                        c = n.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");
                    Array.prototype.forEach.call(c, function (d) {
                        d.setAttribute("width", 0)
                    }),
                    i && i[0] && (i[0].setAttribute("x", -500),
                        i[0].setAttribute("x1", -500),
                        i[0].setAttribute("x2", -500)),
                    r && r[0] && (r[0].setAttribute("y", -100),
                        r[0].setAttribute("y1", -100),
                        r[0].setAttribute("y2", -100))
                }
            }, {
                key: "svgUrl",
                value: function () {
                    this.cleanup();
                    var n = this.getSvgString()
                        , i = new Blob([n], {
                        type: "image/svg+xml;charset=utf-8"
                    });
                    return URL.createObjectURL(i)
                }
            }, {
                key: "dataURI",
                value: function (n) {
                    var i = this;
                    return new Promise(function (r) {
                            var c = i.w
                                , d = n ? n.scale || n.width / c.globals.svgWidth : 1;
                            i.cleanup();
                            var h = document.createElement("canvas");
                            h.width = c.globals.svgWidth * d,
                                h.height = parseInt(c.globals.dom.elWrap.style.height, 10) * d;
                            var f = c.config.chart.background === "transparent" ? "#fff" : c.config.chart.background
                                , m = h.getContext("2d");
                            m.fillStyle = f,
                                m.fillRect(0, 0, h.width * d, h.height * d);
                            var x = i.getSvgString(d);
                            if (window.canvg && M.isIE11()) {
                                var S = window.canvg.Canvg.fromString(m, x, {
                                    ignoreClear: !0,
                                    ignoreDimensions: !0
                                });
                                S.start();
                                var _ = h.msToBlob();
                                S.stop(),
                                    r({
                                        blob: _
                                    })
                            } else {
                                var k = "data:image/svg+xml," + encodeURIComponent(x)
                                    , L = new Image;
                                L.crossOrigin = "anonymous",
                                    L.onload = function () {
                                        if (m.drawImage(L, 0, 0),
                                            h.msToBlob) {
                                            var N = h.msToBlob();
                                            r({
                                                blob: N
                                            })
                                        } else {
                                            var H = h.toDataURL("image/png");
                                            r({
                                                imgURI: H
                                            })
                                        }
                                    }
                                    ,
                                    L.src = k
                            }
                        }
                    )
                }
            }, {
                key: "exportToSVG",
                value: function () {
                    this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, ".svg")
                }
            }, {
                key: "exportToPng",
                value: function () {
                    var n = this;
                    this.dataURI().then(function (i) {
                        var r = i.imgURI
                            , c = i.blob;
                        c ? navigator.msSaveOrOpenBlob(c, n.w.globals.chartID + ".png") : n.triggerDownload(r, n.w.config.chart.toolbar.export.png.filename, ".png")
                    })
                }
            }, {
                key: "exportToCSV",
                value: function (n) {
                    var i = this
                        , r = n.series
                        , c = n.fileName
                        , d = n.columnDelimiter
                        , h = d === void 0 ? "," : d
                        , f = n.lineDelimiter
                        , m = f === void 0 ? `
` : f
                        , x = this.w;
                    r || (r = x.config.series);
                    var S, _, k = [], L = [], N = "", H = x.globals.series.map(function (X, K) {
                        return x.globals.collapsedSeriesIndices.indexOf(K) === -1 ? X : []
                    }), z = function (X) {
                        return x.config.xaxis.type === "datetime" && String(X).length >= 10
                    }, q = Math.max.apply(Math, A(r.map(function (X) {
                        return X.data ? X.data.length : 0
                    }))), Q = new Pe(this.ctx), b = new Ae(this.ctx), E = function (X) {
                        var K = "";
                        if (x.globals.axisCharts) {
                            if (x.config.xaxis.type === "category" || x.config.xaxis.convertedCatToNumeric)
                                if (x.globals.isBarHorizontal) {
                                    var ee = x.globals.yLabelFormatters[0]
                                        , pe = new bt(i.ctx).getActiveConfigSeriesIndex();
                                    K = ee(x.globals.labels[X], {
                                        seriesIndex: pe,
                                        dataPointIndex: X,
                                        w: x
                                    })
                                } else
                                    K = b.getLabel(x.globals.labels, x.globals.timescaleLabels, 0, X).text;
                            x.config.xaxis.type === "datetime" && (x.config.xaxis.categories.length ? K = x.config.xaxis.categories[X] : x.config.labels.length && (K = x.config.labels[X]))
                        } else
                            K = x.config.labels[X];
                        return Array.isArray(K) && (K = K.join(" ")),
                            M.isNumber(K) ? K : K.split(h).join("")
                    }, B = function (X, K) {
                        if (k.length && K === 0 && L.push(k.join(h)),
                            X.data) {
                            X.data = X.data.length && X.data || A(Array(q)).map(function () {
                                return ""
                            });
                            for (var ee = 0; ee < X.data.length; ee++) {
                                k = [];
                                var pe = E(ee);
                                if (pe || (Q.isFormatXY() ? pe = r[K].data[ee].x : Q.isFormat2DArray() && (pe = r[K].data[ee] ? r[K].data[ee][0] : "")),
                                K === 0) {
                                    k.push(z(pe) ? x.config.chart.toolbar.export.csv.dateFormatter(pe) : M.isNumber(pe) ? pe : pe.split(h).join(""));
                                    for (var ge = 0; ge < x.globals.series.length; ge++) {
                                        var Ie;
                                        Q.isFormatXY() ? k.push((Ie = r[ge].data[ee]) === null || Ie === void 0 ? void 0 : Ie.y) : k.push(H[ge][ee])
                                    }
                                }
                                (x.config.chart.type === "candlestick" || X.type && X.type === "candlestick") && (k.pop(),
                                    k.push(x.globals.seriesCandleO[K][ee]),
                                    k.push(x.globals.seriesCandleH[K][ee]),
                                    k.push(x.globals.seriesCandleL[K][ee]),
                                    k.push(x.globals.seriesCandleC[K][ee])),
                                (x.config.chart.type === "boxPlot" || X.type && X.type === "boxPlot") && (k.pop(),
                                    k.push(x.globals.seriesCandleO[K][ee]),
                                    k.push(x.globals.seriesCandleH[K][ee]),
                                    k.push(x.globals.seriesCandleM[K][ee]),
                                    k.push(x.globals.seriesCandleL[K][ee]),
                                    k.push(x.globals.seriesCandleC[K][ee])),
                                x.config.chart.type === "rangeBar" && (k.pop(),
                                    k.push(x.globals.seriesRangeStart[K][ee]),
                                    k.push(x.globals.seriesRangeEnd[K][ee])),
                                k.length && L.push(k.join(h))
                            }
                        }
                    };
                    k.push(x.config.chart.toolbar.export.csv.headerCategory),
                        x.config.chart.type === "boxPlot" ? (k.push("minimum"),
                            k.push("q1"),
                            k.push("median"),
                            k.push("q3"),
                            k.push("maximum")) : x.config.chart.type === "candlestick" ? (k.push("open"),
                            k.push("high"),
                            k.push("low"),
                            k.push("close")) : x.config.chart.type === "rangeBar" ? (k.push("minimum"),
                            k.push("maximum")) : r.map(function (X, K) {
                            var ee = (X.name ? X.name : "series-".concat(K)) + "";
                            x.globals.axisCharts && k.push(ee.split(h).join("") ? ee.split(h).join("") : "series-".concat(K))
                        }),
                    x.globals.axisCharts || (k.push(x.config.chart.toolbar.export.csv.headerValue),
                        L.push(k.join(h))),
                        x.globals.allSeriesHasEqualX || !x.globals.axisCharts || x.config.xaxis.categories.length || x.config.labels.length ? r.map(function (X, K) {
                            x.globals.axisCharts ? B(X, K) : ((k = []).push(x.globals.labels[K].split(h).join("")),
                                k.push(H[K]),
                                L.push(k.join(h)))
                        }) : (S = new Set,
                            _ = {},
                            r.forEach(function (X, K) {
                                X == null || X.data.forEach(function (ee) {
                                    var pe, ge;
                                    if (Q.isFormatXY())
                                        pe = ee.x,
                                            ge = ee.y;
                                    else {
                                        if (!Q.isFormat2DArray())
                                            return;
                                        pe = ee[0],
                                            ge = ee[1]
                                    }
                                    _[pe] || (_[pe] = Array(r.length).fill("")),
                                        _[pe][K] = ge,
                                        S.add(pe)
                                })
                            }),
                        k.length && L.push(k.join(h)),
                            Array.from(S).sort().forEach(function (X) {
                                L.push([z(X) && x.config.xaxis.type === "datetime" ? x.config.chart.toolbar.export.csv.dateFormatter(X) : M.isNumber(X) ? X : X.split(h).join(""), _[X].join(h)])
                            })),
                        N += L.join(m),
                        this.triggerDownload("data:text/csv; charset=utf-8," + encodeURIComponent("\uFEFF" + N), c || x.config.chart.toolbar.export.csv.filename, ".csv")
                }
            }, {
                key: "triggerDownload",
                value: function (n, i, r) {
                    var c = document.createElement("a");
                    c.href = n,
                        c.download = (i || this.w.globals.chartID) + r,
                        document.body.appendChild(c),
                        c.click(),
                        document.body.removeChild(c)
                }
            }]),
                j
        }()
            , He = function () {
            function j(n, i) {
                l(this, j),
                    this.ctx = n,
                    this.elgrid = i,
                    this.w = n.w;
                var r = this.w;
                this.axesUtils = new Ae(n),
                    this.xaxisLabels = r.globals.labels.slice(),
                r.globals.timescaleLabels.length > 0 && !r.globals.isBarHorizontal && (this.xaxisLabels = r.globals.timescaleLabels.slice()),
                r.config.xaxis.overwriteCategories && (this.xaxisLabels = r.config.xaxis.overwriteCategories),
                    this.drawnLabels = [],
                    this.drawnLabelsRects = [],
                    r.config.xaxis.position === "top" ? this.offY = 0 : this.offY = r.globals.gridHeight + 1,
                    this.offY = this.offY + r.config.xaxis.axisBorder.offsetY,
                    this.isCategoryBarHorizontal = r.config.chart.type === "bar" && r.config.plotOptions.bar.horizontal,
                    this.xaxisFontSize = r.config.xaxis.labels.style.fontSize,
                    this.xaxisFontFamily = r.config.xaxis.labels.style.fontFamily,
                    this.xaxisForeColors = r.config.xaxis.labels.style.colors,
                    this.xaxisBorderWidth = r.config.xaxis.axisBorder.width,
                this.isCategoryBarHorizontal && (this.xaxisBorderWidth = r.config.yaxis[0].axisBorder.width.toString()),
                    this.xaxisBorderWidth.indexOf("%") > -1 ? this.xaxisBorderWidth = r.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100 : this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10),
                    this.xaxisBorderHeight = r.config.xaxis.axisBorder.height,
                    this.yaxis = r.config.yaxis[0]
            }

            return p(j, [{
                key: "drawXaxis",
                value: function () {
                    var n = this.w
                        , i = new $(this.ctx)
                        , r = i.group({
                        class: "apexcharts-xaxis",
                        transform: "translate(".concat(n.config.xaxis.offsetX, ", ").concat(n.config.xaxis.offsetY, ")")
                    })
                        , c = i.group({
                        class: "apexcharts-xaxis-texts-g",
                        transform: "translate(".concat(n.globals.translateXAxisX, ", ").concat(n.globals.translateXAxisY, ")")
                    });
                    r.add(c);
                    for (var d = [], h = 0; h < this.xaxisLabels.length; h++)
                        d.push(this.xaxisLabels[h]);
                    if (this.drawXAxisLabelAndGroup(!0, i, c, d, n.globals.isXNumeric, function (N, H) {
                        return H
                    }),
                        n.globals.hasXaxisGroups) {
                        var f = n.globals.groups;
                        d = [];
                        for (var m = 0; m < f.length; m++)
                            d.push(f[m].title);
                        var x = {};
                        n.config.xaxis.group.style && (x.xaxisFontSize = n.config.xaxis.group.style.fontSize,
                            x.xaxisFontFamily = n.config.xaxis.group.style.fontFamily,
                            x.xaxisForeColors = n.config.xaxis.group.style.colors,
                            x.fontWeight = n.config.xaxis.group.style.fontWeight,
                            x.cssClass = n.config.xaxis.group.style.cssClass),
                            this.drawXAxisLabelAndGroup(!1, i, c, d, !1, function (N, H) {
                                return f[N].cols * H
                            }, x)
                    }
                    if (n.config.xaxis.title.text !== void 0) {
                        var S = i.group({
                            class: "apexcharts-xaxis-title"
                        })
                            , _ = i.drawText({
                            x: n.globals.gridWidth / 2 + n.config.xaxis.title.offsetX,
                            y: this.offY + parseFloat(this.xaxisFontSize) + (n.config.xaxis.position === "bottom" ? n.globals.xAxisLabelsHeight : -n.globals.xAxisLabelsHeight - 10) + n.config.xaxis.title.offsetY,
                            text: n.config.xaxis.title.text,
                            textAnchor: "middle",
                            fontSize: n.config.xaxis.title.style.fontSize,
                            fontFamily: n.config.xaxis.title.style.fontFamily,
                            fontWeight: n.config.xaxis.title.style.fontWeight,
                            foreColor: n.config.xaxis.title.style.color,
                            cssClass: "apexcharts-xaxis-title-text " + n.config.xaxis.title.style.cssClass
                        });
                        S.add(_),
                            r.add(S)
                    }
                    if (n.config.xaxis.axisBorder.show) {
                        var k = n.globals.barPadForNumericAxis
                            ,
                            L = i.drawLine(n.globals.padHorizontal + n.config.xaxis.axisBorder.offsetX - k, this.offY, this.xaxisBorderWidth + k, this.offY, n.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
                        this.elgrid && this.elgrid.elGridBorders && n.config.grid.show ? this.elgrid.elGridBorders.add(L) : r.add(L)
                    }
                    return r
                }
            }, {
                key: "drawXAxisLabelAndGroup",
                value: function (n, i, r, c, d, h) {
                    var f, m = this, x = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : {}, S = [],
                        _ = [], k = this.w, L = x.xaxisFontSize || this.xaxisFontSize,
                        N = x.xaxisFontFamily || this.xaxisFontFamily, H = x.xaxisForeColors || this.xaxisForeColors,
                        z = x.fontWeight || k.config.xaxis.labels.style.fontWeight,
                        q = x.cssClass || k.config.xaxis.labels.style.cssClass, Q = k.globals.padHorizontal,
                        b = c.length, E = k.config.xaxis.type === "category" ? k.globals.dataPoints : b;
                    if (E === 0 && b > E && (E = b),
                        d) {
                        var B = E > 1 ? E - 1 : E;
                        f = k.globals.gridWidth / Math.min(B, b - 1),
                            Q = Q + h(0, f) / 2 + k.config.xaxis.labels.offsetX
                    } else
                        f = k.globals.gridWidth / E,
                            Q = Q + h(0, f) + k.config.xaxis.labels.offsetX;
                    for (var X = function (ee) {
                        var pe = Q - h(ee, f) / 2 + k.config.xaxis.labels.offsetX;
                        ee === 0 && b === 1 && f / 2 === Q && E === 1 && (pe = k.globals.gridWidth / 2);
                        var ge = m.axesUtils.getLabel(c, k.globals.timescaleLabels, pe, ee, S, L, n)
                            , Ie = 28;
                        if (k.globals.rotateXLabels && n && (Ie = 22),
                        k.config.xaxis.title.text && k.config.xaxis.position === "top" && (Ie += parseFloat(k.config.xaxis.title.style.fontSize) + 2),
                        n || (Ie = Ie + parseFloat(L) + (k.globals.xAxisLabelsHeight - k.globals.xAxisGroupLabelsHeight) + (k.globals.rotateXLabels ? 10 : 0)),
                            ge = k.config.xaxis.tickAmount !== void 0 && k.config.xaxis.tickAmount !== "dataPoints" && k.config.xaxis.type !== "datetime" ? m.axesUtils.checkLabelBasedOnTickamount(ee, ge, b) : m.axesUtils.checkForOverflowingLabels(ee, ge, b, S, _),
                            k.config.xaxis.labels.show) {
                            var $e = i.drawText({
                                x: ge.x,
                                y: m.offY + k.config.xaxis.labels.offsetY + Ie - (k.config.xaxis.position === "top" ? k.globals.xAxisHeight + k.config.xaxis.axisTicks.height - 2 : 0),
                                text: ge.text,
                                textAnchor: "middle",
                                fontWeight: ge.isBold ? 600 : z,
                                fontSize: L,
                                fontFamily: N,
                                foreColor: Array.isArray(H) ? n && k.config.xaxis.convertedCatToNumeric ? H[k.globals.minX + ee - 1] : H[ee] : H,
                                isPlainText: !1,
                                cssClass: (n ? "apexcharts-xaxis-label " : "apexcharts-xaxis-group-label ") + q
                            });
                            if (r.add($e),
                                $e.on("click", function (Je) {
                                    if (typeof k.config.chart.events.xAxisLabelClick == "function") {
                                        var ut = Object.assign({}, k, {
                                            labelIndex: ee
                                        });
                                        k.config.chart.events.xAxisLabelClick(Je, m.ctx, ut)
                                    }
                                }),
                                n) {
                                var Fe = document.createElementNS(k.globals.SVGNS, "title");
                                Fe.textContent = Array.isArray(ge.text) ? ge.text.join(" ") : ge.text,
                                    $e.node.appendChild(Fe),
                                ge.text !== "" && (S.push(ge.text),
                                    _.push(ge))
                            }
                        }
                        ee < b - 1 && (Q += h(ee + 1, f))
                    }, K = 0; K <= b - 1; K++)
                        X(K)
                }
            }, {
                key: "drawXaxisInversed",
                value: function (n) {
                    var i, r, c = this, d = this.w, h = new $(this.ctx),
                        f = d.config.yaxis[0].opposite ? d.globals.translateYAxisX[n] : 0, m = h.group({
                            class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                            rel: n
                        }), x = h.group({
                            class: "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                            transform: "translate(" + f + ", 0)"
                        });
                    m.add(x);
                    var S = [];
                    if (d.config.yaxis[n].show)
                        for (var _ = 0; _ < this.xaxisLabels.length; _++)
                            S.push(this.xaxisLabels[_]);
                    i = d.globals.gridHeight / S.length,
                        r = -i / 2.2;
                    var k = d.globals.yLabelFormatters[0]
                        , L = d.config.yaxis[0].labels;
                    if (L.show)
                        for (var N = function (B) {
                            var X = S[B] === void 0 ? "" : S[B];
                            X = k(X, {
                                seriesIndex: n,
                                dataPointIndex: B,
                                w: d
                            });
                            var K = c.axesUtils.getYAxisForeColor(L.style.colors, n)
                                , ee = 0;
                            Array.isArray(X) && (ee = X.length / 2 * parseInt(L.style.fontSize, 10));
                            var pe = L.offsetX - 15
                                , ge = "end";
                            c.yaxis.opposite && (ge = "start"),
                                d.config.yaxis[0].labels.align === "left" ? (pe = L.offsetX,
                                    ge = "start") : d.config.yaxis[0].labels.align === "center" ? (pe = L.offsetX,
                                    ge = "middle") : d.config.yaxis[0].labels.align === "right" && (ge = "end");
                            var Ie = h.drawText({
                                x: pe,
                                y: r + i + L.offsetY - ee,
                                text: X,
                                textAnchor: ge,
                                foreColor: Array.isArray(K) ? K[B] : K,
                                fontSize: L.style.fontSize,
                                fontFamily: L.style.fontFamily,
                                fontWeight: L.style.fontWeight,
                                isPlainText: !1,
                                cssClass: "apexcharts-yaxis-label " + L.style.cssClass,
                                maxWidth: L.maxWidth
                            });
                            x.add(Ie),
                                Ie.on("click", function (Je) {
                                    if (typeof d.config.chart.events.xAxisLabelClick == "function") {
                                        var ut = Object.assign({}, d, {
                                            labelIndex: B
                                        });
                                        d.config.chart.events.xAxisLabelClick(Je, c.ctx, ut)
                                    }
                                });
                            var $e = document.createElementNS(d.globals.SVGNS, "title");
                            if ($e.textContent = Array.isArray(X) ? X.join(" ") : X,
                                Ie.node.appendChild($e),
                            d.config.yaxis[n].labels.rotate !== 0) {
                                var Fe = h.rotateAroundCenter(Ie.node);
                                Ie.node.setAttribute("transform", "rotate(".concat(d.config.yaxis[n].labels.rotate, " 0 ").concat(Fe.y, ")"))
                            }
                            r += i
                        }, H = 0; H <= S.length - 1; H++)
                            N(H);
                    if (d.config.yaxis[0].title.text !== void 0) {
                        var z = h.group({
                            class: "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                            transform: "translate(" + f + ", 0)"
                        })
                            , q = h.drawText({
                            x: d.config.yaxis[0].title.offsetX,
                            y: d.globals.gridHeight / 2 + d.config.yaxis[0].title.offsetY,
                            text: d.config.yaxis[0].title.text,
                            textAnchor: "middle",
                            foreColor: d.config.yaxis[0].title.style.color,
                            fontSize: d.config.yaxis[0].title.style.fontSize,
                            fontWeight: d.config.yaxis[0].title.style.fontWeight,
                            fontFamily: d.config.yaxis[0].title.style.fontFamily,
                            cssClass: "apexcharts-yaxis-title-text " + d.config.yaxis[0].title.style.cssClass
                        });
                        z.add(q),
                            m.add(z)
                    }
                    var Q = 0;
                    this.isCategoryBarHorizontal && d.config.yaxis[0].opposite && (Q = d.globals.gridWidth);
                    var b = d.config.xaxis.axisBorder;
                    if (b.show) {
                        var E = h.drawLine(d.globals.padHorizontal + b.offsetX + Q, 1 + b.offsetY, d.globals.padHorizontal + b.offsetX + Q, d.globals.gridHeight + b.offsetY, b.color, 0);
                        this.elgrid && this.elgrid.elGridBorders && d.config.grid.show ? this.elgrid.elGridBorders.add(E) : m.add(E)
                    }
                    return d.config.yaxis[0].axisTicks.show && this.axesUtils.drawYAxisTicks(Q, S.length, d.config.yaxis[0].axisBorder, d.config.yaxis[0].axisTicks, 0, i, m),
                        m
                }
            }, {
                key: "drawXaxisTicks",
                value: function (n, i, r) {
                    var c = this.w
                        , d = n;
                    if (!(n < 0 || n - 2 > c.globals.gridWidth)) {
                        var h = this.offY + c.config.xaxis.axisTicks.offsetY;
                        if (i = i + h + c.config.xaxis.axisTicks.height,
                        c.config.xaxis.position === "top" && (i = h - c.config.xaxis.axisTicks.height),
                            c.config.xaxis.axisTicks.show) {
                            var f = new $(this.ctx).drawLine(n + c.config.xaxis.axisTicks.offsetX, h + c.config.xaxis.offsetY, d + c.config.xaxis.axisTicks.offsetX, i + c.config.xaxis.offsetY, c.config.xaxis.axisTicks.color);
                            r.add(f),
                                f.node.classList.add("apexcharts-xaxis-tick")
                        }
                    }
                }
            }, {
                key: "getXAxisTicksPositions",
                value: function () {
                    var n = this.w
                        , i = []
                        , r = this.xaxisLabels.length
                        , c = n.globals.padHorizontal;
                    if (n.globals.timescaleLabels.length > 0)
                        for (var d = 0; d < r; d++)
                            c = this.xaxisLabels[d].position,
                                i.push(c);
                    else
                        for (var h = r, f = 0; f < h; f++) {
                            var m = h;
                            n.globals.isXNumeric && n.config.chart.type !== "bar" && (m -= 1),
                                c += n.globals.gridWidth / m,
                                i.push(c)
                        }
                    return i
                }
            }, {
                key: "xAxisLabelCorrections",
                value: function () {
                    var n = this.w
                        , i = new $(this.ctx)
                        , r = n.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g")
                        ,
                        c = n.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)")
                        , d = n.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text")
                        , h = n.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");
                    if (n.globals.rotateXLabels || n.config.xaxis.labels.rotateAlways)
                        for (var f = 0; f < c.length; f++) {
                            var m = i.rotateAroundCenter(c[f]);
                            m.y = m.y - 1,
                                m.x = m.x + 1,
                                c[f].setAttribute("transform", "rotate(".concat(n.config.xaxis.labels.rotate, " ").concat(m.x, " ").concat(m.y, ")")),
                                c[f].setAttribute("text-anchor", "end"),
                                r.setAttribute("transform", "translate(0, ".concat(-10, ")"));
                            var x = c[f].childNodes;
                            n.config.xaxis.labels.trim && Array.prototype.forEach.call(x, function (L) {
                                i.placeTextWithEllipsis(L, L.textContent, n.globals.xAxisLabelsHeight - (n.config.legend.position === "bottom" ? 20 : 10))
                            })
                        }
                    else
                        (function () {
                                for (var L = n.globals.gridWidth / (n.globals.labels.length + 1), N = 0; N < c.length; N++) {
                                    var H = c[N].childNodes;
                                    n.config.xaxis.labels.trim && n.config.xaxis.type !== "datetime" && Array.prototype.forEach.call(H, function (z) {
                                        i.placeTextWithEllipsis(z, z.textContent, L)
                                    })
                                }
                            }
                        )();
                    if (d.length > 0) {
                        var S = d[d.length - 1].getBBox()
                            , _ = d[0].getBBox();
                        S.x < -20 && d[d.length - 1].parentNode.removeChild(d[d.length - 1]),
                        _.x + _.width > n.globals.gridWidth && !n.globals.isBarHorizontal && d[0].parentNode.removeChild(d[0]);
                        for (var k = 0; k < h.length; k++)
                            i.placeTextWithEllipsis(h[k], h[k].textContent, n.config.yaxis[0].labels.maxWidth - (n.config.yaxis[0].title.text ? 2 * parseFloat(n.config.yaxis[0].title.style.fontSize) : 0) - 15)
                    }
                }
            }]),
                j
        }()
            , et = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w;
                var i = this.w;
                this.xaxisLabels = i.globals.labels.slice(),
                    this.axesUtils = new Ae(n),
                    this.isRangeBar = i.globals.seriesRange.length && i.globals.isBarHorizontal,
                i.globals.timescaleLabels.length > 0 && (this.xaxisLabels = i.globals.timescaleLabels.slice())
            }

            return p(j, [{
                key: "drawGridArea",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null
                        , i = this.w
                        , r = new $(this.ctx);
                    n === null && (n = r.group({
                        class: "apexcharts-grid"
                    }));
                    var c = r.drawLine(i.globals.padHorizontal, 1, i.globals.padHorizontal, i.globals.gridHeight, "transparent")
                        ,
                        d = r.drawLine(i.globals.padHorizontal, i.globals.gridHeight, i.globals.gridWidth, i.globals.gridHeight, "transparent");
                    return n.add(d),
                        n.add(c),
                        n
                }
            }, {
                key: "drawGrid",
                value: function () {
                    var n = null;
                    return this.w.globals.axisCharts && (n = this.renderGrid(),
                        this.drawGridArea(n.el)),
                        n
                }
            }, {
                key: "createGridMask",
                value: function () {
                    var n = this.w
                        , i = n.globals
                        , r = new $(this.ctx)
                        , c = Array.isArray(n.config.stroke.width) ? 0 : n.config.stroke.width;
                    if (Array.isArray(n.config.stroke.width)) {
                        var d = 0;
                        n.config.stroke.width.forEach(function (_) {
                            d = Math.max(d, _)
                        }),
                            c = d
                    }
                    i.dom.elGridRectMask = document.createElementNS(i.SVGNS, "clipPath"),
                        i.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(i.cuid)),
                        i.dom.elGridRectMarkerMask = document.createElementNS(i.SVGNS, "clipPath"),
                        i.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(i.cuid)),
                        i.dom.elForecastMask = document.createElementNS(i.SVGNS, "clipPath"),
                        i.dom.elForecastMask.setAttribute("id", "forecastMask".concat(i.cuid)),
                        i.dom.elNonForecastMask = document.createElementNS(i.SVGNS, "clipPath"),
                        i.dom.elNonForecastMask.setAttribute("id", "nonForecastMask".concat(i.cuid));
                    var h = n.config.chart.type
                        , f = 0
                        , m = 0;
                    (h === "bar" || h === "rangeBar" || h === "candlestick" || h === "boxPlot" || n.globals.comboBarCount > 0) && n.globals.isXNumeric && !n.globals.isBarHorizontal && (f = n.config.grid.padding.left,
                        m = n.config.grid.padding.right,
                    i.barPadForNumericAxis > f && (f = i.barPadForNumericAxis,
                        m = i.barPadForNumericAxis)),
                        i.dom.elGridRect = r.drawRect(-c - f - 2, 2 * -c - 2, i.gridWidth + c + m + f + 4, i.gridHeight + 4 * c + 4, 0, "#fff");
                    var x = n.globals.markers.largestSize + 1;
                    i.dom.elGridRectMarker = r.drawRect(2 * -x, 2 * -x, i.gridWidth + 4 * x, i.gridHeight + 4 * x, 0, "#fff"),
                        i.dom.elGridRectMask.appendChild(i.dom.elGridRect.node),
                        i.dom.elGridRectMarkerMask.appendChild(i.dom.elGridRectMarker.node);
                    var S = i.dom.baseEl.querySelector("defs");
                    S.appendChild(i.dom.elGridRectMask),
                        S.appendChild(i.dom.elForecastMask),
                        S.appendChild(i.dom.elNonForecastMask),
                        S.appendChild(i.dom.elGridRectMarkerMask)
                }
            }, {
                key: "_drawGridLines",
                value: function (n) {
                    var i = n.i
                        , r = n.x1
                        , c = n.y1
                        , d = n.x2
                        , h = n.y2
                        , f = n.xCount
                        , m = n.parent
                        , x = this.w;
                    if (!(i === 0 && x.globals.skipFirstTimelinelabel || i === f - 1 && x.globals.skipLastTimelinelabel && !x.config.xaxis.labels.formatter || x.config.chart.type === "radar")) {
                        x.config.grid.xaxis.lines.show && this._drawGridLine({
                            i,
                            x1: r,
                            y1: c,
                            x2: d,
                            y2: h,
                            xCount: f,
                            parent: m
                        });
                        var S = 0;
                        if (x.globals.hasXaxisGroups && x.config.xaxis.tickPlacement === "between") {
                            var _ = x.globals.groups;
                            if (_) {
                                for (var k = 0, L = 0; k < i && L < _.length; L++)
                                    k += _[L].cols;
                                k === i && (S = .6 * x.globals.xAxisLabelsHeight)
                            }
                        }
                        new He(this.ctx).drawXaxisTicks(r, S, x.globals.dom.elGraphical)
                    }
                }
            }, {
                key: "_drawGridLine",
                value: function (n) {
                    var i = n.i
                        , r = n.x1
                        , c = n.y1
                        , d = n.x2
                        , h = n.y2
                        , f = n.xCount
                        , m = n.parent
                        , x = this.w
                        , S = !1
                        , _ = m.node.classList.contains("apexcharts-gridlines-horizontal")
                        , k = x.config.grid.strokeDashArray
                        , L = x.globals.barPadForNumericAxis;
                    (c === 0 && h === 0 || r === 0 && d === 0) && (S = !0),
                    c === x.globals.gridHeight && h === x.globals.gridHeight && (S = !0),
                    !x.globals.isBarHorizontal || i !== 0 && i !== f - 1 || (S = !0);
                    var N = new $(this).drawLine(r - (_ ? L : 0), c, d + (_ ? L : 0), h, x.config.grid.borderColor, k);
                    N.node.classList.add("apexcharts-gridline"),
                        S && x.config.grid.show ? this.elGridBorders.add(N) : m.add(N)
                }
            }, {
                key: "_drawGridBandRect",
                value: function (n) {
                    var i = n.c
                        , r = n.x1
                        , c = n.y1
                        , d = n.x2
                        , h = n.y2
                        , f = n.type
                        , m = this.w
                        , x = new $(this.ctx)
                        , S = m.globals.barPadForNumericAxis;
                    if (f !== "column" || m.config.xaxis.type !== "datetime") {
                        var _ = m.config.grid[f].colors[i]
                            ,
                            k = x.drawRect(r - (f === "row" ? S : 0), c, d + (f === "row" ? 2 * S : 0), h, 0, _, m.config.grid[f].opacity);
                        this.elg.add(k),
                            k.attr("clip-path", "url(#gridRectMask".concat(m.globals.cuid, ")")),
                            k.node.classList.add("apexcharts-grid-".concat(f))
                    }
                }
            }, {
                key: "_drawXYLines",
                value: function (n) {
                    var i = this
                        , r = n.xCount
                        , c = n.tickAmount
                        , d = this.w;
                    if (d.config.grid.xaxis.lines.show || d.config.xaxis.axisTicks.show) {
                        var h, f = d.globals.padHorizontal, m = d.globals.gridHeight;
                        d.globals.timescaleLabels.length ? function (N) {
                            for (var H = N.xC, z = N.x1, q = N.y1, Q = N.x2, b = N.y2, E = 0; E < H; E++)
                                z = i.xaxisLabels[E].position,
                                    Q = i.xaxisLabels[E].position,
                                    i._drawGridLines({
                                        i: E,
                                        x1: z,
                                        y1: q,
                                        x2: Q,
                                        y2: b,
                                        xCount: r,
                                        parent: i.elgridLinesV
                                    })
                        }({
                            xC: r,
                            x1: f,
                            y1: 0,
                            x2: h,
                            y2: m
                        }) : (d.globals.isXNumeric && (r = d.globals.xAxisScale.result.length),
                            function (N) {
                                for (var H = N.xC, z = N.x1, q = N.y1, Q = N.x2, b = N.y2, E = 0; E < H + (d.globals.isXNumeric ? 0 : 1); E++)
                                    E === 0 && H === 1 && d.globals.dataPoints === 1 && (Q = z = d.globals.gridWidth / 2),
                                        i._drawGridLines({
                                            i: E,
                                            x1: z,
                                            y1: q,
                                            x2: Q,
                                            y2: b,
                                            xCount: r,
                                            parent: i.elgridLinesV
                                        }),
                                        Q = z += d.globals.gridWidth / (d.globals.isXNumeric ? H - 1 : H)
                            }({
                                xC: r,
                                x1: f,
                                y1: 0,
                                x2: h,
                                y2: m
                            }))
                    }
                    if (d.config.grid.yaxis.lines.show) {
                        var x = 0
                            , S = 0
                            , _ = d.globals.gridWidth
                            , k = c + 1;
                        this.isRangeBar && (k = d.globals.labels.length);
                        for (var L = 0; L < k + (this.isRangeBar ? 1 : 0); L++)
                            this._drawGridLine({
                                i: L,
                                xCount: k + (this.isRangeBar ? 1 : 0),
                                x1: 0,
                                y1: x,
                                x2: _,
                                y2: S,
                                parent: this.elgridLinesH
                            }),
                                S = x += d.globals.gridHeight / (this.isRangeBar ? k : c)
                    }
                }
            }, {
                key: "_drawInvertedXYLines",
                value: function (n) {
                    var i = n.xCount
                        , r = this.w;
                    if (r.config.grid.xaxis.lines.show || r.config.xaxis.axisTicks.show)
                        for (var c, d = r.globals.padHorizontal, h = r.globals.gridHeight, f = 0; f < i + 1; f++)
                            r.config.grid.xaxis.lines.show && this._drawGridLine({
                                i: f,
                                xCount: i + 1,
                                x1: d,
                                y1: 0,
                                x2: c,
                                y2: h,
                                parent: this.elgridLinesV
                            }),
                                new He(this.ctx).drawXaxisTicks(d, 0, r.globals.dom.elGraphical),
                                c = d = d + r.globals.gridWidth / i + .3;
                    if (r.config.grid.yaxis.lines.show)
                        for (var m = 0, x = 0, S = r.globals.gridWidth, _ = 0; _ < r.globals.dataPoints + 1; _++)
                            this._drawGridLine({
                                i: _,
                                xCount: r.globals.dataPoints + 1,
                                x1: 0,
                                y1: m,
                                x2: S,
                                y2: x,
                                parent: this.elgridLinesH
                            }),
                                x = m += r.globals.gridHeight / r.globals.dataPoints
                }
            }, {
                key: "renderGrid",
                value: function () {
                    var n = this.w
                        , i = new $(this.ctx);
                    this.elg = i.group({
                        class: "apexcharts-grid"
                    }),
                        this.elgridLinesH = i.group({
                            class: "apexcharts-gridlines-horizontal"
                        }),
                        this.elgridLinesV = i.group({
                            class: "apexcharts-gridlines-vertical"
                        }),
                        this.elGridBorders = i.group({
                            class: "apexcharts-grid-borders"
                        }),
                        this.elg.add(this.elgridLinesH),
                        this.elg.add(this.elgridLinesV),
                    n.config.grid.show || (this.elgridLinesV.hide(),
                        this.elgridLinesH.hide(),
                        this.elGridBorders.hide());
                    for (var r, c = n.globals.yAxisScale.length ? n.globals.yAxisScale[0].result.length - 1 : 5, d = 0; d < n.globals.series.length && (n.globals.yAxisScale[d] !== void 0 && (c = n.globals.yAxisScale[d].result.length - 1),
                        !(c > 2)); d++)
                        ;
                    if (!n.globals.isBarHorizontal || this.isRangeBar) {
                        var h, f, m;
                        r = this.xaxisLabels.length,
                        this.isRangeBar && (r--,
                            c = n.globals.labels.length,
                        n.config.xaxis.tickAmount && n.config.xaxis.labels.formatter && (r = n.config.xaxis.tickAmount),
                        ((h = n.globals.yAxisScale) === null || h === void 0 || (f = h[0]) === null || f === void 0 || (m = f.result) === null || m === void 0 ? void 0 : m.length) > 0 && n.config.xaxis.type !== "datetime" && (r = n.globals.yAxisScale[0].result.length - 1)),
                            this._drawXYLines({
                                xCount: r,
                                tickAmount: c
                            })
                    } else
                        r = c,
                            c = n.globals.xTickAmount,
                            this._drawInvertedXYLines({
                                xCount: r,
                                tickAmount: c
                            });
                    return this.drawGridBands(r, c),
                        {
                            el: this.elg,
                            elGridBorders: this.elGridBorders,
                            xAxisTickWidth: n.globals.gridWidth / r
                        }
                }
            }, {
                key: "drawGridBands",
                value: function (n, i) {
                    var r = this.w;
                    if (r.config.grid.row.colors !== void 0 && r.config.grid.row.colors.length > 0)
                        for (var c = 0, d = r.globals.gridHeight / i, h = r.globals.gridWidth, f = 0, m = 0; f < i; f++,
                            m++)
                            m >= r.config.grid.row.colors.length && (m = 0),
                                this._drawGridBandRect({
                                    c: m,
                                    x1: 0,
                                    y1: c,
                                    x2: h,
                                    y2: d,
                                    type: "row"
                                }),
                                c += r.globals.gridHeight / i;
                    if (r.config.grid.column.colors !== void 0 && r.config.grid.column.colors.length > 0)
                        for (var x = r.globals.isBarHorizontal || r.config.xaxis.tickPlacement !== "on" || r.config.xaxis.type !== "category" && !r.config.xaxis.convertedCatToNumeric ? n : n - 1, S = r.globals.padHorizontal, _ = r.globals.padHorizontal + r.globals.gridWidth / x, k = r.globals.gridHeight, L = 0, N = 0; L < n; L++,
                            N++)
                            N >= r.config.grid.column.colors.length && (N = 0),
                                this._drawGridBandRect({
                                    c: N,
                                    x1: S,
                                    y1: 0,
                                    x2: _,
                                    y2: k,
                                    type: "column"
                                }),
                                S += r.globals.gridWidth / x
                }
            }]),
                j
        }()
            , dt = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "niceScale",
                value: function (n, i) {
                    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 5
                        , c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0
                        , d = arguments.length > 4 ? arguments[4] : void 0
                        , h = this.w
                        , f = Math.abs(i - n);
                    if ((r = this._adjustTicksForSmallRange(r, c, f)) === "dataPoints" && (r = h.globals.dataPoints - 1),
                    n === Number.MIN_VALUE && i === 0 || !M.isNumber(n) && !M.isNumber(i) || n === Number.MIN_VALUE && i === -Number.MAX_VALUE)
                        return n = 0,
                            i = r,
                            this.linearScale(n, i, r, c, h.config.yaxis[c].stepSize);
                    n > i ? (console.warn("axis.min cannot be greater than axis.max"),
                        i = n + .1) : n === i && (n = n === 0 ? 0 : n - .5,
                        i = i === 0 ? 2 : i + .5);
                    var m = [];
                    f < 1 && d && (h.config.chart.type === "candlestick" || h.config.series[c].type === "candlestick" || h.config.chart.type === "boxPlot" || h.config.series[c].type === "boxPlot" || h.globals.isRangeData) && (i *= 1.01);
                    var x = r + 1;
                    x < 2 ? x = 2 : x > 2 && (x -= 2);
                    var S = f / x
                        , _ = Math.floor(M.log10(S))
                        , k = Math.pow(10, _)
                        , L = Math.round(S / k);
                    L < 1 && (L = 1);
                    var N = L * k;
                    h.config.yaxis[c].stepSize && (N = h.config.yaxis[c].stepSize),
                    h.globals.isBarHorizontal && h.config.xaxis.stepSize && h.config.xaxis.type !== "datetime" && (N = h.config.xaxis.stepSize);
                    var H = N * Math.floor(n / N)
                        , z = N * Math.ceil(i / N)
                        , q = H;
                    if (d && f > 2) {
                        for (; m.push(M.stripNumber(q, 7)),
                                   !((q += N) > z);)
                            ;
                        return {
                            result: m,
                            niceMin: m[0],
                            niceMax: m[m.length - 1]
                        }
                    }
                    var Q = n;
                    (m = []).push(M.stripNumber(Q, 7));
                    for (var b = Math.abs(i - n) / r, E = 0; E <= r; E++)
                        Q += b,
                            m.push(Q);
                    return m[m.length - 2] >= i && m.pop(),
                        {
                            result: m,
                            niceMin: m[0],
                            niceMax: m[m.length - 1]
                        }
                }
            }, {
                key: "linearScale",
                value: function (n, i) {
                    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 5
                        , c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0
                        , d = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0
                        , h = Math.abs(i - n);
                    (r = this._adjustTicksForSmallRange(r, c, h)) === "dataPoints" && (r = this.w.globals.dataPoints - 1),
                    d || (d = h / r),
                    r === Number.MAX_VALUE && (r = 5,
                        d = 1);
                    for (var f = [], m = n; r >= 0;)
                        f.push(m),
                            m += d,
                            r -= 1;
                    return {
                        result: f,
                        niceMin: f[0],
                        niceMax: f[f.length - 1]
                    }
                }
            }, {
                key: "logarithmicScaleNice",
                value: function (n, i, r) {
                    i <= 0 && (i = Math.max(n, r)),
                    n <= 0 && (n = Math.min(i, r));
                    for (var c = [], d = Math.ceil(Math.log(i) / Math.log(r) + 1), h = Math.floor(Math.log(n) / Math.log(r)); h < d; h++)
                        c.push(Math.pow(r, h));
                    return {
                        result: c,
                        niceMin: c[0],
                        niceMax: c[c.length - 1]
                    }
                }
            }, {
                key: "logarithmicScale",
                value: function (n, i, r) {
                    i <= 0 && (i = Math.max(n, r)),
                    n <= 0 && (n = Math.min(i, r));
                    for (var c = [], d = Math.log(i) / Math.log(r), h = Math.log(n) / Math.log(r), f = d - h, m = Math.round(f), x = f / m, S = 0, _ = h; S < m; S++,
                        _ += x)
                        c.push(Math.pow(r, _));
                    return c.push(Math.pow(r, d)),
                        {
                            result: c,
                            niceMin: n,
                            niceMax: i
                        }
                }
            }, {
                key: "_adjustTicksForSmallRange",
                value: function (n, i, r) {
                    var c = n;
                    if (i !== void 0 && this.w.config.yaxis[i].labels.formatter && this.w.config.yaxis[i].tickAmount === void 0) {
                        var d = Number(this.w.config.yaxis[i].labels.formatter(1));
                        M.isNumber(d) && this.w.globals.yValueDecimal === 0 && (c = Math.ceil(r))
                    }
                    return c < n ? c : n
                }
            }, {
                key: "setYScaleForIndex",
                value: function (n, i, r) {
                    var c = this.w.globals
                        , d = this.w.config
                        , h = c.isBarHorizontal ? d.xaxis : d.yaxis[n];
                    c.yAxisScale[n] === void 0 && (c.yAxisScale[n] = []);
                    var f = Math.abs(r - i);
                    if (h.logarithmic && f <= 5 && (c.invalidLogScale = !0),
                    h.logarithmic && f > 5)
                        c.allSeriesCollapsed = !1,
                            c.yAxisScale[n] = this.logarithmicScale(i, r, h.logBase),
                            c.yAxisScale[n] = h.forceNiceScale ? this.logarithmicScaleNice(i, r, h.logBase) : this.logarithmicScale(i, r, h.logBase);
                    else if (r !== -Number.MAX_VALUE && M.isNumber(r))
                        if (c.allSeriesCollapsed = !1,
                        h.min === void 0 && h.max === void 0 || h.forceNiceScale) {
                            var m = d.yaxis[n].max === void 0 && d.yaxis[n].min === void 0 || d.yaxis[n].forceNiceScale;
                            c.yAxisScale[n] = this.niceScale(i, r, h.tickAmount ? h.tickAmount : f < 5 && f > 1 ? f + 1 : 5, n, m)
                        } else
                            c.yAxisScale[n] = this.linearScale(i, r, h.tickAmount, n, d.yaxis[n].stepSize);
                    else
                        c.yAxisScale[n] = this.linearScale(0, 5, 5, n, d.yaxis[n].stepSize)
                }
            }, {
                key: "setXScale",
                value: function (n, i) {
                    var r = this.w
                        , c = r.globals
                        , d = Math.abs(i - n);
                    return i !== -Number.MAX_VALUE && M.isNumber(i) ? c.xAxisScale = this.linearScale(n, i, r.config.xaxis.tickAmount ? r.config.xaxis.tickAmount : d < 5 && d > 1 ? d + 1 : 5, 0, r.config.xaxis.stepSize) : c.xAxisScale = this.linearScale(0, 5, 5),
                        c.xAxisScale
                }
            }, {
                key: "setMultipleYScales",
                value: function () {
                    var n = this
                        , i = this.w.globals
                        , r = this.w.config
                        , c = i.minYArr.concat([])
                        , d = i.maxYArr.concat([])
                        , h = [];
                    r.yaxis.forEach(function (f, m) {
                        var x = m;
                        r.series.forEach(function (k, L) {
                            k.name === f.seriesName && (x = L,
                                m !== L ? h.push({
                                    index: L,
                                    similarIndex: m,
                                    alreadyExists: !0
                                }) : h.push({
                                    index: L
                                }))
                        });
                        var S = c[x]
                            , _ = d[x];
                        n.setYScaleForIndex(m, S, _)
                    }),
                        this.sameScaleInMultipleAxes(c, d, h)
                }
            }, {
                key: "sameScaleInMultipleAxes",
                value: function (n, i, r) {
                    var c = this
                        , d = this.w.config
                        , h = this.w.globals
                        , f = [];
                    r.forEach(function (H) {
                        H.alreadyExists && (f[H.index] === void 0 && (f[H.index] = []),
                            f[H.index].push(H.index),
                            f[H.index].push(H.similarIndex))
                    }),
                        h.yAxisSameScaleIndices = f,
                        f.forEach(function (H, z) {
                            f.forEach(function (q, Q) {
                                var b, E;
                                z !== Q && (b = H,
                                    E = q,
                                    b.filter(function (B) {
                                        return E.indexOf(B) !== -1
                                    })).length > 0 && (f[z] = f[z].concat(f[Q]))
                            })
                        });
                    var m = f.map(function (H) {
                        return H.filter(function (z, q) {
                            return H.indexOf(z) === q
                        })
                    }).map(function (H) {
                        return H.sort()
                    });
                    f = f.filter(function (H) {
                        return !!H
                    });
                    var x = m.slice()
                        , S = x.map(function (H) {
                        return JSON.stringify(H)
                    });
                    x = x.filter(function (H, z) {
                        return S.indexOf(JSON.stringify(H)) === z
                    });
                    var _ = []
                        , k = [];
                    n.forEach(function (H, z) {
                        x.forEach(function (q, Q) {
                            q.indexOf(z) > -1 && (_[Q] === void 0 && (_[Q] = [],
                                k[Q] = []),
                                _[Q].push({
                                    key: z,
                                    value: H
                                }),
                                k[Q].push({
                                    key: z,
                                    value: i[z]
                                }))
                        })
                    });
                    var L = Array.apply(null, Array(x.length)).map(Number.prototype.valueOf, Number.MIN_VALUE)
                        , N = Array.apply(null, Array(x.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);
                    _.forEach(function (H, z) {
                        H.forEach(function (q, Q) {
                            L[z] = Math.min(q.value, L[z])
                        })
                    }),
                        k.forEach(function (H, z) {
                            H.forEach(function (q, Q) {
                                N[z] = Math.max(q.value, N[z])
                            })
                        }),
                        n.forEach(function (H, z) {
                            k.forEach(function (q, Q) {
                                var b = L[Q]
                                    , E = N[Q];
                                d.chart.stacked && (E = 0,
                                    q.forEach(function (B, X) {
                                        B.value !== -Number.MAX_VALUE && (E += B.value),
                                        b !== Number.MIN_VALUE && (b += _[Q][X].value)
                                    })),
                                    q.forEach(function (B, X) {
                                        q[X].key === z && (d.yaxis[z].min !== void 0 && (b = typeof d.yaxis[z].min == "function" ? d.yaxis[z].min(h.minY) : d.yaxis[z].min),
                                        d.yaxis[z].max !== void 0 && (E = typeof d.yaxis[z].max == "function" ? d.yaxis[z].max(h.maxY) : d.yaxis[z].max),
                                            c.setYScaleForIndex(z, b, E))
                                    })
                            })
                        })
                }
            }, {
                key: "autoScaleY",
                value: function (n, i, r) {
                    n || (n = this);
                    var c = n.w;
                    if (c.globals.isMultipleYAxis || c.globals.collapsedSeries.length)
                        return console.warn("autoScaleYaxis not supported in a multi-yaxis chart."),
                            i;
                    var d = c.globals.seriesX[0]
                        , h = c.config.chart.stacked;
                    return i.forEach(function (f, m) {
                        for (var x = 0, S = 0; S < d.length; S++)
                            if (d[S] >= r.xaxis.min) {
                                x = S;
                                break
                            }
                        var _, k, L = c.globals.minYArr[m], N = c.globals.maxYArr[m], H = c.globals.stackedSeriesTotals;
                        c.globals.series.forEach(function (z, q) {
                            var Q = z[x];
                            h ? (Q = H[x],
                                _ = k = Q,
                                H.forEach(function (b, E) {
                                    d[E] <= r.xaxis.max && d[E] >= r.xaxis.min && (b > k && b !== null && (k = b),
                                    z[E] < _ && z[E] !== null && (_ = z[E]))
                                })) : (_ = k = Q,
                                z.forEach(function (b, E) {
                                    if (d[E] <= r.xaxis.max && d[E] >= r.xaxis.min) {
                                        var B = b
                                            , X = b;
                                        c.globals.series.forEach(function (K, ee) {
                                            b !== null && (B = Math.min(K[E], B),
                                                X = Math.max(K[E], X))
                                        }),
                                        X > k && X !== null && (k = X),
                                        B < _ && B !== null && (_ = B)
                                    }
                                })),
                            _ === void 0 && k === void 0 && (_ = L,
                                k = N),
                                k *= k < 0 ? .9 : 1.1,
                            (_ *= _ < 0 ? 1.1 : .9) === 0 && k === 0 && (_ = -1,
                                k = 1),
                            k < 0 && k < N && (k = N),
                            _ < 0 && _ > L && (_ = L),
                                i.length > 1 ? (i[q].min = f.min === void 0 ? _ : f.min,
                                    i[q].max = f.max === void 0 ? k : f.max) : (i[0].min = f.min === void 0 ? _ : f.min,
                                    i[0].max = f.max === void 0 ? k : f.max)
                        })
                    }),
                        i
                }
            }]),
                j
        }()
            , Y = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.scales = new dt(n)
            }

            return p(j, [{
                key: "init",
                value: function () {
                    this.setYRange(),
                        this.setXRange(),
                        this.setZRange()
                }
            }, {
                key: "getMinYMaxY",
                value: function (n) {
                    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Number.MAX_VALUE
                        , r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -Number.MAX_VALUE
                        , c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null
                        , d = this.w.config
                        , h = this.w.globals
                        , f = -Number.MAX_VALUE
                        , m = Number.MIN_VALUE;
                    c === null && (c = n + 1);
                    var x = h.series
                        , S = x
                        , _ = x;
                    d.chart.type === "candlestick" ? (S = h.seriesCandleL,
                        _ = h.seriesCandleH) : d.chart.type === "boxPlot" ? (S = h.seriesCandleO,
                        _ = h.seriesCandleC) : h.isRangeData && (S = h.seriesRangeStart,
                        _ = h.seriesRangeEnd);
                    for (var k = n; k < c; k++) {
                        h.dataPoints = Math.max(h.dataPoints, x[k].length),
                        h.categoryLabels.length && (h.dataPoints = h.categoryLabels.filter(function (H) {
                            return H !== void 0
                        }).length),
                        h.labels.length && d.xaxis.type !== "datetime" && h.series.reduce(function (H, z) {
                            return H + z.length
                        }, 0) !== 0 && (h.dataPoints = Math.max(h.dataPoints, h.labels.length));
                        for (var L = 0; L < h.series[k].length; L++) {
                            var N = x[k][L];
                            N !== null && M.isNumber(N) ? (_[k][L] !== void 0 && (f = Math.max(f, _[k][L]),
                                i = Math.min(i, _[k][L])),
                            S[k][L] !== void 0 && (i = Math.min(i, S[k][L]),
                                r = Math.max(r, S[k][L])),
                            this.w.config.chart.type !== "candlestick" && this.w.config.chart.type !== "boxPlot" && this.w.config.chart.type === "rangeArea" && this.w.config.chart.type === "rangeBar" || (this.w.config.chart.type !== "candlestick" && this.w.config.chart.type !== "boxPlot" || h.seriesCandleC[k][L] !== void 0 && (f = Math.max(f, h.seriesCandleO[k][L]),
                                f = Math.max(f, h.seriesCandleH[k][L]),
                                f = Math.max(f, h.seriesCandleL[k][L]),
                                f = Math.max(f, h.seriesCandleC[k][L]),
                            this.w.config.chart.type === "boxPlot" && (f = Math.max(f, h.seriesCandleM[k][L]))),
                            !d.series[k].type || d.series[k].type === "candlestick" && d.series[k].type === "boxPlot" && d.series[k].type === "rangeArea" && d.series[k].type === "rangeBar" || (f = Math.max(f, h.series[k][L]),
                                i = Math.min(i, h.series[k][L])),
                                r = f),
                            h.seriesGoals[k] && h.seriesGoals[k][L] && Array.isArray(h.seriesGoals[k][L]) && h.seriesGoals[k][L].forEach(function (H) {
                                m !== Number.MIN_VALUE && (m = Math.min(m, H.value),
                                    i = m),
                                    f = Math.max(f, H.value),
                                    r = f
                            }),
                            M.isFloat(N) && (N = M.noExponents(N),
                                h.yValueDecimal = Math.max(h.yValueDecimal, N.toString().split(".")[1].length)),
                            m > S[k][L] && S[k][L] < 0 && (m = S[k][L])) : h.hasNullValues = !0
                        }
                    }
                    return d.chart.type === "rangeBar" && h.seriesRangeStart.length && h.isBarHorizontal && (m = i),
                    d.chart.type === "bar" && (m < 0 && f < 0 && (f = 0),
                    m === Number.MIN_VALUE && (m = 0)),
                        {
                            minY: m,
                            maxY: f,
                            lowestY: i,
                            highestY: r
                        }
                }
            }, {
                key: "setYRange",
                value: function () {
                    var n = this.w.globals
                        , i = this.w.config;
                    n.maxY = -Number.MAX_VALUE,
                        n.minY = Number.MIN_VALUE;
                    var r = Number.MAX_VALUE;
                    if (n.isMultipleYAxis)
                        for (var c = 0; c < n.series.length; c++) {
                            var d = this.getMinYMaxY(c, r, null, c + 1);
                            n.minYArr.push(d.minY),
                                n.maxYArr.push(d.maxY),
                                r = d.lowestY
                        }
                    var h = this.getMinYMaxY(0, r, null, n.series.length);
                    if (n.minY = h.minY,
                        n.maxY = h.maxY,
                        r = h.lowestY,
                    i.chart.stacked && this._setStackedMinMax(),
                    (i.chart.type === "line" || i.chart.type === "area" || i.chart.type === "candlestick" || i.chart.type === "boxPlot" || i.chart.type === "rangeBar" && !n.isBarHorizontal) && n.minY === Number.MIN_VALUE && r !== -Number.MAX_VALUE && r !== n.maxY) {
                        var f = n.maxY - r;
                        (r >= 0 && r <= 10 || i.yaxis[0].min !== void 0 || i.yaxis[0].max !== void 0) && (f = 0),
                            n.minY = r - 5 * f / 100,
                        r > 0 && n.minY < 0 && (n.minY = 0),
                            n.maxY = n.maxY + 5 * f / 100
                    }
                    return i.yaxis.forEach(function (m, x) {
                        m.max !== void 0 && (typeof m.max == "number" ? n.maxYArr[x] = m.max : typeof m.max == "function" && (n.maxYArr[x] = m.max(n.isMultipleYAxis ? n.maxYArr[x] : n.maxY)),
                            n.maxY = n.maxYArr[x]),
                        m.min !== void 0 && (typeof m.min == "number" ? n.minYArr[x] = m.min : typeof m.min == "function" && (n.minYArr[x] = m.min(n.isMultipleYAxis ? n.minYArr[x] === Number.MIN_VALUE ? 0 : n.minYArr[x] : n.minY)),
                            n.minY = n.minYArr[x])
                    }),
                    n.isBarHorizontal && ["min", "max"].forEach(function (m) {
                        i.xaxis[m] !== void 0 && typeof i.xaxis[m] == "number" && (m === "min" ? n.minY = i.xaxis[m] : n.maxY = i.xaxis[m])
                    }),
                        n.isMultipleYAxis ? (this.scales.setMultipleYScales(),
                            n.minY = r,
                            n.yAxisScale.forEach(function (m, x) {
                                n.minYArr[x] = m.niceMin,
                                    n.maxYArr[x] = m.niceMax
                            })) : (this.scales.setYScaleForIndex(0, n.minY, n.maxY),
                            n.minY = n.yAxisScale[0].niceMin,
                            n.maxY = n.yAxisScale[0].niceMax,
                            n.minYArr[0] = n.yAxisScale[0].niceMin,
                            n.maxYArr[0] = n.yAxisScale[0].niceMax),
                        {
                            minY: n.minY,
                            maxY: n.maxY,
                            minYArr: n.minYArr,
                            maxYArr: n.maxYArr,
                            yAxisScale: n.yAxisScale
                        }
                }
            }, {
                key: "setXRange",
                value: function () {
                    var n = this.w.globals
                        , i = this.w.config
                        ,
                        r = i.xaxis.type === "numeric" || i.xaxis.type === "datetime" || i.xaxis.type === "category" && !n.noLabelsProvided || n.noLabelsProvided || n.isXNumeric;
                    if (n.isXNumeric && function () {
                        for (var f = 0; f < n.series.length; f++)
                            if (n.labels[f])
                                for (var m = 0; m < n.labels[f].length; m++)
                                    n.labels[f][m] !== null && M.isNumber(n.labels[f][m]) && (n.maxX = Math.max(n.maxX, n.labels[f][m]),
                                        n.initialMaxX = Math.max(n.maxX, n.labels[f][m]),
                                        n.minX = Math.min(n.minX, n.labels[f][m]),
                                        n.initialMinX = Math.min(n.minX, n.labels[f][m]))
                    }(),
                    n.noLabelsProvided && i.xaxis.categories.length === 0 && (n.maxX = n.labels[n.labels.length - 1],
                        n.initialMaxX = n.labels[n.labels.length - 1],
                        n.minX = 1,
                        n.initialMinX = 1),
                    n.isXNumeric || n.noLabelsProvided || n.dataFormatXNumeric) {
                        var c;
                        if (i.xaxis.tickAmount === void 0 ? (c = Math.round(n.svgWidth / 150),
                        i.xaxis.type === "numeric" && n.dataPoints < 30 && (c = n.dataPoints - 1),
                        c > n.dataPoints && n.dataPoints !== 0 && (c = n.dataPoints - 1)) : i.xaxis.tickAmount === "dataPoints" ? (n.series.length > 1 && (c = n.series[n.maxValsInArrayIndex].length - 1),
                        n.isXNumeric && (c = n.maxX - n.minX - 1)) : c = i.xaxis.tickAmount,
                            n.xTickAmount = c,
                        i.xaxis.max !== void 0 && typeof i.xaxis.max == "number" && (n.maxX = i.xaxis.max),
                        i.xaxis.min !== void 0 && typeof i.xaxis.min == "number" && (n.minX = i.xaxis.min),
                        i.xaxis.range !== void 0 && (n.minX = n.maxX - i.xaxis.range),
                        n.minX !== Number.MAX_VALUE && n.maxX !== -Number.MAX_VALUE)
                            if (i.xaxis.convertedCatToNumeric && !n.dataFormatXNumeric) {
                                for (var d = [], h = n.minX - 1; h < n.maxX; h++)
                                    d.push(h + 1);
                                n.xAxisScale = {
                                    result: d,
                                    niceMin: d[0],
                                    niceMax: d[d.length - 1]
                                }
                            } else
                                n.xAxisScale = this.scales.setXScale(n.minX, n.maxX);
                        else
                            n.xAxisScale = this.scales.linearScale(0, c, c, 0, i.xaxis.stepSize),
                            n.noLabelsProvided && n.labels.length > 0 && (n.xAxisScale = this.scales.linearScale(1, n.labels.length, c - 1, 0, i.xaxis.stepSize),
                                n.seriesX = n.labels.slice());
                        r && (n.labels = n.xAxisScale.result.slice())
                    }
                    return n.isBarHorizontal && n.labels.length && (n.xTickAmount = n.labels.length),
                        this._handleSingleDataPoint(),
                        this._getMinXDiff(),
                        {
                            minX: n.minX,
                            maxX: n.maxX
                        }
                }
            }, {
                key: "setZRange",
                value: function () {
                    var n = this.w.globals;
                    if (n.isDataXYZ) {
                        for (var i = 0; i < n.series.length; i++)
                            if (n.seriesZ[i] !== void 0)
                                for (var r = 0; r < n.seriesZ[i].length; r++)
                                    n.seriesZ[i][r] !== null && M.isNumber(n.seriesZ[i][r]) && (n.maxZ = Math.max(n.maxZ, n.seriesZ[i][r]),
                                        n.minZ = Math.min(n.minZ, n.seriesZ[i][r]))
                    }
                }
            }, {
                key: "_handleSingleDataPoint",
                value: function () {
                    var n = this.w.globals
                        , i = this.w.config;
                    if (n.minX === n.maxX) {
                        var r = new be(this.ctx);
                        if (i.xaxis.type === "datetime") {
                            var c = r.getDate(n.minX);
                            i.xaxis.labels.datetimeUTC ? c.setUTCDate(c.getUTCDate() - 2) : c.setDate(c.getDate() - 2),
                                n.minX = new Date(c).getTime();
                            var d = r.getDate(n.maxX);
                            i.xaxis.labels.datetimeUTC ? d.setUTCDate(d.getUTCDate() + 2) : d.setDate(d.getDate() + 2),
                                n.maxX = new Date(d).getTime()
                        } else
                            (i.xaxis.type === "numeric" || i.xaxis.type === "category" && !n.noLabelsProvided) && (n.minX = n.minX - 2,
                                n.initialMinX = n.minX,
                                n.maxX = n.maxX + 2,
                                n.initialMaxX = n.maxX)
                    }
                }
            }, {
                key: "_getMinXDiff",
                value: function () {
                    var n = this.w.globals;
                    n.isXNumeric && n.seriesX.forEach(function (i, r) {
                        i.length === 1 && i.push(n.seriesX[n.maxValsInArrayIndex][n.seriesX[n.maxValsInArrayIndex].length - 1]);
                        var c = i.slice();
                        c.sort(function (d, h) {
                            return d - h
                        }),
                            c.forEach(function (d, h) {
                                if (h > 0) {
                                    var f = d - c[h - 1];
                                    f > 0 && (n.minXDiff = Math.min(f, n.minXDiff))
                                }
                            }),
                        n.dataPoints !== 1 && n.minXDiff !== Number.MAX_VALUE || (n.minXDiff = .5)
                    })
                }
            }, {
                key: "_setStackedMinMax",
                value: function () {
                    var n = this
                        , i = this.w.globals;
                    if (i.series.length) {
                        var r = i.seriesGroups;
                        r.length || (r = [this.w.config.series.map(function (h) {
                            return h.name
                        })]);
                        var c = {}
                            , d = {};
                        r.forEach(function (h) {
                            c[h] = [],
                                d[h] = [],
                                n.w.config.series.map(function (f, m) {
                                    return h.indexOf(f.name) > -1 ? m : null
                                }).filter(function (f) {
                                    return f !== null
                                }).forEach(function (f) {
                                    for (var m = 0; m < i.series[i.maxValsInArrayIndex].length; m++) {
                                        var x, S;
                                        c[h][m] === void 0 && (c[h][m] = 0,
                                            d[h][m] = 0),
                                        (n.w.config.chart.stacked && !i.comboCharts || n.w.config.chart.stacked && i.comboCharts && (!n.w.config.chart.stackOnlyBar || ((x = n.w.config.series) === null || x === void 0 || (S = x[f]) === null || S === void 0 ? void 0 : S.type) === "bar")) && i.series[f][m] !== null && M.isNumber(i.series[f][m]) && (i.series[f][m] > 0 ? c[h][m] += parseFloat(i.series[f][m]) + 1e-4 : d[h][m] += parseFloat(i.series[f][m]))
                                    }
                                })
                        }),
                            Object.entries(c).forEach(function (h) {
                                var f = I(h, 1)[0];
                                c[f].forEach(function (m, x) {
                                    i.maxY = Math.max(i.maxY, c[f][x]),
                                        i.minY = Math.min(i.minY, d[f][x])
                                })
                            })
                    }
                }
            }]),
                j
        }()
            , W = function () {
            function j(n, i) {
                l(this, j),
                    this.ctx = n,
                    this.elgrid = i,
                    this.w = n.w;
                var r = this.w;
                this.xaxisFontSize = r.config.xaxis.labels.style.fontSize,
                    this.axisFontFamily = r.config.xaxis.labels.style.fontFamily,
                    this.xaxisForeColors = r.config.xaxis.labels.style.colors,
                    this.isCategoryBarHorizontal = r.config.chart.type === "bar" && r.config.plotOptions.bar.horizontal,
                    this.xAxisoffX = 0,
                r.config.xaxis.position === "bottom" && (this.xAxisoffX = r.globals.gridHeight),
                    this.drawnLabels = [],
                    this.axesUtils = new Ae(n)
            }

            return p(j, [{
                key: "drawYaxis",
                value: function (n) {
                    var i = this
                        , r = this.w
                        , c = new $(this.ctx)
                        , d = r.config.yaxis[n].labels.style
                        , h = d.fontSize
                        , f = d.fontFamily
                        , m = d.fontWeight
                        , x = c.group({
                        class: "apexcharts-yaxis",
                        rel: n,
                        transform: "translate(" + r.globals.translateYAxisX[n] + ", 0)"
                    });
                    if (this.axesUtils.isYAxisHidden(n))
                        return x;
                    var S = c.group({
                        class: "apexcharts-yaxis-texts-g"
                    });
                    x.add(S);
                    var _ = r.globals.yAxisScale[n].result.length - 1
                        , k = r.globals.gridHeight / _
                        , L = r.globals.translateY
                        , N = r.globals.yLabelFormatters[n]
                        , H = r.globals.yAxisScale[n].result.slice();
                    H = this.axesUtils.checkForReversedLabels(n, H);
                    var z = "";
                    if (r.config.yaxis[n].labels.show)
                        for (var q = function (pe) {
                            var ge = H[pe];
                            ge = N(ge, pe, r);
                            var Ie = r.config.yaxis[n].labels.padding;
                            r.config.yaxis[n].opposite && r.config.yaxis.length !== 0 && (Ie *= -1);
                            var $e = "end";
                            r.config.yaxis[n].opposite && ($e = "start"),
                                r.config.yaxis[n].labels.align === "left" ? $e = "start" : r.config.yaxis[n].labels.align === "center" ? $e = "middle" : r.config.yaxis[n].labels.align === "right" && ($e = "end");
                            var Fe = i.axesUtils.getYAxisForeColor(d.colors, n)
                                , Je = r.config.yaxis[n].labels.offsetY;
                            r.config.chart.type === "heatmap" && (Je -= (r.globals.gridHeight / r.globals.series.length - 1) / 2);
                            var ut = c.drawText({
                                x: Ie,
                                y: L + _ / 10 + Je + 1,
                                text: ge,
                                textAnchor: $e,
                                fontSize: h,
                                fontFamily: f,
                                fontWeight: m,
                                maxWidth: r.config.yaxis[n].labels.maxWidth,
                                foreColor: Array.isArray(Fe) ? Fe[pe] : Fe,
                                isPlainText: !1,
                                cssClass: "apexcharts-yaxis-label " + d.cssClass
                            });
                            pe === _ && (z = ut),
                                S.add(ut);
                            var yt = document.createElementNS(r.globals.SVGNS, "title");
                            if (yt.textContent = Array.isArray(ge) ? ge.join(" ") : ge,
                                ut.node.appendChild(yt),
                            r.config.yaxis[n].labels.rotate !== 0) {
                                var It = c.rotateAroundCenter(z.node)
                                    , Nt = c.rotateAroundCenter(ut.node);
                                ut.node.setAttribute("transform", "rotate(".concat(r.config.yaxis[n].labels.rotate, " ").concat(It.x, " ").concat(Nt.y, ")"))
                            }
                            L += k
                        }, Q = _; Q >= 0; Q--)
                            q(Q);
                    if (r.config.yaxis[n].title.text !== void 0) {
                        var b = c.group({
                            class: "apexcharts-yaxis-title"
                        })
                            , E = 0;
                        r.config.yaxis[n].opposite && (E = r.globals.translateYAxisX[n]);
                        var B = c.drawText({
                            x: E,
                            y: r.globals.gridHeight / 2 + r.globals.translateY + r.config.yaxis[n].title.offsetY,
                            text: r.config.yaxis[n].title.text,
                            textAnchor: "end",
                            foreColor: r.config.yaxis[n].title.style.color,
                            fontSize: r.config.yaxis[n].title.style.fontSize,
                            fontWeight: r.config.yaxis[n].title.style.fontWeight,
                            fontFamily: r.config.yaxis[n].title.style.fontFamily,
                            cssClass: "apexcharts-yaxis-title-text " + r.config.yaxis[n].title.style.cssClass
                        });
                        b.add(B),
                            x.add(b)
                    }
                    var X = r.config.yaxis[n].axisBorder
                        , K = 31 + X.offsetX;
                    if (r.config.yaxis[n].opposite && (K = -31 - X.offsetX),
                        X.show) {
                        var ee = c.drawLine(K, r.globals.translateY + X.offsetY - 2, K, r.globals.gridHeight + r.globals.translateY + X.offsetY + 2, X.color, 0, X.width);
                        x.add(ee)
                    }
                    return r.config.yaxis[n].axisTicks.show && this.axesUtils.drawYAxisTicks(K, _, X, r.config.yaxis[n].axisTicks, n, k, x),
                        x
                }
            }, {
                key: "drawYaxisInversed",
                value: function (n) {
                    var i = this.w
                        , r = new $(this.ctx)
                        , c = r.group({
                        class: "apexcharts-xaxis apexcharts-yaxis-inversed"
                    })
                        , d = r.group({
                        class: "apexcharts-xaxis-texts-g",
                        transform: "translate(".concat(i.globals.translateXAxisX, ", ").concat(i.globals.translateXAxisY, ")")
                    });
                    c.add(d);
                    var h = i.globals.yAxisScale[n].result.length - 1
                        , f = i.globals.gridWidth / h + .1
                        , m = f + i.config.xaxis.labels.offsetX
                        , x = i.globals.xLabelFormatter
                        , S = i.globals.yAxisScale[n].result.slice()
                        , _ = i.globals.timescaleLabels;
                    _.length > 0 && (this.xaxisLabels = _.slice(),
                        h = (S = _.slice()).length),
                        S = this.axesUtils.checkForReversedLabels(n, S);
                    var k = _.length;
                    if (i.config.xaxis.labels.show)
                        for (var L = k ? 0 : h; k ? L < k : L >= 0; k ? L++ : L--) {
                            var N = S[L];
                            N = x(N, L, i);
                            var H = i.globals.gridWidth + i.globals.padHorizontal - (m - f + i.config.xaxis.labels.offsetX);
                            if (_.length) {
                                var z = this.axesUtils.getLabel(S, _, H, L, this.drawnLabels, this.xaxisFontSize);
                                H = z.x,
                                    N = z.text,
                                    this.drawnLabels.push(z.text),
                                L === 0 && i.globals.skipFirstTimelinelabel && (N = ""),
                                L === S.length - 1 && i.globals.skipLastTimelinelabel && (N = "")
                            }
                            var q = r.drawText({
                                x: H,
                                y: this.xAxisoffX + i.config.xaxis.labels.offsetY + 30 - (i.config.xaxis.position === "top" ? i.globals.xAxisHeight + i.config.xaxis.axisTicks.height - 2 : 0),
                                text: N,
                                textAnchor: "middle",
                                foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[n] : this.xaxisForeColors,
                                fontSize: this.xaxisFontSize,
                                fontFamily: this.xaxisFontFamily,
                                fontWeight: i.config.xaxis.labels.style.fontWeight,
                                isPlainText: !1,
                                cssClass: "apexcharts-xaxis-label " + i.config.xaxis.labels.style.cssClass
                            });
                            d.add(q),
                                q.tspan(N);
                            var Q = document.createElementNS(i.globals.SVGNS, "title");
                            Q.textContent = N,
                                q.node.appendChild(Q),
                                m += f
                        }
                    return this.inversedYAxisTitleText(c),
                        this.inversedYAxisBorder(c),
                        c
                }
            }, {
                key: "inversedYAxisBorder",
                value: function (n) {
                    var i = this.w
                        , r = new $(this.ctx)
                        , c = i.config.xaxis.axisBorder;
                    if (c.show) {
                        var d = 0;
                        i.config.chart.type === "bar" && i.globals.isXNumeric && (d -= 15);
                        var h = r.drawLine(i.globals.padHorizontal + d + c.offsetX, this.xAxisoffX, i.globals.gridWidth, this.xAxisoffX, c.color, 0, c.height);
                        this.elgrid && this.elgrid.elGridBorders && i.config.grid.show ? this.elgrid.elGridBorders.add(h) : n.add(h)
                    }
                }
            }, {
                key: "inversedYAxisTitleText",
                value: function (n) {
                    var i = this.w
                        , r = new $(this.ctx);
                    if (i.config.xaxis.title.text !== void 0) {
                        var c = r.group({
                            class: "apexcharts-xaxis-title apexcharts-yaxis-title-inversed"
                        })
                            , d = r.drawText({
                            x: i.globals.gridWidth / 2 + i.config.xaxis.title.offsetX,
                            y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(i.config.xaxis.title.style.fontSize) + i.config.xaxis.title.offsetY + 20,
                            text: i.config.xaxis.title.text,
                            textAnchor: "middle",
                            fontSize: i.config.xaxis.title.style.fontSize,
                            fontFamily: i.config.xaxis.title.style.fontFamily,
                            fontWeight: i.config.xaxis.title.style.fontWeight,
                            foreColor: i.config.xaxis.title.style.color,
                            cssClass: "apexcharts-xaxis-title-text " + i.config.xaxis.title.style.cssClass
                        });
                        c.add(d),
                            n.add(c)
                    }
                }
            }, {
                key: "yAxisTitleRotate",
                value: function (n, i) {
                    var r = this.w
                        , c = new $(this.ctx)
                        , d = {
                            width: 0,
                            height: 0
                        }
                        , h = {
                            width: 0,
                            height: 0
                        }
                        ,
                        f = r.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(n, "'] .apexcharts-yaxis-texts-g"));
                    f !== null && (d = f.getBoundingClientRect());
                    var m = r.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(n, "'] .apexcharts-yaxis-title text"));
                    if (m !== null && (h = m.getBoundingClientRect()),
                    m !== null) {
                        var x = this.xPaddingForYAxisTitle(n, d, h, i);
                        m.setAttribute("x", x.xPos - (i ? 10 : 0))
                    }
                    if (m !== null) {
                        var S = c.rotateAroundCenter(m);
                        m.setAttribute("transform", "rotate(".concat(i ? -1 * r.config.yaxis[n].title.rotate : r.config.yaxis[n].title.rotate, " ").concat(S.x, " ").concat(S.y, ")"))
                    }
                }
            }, {
                key: "xPaddingForYAxisTitle",
                value: function (n, i, r, c) {
                    var d = this.w
                        , h = 0
                        , f = 0
                        , m = 10;
                    return d.config.yaxis[n].title.text === void 0 || n < 0 ? {
                        xPos: f,
                        padd: 0
                    } : (c ? (f = i.width + d.config.yaxis[n].title.offsetX + r.width / 2 + m / 2,
                    (h += 1) === 0 && (f -= m / 2)) : (f = -1 * i.width + d.config.yaxis[n].title.offsetX + m / 2 + r.width / 2,
                    d.globals.isBarHorizontal && (m = 25,
                        f = -1 * i.width - d.config.yaxis[n].title.offsetX - m)),
                        {
                            xPos: f,
                            padd: m
                        })
                }
            }, {
                key: "setYAxisXPosition",
                value: function (n, i) {
                    var r = this.w
                        , c = 0
                        , d = 0
                        , h = 18
                        , f = 1;
                    r.config.yaxis.length > 1 && (this.multipleYs = !0),
                        r.config.yaxis.map(function (m, x) {
                            var S = r.globals.ignoreYAxisIndexes.indexOf(x) > -1 || !m.show || m.floating || n[x].width === 0
                                , _ = n[x].width + i[x].width;
                            m.opposite ? r.globals.isBarHorizontal ? (d = r.globals.gridWidth + r.globals.translateX - 1,
                                r.globals.translateYAxisX[x] = d - m.labels.offsetX) : (d = r.globals.gridWidth + r.globals.translateX + f,
                            S || (f = f + _ + 20),
                                r.globals.translateYAxisX[x] = d - m.labels.offsetX + 20) : (c = r.globals.translateX - h,
                            S || (h = h + _ + 20),
                                r.globals.translateYAxisX[x] = c + m.labels.offsetX)
                        })
                }
            }, {
                key: "setYAxisTextAlignments",
                value: function () {
                    var n = this.w
                        , i = n.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");
                    (i = M.listToArray(i)).forEach(function (r, c) {
                        var d = n.config.yaxis[c];
                        if (d && !d.floating && d.labels.align !== void 0) {
                            var h = n.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(c, "'] .apexcharts-yaxis-texts-g"))
                                ,
                                f = n.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(c, "'] .apexcharts-yaxis-label"));
                            f = M.listToArray(f);
                            var m = h.getBoundingClientRect();
                            d.labels.align === "left" ? (f.forEach(function (x, S) {
                                x.setAttribute("text-anchor", "start")
                            }),
                            d.opposite || h.setAttribute("transform", "translate(-".concat(m.width, ", 0)"))) : d.labels.align === "center" ? (f.forEach(function (x, S) {
                                x.setAttribute("text-anchor", "middle")
                            }),
                                h.setAttribute("transform", "translate(".concat(m.width / 2 * (d.opposite ? 1 : -1), ", 0)"))) : d.labels.align === "right" && (f.forEach(function (x, S) {
                                x.setAttribute("text-anchor", "end")
                            }),
                            d.opposite && h.setAttribute("transform", "translate(".concat(m.width, ", 0)")))
                        }
                    })
                }
            }]),
                j
        }()
            , ce = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.documentEvent = M.bind(this.documentEvent, this)
            }

            return p(j, [{
                key: "addEventListener",
                value: function (n, i) {
                    var r = this.w;
                    r.globals.events.hasOwnProperty(n) ? r.globals.events[n].push(i) : r.globals.events[n] = [i]
                }
            }, {
                key: "removeEventListener",
                value: function (n, i) {
                    var r = this.w;
                    if (r.globals.events.hasOwnProperty(n)) {
                        var c = r.globals.events[n].indexOf(i);
                        c !== -1 && r.globals.events[n].splice(c, 1)
                    }
                }
            }, {
                key: "fireEvent",
                value: function (n, i) {
                    var r = this.w;
                    if (r.globals.events.hasOwnProperty(n)) {
                        i && i.length || (i = []);
                        for (var c = r.globals.events[n], d = c.length, h = 0; h < d; h++)
                            c[h].apply(null, i)
                    }
                }
            }, {
                key: "setupEventHandlers",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = this.ctx
                        , c = i.globals.dom.baseEl.querySelector(i.globals.chartClass);
                    this.ctx.eventList.forEach(function (d) {
                        c.addEventListener(d, function (h) {
                            var f = Object.assign({}, i, {
                                seriesIndex: i.globals.capturedSeriesIndex,
                                dataPointIndex: i.globals.capturedDataPointIndex
                            });
                            h.type === "mousemove" || h.type === "touchmove" ? typeof i.config.chart.events.mouseMove == "function" && i.config.chart.events.mouseMove(h, r, f) : h.type === "mouseleave" || h.type === "touchleave" ? typeof i.config.chart.events.mouseLeave == "function" && i.config.chart.events.mouseLeave(h, r, f) : (h.type === "mouseup" && h.which === 1 || h.type === "touchend") && (typeof i.config.chart.events.click == "function" && i.config.chart.events.click(h, r, f),
                                r.ctx.events.fireEvent("click", [h, r, f]))
                        }, {
                            capture: !1,
                            passive: !0
                        })
                    }),
                        this.ctx.eventList.forEach(function (d) {
                            i.globals.dom.baseEl.addEventListener(d, n.documentEvent, {
                                passive: !0
                            })
                        }),
                        this.ctx.core.setupBrushHandler()
                }
            }, {
                key: "documentEvent",
                value: function (n) {
                    var i = this.w
                        , r = n.target.className;
                    if (n.type === "click") {
                        var c = i.globals.dom.baseEl.querySelector(".apexcharts-menu");
                        c && c.classList.contains("apexcharts-menu-open") && r !== "apexcharts-menu-icon" && c.classList.remove("apexcharts-menu-open")
                    }
                    i.globals.clientX = n.type === "touchmove" ? n.touches[0].clientX : n.clientX,
                        i.globals.clientY = n.type === "touchmove" ? n.touches[0].clientY : n.clientY
                }
            }]),
                j
        }()
            , we = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "setCurrentLocaleValues",
                value: function (n) {
                    var i = this.w.config.chart.locales;
                    window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (i = this.w.config.chart.locales.concat(window.Apex.chart.locales));
                    var r = i.filter(function (d) {
                        return d.name === n
                    })[0];
                    if (!r)
                        throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
                    var c = M.extend(le, r);
                    this.w.globals.locale = c.options
                }
            }]),
                j
        }()
            , _e = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "drawAxis",
                value: function (n, i) {
                    var r, c, d = this, h = this.w.globals, f = this.w.config, m = new He(this.ctx, i),
                        x = new W(this.ctx, i);
                    h.axisCharts && n !== "radar" && (h.isBarHorizontal ? (c = x.drawYaxisInversed(0),
                        r = m.drawXaxisInversed(0),
                        h.dom.elGraphical.add(r),
                        h.dom.elGraphical.add(c)) : (r = m.drawXaxis(),
                        h.dom.elGraphical.add(r),
                        f.yaxis.map(function (S, _) {
                            if (h.ignoreYAxisIndexes.indexOf(_) === -1 && (c = x.drawYaxis(_),
                                h.dom.Paper.add(c),
                            d.w.config.grid.position === "back")) {
                                var k = h.dom.Paper.children()[1];
                                k.remove(),
                                    h.dom.Paper.add(k)
                            }
                        })))
                }
            }]),
                j
        }()
            , Oe = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "drawXCrosshairs",
                value: function () {
                    var n = this.w
                        , i = new $(this.ctx)
                        , r = new F(this.ctx)
                        , c = n.config.xaxis.crosshairs.fill.gradient
                        , d = n.config.xaxis.crosshairs.dropShadow
                        , h = n.config.xaxis.crosshairs.fill.type
                        , f = c.colorFrom
                        , m = c.colorTo
                        , x = c.opacityFrom
                        , S = c.opacityTo
                        , _ = c.stops
                        , k = d.enabled
                        , L = d.left
                        , N = d.top
                        , H = d.blur
                        , z = d.color
                        , q = d.opacity
                        , Q = n.config.xaxis.crosshairs.fill.color;
                    if (n.config.xaxis.crosshairs.show) {
                        h === "gradient" && (Q = i.drawGradient("vertical", f, m, x, S, null, _, null));
                        var b = i.drawRect();
                        n.config.xaxis.crosshairs.width === 1 && (b = i.drawLine());
                        var E = n.globals.gridHeight;
                        (!M.isNumber(E) || E < 0) && (E = 0);
                        var B = n.config.xaxis.crosshairs.width;
                        (!M.isNumber(B) || B < 0) && (B = 0),
                            b.attr({
                                class: "apexcharts-xcrosshairs",
                                x: 0,
                                y: 0,
                                y2: E,
                                width: B,
                                height: E,
                                fill: Q,
                                filter: "none",
                                "fill-opacity": n.config.xaxis.crosshairs.opacity,
                                stroke: n.config.xaxis.crosshairs.stroke.color,
                                "stroke-width": n.config.xaxis.crosshairs.stroke.width,
                                "stroke-dasharray": n.config.xaxis.crosshairs.stroke.dashArray
                            }),
                        k && (b = r.dropShadow(b, {
                            left: L,
                            top: N,
                            blur: H,
                            color: z,
                            opacity: q
                        })),
                            n.globals.dom.elGraphical.add(b)
                    }
                }
            }, {
                key: "drawYCrosshairs",
                value: function () {
                    var n = this.w
                        , i = new $(this.ctx)
                        , r = n.config.yaxis[0].crosshairs
                        , c = n.globals.barPadForNumericAxis;
                    if (n.config.yaxis[0].crosshairs.show) {
                        var d = i.drawLine(-c, 0, n.globals.gridWidth + c, 0, r.stroke.color, r.stroke.dashArray, r.stroke.width);
                        d.attr({
                            class: "apexcharts-ycrosshairs"
                        }),
                            n.globals.dom.elGraphical.add(d)
                    }
                    var h = i.drawLine(-c, 0, n.globals.gridWidth + c, 0, r.stroke.color, 0, 0);
                    h.attr({
                        class: "apexcharts-ycrosshairs-hidden"
                    }),
                        n.globals.dom.elGraphical.add(h)
                }
            }]),
                j
        }()
            , qe = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "checkResponsiveConfig",
                value: function (n) {
                    var i = this
                        , r = this.w
                        , c = r.config;
                    if (c.responsive.length !== 0) {
                        var d = c.responsive.slice();
                        d.sort(function (x, S) {
                            return x.breakpoint > S.breakpoint ? 1 : S.breakpoint > x.breakpoint ? -1 : 0
                        }).reverse();
                        var h = new Me({})
                            , f = function () {
                            var x = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}
                                , S = d[0].breakpoint
                                , _ = window.innerWidth > 0 ? window.innerWidth : screen.width;
                            if (_ > S) {
                                var k = V.extendArrayProps(h, r.globals.initialConfig, r);
                                x = M.extend(k, x),
                                    x = M.extend(r.config, x),
                                    i.overrideResponsiveOptions(x)
                            } else
                                for (var L = 0; L < d.length; L++)
                                    _ < d[L].breakpoint && (x = V.extendArrayProps(h, d[L].options, r),
                                        x = M.extend(r.config, x),
                                        i.overrideResponsiveOptions(x))
                        };
                        if (n) {
                            var m = V.extendArrayProps(h, n, r);
                            m = M.extend(r.config, m),
                                f(m = M.extend(m, n))
                        } else
                            f({})
                    }
                }
            }, {
                key: "overrideResponsiveOptions",
                value: function (n) {
                    var i = new Me(n).init({
                        responsiveOverride: !0
                    });
                    this.w.config = i
                }
            }]),
                j
        }()
            , We = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.colors = [],
                    this.w = n.w;
                var i = this.w;
                this.isColorFn = !1,
                    this.isHeatmapDistributed = i.config.chart.type === "treemap" && i.config.plotOptions.treemap.distributed || i.config.chart.type === "heatmap" && i.config.plotOptions.heatmap.distributed,
                    this.isBarDistributed = i.config.plotOptions.bar.distributed && (i.config.chart.type === "bar" || i.config.chart.type === "rangeBar")
            }

            return p(j, [{
                key: "init",
                value: function () {
                    this.setDefaultColors()
                }
            }, {
                key: "setDefaultColors",
                value: function () {
                    var n, i = this, r = this.w, c = new M;
                    if (r.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(r.config.theme.mode)),
                        r.config.colors === void 0 || ((n = r.config.colors) === null || n === void 0 ? void 0 : n.length) === 0 ? r.globals.colors = this.predefined() : (r.globals.colors = r.config.colors,
                        Array.isArray(r.config.colors) && r.config.colors.length > 0 && typeof r.config.colors[0] == "function" && (r.globals.colors = r.config.series.map(function (N, H) {
                            var z = r.config.colors[H];
                            return z || (z = r.config.colors[0]),
                                typeof z == "function" ? (i.isColorFn = !0,
                                    z({
                                        value: r.globals.axisCharts ? r.globals.series[H][0] ? r.globals.series[H][0] : 0 : r.globals.series[H],
                                        seriesIndex: H,
                                        dataPointIndex: H,
                                        w: r
                                    })) : z
                        }))),
                        r.globals.seriesColors.map(function (N, H) {
                            N && (r.globals.colors[H] = N)
                        }),
                        r.config.theme.monochrome.enabled) {
                        var d = []
                            , h = r.globals.series.length;
                        (this.isBarDistributed || this.isHeatmapDistributed) && (h = r.globals.series[0].length * r.globals.series.length);
                        for (var f = r.config.theme.monochrome.color, m = 1 / (h / r.config.theme.monochrome.shadeIntensity), x = r.config.theme.monochrome.shadeTo, S = 0, _ = 0; _ < h; _++) {
                            var k = void 0;
                            x === "dark" ? (k = c.shadeColor(-1 * S, f),
                                S += m) : (k = c.shadeColor(S, f),
                                S += m),
                                d.push(k)
                        }
                        r.globals.colors = d.slice()
                    }
                    var L = r.globals.colors.slice();
                    this.pushExtraColors(r.globals.colors),
                        ["fill", "stroke"].forEach(function (N) {
                            r.config[N].colors === void 0 ? r.globals[N].colors = i.isColorFn ? r.config.colors : L : r.globals[N].colors = r.config[N].colors.slice(),
                                i.pushExtraColors(r.globals[N].colors)
                        }),
                        r.config.dataLabels.style.colors === void 0 ? r.globals.dataLabels.style.colors = L : r.globals.dataLabels.style.colors = r.config.dataLabels.style.colors.slice(),
                        this.pushExtraColors(r.globals.dataLabels.style.colors, 50),
                        r.config.plotOptions.radar.polygons.fill.colors === void 0 ? r.globals.radarPolygons.fill.colors = [r.config.theme.mode === "dark" ? "#424242" : "none"] : r.globals.radarPolygons.fill.colors = r.config.plotOptions.radar.polygons.fill.colors.slice(),
                        this.pushExtraColors(r.globals.radarPolygons.fill.colors, 20),
                        r.config.markers.colors === void 0 ? r.globals.markers.colors = L : r.globals.markers.colors = r.config.markers.colors.slice(),
                        this.pushExtraColors(r.globals.markers.colors)
                }
            }, {
                key: "pushExtraColors",
                value: function (n, i) {
                    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null
                        , c = this.w
                        , d = i || c.globals.series.length;
                    if (r === null && (r = this.isBarDistributed || this.isHeatmapDistributed || c.config.chart.type === "heatmap" && c.config.plotOptions.heatmap.colorScale.inverse),
                    r && c.globals.series.length && (d = c.globals.series[c.globals.maxValsInArrayIndex].length * c.globals.series.length),
                    n.length < d)
                        for (var h = d - n.length, f = 0; f < h; f++)
                            n.push(n[f])
                }
            }, {
                key: "updateThemeOptions",
                value: function (n) {
                    n.chart = n.chart || {},
                        n.tooltip = n.tooltip || {};
                    var i = n.theme.mode || "light"
                        , r = n.theme.palette ? n.theme.palette : i === "dark" ? "palette4" : "palette1"
                        , c = n.chart.foreColor ? n.chart.foreColor : i === "dark" ? "#f6f7f8" : "#373d3f";
                    return n.tooltip.theme = i,
                        n.chart.foreColor = c,
                        n.theme.palette = r,
                        n
                }
            }, {
                key: "predefined",
                value: function () {
                    switch (this.w.config.theme.palette) {
                        case "palette1":
                        default:
                            this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
                            break;
                        case "palette2":
                            this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
                            break;
                        case "palette3":
                            this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
                            break;
                        case "palette4":
                            this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
                            break;
                        case "palette5":
                            this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
                            break;
                        case "palette6":
                            this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
                            break;
                        case "palette7":
                            this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
                            break;
                        case "palette8":
                            this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
                            break;
                        case "palette9":
                            this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
                            break;
                        case "palette10":
                            this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"]
                    }
                    return this.colors
                }
            }]),
                j
        }()
            , Ge = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "draw",
                value: function () {
                    this.drawTitleSubtitle("title"),
                        this.drawTitleSubtitle("subtitle")
                }
            }, {
                key: "drawTitleSubtitle",
                value: function (n) {
                    var i = this.w
                        , r = n === "title" ? i.config.title : i.config.subtitle
                        , c = i.globals.svgWidth / 2
                        , d = r.offsetY
                        , h = "middle";
                    if (r.align === "left" ? (c = 10,
                        h = "start") : r.align === "right" && (c = i.globals.svgWidth - 10,
                        h = "end"),
                        c += r.offsetX,
                        d = d + parseInt(r.style.fontSize, 10) + r.margin / 2,
                    r.text !== void 0) {
                        var f = new $(this.ctx).drawText({
                            x: c,
                            y: d,
                            text: r.text,
                            textAnchor: h,
                            fontSize: r.style.fontSize,
                            fontFamily: r.style.fontFamily,
                            fontWeight: r.style.fontWeight,
                            foreColor: r.style.color,
                            opacity: 1
                        });
                        f.node.setAttribute("class", "apexcharts-".concat(n, "-text")),
                            i.globals.dom.Paper.add(f)
                    }
                }
            }]),
                j
        }()
            , Ue = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.dCtx = n
            }

            return p(j, [{
                key: "getTitleSubtitleCoords",
                value: function (n) {
                    var i = this.w
                        , r = 0
                        , c = 0
                        , d = n === "title" ? i.config.title.floating : i.config.subtitle.floating
                        , h = i.globals.dom.baseEl.querySelector(".apexcharts-".concat(n, "-text"));
                    if (h !== null && !d) {
                        var f = h.getBoundingClientRect();
                        r = f.width,
                            c = i.globals.axisCharts ? f.height + 5 : f.height
                    }
                    return {
                        width: r,
                        height: c
                    }
                }
            }, {
                key: "getLegendsRect",
                value: function () {
                    var n = this.w
                        , i = n.globals.dom.elLegendWrap;
                    n.config.legend.height || n.config.legend.position !== "top" && n.config.legend.position !== "bottom" || (i.style.maxHeight = n.globals.svgHeight / 2 + "px");
                    var r = Object.assign({}, M.getBoundingClientRect(i));
                    return i !== null && !n.config.legend.floating && n.config.legend.show ? this.dCtx.lgRect = {
                        x: r.x,
                        y: r.y,
                        height: r.height,
                        width: r.height === 0 ? 0 : r.width
                    } : this.dCtx.lgRect = {
                        x: 0,
                        y: 0,
                        height: 0,
                        width: 0
                    },
                    n.config.legend.position !== "left" && n.config.legend.position !== "right" || 1.5 * this.dCtx.lgRect.width > n.globals.svgWidth && (this.dCtx.lgRect.width = n.globals.svgWidth / 1.5),
                        this.dCtx.lgRect
                }
            }, {
                key: "getLargestStringFromMultiArr",
                value: function (n, i) {
                    var r = n;
                    if (this.w.globals.isMultiLineX) {
                        var c = i.map(function (h, f) {
                            return Array.isArray(h) ? h.length : 1
                        })
                            , d = Math.max.apply(Math, A(c));
                        r = i[c.indexOf(d)]
                    }
                    return r
                }
            }]),
                j
        }()
            , ht = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.dCtx = n
            }

            return p(j, [{
                key: "getxAxisLabelsCoords",
                value: function () {
                    var n, i = this.w, r = i.globals.labels.slice();
                    if (i.config.xaxis.convertedCatToNumeric && r.length === 0 && (r = i.globals.categoryLabels),
                    i.globals.timescaleLabels.length > 0) {
                        var c = this.getxAxisTimeScaleLabelsCoords();
                        n = {
                            width: c.width,
                            height: c.height
                        },
                            i.globals.rotateXLabels = !1
                    } else {
                        this.dCtx.lgWidthForSideLegends = i.config.legend.position !== "left" && i.config.legend.position !== "right" || i.config.legend.floating ? 0 : this.dCtx.lgRect.width;
                        var d = i.globals.xLabelFormatter
                            , h = M.getLargestStringFromArr(r)
                            , f = this.dCtx.dimHelpers.getLargestStringFromMultiArr(h, r);
                        i.globals.isBarHorizontal && (f = h = i.globals.yAxisScale[0].result.reduce(function (N, H) {
                            return N.length > H.length ? N : H
                        }, 0));
                        var m = new de(this.dCtx.ctx)
                            , x = h;
                        h = m.xLabelFormat(d, h, x, {
                            i: void 0,
                            dateFormatter: new be(this.dCtx.ctx).formatDate,
                            w: i
                        }),
                            f = m.xLabelFormat(d, f, x, {
                                i: void 0,
                                dateFormatter: new be(this.dCtx.ctx).formatDate,
                                w: i
                            }),
                        (i.config.xaxis.convertedCatToNumeric && h === void 0 || String(h).trim() === "") && (f = h = "1");
                        var S = new $(this.dCtx.ctx)
                            , _ = S.getTextRects(h, i.config.xaxis.labels.style.fontSize)
                            , k = _;
                        if (h !== f && (k = S.getTextRects(f, i.config.xaxis.labels.style.fontSize)),
                        (n = {
                            width: _.width >= k.width ? _.width : k.width,
                            height: _.height >= k.height ? _.height : k.height
                        }).width * r.length > i.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && i.config.xaxis.labels.rotate !== 0 || i.config.xaxis.labels.rotateAlways) {
                            if (!i.globals.isBarHorizontal) {
                                i.globals.rotateXLabels = !0;
                                var L = function (N) {
                                    return S.getTextRects(N, i.config.xaxis.labels.style.fontSize, i.config.xaxis.labels.style.fontFamily, "rotate(".concat(i.config.xaxis.labels.rotate, " 0 0)"), !1)
                                };
                                _ = L(h),
                                h !== f && (k = L(f)),
                                    n.height = (_.height > k.height ? _.height : k.height) / 1.5,
                                    n.width = _.width > k.width ? _.width : k.width
                            }
                        } else
                            i.globals.rotateXLabels = !1
                    }
                    return i.config.xaxis.labels.show || (n = {
                        width: 0,
                        height: 0
                    }),
                        {
                            width: n.width,
                            height: n.height
                        }
                }
            }, {
                key: "getxAxisGroupLabelsCoords",
                value: function () {
                    var n, i = this.w;
                    if (!i.globals.hasXaxisGroups)
                        return {
                            width: 0,
                            height: 0
                        };
                    var r,
                        c = ((n = i.config.xaxis.group.style) === null || n === void 0 ? void 0 : n.fontSize) || i.config.xaxis.labels.style.fontSize,
                        d = i.globals.groups.map(function (_) {
                            return _.title
                        }), h = M.getLargestStringFromArr(d),
                        f = this.dCtx.dimHelpers.getLargestStringFromMultiArr(h, d), m = new $(this.dCtx.ctx),
                        x = m.getTextRects(h, c), S = x;
                    return h !== f && (S = m.getTextRects(f, c)),
                        r = {
                            width: x.width >= S.width ? x.width : S.width,
                            height: x.height >= S.height ? x.height : S.height
                        },
                    i.config.xaxis.labels.show || (r = {
                        width: 0,
                        height: 0
                    }),
                        {
                            width: r.width,
                            height: r.height
                        }
                }
            }, {
                key: "getxAxisTitleCoords",
                value: function () {
                    var n = this.w
                        , i = 0
                        , r = 0;
                    if (n.config.xaxis.title.text !== void 0) {
                        var c = new $(this.dCtx.ctx).getTextRects(n.config.xaxis.title.text, n.config.xaxis.title.style.fontSize);
                        i = c.width,
                            r = c.height
                    }
                    return {
                        width: i,
                        height: r
                    }
                }
            }, {
                key: "getxAxisTimeScaleLabelsCoords",
                value: function () {
                    var n, i = this.w;
                    this.dCtx.timescaleLabels = i.globals.timescaleLabels.slice();
                    var r = this.dCtx.timescaleLabels.map(function (d) {
                        return d.value
                    })
                        , c = r.reduce(function (d, h) {
                        return d === void 0 ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"),
                            0) : d.length > h.length ? d : h
                    }, 0);
                    return 1.05 * (n = new $(this.dCtx.ctx).getTextRects(c, i.config.xaxis.labels.style.fontSize)).width * r.length > i.globals.gridWidth && i.config.xaxis.labels.rotate !== 0 && (i.globals.overlappingXLabels = !0),
                        n
                }
            }, {
                key: "additionalPaddingXLabels",
                value: function (n) {
                    var i = this
                        , r = this.w
                        , c = r.globals
                        , d = r.config
                        , h = d.xaxis.type
                        , f = n.width;
                    c.skipLastTimelinelabel = !1,
                        c.skipFirstTimelinelabel = !1;
                    var m = r.config.yaxis[0].opposite && r.globals.isBarHorizontal
                        , x = function (S, _) {
                        d.yaxis.length > 1 && function (k) {
                            return c.collapsedSeriesIndices.indexOf(k) !== -1
                        }(_) || function (k) {
                            if (i.dCtx.timescaleLabels && i.dCtx.timescaleLabels.length) {
                                var L = i.dCtx.timescaleLabels[0]
                                    ,
                                    N = i.dCtx.timescaleLabels[i.dCtx.timescaleLabels.length - 1].position + f / 1.75 - i.dCtx.yAxisWidthRight
                                    , H = L.position - f / 1.75 + i.dCtx.yAxisWidthLeft
                                    ,
                                    z = r.config.legend.position === "right" && i.dCtx.lgRect.width > 0 ? i.dCtx.lgRect.width : 0;
                                N > c.svgWidth - c.translateX - z && (c.skipLastTimelinelabel = !0),
                                H < -(k.show && !k.floating || d.chart.type !== "bar" && d.chart.type !== "candlestick" && d.chart.type !== "rangeBar" && d.chart.type !== "boxPlot" ? 10 : f / 1.75) && (c.skipFirstTimelinelabel = !0)
                            } else
                                h === "datetime" ? i.dCtx.gridPad.right < f && !c.rotateXLabels && (c.skipLastTimelinelabel = !0) : h !== "datetime" && i.dCtx.gridPad.right < f / 2 - i.dCtx.yAxisWidthRight && !c.rotateXLabels && !r.config.xaxis.labels.trim && (r.config.xaxis.tickPlacement !== "between" || r.globals.isBarHorizontal) && (i.dCtx.xPadRight = f / 2 + 1)
                        }(S)
                    };
                    d.yaxis.forEach(function (S, _) {
                        m ? (i.dCtx.gridPad.left < f && (i.dCtx.xPadLeft = f / 2 + 1),
                            i.dCtx.xPadRight = f / 2 + 1) : x(S, _)
                    })
                }
            }]),
                j
        }()
            , Ee = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.dCtx = n
            }

            return p(j, [{
                key: "getyAxisLabelsCoords",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = []
                        , c = 10
                        , d = new Ae(this.dCtx.ctx);
                    return i.config.yaxis.map(function (h, f) {
                        var m = {
                            seriesIndex: f,
                            dataPointIndex: -1,
                            w: i
                        }
                            , x = i.globals.yAxisScale[f]
                            , S = 0;
                        if (!d.isYAxisHidden(f) && h.labels.show && h.labels.minWidth !== void 0 && (S = h.labels.minWidth),
                        !d.isYAxisHidden(f) && h.labels.show && x.result.length) {
                            var _ = i.globals.yLabelFormatters[f]
                                , k = x.niceMin === Number.MIN_VALUE ? 0 : x.niceMin
                                , L = x.result.reduce(function (E, B) {
                                var X, K;
                                return ((X = String(_(E, m))) === null || X === void 0 ? void 0 : X.length) > ((K = String(_(B, m))) === null || K === void 0 ? void 0 : K.length) ? E : B
                            }, k)
                                , N = L = _(L, m);
                            if (L !== void 0 && L.length !== 0 || (L = x.niceMax),
                                i.globals.isBarHorizontal) {
                                c = 0;
                                var H = i.globals.labels.slice();
                                L = M.getLargestStringFromArr(H),
                                    L = _(L, {
                                        seriesIndex: f,
                                        dataPointIndex: -1,
                                        w: i
                                    }),
                                    N = n.dCtx.dimHelpers.getLargestStringFromMultiArr(L, H)
                            }
                            var z = new $(n.dCtx.ctx)
                                , q = "rotate(".concat(h.labels.rotate, " 0 0)")
                                , Q = z.getTextRects(L, h.labels.style.fontSize, h.labels.style.fontFamily, q, !1)
                                , b = Q;
                            L !== N && (b = z.getTextRects(N, h.labels.style.fontSize, h.labels.style.fontFamily, q, !1)),
                                r.push({
                                    width: (S > b.width || S > Q.width ? S : b.width > Q.width ? b.width : Q.width) + c,
                                    height: b.height > Q.height ? b.height : Q.height
                                })
                        } else
                            r.push({
                                width: 0,
                                height: 0
                            })
                    }),
                        r
                }
            }, {
                key: "getyAxisTitleCoords",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = [];
                    return i.config.yaxis.map(function (c, d) {
                        if (c.show && c.title.text !== void 0) {
                            var h = new $(n.dCtx.ctx)
                                , f = "rotate(".concat(c.title.rotate, " 0 0)")
                                ,
                                m = h.getTextRects(c.title.text, c.title.style.fontSize, c.title.style.fontFamily, f, !1);
                            r.push({
                                width: m.width,
                                height: m.height
                            })
                        } else
                            r.push({
                                width: 0,
                                height: 0
                            })
                    }),
                        r
                }
            }, {
                key: "getTotalYAxisWidth",
                value: function () {
                    var n = this.w
                        , i = 0
                        , r = 0
                        , c = 0
                        , d = n.globals.yAxisScale.length > 1 ? 10 : 0
                        , h = new Ae(this.dCtx.ctx)
                        , f = function (m, x) {
                        var S = n.config.yaxis[x].floating
                            , _ = 0;
                        m.width > 0 && !S ? (_ = m.width + d,
                        function (k) {
                            return n.globals.ignoreYAxisIndexes.indexOf(k) > -1
                        }(x) && (_ = _ - m.width - d)) : _ = S || h.isYAxisHidden(x) ? 0 : 5,
                            n.config.yaxis[x].opposite ? c += _ : r += _,
                            i += _
                    };
                    return n.globals.yLabelsCoords.map(function (m, x) {
                        f(m, x)
                    }),
                        n.globals.yTitleCoords.map(function (m, x) {
                            f(m, x)
                        }),
                    n.globals.isBarHorizontal && !n.config.yaxis[0].floating && (i = n.globals.yLabelsCoords[0].width + n.globals.yTitleCoords[0].width + 15),
                        this.dCtx.yAxisWidthLeft = r,
                        this.dCtx.yAxisWidthRight = c,
                        i
                }
            }]),
                j
        }()
            , ze = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.dCtx = n
            }

            return p(j, [{
                key: "gridPadForColumnsInNumericAxis",
                value: function (n) {
                    var i = this.w;
                    if (i.globals.noData || i.globals.allSeriesCollapsed)
                        return 0;
                    var r = function (S) {
                        return S === "bar" || S === "rangeBar" || S === "candlestick" || S === "boxPlot"
                    }
                        , c = i.config.chart.type
                        , d = 0
                        , h = r(c) ? i.config.series.length : 1;
                    if (i.globals.comboBarCount > 0 && (h = i.globals.comboBarCount),
                        i.globals.collapsedSeries.forEach(function (S) {
                            r(S.type) && (h -= 1)
                        }),
                    i.config.chart.stacked && (h = 1),
                    (r(c) || i.globals.comboBarCount > 0) && i.globals.isXNumeric && !i.globals.isBarHorizontal && h > 0) {
                        var f, m, x = Math.abs(i.globals.initialMaxX - i.globals.initialMinX);
                        x <= 3 && (x = i.globals.dataPoints),
                            f = x / n,
                        i.globals.minXDiff && i.globals.minXDiff / f > 0 && (m = i.globals.minXDiff / f),
                        m > n / 2 && (m /= 2),
                        (d = m / h * parseInt(i.config.plotOptions.bar.columnWidth, 10) / 100) < 1 && (d = 1),
                            d = d / (h > 1 ? 1 : 1.5) + 5,
                            i.globals.barPadForNumericAxis = d
                    }
                    return d
                }
            }, {
                key: "gridPadFortitleSubtitle",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = i.globals
                        , c = this.dCtx.isSparkline || !i.globals.axisCharts ? 0 : 10;
                    ["title", "subtitle"].forEach(function (f) {
                        i.config[f].text !== void 0 ? c += i.config[f].margin : c += n.dCtx.isSparkline || !i.globals.axisCharts ? 0 : 5
                    }),
                    !i.config.legend.show || i.config.legend.position !== "bottom" || i.config.legend.floating || i.globals.axisCharts || (c += 10);
                    var d = this.dCtx.dimHelpers.getTitleSubtitleCoords("title")
                        , h = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
                    r.gridHeight = r.gridHeight - d.height - h.height - c,
                        r.translateY = r.translateY + d.height + h.height + c
                }
            }, {
                key: "setGridXPosForDualYAxis",
                value: function (n, i) {
                    var r = this.w
                        , c = new Ae(this.dCtx.ctx);
                    r.config.yaxis.map(function (d, h) {
                        r.globals.ignoreYAxisIndexes.indexOf(h) !== -1 || d.floating || c.isYAxisHidden(h) || (d.opposite && (r.globals.translateX = r.globals.translateX - (i[h].width + n[h].width) - parseInt(r.config.yaxis[h].labels.style.fontSize, 10) / 1.2 - 12),
                        r.globals.translateX < 2 && (r.globals.translateX = 2))
                    })
                }
            }]),
                j
        }()
            , xe = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.lgRect = {},
                    this.yAxisWidth = 0,
                    this.yAxisWidthLeft = 0,
                    this.yAxisWidthRight = 0,
                    this.xAxisHeight = 0,
                    this.isSparkline = this.w.config.chart.sparkline.enabled,
                    this.dimHelpers = new Ue(this),
                    this.dimYAxis = new Ee(this),
                    this.dimXAxis = new ht(this),
                    this.dimGrid = new ze(this),
                    this.lgWidthForSideLegends = 0,
                    this.gridPad = this.w.config.grid.padding,
                    this.xPadRight = 0,
                    this.xPadLeft = 0
            }

            return p(j, [{
                key: "plotCoords",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = i.globals;
                    this.lgRect = this.dimHelpers.getLegendsRect(),
                    this.isSparkline && ((i.config.markers.discrete.length > 0 || i.config.markers.size > 0) && Object.entries(this.gridPad).forEach(function (d) {
                        var h = I(d, 2)
                            , f = h[0]
                            , m = h[1];
                        n.gridPad[f] = Math.max(m, n.w.globals.markers.largestSize / 1.5)
                    }),
                        this.gridPad.top = Math.max(i.config.stroke.width / 2, this.gridPad.top),
                        this.gridPad.bottom = Math.max(i.config.stroke.width / 2, this.gridPad.bottom)),
                        r.axisCharts ? this.setDimensionsForAxisCharts() : this.setDimensionsForNonAxisCharts(),
                        this.dimGrid.gridPadFortitleSubtitle(),
                        r.gridHeight = r.gridHeight - this.gridPad.top - this.gridPad.bottom,
                        r.gridWidth = r.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;
                    var c = this.dimGrid.gridPadForColumnsInNumericAxis(r.gridWidth);
                    r.gridWidth = r.gridWidth - 2 * c,
                        r.translateX = r.translateX + this.gridPad.left + this.xPadLeft + (c > 0 ? c + 4 : 0),
                        r.translateY = r.translateY + this.gridPad.top
                }
            }, {
                key: "setDimensionsForAxisCharts",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = i.globals
                        , c = this.dimYAxis.getyAxisLabelsCoords()
                        , d = this.dimYAxis.getyAxisTitleCoords();
                    i.globals.yLabelsCoords = [],
                        i.globals.yTitleCoords = [],
                        i.config.yaxis.map(function (L, N) {
                            i.globals.yLabelsCoords.push({
                                width: c[N].width,
                                index: N
                            }),
                                i.globals.yTitleCoords.push({
                                    width: d[N].width,
                                    index: N
                                })
                        }),
                        this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();
                    var h = this.dimXAxis.getxAxisLabelsCoords()
                        , f = this.dimXAxis.getxAxisGroupLabelsCoords()
                        , m = this.dimXAxis.getxAxisTitleCoords();
                    this.conditionalChecksForAxisCoords(h, m, f),
                        r.translateXAxisY = i.globals.rotateXLabels ? this.xAxisHeight / 8 : -4,
                        r.translateXAxisX = i.globals.rotateXLabels && i.globals.isXNumeric && i.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0,
                    i.globals.isBarHorizontal && (r.rotateXLabels = !1,
                        r.translateXAxisY = parseInt(i.config.xaxis.labels.style.fontSize, 10) / 1.5 * -1),
                        r.translateXAxisY = r.translateXAxisY + i.config.xaxis.labels.offsetY,
                        r.translateXAxisX = r.translateXAxisX + i.config.xaxis.labels.offsetX;
                    var x = this.yAxisWidth
                        , S = this.xAxisHeight;
                    r.xAxisLabelsHeight = this.xAxisHeight - m.height,
                        r.xAxisGroupLabelsHeight = r.xAxisLabelsHeight - h.height,
                        r.xAxisLabelsWidth = this.xAxisWidth,
                        r.xAxisHeight = this.xAxisHeight;
                    var _ = 10;
                    (i.config.chart.type === "radar" || this.isSparkline) && (x = 0,
                        S = r.goldenPadding),
                    this.isSparkline && (this.lgRect = {
                        height: 0,
                        width: 0
                    }),
                    (this.isSparkline || i.config.chart.type === "treemap") && (x = 0,
                        S = 0,
                        _ = 0),
                    this.isSparkline || this.dimXAxis.additionalPaddingXLabels(h);
                    var k = function () {
                        r.translateX = x,
                            r.gridHeight = r.svgHeight - n.lgRect.height - S - (n.isSparkline || i.config.chart.type === "treemap" ? 0 : i.globals.rotateXLabels ? 10 : 15),
                            r.gridWidth = r.svgWidth - x
                    };
                    switch (i.config.xaxis.position === "top" && (_ = r.xAxisHeight - i.config.xaxis.axisTicks.height - 5),
                        i.config.legend.position) {
                        case "bottom":
                            r.translateY = _,
                                k();
                            break;
                        case "top":
                            r.translateY = this.lgRect.height + _,
                                k();
                            break;
                        case "left":
                            r.translateY = _,
                                r.translateX = this.lgRect.width + x,
                                r.gridHeight = r.svgHeight - S - 12,
                                r.gridWidth = r.svgWidth - this.lgRect.width - x;
                            break;
                        case "right":
                            r.translateY = _,
                                r.translateX = x,
                                r.gridHeight = r.svgHeight - S - 12,
                                r.gridWidth = r.svgWidth - this.lgRect.width - x - 5;
                            break;
                        default:
                            throw new Error("Legend position not supported")
                    }
                    this.dimGrid.setGridXPosForDualYAxis(d, c),
                        new W(this.ctx).setYAxisXPosition(c, d)
                }
            }, {
                key: "setDimensionsForNonAxisCharts",
                value: function () {
                    var n = this.w
                        , i = n.globals
                        , r = n.config
                        , c = 0;
                    n.config.legend.show && !n.config.legend.floating && (c = 20);
                    var d = r.chart.type === "pie" || r.chart.type === "polarArea" || r.chart.type === "donut" ? "pie" : "radialBar"
                        , h = r.plotOptions[d].offsetY
                        , f = r.plotOptions[d].offsetX;
                    if (!r.legend.show || r.legend.floating)
                        return i.gridHeight = i.svgHeight - r.grid.padding.left + r.grid.padding.right,
                            i.gridWidth = i.gridHeight,
                            i.translateY = h,
                            void (i.translateX = f + (i.svgWidth - i.gridWidth) / 2);
                    switch (r.legend.position) {
                        case "bottom":
                            i.gridHeight = i.svgHeight - this.lgRect.height - i.goldenPadding,
                                i.gridWidth = i.svgWidth,
                                i.translateY = h - 10,
                                i.translateX = f + (i.svgWidth - i.gridWidth) / 2;
                            break;
                        case "top":
                            i.gridHeight = i.svgHeight - this.lgRect.height - i.goldenPadding,
                                i.gridWidth = i.svgWidth,
                                i.translateY = this.lgRect.height + h + 10,
                                i.translateX = f + (i.svgWidth - i.gridWidth) / 2;
                            break;
                        case "left":
                            i.gridWidth = i.svgWidth - this.lgRect.width - c,
                                i.gridHeight = r.chart.height !== "auto" ? i.svgHeight : i.gridWidth,
                                i.translateY = h,
                                i.translateX = f + this.lgRect.width + c;
                            break;
                        case "right":
                            i.gridWidth = i.svgWidth - this.lgRect.width - c - 5,
                                i.gridHeight = r.chart.height !== "auto" ? i.svgHeight : i.gridWidth,
                                i.translateY = h,
                                i.translateX = f + 10;
                            break;
                        default:
                            throw new Error("Legend position not supported")
                    }
                }
            }, {
                key: "conditionalChecksForAxisCoords",
                value: function (n, i, r) {
                    var c = this.w
                        , d = c.globals.hasXaxisGroups ? 2 : 1
                        , h = r.height + n.height + i.height
                        , f = c.globals.isMultiLineX ? 1.2 : c.globals.LINE_HEIGHT_RATIO
                        , m = c.globals.rotateXLabels ? 22 : 10
                        , x = c.globals.rotateXLabels && c.config.legend.position === "bottom" ? 10 : 0;
                    this.xAxisHeight = h * f + d * m + x,
                        this.xAxisWidth = n.width,
                    this.xAxisHeight - i.height > c.config.xaxis.labels.maxHeight && (this.xAxisHeight = c.config.xaxis.labels.maxHeight),
                    c.config.xaxis.labels.minHeight && this.xAxisHeight < c.config.xaxis.labels.minHeight && (this.xAxisHeight = c.config.xaxis.labels.minHeight),
                    c.config.xaxis.floating && (this.xAxisHeight = 0);
                    var S = 0
                        , _ = 0;
                    c.config.yaxis.forEach(function (k) {
                        S += k.labels.minWidth,
                            _ += k.labels.maxWidth
                    }),
                    this.yAxisWidth < S && (this.yAxisWidth = S),
                    this.yAxisWidth > _ && (this.yAxisWidth = _)
                }
            }]),
                j
        }()
            , Re = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.lgCtx = n
            }

            return p(j, [{
                key: "getLegendStyles",
                value: function () {
                    var n, i, r, c = document.createElement("style");
                    c.setAttribute("type", "text/css");
                    var d = ((n = this.lgCtx.ctx) === null || n === void 0 || (i = n.opts) === null || i === void 0 || (r = i.chart) === null || r === void 0 ? void 0 : r.nonce) || this.w.config.chart.nonce;
                    d && c.setAttribute("nonce", d);
                    var h = document.createTextNode(`
      .apexcharts-legend {
        display: flex;
        overflow: auto;
        padding: 0 10px;
      }
      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {
        flex-wrap: wrap
      }
      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {
        flex-direction: column;
        bottom: 0;
      }
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {
        justify-content: flex-start;
      }
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {
        justify-content: center;
      }
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {
        justify-content: flex-end;
      }
      .apexcharts-legend-series {
        cursor: pointer;
        line-height: normal;
      }
      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{
        display: flex;
        align-items: center;
      }
      .apexcharts-legend-text {
        position: relative;
        font-size: 14px;
      }
      .apexcharts-legend-text *, .apexcharts-legend-marker * {
        pointer-events: none;
      }
      .apexcharts-legend-marker {
        position: relative;
        display: inline-block;
        cursor: pointer;
        margin-right: 3px;
        border-style: solid;
      }

      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{
        display: inline-block;
      }
      .apexcharts-legend-series.apexcharts-no-click {
        cursor: auto;
      }
      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {
        display: none !important;
      }
      .apexcharts-inactive-legend {
        opacity: 0.45;
      }`);
                    return c.appendChild(h),
                        c
                }
            }, {
                key: "getLegendBBox",
                value: function () {
                    var n = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect()
                        , i = n.width;
                    return {
                        clwh: n.height,
                        clww: i
                    }
                }
            }, {
                key: "appendToForeignObject",
                value: function () {
                    this.w.globals.dom.elLegendForeign.appendChild(this.getLegendStyles())
                }
            }, {
                key: "toggleDataSeries",
                value: function (n, i) {
                    var r = this
                        , c = this.w;
                    if (c.globals.axisCharts || c.config.chart.type === "radialBar") {
                        c.globals.resized = !0;
                        var d = null
                            , h = null;
                        c.globals.risingSeries = [],
                            c.globals.axisCharts ? (d = c.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(n, "']")),
                                h = parseInt(d.getAttribute("data:realIndex"), 10)) : (d = c.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(n + 1, "']")),
                                h = parseInt(d.getAttribute("rel"), 10) - 1),
                            i ? [{
                                cs: c.globals.collapsedSeries,
                                csi: c.globals.collapsedSeriesIndices
                            }, {
                                cs: c.globals.ancillaryCollapsedSeries,
                                csi: c.globals.ancillaryCollapsedSeriesIndices
                            }].forEach(function (S) {
                                r.riseCollapsedSeries(S.cs, S.csi, h)
                            }) : this.hideSeries({
                                seriesEl: d,
                                realIndex: h
                            })
                    } else {
                        var f = c.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(n + 1, "'] path"))
                            , m = c.config.chart.type;
                        if (m === "pie" || m === "polarArea" || m === "donut") {
                            var x = c.config.plotOptions.pie.donut.labels;
                            new $(this.lgCtx.ctx).pathMouseDown(f.members[0], null),
                                this.lgCtx.ctx.pie.printDataLabelsInner(f.members[0].node, x)
                        }
                        f.fire("click")
                    }
                }
            }, {
                key: "hideSeries",
                value: function (n) {
                    var i = n.seriesEl
                        , r = n.realIndex
                        , c = this.w
                        , d = M.clone(c.config.series);
                    if (c.globals.axisCharts) {
                        var h = !1;
                        if (c.config.yaxis[r] && c.config.yaxis[r].show && c.config.yaxis[r].showAlways && (h = !0,
                        c.globals.ancillaryCollapsedSeriesIndices.indexOf(r) < 0 && (c.globals.ancillaryCollapsedSeries.push({
                            index: r,
                            data: d[r].data.slice(),
                            type: i.parentNode.className.baseVal.split("-")[1]
                        }),
                            c.globals.ancillaryCollapsedSeriesIndices.push(r))),
                            !h) {
                            c.globals.collapsedSeries.push({
                                index: r,
                                data: d[r].data.slice(),
                                type: i.parentNode.className.baseVal.split("-")[1]
                            }),
                                c.globals.collapsedSeriesIndices.push(r);
                            var f = c.globals.risingSeries.indexOf(r);
                            c.globals.risingSeries.splice(f, 1)
                        }
                    } else
                        c.globals.collapsedSeries.push({
                            index: r,
                            data: d[r]
                        }),
                            c.globals.collapsedSeriesIndices.push(r);
                    for (var m = i.childNodes, x = 0; x < m.length; x++)
                        m[x].classList.contains("apexcharts-series-markers-wrap") && (m[x].classList.contains("apexcharts-hide") ? m[x].classList.remove("apexcharts-hide") : m[x].classList.add("apexcharts-hide"));
                    c.globals.allSeriesCollapsed = c.globals.collapsedSeries.length === c.config.series.length,
                        d = this._getSeriesBasedOnCollapsedState(d),
                        this.lgCtx.ctx.updateHelpers._updateSeries(d, c.config.chart.animations.dynamicAnimation.enabled)
                }
            }, {
                key: "riseCollapsedSeries",
                value: function (n, i, r) {
                    var c = this.w
                        , d = M.clone(c.config.series);
                    if (n.length > 0) {
                        for (var h = 0; h < n.length; h++)
                            n[h].index === r && (c.globals.axisCharts ? (d[r].data = n[h].data.slice(),
                                n.splice(h, 1),
                                i.splice(h, 1),
                                c.globals.risingSeries.push(r)) : (d[r] = n[h].data,
                                n.splice(h, 1),
                                i.splice(h, 1),
                                c.globals.risingSeries.push(r)));
                        d = this._getSeriesBasedOnCollapsedState(d),
                            this.lgCtx.ctx.updateHelpers._updateSeries(d, c.config.chart.animations.dynamicAnimation.enabled)
                    }
                }
            }, {
                key: "_getSeriesBasedOnCollapsedState",
                value: function (n) {
                    var i = this.w;
                    return i.globals.axisCharts ? n.forEach(function (r, c) {
                        i.globals.collapsedSeriesIndices.indexOf(c) > -1 && (n[c].data = [])
                    }) : n.forEach(function (r, c) {
                        i.globals.collapsedSeriesIndices.indexOf(c) > -1 && (n[c] = 0)
                    }),
                        n
                }
            }]),
                j
        }()
            , lt = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.onLegendClick = this.onLegendClick.bind(this),
                    this.onLegendHovered = this.onLegendHovered.bind(this),
                    this.isBarsDistributed = this.w.config.chart.type === "bar" && this.w.config.plotOptions.bar.distributed && this.w.config.series.length === 1,
                    this.legendHelpers = new Re(this)
            }

            return p(j, [{
                key: "init",
                value: function () {
                    var n = this.w
                        , i = n.globals
                        , r = n.config;
                    if ((r.legend.showForSingleSeries && i.series.length === 1 || this.isBarsDistributed || i.series.length > 1 || !i.axisCharts) && r.legend.show) {
                        for (; i.dom.elLegendWrap.firstChild;)
                            i.dom.elLegendWrap.removeChild(i.dom.elLegendWrap.firstChild);
                        this.drawLegends(),
                            M.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()) : this.legendHelpers.appendToForeignObject(),
                            r.legend.position === "bottom" || r.legend.position === "top" ? this.legendAlignHorizontal() : r.legend.position !== "right" && r.legend.position !== "left" || this.legendAlignVertical()
                    }
                }
            }, {
                key: "drawLegends",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = i.config.legend.fontFamily
                        , c = i.globals.seriesNames
                        , d = i.globals.colors.slice();
                    if (i.config.chart.type === "heatmap") {
                        var h = i.config.plotOptions.heatmap.colorScale.ranges;
                        c = h.map(function (Fe) {
                            return Fe.name ? Fe.name : Fe.from + " - " + Fe.to
                        }),
                            d = h.map(function (Fe) {
                                return Fe.color
                            })
                    } else
                        this.isBarsDistributed && (c = i.globals.labels.slice());
                    i.config.legend.customLegendItems.length && (c = i.config.legend.customLegendItems);
                    for (var f = i.globals.legendFormatter, m = i.config.legend.inverseOrder, x = m ? c.length - 1 : 0; m ? x >= 0 : x <= c.length - 1; m ? x-- : x++) {
                        var S, _ = f(c[x], {
                            seriesIndex: x,
                            w: i
                        }), k = !1, L = !1;
                        if (i.globals.collapsedSeries.length > 0)
                            for (var N = 0; N < i.globals.collapsedSeries.length; N++)
                                i.globals.collapsedSeries[N].index === x && (k = !0);
                        if (i.globals.ancillaryCollapsedSeriesIndices.length > 0)
                            for (var H = 0; H < i.globals.ancillaryCollapsedSeriesIndices.length; H++)
                                i.globals.ancillaryCollapsedSeriesIndices[H] === x && (L = !0);
                        var z = document.createElement("span");
                        z.classList.add("apexcharts-legend-marker");
                        var q = i.config.legend.markers.offsetX
                            , Q = i.config.legend.markers.offsetY
                            , b = i.config.legend.markers.height
                            , E = i.config.legend.markers.width
                            , B = i.config.legend.markers.strokeWidth
                            , X = i.config.legend.markers.strokeColor
                            , K = i.config.legend.markers.radius
                            , ee = z.style;
                        ee.background = d[x],
                            ee.color = d[x],
                            ee.setProperty("background", d[x], "important"),
                        i.config.legend.markers.fillColors && i.config.legend.markers.fillColors[x] && (ee.background = i.config.legend.markers.fillColors[x]),
                        i.globals.seriesColors[x] !== void 0 && (ee.background = i.globals.seriesColors[x],
                            ee.color = i.globals.seriesColors[x]),
                            ee.height = Array.isArray(b) ? parseFloat(b[x]) + "px" : parseFloat(b) + "px",
                            ee.width = Array.isArray(E) ? parseFloat(E[x]) + "px" : parseFloat(E) + "px",
                            ee.left = (Array.isArray(q) ? parseFloat(q[x]) : parseFloat(q)) + "px",
                            ee.top = (Array.isArray(Q) ? parseFloat(Q[x]) : parseFloat(Q)) + "px",
                            ee.borderWidth = Array.isArray(B) ? B[x] : B,
                            ee.borderColor = Array.isArray(X) ? X[x] : X,
                            ee.borderRadius = Array.isArray(K) ? parseFloat(K[x]) + "px" : parseFloat(K) + "px",
                        i.config.legend.markers.customHTML && (Array.isArray(i.config.legend.markers.customHTML) ? i.config.legend.markers.customHTML[x] && (z.innerHTML = i.config.legend.markers.customHTML[x]()) : z.innerHTML = i.config.legend.markers.customHTML()),
                            $.setAttrs(z, {
                                rel: x + 1,
                                "data:collapsed": k || L
                            }),
                        (k || L) && z.classList.add("apexcharts-inactive-legend");
                        var pe = document.createElement("div")
                            , ge = document.createElement("span");
                        ge.classList.add("apexcharts-legend-text"),
                            ge.innerHTML = Array.isArray(_) ? _.join(" ") : _;
                        var Ie = i.config.legend.labels.useSeriesColors ? i.globals.colors[x] : Array.isArray(i.config.legend.labels.colors) ? (S = i.config.legend.labels.colors) === null || S === void 0 ? void 0 : S[x] : i.config.legend.labels.colors;
                        Ie || (Ie = i.config.chart.foreColor),
                            ge.style.color = Ie,
                            ge.style.fontSize = parseFloat(i.config.legend.fontSize) + "px",
                            ge.style.fontWeight = i.config.legend.fontWeight,
                            ge.style.fontFamily = r || i.config.chart.fontFamily,
                            $.setAttrs(ge, {
                                rel: x + 1,
                                i: x,
                                "data:default-text": encodeURIComponent(_),
                                "data:collapsed": k || L
                            }),
                            pe.appendChild(z),
                            pe.appendChild(ge);
                        var $e = new V(this.ctx);
                        i.config.legend.showForZeroSeries || $e.getSeriesTotalByIndex(x) === 0 && $e.seriesHaveSameValues(x) && !$e.isSeriesNull(x) && i.globals.collapsedSeriesIndices.indexOf(x) === -1 && i.globals.ancillaryCollapsedSeriesIndices.indexOf(x) === -1 && pe.classList.add("apexcharts-hidden-zero-series"),
                        i.config.legend.showForNullSeries || $e.isSeriesNull(x) && i.globals.collapsedSeriesIndices.indexOf(x) === -1 && i.globals.ancillaryCollapsedSeriesIndices.indexOf(x) === -1 && pe.classList.add("apexcharts-hidden-null-series"),
                            i.globals.dom.elLegendWrap.appendChild(pe),
                            i.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(i.config.legend.horizontalAlign)),
                            i.globals.dom.elLegendWrap.classList.add("apx-legend-position-" + i.config.legend.position),
                            pe.classList.add("apexcharts-legend-series"),
                            pe.style.margin = "".concat(i.config.legend.itemMargin.vertical, "px ").concat(i.config.legend.itemMargin.horizontal, "px"),
                            i.globals.dom.elLegendWrap.style.width = i.config.legend.width ? i.config.legend.width + "px" : "",
                            i.globals.dom.elLegendWrap.style.height = i.config.legend.height ? i.config.legend.height + "px" : "",
                            $.setAttrs(pe, {
                                rel: x + 1,
                                seriesName: M.escapeString(c[x]),
                                "data:collapsed": k || L
                            }),
                        (k || L) && pe.classList.add("apexcharts-inactive-legend"),
                        i.config.legend.onItemClick.toggleDataSeries || pe.classList.add("apexcharts-no-click")
                    }
                    i.globals.dom.elWrap.addEventListener("click", n.onLegendClick, !0),
                    i.config.legend.onItemHover.highlightDataSeries && i.config.legend.customLegendItems.length === 0 && (i.globals.dom.elWrap.addEventListener("mousemove", n.onLegendHovered, !0),
                        i.globals.dom.elWrap.addEventListener("mouseout", n.onLegendHovered, !0))
                }
            }, {
                key: "setLegendWrapXY",
                value: function (n, i) {
                    var r = this.w
                        , c = r.globals.dom.elLegendWrap
                        , d = c.getBoundingClientRect()
                        , h = 0
                        , f = 0;
                    if (r.config.legend.position === "bottom")
                        f += r.globals.svgHeight - d.height / 2;
                    else if (r.config.legend.position === "top") {
                        var m = new xe(this.ctx)
                            , x = m.dimHelpers.getTitleSubtitleCoords("title").height
                            , S = m.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                        f = f + (x > 0 ? x - 10 : 0) + (S > 0 ? S - 10 : 0)
                    }
                    c.style.position = "absolute",
                        h = h + n + r.config.legend.offsetX,
                        f = f + i + r.config.legend.offsetY,
                        c.style.left = h + "px",
                        c.style.top = f + "px",
                        r.config.legend.position === "bottom" ? (c.style.top = "auto",
                            c.style.bottom = 5 - r.config.legend.offsetY + "px") : r.config.legend.position === "right" && (c.style.left = "auto",
                            c.style.right = 25 + r.config.legend.offsetX + "px"),
                        ["width", "height"].forEach(function (_) {
                            c.style[_] && (c.style[_] = parseInt(r.config.legend[_], 10) + "px")
                        })
                }
            }, {
                key: "legendAlignHorizontal",
                value: function () {
                    var n = this.w;
                    n.globals.dom.elLegendWrap.style.right = 0;
                    var i = this.legendHelpers.getLegendBBox()
                        , r = new xe(this.ctx)
                        , c = r.dimHelpers.getTitleSubtitleCoords("title")
                        , d = r.dimHelpers.getTitleSubtitleCoords("subtitle")
                        , h = 0;
                    n.config.legend.position === "bottom" ? h = -i.clwh / 1.8 : n.config.legend.position === "top" && (h = c.height + d.height + n.config.title.margin + n.config.subtitle.margin - 10),
                        this.setLegendWrapXY(20, h)
                }
            }, {
                key: "legendAlignVertical",
                value: function () {
                    var n = this.w
                        , i = this.legendHelpers.getLegendBBox()
                        , r = 0;
                    n.config.legend.position === "left" && (r = 20),
                    n.config.legend.position === "right" && (r = n.globals.svgWidth - i.clww - 10),
                        this.setLegendWrapXY(r, 20)
                }
            }, {
                key: "onLegendHovered",
                value: function (n) {
                    var i = this.w
                        ,
                        r = n.target.classList.contains("apexcharts-legend-series") || n.target.classList.contains("apexcharts-legend-text") || n.target.classList.contains("apexcharts-legend-marker");
                    if (i.config.chart.type === "heatmap" || this.isBarsDistributed) {
                        if (r) {
                            var c = parseInt(n.target.getAttribute("rel"), 10) - 1;
                            this.ctx.events.fireEvent("legendHover", [this.ctx, c, this.w]),
                                new bt(this.ctx).highlightRangeInSeries(n, n.target)
                        }
                    } else
                        !n.target.classList.contains("apexcharts-inactive-legend") && r && new bt(this.ctx).toggleSeriesOnHover(n, n.target)
                }
            }, {
                key: "onLegendClick",
                value: function (n) {
                    var i = this.w;
                    if (!i.config.legend.customLegendItems.length && (n.target.classList.contains("apexcharts-legend-series") || n.target.classList.contains("apexcharts-legend-text") || n.target.classList.contains("apexcharts-legend-marker"))) {
                        var r = parseInt(n.target.getAttribute("rel"), 10) - 1
                            , c = n.target.getAttribute("data:collapsed") === "true"
                            , d = this.w.config.chart.events.legendClick;
                        typeof d == "function" && d(this.ctx, r, this.w),
                            this.ctx.events.fireEvent("legendClick", [this.ctx, r, this.w]);
                        var h = this.w.config.legend.markers.onClick;
                        typeof h == "function" && n.target.classList.contains("apexcharts-legend-marker") && (h(this.ctx, r, this.w),
                            this.ctx.events.fireEvent("legendMarkerClick", [this.ctx, r, this.w])),
                        i.config.chart.type !== "treemap" && i.config.chart.type !== "heatmap" && !this.isBarsDistributed && i.config.legend.onItemClick.toggleDataSeries && this.legendHelpers.toggleDataSeries(r, c)
                    }
                }
            }]),
                j
        }()
            , vt = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w;
                var i = this.w;
                this.ev = this.w.config.chart.events,
                    this.selectedClass = "apexcharts-selected",
                    this.localeValues = this.w.globals.locale.toolbar,
                    this.minX = i.globals.minX,
                    this.maxX = i.globals.maxX
            }

            return p(j, [{
                key: "createToolbar",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = function () {
                        return document.createElement("div")
                    }
                        , c = r();
                    if (c.setAttribute("class", "apexcharts-toolbar"),
                        c.style.top = i.config.chart.toolbar.offsetY + "px",
                        c.style.right = 3 - i.config.chart.toolbar.offsetX + "px",
                        i.globals.dom.elWrap.appendChild(c),
                        this.elZoom = r(),
                        this.elZoomIn = r(),
                        this.elZoomOut = r(),
                        this.elPan = r(),
                        this.elSelection = r(),
                        this.elZoomReset = r(),
                        this.elMenuIcon = r(),
                        this.elMenu = r(),
                        this.elCustomIcons = [],
                        this.t = i.config.chart.toolbar.tools,
                        Array.isArray(this.t.customIcons))
                        for (var d = 0; d < this.t.customIcons.length; d++)
                            this.elCustomIcons.push(r());
                    var h = []
                        , f = function (_, k, L) {
                        var N = _.toLowerCase();
                        n.t[N] && i.config.chart.zoom.enabled && h.push({
                            el: k,
                            icon: typeof n.t[N] == "string" ? n.t[N] : L,
                            title: n.localeValues[_],
                            class: "apexcharts-".concat(N, "-icon")
                        })
                    };
                    f("zoomIn", this.elZoomIn, `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`),
                        f("zoomOut", this.elZoomOut, `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`);
                    var m = function (_) {
                        n.t[_] && i.config.chart[_].enabled && h.push({
                            el: _ === "zoom" ? n.elZoom : n.elSelection,
                            icon: typeof n.t[_] == "string" ? n.t[_] : _ === "zoom" ? `<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
    <path d="M0 0h24v24H0V0z" fill="none"/>
    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>
</svg>` : `<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>
</svg>`,
                            title: n.localeValues[_ === "zoom" ? "selectionZoom" : "selection"],
                            class: i.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-".concat(_, "-icon")
                        })
                    };
                    m("zoom"),
                        m("selection"),
                    this.t.pan && i.config.chart.zoom.enabled && h.push({
                        el: this.elPan,
                        icon: typeof this.t.pan == "string" ? this.t.pan : `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <defs>
        <path d="M0 0h24v24H0z" id="a"/>
    </defs>
    <clipPath id="b">
        <use overflow="visible" xlink:href="#a"/>
    </clipPath>
    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>
</svg>`,
                        title: this.localeValues.pan,
                        class: i.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-pan-icon"
                    }),
                        f("reset", this.elZoomReset, `<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
    <path d="M0 0h24v24H0z" fill="none"/>
</svg>`),
                    this.t.download && h.push({
                        el: this.elMenuIcon,
                        icon: typeof this.t.download == "string" ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                        title: this.localeValues.menu,
                        class: "apexcharts-menu-icon"
                    });
                    for (var x = 0; x < this.elCustomIcons.length; x++)
                        h.push({
                            el: this.elCustomIcons[x],
                            icon: this.t.customIcons[x].icon,
                            title: this.t.customIcons[x].title,
                            index: this.t.customIcons[x].index,
                            class: "apexcharts-toolbar-custom-icon " + this.t.customIcons[x].class
                        });
                    h.forEach(function (_, k) {
                        _.index && M.moveIndexInArray(h, k, _.index)
                    });
                    for (var S = 0; S < h.length; S++)
                        $.setAttrs(h[S].el, {
                            class: h[S].class,
                            title: h[S].title
                        }),
                            h[S].el.innerHTML = h[S].icon,
                            c.appendChild(h[S].el);
                    this._createHamburgerMenu(c),
                        i.globals.zoomEnabled ? this.elZoom.classList.add(this.selectedClass) : i.globals.panEnabled ? this.elPan.classList.add(this.selectedClass) : i.globals.selectionEnabled && this.elSelection.classList.add(this.selectedClass),
                        this.addToolbarEventListeners()
                }
            }, {
                key: "_createHamburgerMenu",
                value: function (n) {
                    this.elMenuItems = [],
                        n.appendChild(this.elMenu),
                        $.setAttrs(this.elMenu, {
                            class: "apexcharts-menu"
                        });
                    for (var i = [{
                        name: "exportSVG",
                        title: this.localeValues.exportToSVG
                    }, {
                        name: "exportPNG",
                        title: this.localeValues.exportToPNG
                    }, {
                        name: "exportCSV",
                        title: this.localeValues.exportToCSV
                    }], r = 0; r < i.length; r++)
                        this.elMenuItems.push(document.createElement("div")),
                            this.elMenuItems[r].innerHTML = i[r].title,
                            $.setAttrs(this.elMenuItems[r], {
                                class: "apexcharts-menu-item ".concat(i[r].name),
                                title: i[r].title
                            }),
                            this.elMenu.appendChild(this.elMenuItems[r])
                }
            }, {
                key: "addToolbarEventListeners",
                value: function () {
                    var n = this;
                    this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)),
                        this.elSelection.addEventListener("click", this.toggleZoomSelection.bind(this, "selection")),
                        this.elZoom.addEventListener("click", this.toggleZoomSelection.bind(this, "zoom")),
                        this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)),
                        this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)),
                        this.elPan.addEventListener("click", this.togglePanning.bind(this)),
                        this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)),
                        this.elMenuItems.forEach(function (r) {
                            r.classList.contains("exportSVG") ? r.addEventListener("click", n.handleDownload.bind(n, "svg")) : r.classList.contains("exportPNG") ? r.addEventListener("click", n.handleDownload.bind(n, "png")) : r.classList.contains("exportCSV") && r.addEventListener("click", n.handleDownload.bind(n, "csv"))
                        });
                    for (var i = 0; i < this.t.customIcons.length; i++)
                        this.elCustomIcons[i].addEventListener("click", this.t.customIcons[i].click.bind(this, this.ctx, this.ctx.w))
                }
            }, {
                key: "toggleZoomSelection",
                value: function (n) {
                    this.ctx.getSyncedCharts().forEach(function (i) {
                        i.ctx.toolbar.toggleOtherControls();
                        var r = n === "selection" ? i.ctx.toolbar.elSelection : i.ctx.toolbar.elZoom
                            , c = n === "selection" ? "selectionEnabled" : "zoomEnabled";
                        i.w.globals[c] = !i.w.globals[c],
                            r.classList.contains(i.ctx.toolbar.selectedClass) ? r.classList.remove(i.ctx.toolbar.selectedClass) : r.classList.add(i.ctx.toolbar.selectedClass)
                    })
                }
            }, {
                key: "getToolbarIconsReference",
                value: function () {
                    var n = this.w;
                    this.elZoom || (this.elZoom = n.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")),
                    this.elPan || (this.elPan = n.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")),
                    this.elSelection || (this.elSelection = n.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"))
                }
            }, {
                key: "enableZoomPanFromToolbar",
                value: function (n) {
                    this.toggleOtherControls(),
                        n === "pan" ? this.w.globals.panEnabled = !0 : this.w.globals.zoomEnabled = !0;
                    var i = n === "pan" ? this.elPan : this.elZoom
                        , r = n === "pan" ? this.elZoom : this.elPan;
                    i && i.classList.add(this.selectedClass),
                    r && r.classList.remove(this.selectedClass)
                }
            }, {
                key: "togglePanning",
                value: function () {
                    this.ctx.getSyncedCharts().forEach(function (n) {
                        n.ctx.toolbar.toggleOtherControls(),
                            n.w.globals.panEnabled = !n.w.globals.panEnabled,
                            n.ctx.toolbar.elPan.classList.contains(n.ctx.toolbar.selectedClass) ? n.ctx.toolbar.elPan.classList.remove(n.ctx.toolbar.selectedClass) : n.ctx.toolbar.elPan.classList.add(n.ctx.toolbar.selectedClass)
                    })
                }
            }, {
                key: "toggleOtherControls",
                value: function () {
                    var n = this
                        , i = this.w;
                    i.globals.panEnabled = !1,
                        i.globals.zoomEnabled = !1,
                        i.globals.selectionEnabled = !1,
                        this.getToolbarIconsReference(),
                        [this.elPan, this.elSelection, this.elZoom].forEach(function (r) {
                            r && r.classList.remove(n.selectedClass)
                        })
                }
            }, {
                key: "handleZoomIn",
                value: function () {
                    var n = this.w;
                    n.globals.isRangeBar && (this.minX = n.globals.minY,
                        this.maxX = n.globals.maxY);
                    var i = (this.minX + this.maxX) / 2
                        , r = (this.minX + i) / 2
                        , c = (this.maxX + i) / 2
                        , d = this._getNewMinXMaxX(r, c);
                    n.globals.disableZoomIn || this.zoomUpdateOptions(d.minX, d.maxX)
                }
            }, {
                key: "handleZoomOut",
                value: function () {
                    var n = this.w;
                    if (n.globals.isRangeBar && (this.minX = n.globals.minY,
                        this.maxX = n.globals.maxY),
                        !(n.config.xaxis.type === "datetime" && new Date(this.minX).getUTCFullYear() < 1e3)) {
                        var i = (this.minX + this.maxX) / 2
                            , r = this.minX - (i - this.minX)
                            , c = this.maxX - (i - this.maxX)
                            , d = this._getNewMinXMaxX(r, c);
                        n.globals.disableZoomOut || this.zoomUpdateOptions(d.minX, d.maxX)
                    }
                }
            }, {
                key: "_getNewMinXMaxX",
                value: function (n, i) {
                    var r = this.w.config.xaxis.convertedCatToNumeric;
                    return {
                        minX: r ? Math.floor(n) : n,
                        maxX: r ? Math.floor(i) : i
                    }
                }
            }, {
                key: "zoomUpdateOptions",
                value: function (n, i) {
                    var r = this.w;
                    if (n !== void 0 || i !== void 0) {
                        if (!(r.config.xaxis.convertedCatToNumeric && (n < 1 && (n = 1,
                            i = r.globals.dataPoints),
                        i - n < 2))) {
                            var c = {
                                min: n,
                                max: i
                            }
                                , d = this.getBeforeZoomRange(c);
                            d && (c = d.xaxis);
                            var h = {
                                xaxis: c
                            }
                                , f = M.clone(r.globals.initialConfig.yaxis);
                            r.config.chart.zoom.autoScaleYaxis && (f = new dt(this.ctx).autoScaleY(this.ctx, f, {
                                xaxis: c
                            })),
                            r.config.chart.group || (h.yaxis = f),
                                this.w.globals.zoomed = !0,
                                this.ctx.updateHelpers._updateOptions(h, !1, this.w.config.chart.animations.dynamicAnimation.enabled),
                                this.zoomCallback(c, f)
                        }
                    } else
                        this.handleZoomReset()
                }
            }, {
                key: "zoomCallback",
                value: function (n, i) {
                    typeof this.ev.zoomed == "function" && this.ev.zoomed(this.ctx, {
                        xaxis: n,
                        yaxis: i
                    })
                }
            }, {
                key: "getBeforeZoomRange",
                value: function (n, i) {
                    var r = null;
                    return typeof this.ev.beforeZoom == "function" && (r = this.ev.beforeZoom(this, {
                        xaxis: n,
                        yaxis: i
                    })),
                        r
                }
            }, {
                key: "toggleMenu",
                value: function () {
                    var n = this;
                    window.setTimeout(function () {
                        n.elMenu.classList.contains("apexcharts-menu-open") ? n.elMenu.classList.remove("apexcharts-menu-open") : n.elMenu.classList.add("apexcharts-menu-open")
                    }, 0)
                }
            }, {
                key: "handleDownload",
                value: function (n) {
                    var i = this.w
                        , r = new Ne(this.ctx);
                    switch (n) {
                        case "svg":
                            r.exportToSVG(this.ctx);
                            break;
                        case "png":
                            r.exportToPng(this.ctx);
                            break;
                        case "csv":
                            r.exportToCSV({
                                series: i.config.series,
                                columnDelimiter: i.config.chart.toolbar.export.csv.columnDelimiter
                            })
                    }
                }
            }, {
                key: "handleZoomReset",
                value: function (n) {
                    this.ctx.getSyncedCharts().forEach(function (i) {
                        var r = i.w;
                        if (r.globals.lastXAxis.min = r.globals.initialConfig.xaxis.min,
                            r.globals.lastXAxis.max = r.globals.initialConfig.xaxis.max,
                            i.updateHelpers.revertDefaultAxisMinMax(),
                        typeof r.config.chart.events.beforeResetZoom == "function") {
                            var c = r.config.chart.events.beforeResetZoom(i, r);
                            c && i.updateHelpers.revertDefaultAxisMinMax(c)
                        }
                        typeof r.config.chart.events.zoomed == "function" && i.ctx.toolbar.zoomCallback({
                            min: r.config.xaxis.min,
                            max: r.config.xaxis.max
                        }),
                            r.globals.zoomed = !1;
                        var d = i.ctx.series.emptyCollapsedSeries(M.clone(r.globals.initialSeries));
                        i.updateHelpers._updateSeries(d, r.config.chart.animations.dynamicAnimation.enabled)
                    })
                }
            }, {
                key: "destroy",
                value: function () {
                    this.elZoom = null,
                        this.elZoomIn = null,
                        this.elZoomOut = null,
                        this.elPan = null,
                        this.elSelection = null,
                        this.elZoomReset = null,
                        this.elMenuIcon = null
                }
            }]),
                j
        }()
            , qt = function (j) {
            y(i, vt);
            var n = T(i);

            function i(r) {
                var c;
                return l(this, i),
                    (c = n.call(this, r)).ctx = r,
                    c.w = r.w,
                    c.dragged = !1,
                    c.graphics = new $(c.ctx),
                    c.eventList = ["mousedown", "mouseleave", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"],
                    c.clientX = 0,
                    c.clientY = 0,
                    c.startX = 0,
                    c.endX = 0,
                    c.dragX = 0,
                    c.startY = 0,
                    c.endY = 0,
                    c.dragY = 0,
                    c.moveDirection = "none",
                    c
            }

            return p(i, [{
                key: "init",
                value: function (r) {
                    var c = this
                        , d = r.xyRatios
                        , h = this.w
                        , f = this;
                    this.xyRatios = d,
                        this.zoomRect = this.graphics.drawRect(0, 0, 0, 0),
                        this.selectionRect = this.graphics.drawRect(0, 0, 0, 0),
                        this.gridRect = h.globals.dom.baseEl.querySelector(".apexcharts-grid"),
                        this.zoomRect.node.classList.add("apexcharts-zoom-rect"),
                        this.selectionRect.node.classList.add("apexcharts-selection-rect"),
                        h.globals.dom.elGraphical.add(this.zoomRect),
                        h.globals.dom.elGraphical.add(this.selectionRect),
                        h.config.chart.selection.type === "x" ? this.slDraggableRect = this.selectionRect.draggable({
                            minX: 0,
                            minY: 0,
                            maxX: h.globals.gridWidth,
                            maxY: h.globals.gridHeight
                        }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : h.config.chart.selection.type === "y" ? this.slDraggableRect = this.selectionRect.draggable({
                            minX: 0,
                            maxX: h.globals.gridWidth
                        }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.slDraggableRect = this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")),
                        this.preselectedSelection(),
                        this.hoverArea = h.globals.dom.baseEl.querySelector("".concat(h.globals.chartClass, " .apexcharts-svg")),
                        this.hoverArea.classList.add("apexcharts-zoomable"),
                        this.eventList.forEach(function (m) {
                            c.hoverArea.addEventListener(m, f.svgMouseEvents.bind(f, d), {
                                capture: !1,
                                passive: !0
                            })
                        })
                }
            }, {
                key: "destroy",
                value: function () {
                    this.slDraggableRect && (this.slDraggableRect.draggable(!1),
                        this.slDraggableRect.off(),
                        this.selectionRect.off()),
                        this.selectionRect = null,
                        this.zoomRect = null,
                        this.gridRect = null
                }
            }, {
                key: "svgMouseEvents",
                value: function (r, c) {
                    var d = this.w
                        , h = this
                        , f = this.ctx.toolbar
                        , m = d.globals.zoomEnabled ? d.config.chart.zoom.type : d.config.chart.selection.type
                        , x = d.config.chart.toolbar.autoSelected;
                    if (c.shiftKey ? (this.shiftWasPressed = !0,
                        f.enableZoomPanFromToolbar(x === "pan" ? "zoom" : "pan")) : this.shiftWasPressed && (f.enableZoomPanFromToolbar(x),
                        this.shiftWasPressed = !1),
                        c.target) {
                        var S, _ = c.target.classList;
                        if (c.target.parentNode && c.target.parentNode !== null && (S = c.target.parentNode.classList),
                            !(_.contains("apexcharts-selection-rect") || _.contains("apexcharts-legend-marker") || _.contains("apexcharts-legend-text") || S && S.contains("apexcharts-toolbar"))) {
                            if (h.clientX = c.type === "touchmove" || c.type === "touchstart" ? c.touches[0].clientX : c.type === "touchend" ? c.changedTouches[0].clientX : c.clientX,
                                h.clientY = c.type === "touchmove" || c.type === "touchstart" ? c.touches[0].clientY : c.type === "touchend" ? c.changedTouches[0].clientY : c.clientY,
                            c.type === "mousedown" && c.which === 1) {
                                var k = h.gridRect.getBoundingClientRect();
                                h.startX = h.clientX - k.left,
                                    h.startY = h.clientY - k.top,
                                    h.dragged = !1,
                                    h.w.globals.mousedown = !0
                            }
                            if ((c.type === "mousemove" && c.which === 1 || c.type === "touchmove") && (h.dragged = !0,
                                d.globals.panEnabled ? (d.globals.selection = null,
                                h.w.globals.mousedown && h.panDragging({
                                    context: h,
                                    zoomtype: m,
                                    xyRatios: r
                                })) : (h.w.globals.mousedown && d.globals.zoomEnabled || h.w.globals.mousedown && d.globals.selectionEnabled) && (h.selection = h.selectionDrawing({
                                    context: h,
                                    zoomtype: m
                                }))),
                            c.type === "mouseup" || c.type === "touchend" || c.type === "mouseleave") {
                                var L = h.gridRect.getBoundingClientRect();
                                h.w.globals.mousedown && (h.endX = h.clientX - L.left,
                                    h.endY = h.clientY - L.top,
                                    h.dragX = Math.abs(h.endX - h.startX),
                                    h.dragY = Math.abs(h.endY - h.startY),
                                (d.globals.zoomEnabled || d.globals.selectionEnabled) && h.selectionDrawn({
                                    context: h,
                                    zoomtype: m
                                }),
                                d.globals.panEnabled && d.config.xaxis.convertedCatToNumeric && h.delayedPanScrolled()),
                                d.globals.zoomEnabled && h.hideSelectionRect(this.selectionRect),
                                    h.dragged = !1,
                                    h.w.globals.mousedown = !1
                            }
                            this.makeSelectionRectDraggable()
                        }
                    }
                }
            }, {
                key: "makeSelectionRectDraggable",
                value: function () {
                    var r = this.w;
                    if (this.selectionRect) {
                        var c = this.selectionRect.node.getBoundingClientRect();
                        c.width > 0 && c.height > 0 && this.slDraggableRect.selectize({
                            points: "l, r",
                            pointSize: 8,
                            pointType: "rect"
                        }).resize({
                            constraint: {
                                minX: 0,
                                minY: 0,
                                maxX: r.globals.gridWidth,
                                maxY: r.globals.gridHeight
                            }
                        }).on("resizing", this.selectionDragging.bind(this, "resizing"))
                    }
                }
            }, {
                key: "preselectedSelection",
                value: function () {
                    var r = this.w
                        , c = this.xyRatios;
                    if (!r.globals.zoomEnabled) {
                        if (r.globals.selection !== void 0 && r.globals.selection !== null)
                            this.drawSelectionRect(r.globals.selection);
                        else if (r.config.chart.selection.xaxis.min !== void 0 && r.config.chart.selection.xaxis.max !== void 0) {
                            var d = (r.config.chart.selection.xaxis.min - r.globals.minX) / c.xRatio
                                ,
                                h = r.globals.gridWidth - (r.globals.maxX - r.config.chart.selection.xaxis.max) / c.xRatio - d;
                            r.globals.isRangeBar && (d = (r.config.chart.selection.xaxis.min - r.globals.yAxisScale[0].niceMin) / c.invertedYRatio,
                                h = (r.config.chart.selection.xaxis.max - r.config.chart.selection.xaxis.min) / c.invertedYRatio);
                            var f = {
                                x: d,
                                y: 0,
                                width: h,
                                height: r.globals.gridHeight,
                                translateX: 0,
                                translateY: 0,
                                selectionEnabled: !0
                            };
                            this.drawSelectionRect(f),
                                this.makeSelectionRectDraggable(),
                            typeof r.config.chart.events.selection == "function" && r.config.chart.events.selection(this.ctx, {
                                xaxis: {
                                    min: r.config.chart.selection.xaxis.min,
                                    max: r.config.chart.selection.xaxis.max
                                },
                                yaxis: {}
                            })
                        }
                    }
                }
            }, {
                key: "drawSelectionRect",
                value: function (r) {
                    var c = r.x
                        , d = r.y
                        , h = r.width
                        , f = r.height
                        , m = r.translateX
                        , x = m === void 0 ? 0 : m
                        , S = r.translateY
                        , _ = S === void 0 ? 0 : S
                        , k = this.w
                        , L = this.zoomRect
                        , N = this.selectionRect;
                    if (this.dragged || k.globals.selection !== null) {
                        var H = {
                            transform: "translate(" + x + ", " + _ + ")"
                        };
                        k.globals.zoomEnabled && this.dragged && (h < 0 && (h = 1),
                            L.attr({
                                x: c,
                                y: d,
                                width: h,
                                height: f,
                                fill: k.config.chart.zoom.zoomedArea.fill.color,
                                "fill-opacity": k.config.chart.zoom.zoomedArea.fill.opacity,
                                stroke: k.config.chart.zoom.zoomedArea.stroke.color,
                                "stroke-width": k.config.chart.zoom.zoomedArea.stroke.width,
                                "stroke-opacity": k.config.chart.zoom.zoomedArea.stroke.opacity
                            }),
                            $.setAttrs(L.node, H)),
                        k.globals.selectionEnabled && (N.attr({
                            x: c,
                            y: d,
                            width: h > 0 ? h : 0,
                            height: f > 0 ? f : 0,
                            fill: k.config.chart.selection.fill.color,
                            "fill-opacity": k.config.chart.selection.fill.opacity,
                            stroke: k.config.chart.selection.stroke.color,
                            "stroke-width": k.config.chart.selection.stroke.width,
                            "stroke-dasharray": k.config.chart.selection.stroke.dashArray,
                            "stroke-opacity": k.config.chart.selection.stroke.opacity
                        }),
                            $.setAttrs(N.node, H))
                    }
                }
            }, {
                key: "hideSelectionRect",
                value: function (r) {
                    r && r.attr({
                        x: 0,
                        y: 0,
                        width: 0,
                        height: 0
                    })
                }
            }, {
                key: "selectionDrawing",
                value: function (r) {
                    var c = r.context
                        , d = r.zoomtype
                        , h = this.w
                        , f = c
                        , m = this.gridRect.getBoundingClientRect()
                        , x = f.startX - 1
                        , S = f.startY
                        , _ = !1
                        , k = !1
                        , L = f.clientX - m.left - x
                        , N = f.clientY - m.top - S
                        , H = {};
                    return Math.abs(L + x) > h.globals.gridWidth ? L = h.globals.gridWidth - x : f.clientX - m.left < 0 && (L = x),
                    x > f.clientX - m.left && (_ = !0,
                        L = Math.abs(L)),
                    S > f.clientY - m.top && (k = !0,
                        N = Math.abs(N)),
                        H = d === "x" ? {
                            x: _ ? x - L : x,
                            y: 0,
                            width: L,
                            height: h.globals.gridHeight
                        } : d === "y" ? {
                            x: 0,
                            y: k ? S - N : S,
                            width: h.globals.gridWidth,
                            height: N
                        } : {
                            x: _ ? x - L : x,
                            y: k ? S - N : S,
                            width: L,
                            height: N
                        },
                        f.drawSelectionRect(H),
                        f.selectionDragging("resizing"),
                        H
                }
            }, {
                key: "selectionDragging",
                value: function (r, c) {
                    var d = this
                        , h = this.w
                        , f = this.xyRatios
                        , m = this.selectionRect
                        , x = 0;
                    r === "resizing" && (x = 30);
                    var S = function (k) {
                        return parseFloat(m.node.getAttribute(k))
                    }
                        , _ = {
                        x: S("x"),
                        y: S("y"),
                        width: S("width"),
                        height: S("height")
                    };
                    h.globals.selection = _,
                    typeof h.config.chart.events.selection == "function" && h.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer),
                        this.w.globals.selectionResizeTimer = window.setTimeout(function () {
                            var k, L, N, H, z = d.gridRect.getBoundingClientRect(), q = m.node.getBoundingClientRect();
                            h.globals.isRangeBar ? (k = h.globals.yAxisScale[0].niceMin + (q.left - z.left) * f.invertedYRatio,
                                L = h.globals.yAxisScale[0].niceMin + (q.right - z.left) * f.invertedYRatio,
                                N = 0,
                                H = 1) : (k = h.globals.xAxisScale.niceMin + (q.left - z.left) * f.xRatio,
                                L = h.globals.xAxisScale.niceMin + (q.right - z.left) * f.xRatio,
                                N = h.globals.yAxisScale[0].niceMin + (z.bottom - q.bottom) * f.yRatio[0],
                                H = h.globals.yAxisScale[0].niceMax - (q.top - z.top) * f.yRatio[0]);
                            var Q = {
                                xaxis: {
                                    min: k,
                                    max: L
                                },
                                yaxis: {
                                    min: N,
                                    max: H
                                }
                            };
                            h.config.chart.events.selection(d.ctx, Q),
                            h.config.chart.brush.enabled && h.config.chart.events.brushScrolled !== void 0 && h.config.chart.events.brushScrolled(d.ctx, Q)
                        }, x))
                }
            }, {
                key: "selectionDrawn",
                value: function (r) {
                    var c = r.context
                        , d = r.zoomtype
                        , h = this.w
                        , f = c
                        , m = this.xyRatios
                        , x = this.ctx.toolbar;
                    if (f.startX > f.endX) {
                        var S = f.startX;
                        f.startX = f.endX,
                            f.endX = S
                    }
                    if (f.startY > f.endY) {
                        var _ = f.startY;
                        f.startY = f.endY,
                            f.endY = _
                    }
                    var k = void 0
                        , L = void 0;
                    h.globals.isRangeBar ? (k = h.globals.yAxisScale[0].niceMin + f.startX * m.invertedYRatio,
                        L = h.globals.yAxisScale[0].niceMin + f.endX * m.invertedYRatio) : (k = h.globals.xAxisScale.niceMin + f.startX * m.xRatio,
                        L = h.globals.xAxisScale.niceMin + f.endX * m.xRatio);
                    var N = []
                        , H = [];
                    if (h.config.yaxis.forEach(function (K, ee) {
                        N.push(h.globals.yAxisScale[ee].niceMax - m.yRatio[ee] * f.startY),
                            H.push(h.globals.yAxisScale[ee].niceMax - m.yRatio[ee] * f.endY)
                    }),
                    f.dragged && (f.dragX > 10 || f.dragY > 10) && k !== L) {
                        if (h.globals.zoomEnabled) {
                            var z = M.clone(h.globals.initialConfig.yaxis)
                                , q = M.clone(h.globals.initialConfig.xaxis);
                            if (h.globals.zoomed = !0,
                            h.config.xaxis.convertedCatToNumeric && (k = Math.floor(k),
                                L = Math.floor(L),
                            k < 1 && (k = 1,
                                L = h.globals.dataPoints),
                            L - k < 2 && (L = k + 1)),
                            d !== "xy" && d !== "x" || (q = {
                                min: k,
                                max: L
                            }),
                            d !== "xy" && d !== "y" || z.forEach(function (K, ee) {
                                z[ee].min = H[ee],
                                    z[ee].max = N[ee]
                            }),
                                h.config.chart.zoom.autoScaleYaxis) {
                                var Q = new dt(f.ctx);
                                z = Q.autoScaleY(f.ctx, z, {
                                    xaxis: q
                                })
                            }
                            if (x) {
                                var b = x.getBeforeZoomRange(q, z);
                                b && (q = b.xaxis ? b.xaxis : q,
                                    z = b.yaxis ? b.yaxis : z)
                            }
                            var E = {
                                xaxis: q
                            };
                            h.config.chart.group || (E.yaxis = z),
                                f.ctx.updateHelpers._updateOptions(E, !1, f.w.config.chart.animations.dynamicAnimation.enabled),
                            typeof h.config.chart.events.zoomed == "function" && x.zoomCallback(q, z)
                        } else if (h.globals.selectionEnabled) {
                            var B, X = null;
                            B = {
                                min: k,
                                max: L
                            },
                            d !== "xy" && d !== "y" || (X = M.clone(h.config.yaxis)).forEach(function (K, ee) {
                                X[ee].min = H[ee],
                                    X[ee].max = N[ee]
                            }),
                                h.globals.selection = f.selection,
                            typeof h.config.chart.events.selection == "function" && h.config.chart.events.selection(f.ctx, {
                                xaxis: B,
                                yaxis: X
                            })
                        }
                    }
                }
            }, {
                key: "panDragging",
                value: function (r) {
                    var c = r.context
                        , d = this.w
                        , h = c;
                    if (d.globals.lastClientPosition.x !== void 0) {
                        var f = d.globals.lastClientPosition.x - h.clientX
                            , m = d.globals.lastClientPosition.y - h.clientY;
                        Math.abs(f) > Math.abs(m) && f > 0 ? this.moveDirection = "left" : Math.abs(f) > Math.abs(m) && f < 0 ? this.moveDirection = "right" : Math.abs(m) > Math.abs(f) && m > 0 ? this.moveDirection = "up" : Math.abs(m) > Math.abs(f) && m < 0 && (this.moveDirection = "down")
                    }
                    d.globals.lastClientPosition = {
                        x: h.clientX,
                        y: h.clientY
                    };
                    var x = d.globals.isRangeBar ? d.globals.minY : d.globals.minX
                        , S = d.globals.isRangeBar ? d.globals.maxY : d.globals.maxX;
                    d.config.xaxis.convertedCatToNumeric || h.panScrolled(x, S)
                }
            }, {
                key: "delayedPanScrolled",
                value: function () {
                    var r = this.w
                        , c = r.globals.minX
                        , d = r.globals.maxX
                        , h = (r.globals.maxX - r.globals.minX) / 2;
                    this.moveDirection === "left" ? (c = r.globals.minX + h,
                        d = r.globals.maxX + h) : this.moveDirection === "right" && (c = r.globals.minX - h,
                        d = r.globals.maxX - h),
                        c = Math.floor(c),
                        d = Math.floor(d),
                        this.updateScrolledChart({
                            xaxis: {
                                min: c,
                                max: d
                            }
                        }, c, d)
                }
            }, {
                key: "panScrolled",
                value: function (r, c) {
                    var d = this.w
                        , h = this.xyRatios
                        , f = M.clone(d.globals.initialConfig.yaxis)
                        , m = h.xRatio
                        , x = d.globals.minX
                        , S = d.globals.maxX;
                    d.globals.isRangeBar && (m = h.invertedYRatio,
                        x = d.globals.minY,
                        S = d.globals.maxY),
                        this.moveDirection === "left" ? (r = x + d.globals.gridWidth / 15 * m,
                            c = S + d.globals.gridWidth / 15 * m) : this.moveDirection === "right" && (r = x - d.globals.gridWidth / 15 * m,
                            c = S - d.globals.gridWidth / 15 * m),
                    d.globals.isRangeBar || (r < d.globals.initialMinX || c > d.globals.initialMaxX) && (r = x,
                        c = S);
                    var _ = {
                        min: r,
                        max: c
                    };
                    d.config.chart.zoom.autoScaleYaxis && (f = new dt(this.ctx).autoScaleY(this.ctx, f, {
                        xaxis: _
                    }));
                    var k = {
                        xaxis: {
                            min: r,
                            max: c
                        }
                    };
                    d.config.chart.group || (k.yaxis = f),
                        this.updateScrolledChart(k, r, c)
                }
            }, {
                key: "updateScrolledChart",
                value: function (r, c, d) {
                    var h = this.w;
                    this.ctx.updateHelpers._updateOptions(r, !1, !1),
                    typeof h.config.chart.events.scrolled == "function" && h.config.chart.events.scrolled(this.ctx, {
                        xaxis: {
                            min: c,
                            max: d
                        }
                    })
                }
            }]),
                i
        }()
            , is = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.ttCtx = n,
                    this.ctx = n.ctx
            }

            return p(j, [{
                key: "getNearestValues",
                value: function (n) {
                    var i = n.hoverArea
                        , r = n.elGrid
                        , c = n.clientX
                        , d = n.clientY
                        , h = this.w
                        , f = r.getBoundingClientRect()
                        , m = f.width
                        , x = f.height
                        , S = m / (h.globals.dataPoints - 1)
                        , _ = x / h.globals.dataPoints
                        , k = this.hasBars();
                    !h.globals.comboCharts && !k || h.config.xaxis.convertedCatToNumeric || (S = m / h.globals.dataPoints);
                    var L = c - f.left - h.globals.barPadForNumericAxis
                        , N = d - f.top;
                    L < 0 || N < 0 || L > m || N > x ? (i.classList.remove("hovering-zoom"),
                        i.classList.remove("hovering-pan")) : h.globals.zoomEnabled ? (i.classList.remove("hovering-pan"),
                        i.classList.add("hovering-zoom")) : h.globals.panEnabled && (i.classList.remove("hovering-zoom"),
                        i.classList.add("hovering-pan"));
                    var H = Math.round(L / S)
                        , z = Math.floor(N / _);
                    k && !h.config.xaxis.convertedCatToNumeric && (H = Math.ceil(L / S),
                        H -= 1);
                    var q = null
                        , Q = null
                        , b = h.globals.seriesXvalues.map(function (ee) {
                        return ee.filter(function (pe) {
                            return M.isNumber(pe)
                        })
                    })
                        , E = h.globals.seriesYvalues.map(function (ee) {
                        return ee.filter(function (pe) {
                            return M.isNumber(pe)
                        })
                    });
                    if (h.globals.isXNumeric) {
                        var B = this.ttCtx.getElGrid().getBoundingClientRect()
                            , X = L * (B.width / m)
                            , K = N * (B.height / x);
                        q = (Q = this.closestInMultiArray(X, K, b, E)).index,
                            H = Q.j,
                        q !== null && (b = h.globals.seriesXvalues[q],
                            H = (Q = this.closestInArray(X, b)).index)
                    }
                    return h.globals.capturedSeriesIndex = q === null ? -1 : q,
                    (!H || H < 1) && (H = 0),
                        h.globals.isBarHorizontal ? h.globals.capturedDataPointIndex = z : h.globals.capturedDataPointIndex = H,
                        {
                            capturedSeries: q,
                            j: h.globals.isBarHorizontal ? z : H,
                            hoverX: L,
                            hoverY: N
                        }
                }
            }, {
                key: "closestInMultiArray",
                value: function (n, i, r, c) {
                    var d = this.w
                        , h = 0
                        , f = null
                        , m = -1;
                    d.globals.series.length > 1 ? h = this.getFirstActiveXArray(r) : f = 0;
                    var x = r[h][0]
                        , S = Math.abs(n - x);
                    if (r.forEach(function (L) {
                        L.forEach(function (N, H) {
                            var z = Math.abs(n - N);
                            z <= S && (S = z,
                                m = H)
                        })
                    }),
                    m !== -1) {
                        var _ = c[h][m]
                            , k = Math.abs(i - _);
                        f = h,
                            c.forEach(function (L, N) {
                                var H = Math.abs(i - L[m]);
                                H <= k && (k = H,
                                    f = N)
                            })
                    }
                    return {
                        index: f,
                        j: m
                    }
                }
            }, {
                key: "getFirstActiveXArray",
                value: function (n) {
                    for (var i = this.w, r = 0, c = n.map(function (h, f) {
                        return h.length > 0 ? f : -1
                    }), d = 0; d < c.length; d++)
                        if (c[d] !== -1 && i.globals.collapsedSeriesIndices.indexOf(d) === -1 && i.globals.ancillaryCollapsedSeriesIndices.indexOf(d) === -1) {
                            r = c[d];
                            break
                        }
                    return r
                }
            }, {
                key: "closestInArray",
                value: function (n, i) {
                    for (var r = i[0], c = null, d = Math.abs(n - r), h = 0; h < i.length; h++) {
                        var f = Math.abs(n - i[h]);
                        f < d && (d = f,
                            c = h)
                    }
                    return {
                        index: c
                    }
                }
            }, {
                key: "isXoverlap",
                value: function (n) {
                    var i = []
                        , r = this.w.globals.seriesX.filter(function (d) {
                        return d[0] !== void 0
                    });
                    if (r.length > 0)
                        for (var c = 0; c < r.length - 1; c++)
                            r[c][n] !== void 0 && r[c + 1][n] !== void 0 && r[c][n] !== r[c + 1][n] && i.push("unEqual");
                    return i.length === 0
                }
            }, {
                key: "isInitialSeriesSameLen",
                value: function () {
                    for (var n = !0, i = this.w.globals.initialSeries, r = 0; r < i.length - 1; r++)
                        if (i[r].data.length !== i[r + 1].data.length) {
                            n = !1;
                            break
                        }
                    return n
                }
            }, {
                key: "getBarsHeight",
                value: function (n) {
                    return A(n).reduce(function (i, r) {
                        return i + r.getBBox().height
                    }, 0)
                }
            }, {
                key: "getElMarkers",
                value: function (n) {
                    return typeof n == "number" ? this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:realIndex='".concat(n, "'] .apexcharts-series-markers-wrap > *")) : this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap > *")
                }
            }, {
                key: "getAllMarkers",
                value: function () {
                    var n = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");
                    (n = A(n)).sort(function (r, c) {
                        var d = Number(r.getAttribute("data:realIndex"))
                            , h = Number(c.getAttribute("data:realIndex"));
                        return h < d ? 1 : h > d ? -1 : 0
                    });
                    var i = [];
                    return n.forEach(function (r) {
                        i.push(r.querySelector(".apexcharts-marker"))
                    }),
                        i
                }
            }, {
                key: "hasMarkers",
                value: function (n) {
                    return this.getElMarkers(n).length > 0
                }
            }, {
                key: "getElBars",
                value: function () {
                    return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series")
                }
            }, {
                key: "hasBars",
                value: function () {
                    return this.getElBars().length > 0
                }
            }, {
                key: "getHoverMarkerSize",
                value: function (n) {
                    var i = this.w
                        , r = i.config.markers.hover.size;
                    return r === void 0 && (r = i.globals.markers.size[n] + i.config.markers.hover.sizeOffset),
                        r
                }
            }, {
                key: "toggleAllTooltipSeriesGroups",
                value: function (n) {
                    var i = this.w
                        , r = this.ttCtx;
                    r.allTooltipSeriesGroups.length === 0 && (r.allTooltipSeriesGroups = i.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));
                    for (var c = r.allTooltipSeriesGroups, d = 0; d < c.length; d++)
                        n === "enable" ? (c[d].classList.add("apexcharts-active"),
                            c[d].style.display = i.config.tooltip.items.display) : (c[d].classList.remove("apexcharts-active"),
                            c[d].style.display = "none")
                }
            }]),
                j
        }()
            , bs = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.ctx = n.ctx,
                    this.ttCtx = n,
                    this.tooltipUtil = new is(n)
            }

            return p(j, [{
                key: "drawSeriesTexts",
                value: function (n) {
                    var i = n.shared
                        , r = i === void 0 || i
                        , c = n.ttItems
                        , d = n.i
                        , h = d === void 0 ? 0 : d
                        , f = n.j
                        , m = f === void 0 ? null : f
                        , x = n.y1
                        , S = n.y2
                        , _ = n.e
                        , k = this.w;
                    k.config.tooltip.custom !== void 0 ? this.handleCustomTooltip({
                        i: h,
                        j: m,
                        y1: x,
                        y2: S,
                        w: k
                    }) : this.toggleActiveInactiveSeries(r);
                    var L = this.getValuesToPrint({
                        i: h,
                        j: m
                    });
                    this.printLabels({
                        i: h,
                        j: m,
                        values: L,
                        ttItems: c,
                        shared: r,
                        e: _
                    });
                    var N = this.ttCtx.getElTooltip();
                    this.ttCtx.tooltipRect.ttWidth = N.getBoundingClientRect().width,
                        this.ttCtx.tooltipRect.ttHeight = N.getBoundingClientRect().height
                }
            }, {
                key: "printLabels",
                value: function (n) {
                    var i, r = this, c = n.i, d = n.j, h = n.values, f = n.ttItems, m = n.shared, x = n.e, S = this.w,
                        _ = [], k = function (B) {
                            return S.globals.seriesGoals[B] && S.globals.seriesGoals[B][d] && Array.isArray(S.globals.seriesGoals[B][d])
                        }, L = h.xVal, N = h.zVal, H = h.xAxisTTVal, z = "", q = S.globals.colors[c];
                    d !== null && S.config.plotOptions.bar.distributed && (q = S.globals.colors[d]);
                    for (var Q = function (B, X) {
                        var K = r.getFormatters(c);
                        z = r.getSeriesName({
                            fn: K.yLbTitleFormatter,
                            index: c,
                            seriesIndex: c,
                            j: d
                        }),
                        S.config.chart.type === "treemap" && (z = K.yLbTitleFormatter(String(S.config.series[c].data[d].x), {
                            series: S.globals.series,
                            seriesIndex: c,
                            dataPointIndex: d,
                            w: S
                        }));
                        var ee = S.config.tooltip.inverseOrder ? X : B;
                        if (S.globals.axisCharts) {
                            var pe = function ($e) {
                                var Fe, Je, ut, yt;
                                return S.globals.isRangeData ? K.yLbFormatter((Fe = S.globals.seriesRangeStart) === null || Fe === void 0 || (Je = Fe[$e]) === null || Je === void 0 ? void 0 : Je[d], {
                                    series: S.globals.seriesRangeStart,
                                    seriesIndex: $e,
                                    dataPointIndex: d,
                                    w: S
                                }) + " - " + K.yLbFormatter((ut = S.globals.seriesRangeEnd) === null || ut === void 0 || (yt = ut[$e]) === null || yt === void 0 ? void 0 : yt[d], {
                                    series: S.globals.seriesRangeEnd,
                                    seriesIndex: $e,
                                    dataPointIndex: d,
                                    w: S
                                }) : K.yLbFormatter(S.globals.series[$e][d], {
                                    series: S.globals.series,
                                    seriesIndex: $e,
                                    dataPointIndex: d,
                                    w: S
                                })
                            };
                            if (m)
                                K = r.getFormatters(ee),
                                    z = r.getSeriesName({
                                        fn: K.yLbTitleFormatter,
                                        index: ee,
                                        seriesIndex: c,
                                        j: d
                                    }),
                                    q = S.globals.colors[ee],
                                    i = pe(ee),
                                k(ee) && (_ = S.globals.seriesGoals[ee][d].map(function ($e) {
                                    return {
                                        attrs: $e,
                                        val: K.yLbFormatter($e.value, {
                                            seriesIndex: ee,
                                            dataPointIndex: d,
                                            w: S
                                        })
                                    }
                                }));
                            else {
                                var ge,
                                    Ie = x == null || (ge = x.target) === null || ge === void 0 ? void 0 : ge.getAttribute("fill");
                                Ie && (q = Ie.indexOf("url") !== -1 ? document.querySelector(Ie.substr(4).slice(0, -1)).childNodes[0].getAttribute("stroke") : Ie),
                                    i = pe(c),
                                k(c) && Array.isArray(S.globals.seriesGoals[c][d]) && (_ = S.globals.seriesGoals[c][d].map(function ($e) {
                                    return {
                                        attrs: $e,
                                        val: K.yLbFormatter($e.value, {
                                            seriesIndex: c,
                                            dataPointIndex: d,
                                            w: S
                                        })
                                    }
                                }))
                            }
                        }
                        d === null && (i = K.yLbFormatter(S.globals.series[c], a(a({}, S), {}, {
                            seriesIndex: c,
                            dataPointIndex: c
                        }))),
                            r.DOMHandling({
                                i: c,
                                t: ee,
                                j: d,
                                ttItems: f,
                                values: {
                                    val: i,
                                    goalVals: _,
                                    xVal: L,
                                    xAxisTTVal: H,
                                    zVal: N
                                },
                                seriesName: z,
                                shared: m,
                                pColor: q
                            })
                    }, b = 0, E = S.globals.series.length - 1; b < S.globals.series.length; b++,
                             E--)
                        Q(b, E)
                }
            }, {
                key: "getFormatters",
                value: function (n) {
                    var i, r = this.w, c = r.globals.yLabelFormatters[n];
                    return r.globals.ttVal !== void 0 ? Array.isArray(r.globals.ttVal) ? (c = r.globals.ttVal[n] && r.globals.ttVal[n].formatter,
                        i = r.globals.ttVal[n] && r.globals.ttVal[n].title && r.globals.ttVal[n].title.formatter) : (c = r.globals.ttVal.formatter,
                    typeof r.globals.ttVal.title.formatter == "function" && (i = r.globals.ttVal.title.formatter)) : i = r.config.tooltip.y.title.formatter,
                    typeof c != "function" && (c = r.globals.yLabelFormatters[0] ? r.globals.yLabelFormatters[0] : function (d) {
                            return d
                        }
                    ),
                    typeof i != "function" && (i = function (d) {
                            return d
                        }
                    ),
                        {
                            yLbFormatter: c,
                            yLbTitleFormatter: i
                        }
                }
            }, {
                key: "getSeriesName",
                value: function (n) {
                    var i = n.fn
                        , r = n.index
                        , c = n.seriesIndex
                        , d = n.j
                        , h = this.w;
                    return i(String(h.globals.seriesNames[r]), {
                        series: h.globals.series,
                        seriesIndex: c,
                        dataPointIndex: d,
                        w: h
                    })
                }
            }, {
                key: "DOMHandling",
                value: function (n) {
                    n.i;
                    var i = n.t
                        , r = n.j
                        , c = n.ttItems
                        , d = n.values
                        , h = n.seriesName
                        , f = n.shared
                        , m = n.pColor
                        , x = this.w
                        , S = this.ttCtx
                        , _ = d.val
                        , k = d.goalVals
                        , L = d.xVal
                        , N = d.xAxisTTVal
                        , H = d.zVal
                        , z = null;
                    z = c[i].children,
                    x.config.tooltip.fillSeriesColor && (c[i].style.backgroundColor = m,
                        z[0].style.display = "none"),
                    S.showTooltipTitle && (S.tooltipTitle === null && (S.tooltipTitle = x.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")),
                        S.tooltipTitle.innerHTML = L),
                    S.isXAxisTooltipEnabled && (S.xaxisTooltipText.innerHTML = N !== "" ? N : L);
                    var q = c[i].querySelector(".apexcharts-tooltip-text-y-label");
                    q && (q.innerHTML = h || "");
                    var Q = c[i].querySelector(".apexcharts-tooltip-text-y-value");
                    Q && (Q.innerHTML = _ !== void 0 ? _ : ""),
                    z[0] && z[0].classList.contains("apexcharts-tooltip-marker") && (x.config.tooltip.marker.fillColors && Array.isArray(x.config.tooltip.marker.fillColors) && (m = x.config.tooltip.marker.fillColors[i]),
                        z[0].style.backgroundColor = m),
                    x.config.tooltip.marker.show || (z[0].style.display = "none");
                    var b = c[i].querySelector(".apexcharts-tooltip-text-goals-label")
                        , E = c[i].querySelector(".apexcharts-tooltip-text-goals-value");
                    if (k.length && x.globals.seriesGoals[i]) {
                        var B = function () {
                            var ee = "<div >"
                                , pe = "<div>";
                            k.forEach(function (ge, Ie) {
                                ee += ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(ge.attrs.strokeColor, '; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(ge.attrs.name, "</div>"),
                                    pe += "<div>".concat(ge.val, "</div>")
                            }),
                                b.innerHTML = ee + "</div>",
                                E.innerHTML = pe + "</div>"
                        };
                        f ? x.globals.seriesGoals[i][r] && Array.isArray(x.globals.seriesGoals[i][r]) ? B() : (b.innerHTML = "",
                            E.innerHTML = "") : B()
                    } else
                        b.innerHTML = "",
                            E.innerHTML = "";
                    if (H !== null && (c[i].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = x.config.tooltip.z.title,
                        c[i].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = H !== void 0 ? H : ""),
                    f && z[0]) {
                        if (x.config.tooltip.hideEmptySeries) {
                            var X = c[i].querySelector(".apexcharts-tooltip-marker")
                                , K = c[i].querySelector(".apexcharts-tooltip-text");
                            parseFloat(_) == 0 ? (X.style.display = "none",
                                K.style.display = "none") : (X.style.display = "block",
                                K.style.display = "block")
                        }
                        _ == null || x.globals.ancillaryCollapsedSeriesIndices.indexOf(i) > -1 || x.globals.collapsedSeriesIndices.indexOf(i) > -1 ? z[0].parentNode.style.display = "none" : z[0].parentNode.style.display = x.config.tooltip.items.display
                    }
                }
            }, {
                key: "toggleActiveInactiveSeries",
                value: function (n) {
                    var i = this.w;
                    if (n)
                        this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
                    else {
                        this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                        var r = i.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
                        r && (r.classList.add("apexcharts-active"),
                            r.style.display = i.config.tooltip.items.display)
                    }
                }
            }, {
                key: "getValuesToPrint",
                value: function (n) {
                    var i = n.i
                        , r = n.j
                        , c = this.w
                        , d = this.ctx.series.filteredSeriesX()
                        , h = ""
                        , f = ""
                        , m = null
                        , x = null
                        , S = {
                        series: c.globals.series,
                        seriesIndex: i,
                        dataPointIndex: r,
                        w: c
                    }
                        , _ = c.globals.ttZFormatter;
                    r === null ? x = c.globals.series[i] : c.globals.isXNumeric && c.config.chart.type !== "treemap" ? (h = d[i][r],
                    d[i].length === 0 && (h = d[this.tooltipUtil.getFirstActiveXArray(d)][r])) : h = c.globals.labels[r] !== void 0 ? c.globals.labels[r] : "";
                    var k = h;
                    return c.globals.isXNumeric && c.config.xaxis.type === "datetime" ? h = new de(this.ctx).xLabelFormat(c.globals.ttKeyFormatter, k, k, {
                        i: void 0,
                        dateFormatter: new be(this.ctx).formatDate,
                        w: this.w
                    }) : h = c.globals.isBarHorizontal ? c.globals.yLabelFormatters[0](k, S) : c.globals.xLabelFormatter(k, S),
                    c.config.tooltip.x.formatter !== void 0 && (h = c.globals.ttKeyFormatter(k, S)),
                    c.globals.seriesZ.length > 0 && c.globals.seriesZ[i].length > 0 && (m = _(c.globals.seriesZ[i][r], c)),
                        f = typeof c.config.xaxis.tooltip.formatter == "function" ? c.globals.xaxisTooltipFormatter(k, S) : h,
                        {
                            val: Array.isArray(x) ? x.join(" ") : x,
                            xVal: Array.isArray(h) ? h.join(" ") : h,
                            xAxisTTVal: Array.isArray(f) ? f.join(" ") : f,
                            zVal: m
                        }
                }
            }, {
                key: "handleCustomTooltip",
                value: function (n) {
                    var i = n.i
                        , r = n.j
                        , c = n.y1
                        , d = n.y2
                        , h = n.w
                        , f = this.ttCtx.getElTooltip()
                        , m = h.config.tooltip.custom;
                    Array.isArray(m) && m[i] && (m = m[i]),
                        f.innerHTML = m({
                            ctx: this.ctx,
                            series: h.globals.series,
                            seriesIndex: i,
                            dataPointIndex: r,
                            y1: c,
                            y2: d,
                            w: h
                        })
                }
            }]),
                j
        }()
            , Ss = function () {
            function j(n) {
                l(this, j),
                    this.ttCtx = n,
                    this.ctx = n.ctx,
                    this.w = n.w
            }

            return p(j, [{
                key: "moveXCrosshairs",
                value: function (n) {
                    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null
                        , r = this.ttCtx
                        , c = this.w
                        , d = r.getElXCrosshairs()
                        , h = n - r.xcrosshairsWidth / 2
                        , f = c.globals.labels.slice().length;
                    if (i !== null && (h = c.globals.gridWidth / f * i),
                    d === null || c.globals.isBarHorizontal || (d.setAttribute("x", h),
                        d.setAttribute("x1", h),
                        d.setAttribute("x2", h),
                        d.setAttribute("y2", c.globals.gridHeight),
                        d.classList.add("apexcharts-active")),
                    h < 0 && (h = 0),
                    h > c.globals.gridWidth && (h = c.globals.gridWidth),
                        r.isXAxisTooltipEnabled) {
                        var m = h;
                        c.config.xaxis.crosshairs.width !== "tickWidth" && c.config.xaxis.crosshairs.width !== "barWidth" || (m = h + r.xcrosshairsWidth / 2),
                            this.moveXAxisTooltip(m)
                    }
                }
            }, {
                key: "moveYCrosshairs",
                value: function (n) {
                    var i = this.ttCtx;
                    i.ycrosshairs !== null && $.setAttrs(i.ycrosshairs, {
                        y1: n,
                        y2: n
                    }),
                    i.ycrosshairsHidden !== null && $.setAttrs(i.ycrosshairsHidden, {
                        y1: n,
                        y2: n
                    })
                }
            }, {
                key: "moveXAxisTooltip",
                value: function (n) {
                    var i = this.w
                        , r = this.ttCtx;
                    if (r.xaxisTooltip !== null && r.xcrosshairsWidth !== 0) {
                        r.xaxisTooltip.classList.add("apexcharts-active");
                        var c = r.xaxisOffY + i.config.xaxis.tooltip.offsetY + i.globals.translateY + 1 + i.config.xaxis.offsetY;
                        if (n -= r.xaxisTooltip.getBoundingClientRect().width / 2,
                            !isNaN(n)) {
                            n += i.globals.translateX;
                            var d;
                            d = new $(this.ctx).getTextRects(r.xaxisTooltipText.innerHTML),
                                r.xaxisTooltipText.style.minWidth = d.width + "px",
                                r.xaxisTooltip.style.left = n + "px",
                                r.xaxisTooltip.style.top = c + "px"
                        }
                    }
                }
            }, {
                key: "moveYAxisTooltip",
                value: function (n) {
                    var i = this.w
                        , r = this.ttCtx;
                    r.yaxisTTEls === null && (r.yaxisTTEls = i.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                    var c = parseInt(r.ycrosshairsHidden.getAttribute("y1"), 10)
                        , d = i.globals.translateY + c
                        , h = r.yaxisTTEls[n].getBoundingClientRect().height
                        , f = i.globals.translateYAxisX[n] - 2;
                    i.config.yaxis[n].opposite && (f -= 26),
                        d -= h / 2,
                        i.globals.ignoreYAxisIndexes.indexOf(n) === -1 ? (r.yaxisTTEls[n].classList.add("apexcharts-active"),
                            r.yaxisTTEls[n].style.top = d + "px",
                            r.yaxisTTEls[n].style.left = f + i.config.yaxis[n].tooltip.offsetX + "px") : r.yaxisTTEls[n].classList.remove("apexcharts-active")
                }
            }, {
                key: "moveTooltip",
                value: function (n, i) {
                    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null
                        , c = this.w
                        , d = this.ttCtx
                        , h = d.getElTooltip()
                        , f = d.tooltipRect
                        , m = r !== null ? parseFloat(r) : 1
                        , x = parseFloat(n) + m + 5
                        , S = parseFloat(i) + m / 2;
                    if (x > c.globals.gridWidth / 2 && (x = x - f.ttWidth - m - 10),
                    x > c.globals.gridWidth - f.ttWidth - 10 && (x = c.globals.gridWidth - f.ttWidth),
                    x < -20 && (x = -20),
                        c.config.tooltip.followCursor) {
                        var _ = d.getElGrid().getBoundingClientRect();
                        (x = d.e.clientX - _.left) > c.globals.gridWidth / 2 && (x -= d.tooltipRect.ttWidth),
                        (S = d.e.clientY + c.globals.translateY - _.top) > c.globals.gridHeight / 2 && (S -= d.tooltipRect.ttHeight)
                    } else
                        c.globals.isBarHorizontal || f.ttHeight / 2 + S > c.globals.gridHeight && (S = c.globals.gridHeight - f.ttHeight + c.globals.translateY);
                    isNaN(x) || (x += c.globals.translateX,
                        h.style.left = x + "px",
                        h.style.top = S + "px")
                }
            }, {
                key: "moveMarkers",
                value: function (n, i) {
                    var r = this.w
                        , c = this.ttCtx;
                    if (r.globals.markers.size[n] > 0)
                        for (var d = r.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(n, "'] .apexcharts-marker")), h = 0; h < d.length; h++)
                            parseInt(d[h].getAttribute("rel"), 10) === i && (c.marker.resetPointsSize(),
                                c.marker.enlargeCurrentPoint(i, d[h]));
                    else
                        c.marker.resetPointsSize(),
                            this.moveDynamicPointOnHover(i, n)
                }
            }, {
                key: "moveDynamicPointOnHover",
                value: function (n, i) {
                    var r, c, d = this.w, h = this.ttCtx, f = d.globals.pointsArray,
                        m = h.tooltipUtil.getHoverMarkerSize(i), x = d.config.series[i].type;
                    if (!x || x !== "column" && x !== "candlestick" && x !== "boxPlot") {
                        r = f[i][n][0],
                            c = f[i][n][1] ? f[i][n][1] : 0;
                        var S = d.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(i, "'] .apexcharts-series-markers circle"));
                        S && c < d.globals.gridHeight && c > 0 && (S.setAttribute("r", m),
                            S.setAttribute("cx", r),
                            S.setAttribute("cy", c)),
                            this.moveXCrosshairs(r),
                        h.fixedTooltip || this.moveTooltip(r, c, m)
                    }
                }
            }, {
                key: "moveDynamicPointsOnHover",
                value: function (n) {
                    var i, r = this.ttCtx, c = r.w, d = 0, h = 0, f = c.globals.pointsArray;
                    i = new bt(this.ctx).getActiveConfigSeriesIndex("asc", ["line", "area", "scatter", "bubble"]);
                    var m = r.tooltipUtil.getHoverMarkerSize(i);
                    f[i] && (d = f[i][n][0],
                        h = f[i][n][1]);
                    var x = r.tooltipUtil.getAllMarkers();
                    if (x !== null)
                        for (var S = 0; S < c.globals.series.length; S++) {
                            var _ = f[S];
                            if (c.globals.comboCharts && _ === void 0 && x.splice(S, 0, null),
                            _ && _.length) {
                                var k = f[S][n][1]
                                    , L = void 0;
                                if (x[S].setAttribute("cx", d),
                                c.config.chart.type === "rangeArea" && !c.globals.comboCharts) {
                                    var N = n + c.globals.series[S].length;
                                    L = f[S][N][1],
                                        k -= Math.abs(k - L) / 2
                                }
                                k !== null && !isNaN(k) && k < c.globals.gridHeight + m && k + m > 0 ? (x[S] && x[S].setAttribute("r", m),
                                x[S] && x[S].setAttribute("cy", k)) : x[S] && x[S].setAttribute("r", 0)
                            }
                        }
                    this.moveXCrosshairs(d),
                    r.fixedTooltip || this.moveTooltip(d, h || c.globals.gridHeight, m)
                }
            }, {
                key: "moveStickyTooltipOverBars",
                value: function (n, i) {
                    var r = this.w
                        , c = this.ttCtx
                        , d = r.globals.columnSeries ? r.globals.columnSeries.length : r.globals.series.length
                        , h = d >= 2 && d % 2 == 0 ? Math.floor(d / 2) : Math.floor(d / 2) + 1;
                    r.globals.isBarHorizontal && (h = new bt(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
                    var f = r.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(h, "'] path[j='").concat(n, "'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(h, "'] path[j='").concat(n, "'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(h, "'] path[j='").concat(n, "'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(h, "'] path[j='").concat(n, "']"));
                    f || typeof i != "number" || (f = r.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[data\\:realIndex='".concat(i, "'] path[j='").concat(n, `'],
        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='`).concat(i, "'] path[j='").concat(n, `'],
        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='`).concat(i, "'] path[j='").concat(n, `'],
        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='`).concat(i, "'] path[j='").concat(n, "']")));
                    var m = f ? parseFloat(f.getAttribute("cx")) : 0
                        , x = f ? parseFloat(f.getAttribute("cy")) : 0
                        , S = f ? parseFloat(f.getAttribute("barWidth")) : 0
                        , _ = c.getElGrid().getBoundingClientRect()
                        ,
                        k = f && (f.classList.contains("apexcharts-candlestick-area") || f.classList.contains("apexcharts-boxPlot-area"));
                    r.globals.isXNumeric ? (f && !k && (m -= d % 2 != 0 ? S / 2 : 0),
                    f && k && r.globals.comboCharts && (m -= S / 2)) : r.globals.isBarHorizontal || (m = c.xAxisTicksPositions[n - 1] + c.dataPointsDividedWidth / 2,
                    isNaN(m) && (m = c.xAxisTicksPositions[n] - c.dataPointsDividedWidth / 2)),
                        r.globals.isBarHorizontal ? x -= c.tooltipRect.ttHeight : r.config.tooltip.followCursor ? x = c.e.clientY - _.top - c.tooltipRect.ttHeight / 2 : x + c.tooltipRect.ttHeight + 15 > r.globals.gridHeight && (x = r.globals.gridHeight),
                    r.globals.isBarHorizontal || this.moveXCrosshairs(m),
                    c.fixedTooltip || this.moveTooltip(m, x || r.globals.gridHeight)
                }
            }]),
                j
        }()
            , Hn = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.ttCtx = n,
                    this.ctx = n.ctx,
                    this.tooltipPosition = new Ss(n)
            }

            return p(j, [{
                key: "drawDynamicPoints",
                value: function () {
                    var n = this.w
                        , i = new $(this.ctx)
                        , r = new tt(this.ctx)
                        , c = n.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                    c = A(c),
                    n.config.chart.stacked && c.sort(function (_, k) {
                        return parseFloat(_.getAttribute("data:realIndex")) - parseFloat(k.getAttribute("data:realIndex"))
                    });
                    for (var d = 0; d < c.length; d++) {
                        var h = c[d].querySelector(".apexcharts-series-markers-wrap");
                        if (h !== null) {
                            var f = void 0
                                , m = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
                            n.config.chart.type !== "line" && n.config.chart.type !== "area" || n.globals.comboCharts || n.config.tooltip.intersect || (m += " no-pointer-events");
                            var x = r.getMarkerConfig({
                                cssClass: m,
                                seriesIndex: Number(h.getAttribute("data:realIndex"))
                            });
                            (f = i.drawMarker(0, 0, x)).node.setAttribute("default-marker-size", 0);
                            var S = document.createElementNS(n.globals.SVGNS, "g");
                            S.classList.add("apexcharts-series-markers"),
                                S.appendChild(f.node),
                                h.appendChild(S)
                        }
                    }
                }
            }, {
                key: "enlargeCurrentPoint",
                value: function (n, i) {
                    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null
                        , c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null
                        , d = this.w;
                    d.config.chart.type !== "bubble" && this.newPointSize(n, i);
                    var h = i.getAttribute("cx")
                        , f = i.getAttribute("cy");
                    if (r !== null && c !== null && (h = r,
                        f = c),
                        this.tooltipPosition.moveXCrosshairs(h),
                        !this.fixedTooltip) {
                        if (d.config.chart.type === "radar") {
                            var m = this.ttCtx.getElGrid().getBoundingClientRect();
                            h = this.ttCtx.e.clientX - m.left
                        }
                        this.tooltipPosition.moveTooltip(h, f, d.config.markers.hover.size)
                    }
                }
            }, {
                key: "enlargePoints",
                value: function (n) {
                    for (var i = this.w, r = this, c = this.ttCtx, d = n, h = i.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), f = i.config.markers.hover.size, m = 0; m < h.length; m++) {
                        var x = h[m].getAttribute("rel")
                            , S = h[m].getAttribute("index");
                        if (f === void 0 && (f = i.globals.markers.size[S] + i.config.markers.hover.sizeOffset),
                        d === parseInt(x, 10)) {
                            r.newPointSize(d, h[m]);
                            var _ = h[m].getAttribute("cx")
                                , k = h[m].getAttribute("cy");
                            r.tooltipPosition.moveXCrosshairs(_),
                            c.fixedTooltip || r.tooltipPosition.moveTooltip(_, k, f)
                        } else
                            r.oldPointSize(h[m])
                    }
                }
            }, {
                key: "newPointSize",
                value: function (n, i) {
                    var r = this.w
                        , c = r.config.markers.hover.size
                        , d = n === 0 ? i.parentNode.firstChild : i.parentNode.lastChild;
                    if (d.getAttribute("default-marker-size") !== "0") {
                        var h = parseInt(d.getAttribute("index"), 10);
                        c === void 0 && (c = r.globals.markers.size[h] + r.config.markers.hover.sizeOffset),
                        c < 0 && (c = 0),
                            d.setAttribute("r", c)
                    }
                }
            }, {
                key: "oldPointSize",
                value: function (n) {
                    var i = parseFloat(n.getAttribute("default-marker-size"));
                    n.setAttribute("r", i)
                }
            }, {
                key: "resetPointsSize",
                value: function () {
                    for (var n = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), i = 0; i < n.length; i++) {
                        var r = parseFloat(n[i].getAttribute("default-marker-size"));
                        M.isNumber(r) && r >= 0 ? n[i].setAttribute("r", r) : n[i].setAttribute("r", 0)
                    }
                }
            }]),
                j
        }()
            , Fa = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w;
                var i = this.w;
                this.ttCtx = n,
                    this.isVerticalGroupedRangeBar = !i.globals.isBarHorizontal && i.config.chart.type === "rangeBar" && i.config.plotOptions.bar.rangeBarGroupRows
            }

            return p(j, [{
                key: "getAttr",
                value: function (n, i) {
                    return parseFloat(n.target.getAttribute(i))
                }
            }, {
                key: "handleHeatTreeTooltip",
                value: function (n) {
                    var i = n.e
                        , r = n.opt
                        , c = n.x
                        , d = n.y
                        , h = n.type
                        , f = this.ttCtx
                        , m = this.w;
                    if (i.target.classList.contains("apexcharts-".concat(h, "-rect"))) {
                        var x = this.getAttr(i, "i")
                            , S = this.getAttr(i, "j")
                            , _ = this.getAttr(i, "cx")
                            , k = this.getAttr(i, "cy")
                            , L = this.getAttr(i, "width")
                            , N = this.getAttr(i, "height");
                        if (f.tooltipLabels.drawSeriesTexts({
                            ttItems: r.ttItems,
                            i: x,
                            j: S,
                            shared: !1,
                            e: i
                        }),
                            m.globals.capturedSeriesIndex = x,
                            m.globals.capturedDataPointIndex = S,
                            c = _ + f.tooltipRect.ttWidth / 2 + L,
                            d = k + f.tooltipRect.ttHeight / 2 - N / 2,
                            f.tooltipPosition.moveXCrosshairs(_ + L / 2),
                        c > m.globals.gridWidth / 2 && (c = _ - f.tooltipRect.ttWidth / 2 + L),
                            f.w.config.tooltip.followCursor) {
                            var H = m.globals.dom.elWrap.getBoundingClientRect();
                            c = m.globals.clientX - H.left - (c > m.globals.gridWidth / 2 ? f.tooltipRect.ttWidth : 0),
                                d = m.globals.clientY - H.top - (d > m.globals.gridHeight / 2 ? f.tooltipRect.ttHeight : 0)
                        }
                    }
                    return {
                        x: c,
                        y: d
                    }
                }
            }, {
                key: "handleMarkerTooltip",
                value: function (n) {
                    var i, r, c = n.e, d = n.opt, h = n.x, f = n.y, m = this.w, x = this.ttCtx;
                    if (c.target.classList.contains("apexcharts-marker")) {
                        var S = parseInt(d.paths.getAttribute("cx"), 10)
                            , _ = parseInt(d.paths.getAttribute("cy"), 10)
                            , k = parseFloat(d.paths.getAttribute("val"));
                        if (r = parseInt(d.paths.getAttribute("rel"), 10),
                            i = parseInt(d.paths.parentNode.parentNode.parentNode.getAttribute("rel"), 10) - 1,
                            x.intersect) {
                            var L = M.findAncestor(d.paths, "apexcharts-series");
                            L && (i = parseInt(L.getAttribute("data:realIndex"), 10))
                        }
                        if (x.tooltipLabels.drawSeriesTexts({
                            ttItems: d.ttItems,
                            i,
                            j: r,
                            shared: !x.showOnIntersect && m.config.tooltip.shared,
                            e: c
                        }),
                        c.type === "mouseup" && x.markerClick(c, i, r),
                            m.globals.capturedSeriesIndex = i,
                            m.globals.capturedDataPointIndex = r,
                            h = S,
                            f = _ + m.globals.translateY - 1.4 * x.tooltipRect.ttHeight,
                            x.w.config.tooltip.followCursor) {
                            var N = x.getElGrid().getBoundingClientRect();
                            f = x.e.clientY + m.globals.translateY - N.top
                        }
                        k < 0 && (f = _),
                            x.marker.enlargeCurrentPoint(r, d.paths, h, f)
                    }
                    return {
                        x: h,
                        y: f
                    }
                }
            }, {
                key: "handleBarTooltip",
                value: function (n) {
                    var i, r, c = n.e, d = n.opt, h = this.w, f = this.ttCtx, m = f.getElTooltip(), x = 0, S = 0, _ = 0,
                        k = this.getBarTooltipXY({
                            e: c,
                            opt: d
                        });
                    i = k.i;
                    var L = k.barHeight
                        , N = k.j;
                    h.globals.capturedSeriesIndex = i,
                        h.globals.capturedDataPointIndex = N,
                        h.globals.isBarHorizontal && f.tooltipUtil.hasBars() || !h.config.tooltip.shared ? (S = k.x,
                            _ = k.y,
                            r = Array.isArray(h.config.stroke.width) ? h.config.stroke.width[i] : h.config.stroke.width,
                            x = S) : h.globals.comboCharts || h.config.tooltip.shared || (x /= 2),
                    isNaN(_) && (_ = h.globals.svgHeight - f.tooltipRect.ttHeight);
                    var H = parseInt(d.paths.parentNode.getAttribute("data:realIndex"), 10)
                        ,
                        z = h.globals.isMultipleYAxis ? h.config.yaxis[H] && h.config.yaxis[H].reversed : h.config.yaxis[0].reversed;
                    if (S + f.tooltipRect.ttWidth > h.globals.gridWidth && !z ? S -= f.tooltipRect.ttWidth : S < 0 && (S = 0),
                        f.w.config.tooltip.followCursor) {
                        var q = f.getElGrid().getBoundingClientRect();
                        _ = f.e.clientY - q.top
                    }
                    f.tooltip === null && (f.tooltip = h.globals.dom.baseEl.querySelector(".apexcharts-tooltip")),
                    h.config.tooltip.shared || (h.globals.comboBarCount > 0 ? f.tooltipPosition.moveXCrosshairs(x + r / 2) : f.tooltipPosition.moveXCrosshairs(x)),
                    !f.fixedTooltip && (!h.config.tooltip.shared || h.globals.isBarHorizontal && f.tooltipUtil.hasBars()) && (z && (S -= f.tooltipRect.ttWidth) < 0 && (S = 0),
                    !z || h.globals.isBarHorizontal && f.tooltipUtil.hasBars() || (_ = _ + L - 2 * (h.globals.series[i][N] < 0 ? L : 0)),
                        _ = _ + h.globals.translateY - f.tooltipRect.ttHeight / 2,
                        m.style.left = S + h.globals.translateX + "px",
                        m.style.top = _ + "px")
                }
            }, {
                key: "getBarTooltipXY",
                value: function (n) {
                    var i = this
                        , r = n.e
                        , c = n.opt
                        , d = this.w
                        , h = null
                        , f = this.ttCtx
                        , m = 0
                        , x = 0
                        , S = 0
                        , _ = 0
                        , k = 0
                        , L = r.target.classList;
                    if (L.contains("apexcharts-bar-area") || L.contains("apexcharts-candlestick-area") || L.contains("apexcharts-boxPlot-area") || L.contains("apexcharts-rangebar-area")) {
                        var N = r.target
                            , H = N.getBoundingClientRect()
                            , z = c.elGrid.getBoundingClientRect()
                            , q = H.height;
                        k = H.height;
                        var Q = H.width
                            , b = parseInt(N.getAttribute("cx"), 10)
                            , E = parseInt(N.getAttribute("cy"), 10);
                        _ = parseFloat(N.getAttribute("barWidth"));
                        var B = r.type === "touchmove" ? r.touches[0].clientX : r.clientX;
                        h = parseInt(N.getAttribute("j"), 10),
                            m = parseInt(N.parentNode.getAttribute("rel"), 10) - 1;
                        var X = N.getAttribute("data-range-y1")
                            , K = N.getAttribute("data-range-y2");
                        d.globals.comboCharts && (m = parseInt(N.parentNode.getAttribute("data:realIndex"), 10));
                        var ee = function (ge) {
                            return d.globals.isXNumeric ? b - Q / 2 : i.isVerticalGroupedRangeBar ? b + Q / 2 : b - f.dataPointsDividedWidth + Q / 2
                        }
                            , pe = function () {
                            return E - f.dataPointsDividedHeight + q / 2 - f.tooltipRect.ttHeight / 2
                        };
                        f.tooltipLabels.drawSeriesTexts({
                            ttItems: c.ttItems,
                            i: m,
                            j: h,
                            y1: X ? parseInt(X, 10) : null,
                            y2: K ? parseInt(K, 10) : null,
                            shared: !f.showOnIntersect && d.config.tooltip.shared,
                            e: r
                        }),
                            d.config.tooltip.followCursor ? d.globals.isBarHorizontal ? (x = B - z.left + 15,
                                S = pe()) : (x = ee(),
                                S = r.clientY - z.top - f.tooltipRect.ttHeight / 2 - 15) : d.globals.isBarHorizontal ? ((x = b) < f.xyRatios.baseLineInvertedY && (x = b - f.tooltipRect.ttWidth),
                                S = pe()) : (x = ee(),
                                S = E)
                    }
                    return {
                        x,
                        y: S,
                        barHeight: k,
                        barWidth: _,
                        i: m,
                        j: h
                    }
                }
            }]),
                j
        }()
            , Rs = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.ttCtx = n
            }

            return p(j, [{
                key: "drawXaxisTooltip",
                value: function () {
                    var n = this.w
                        , i = this.ttCtx
                        , r = n.config.xaxis.position === "bottom";
                    i.xaxisOffY = r ? n.globals.gridHeight + 1 : -n.globals.xAxisHeight - n.config.xaxis.axisTicks.height + 3;
                    var c = r ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top"
                        , d = n.globals.dom.elWrap;
                    i.isXAxisTooltipEnabled && n.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") === null && (i.xaxisTooltip = document.createElement("div"),
                        i.xaxisTooltip.setAttribute("class", c + " apexcharts-theme-" + n.config.tooltip.theme),
                        d.appendChild(i.xaxisTooltip),
                        i.xaxisTooltipText = document.createElement("div"),
                        i.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"),
                        i.xaxisTooltipText.style.fontFamily = n.config.xaxis.tooltip.style.fontFamily || n.config.chart.fontFamily,
                        i.xaxisTooltipText.style.fontSize = n.config.xaxis.tooltip.style.fontSize,
                        i.xaxisTooltip.appendChild(i.xaxisTooltipText))
                }
            }, {
                key: "drawYaxisTooltip",
                value: function () {
                    for (var n = this.w, i = this.ttCtx, r = function (d) {
                        var h = n.config.yaxis[d].opposite || n.config.yaxis[d].crosshairs.opposite;
                        i.yaxisOffX = h ? n.globals.gridWidth + 1 : 1;
                        var f = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(d, h ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left");
                        n.globals.yAxisSameScaleIndices.map(function (x, S) {
                            x.map(function (_, k) {
                                k === d && (f += n.config.yaxis[k].show ? " " : " apexcharts-yaxistooltip-hidden")
                            })
                        });
                        var m = n.globals.dom.elWrap;
                        n.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(d)) === null && (i.yaxisTooltip = document.createElement("div"),
                            i.yaxisTooltip.setAttribute("class", f + " apexcharts-theme-" + n.config.tooltip.theme),
                            m.appendChild(i.yaxisTooltip),
                        d === 0 && (i.yaxisTooltipText = []),
                            i.yaxisTooltipText[d] = document.createElement("div"),
                            i.yaxisTooltipText[d].classList.add("apexcharts-yaxistooltip-text"),
                            i.yaxisTooltip.appendChild(i.yaxisTooltipText[d]))
                    }, c = 0; c < n.config.yaxis.length; c++)
                        r(c)
                }
            }, {
                key: "setXCrosshairWidth",
                value: function () {
                    var n = this.w
                        , i = this.ttCtx
                        , r = i.getElXCrosshairs();
                    if (i.xcrosshairsWidth = parseInt(n.config.xaxis.crosshairs.width, 10),
                        n.globals.comboCharts) {
                        var c = n.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                        if (c !== null && n.config.xaxis.crosshairs.width === "barWidth") {
                            var d = parseFloat(c.getAttribute("barWidth"));
                            i.xcrosshairsWidth = d
                        } else if (n.config.xaxis.crosshairs.width === "tickWidth") {
                            var h = n.globals.labels.length;
                            i.xcrosshairsWidth = n.globals.gridWidth / h
                        }
                    } else if (n.config.xaxis.crosshairs.width === "tickWidth") {
                        var f = n.globals.labels.length;
                        i.xcrosshairsWidth = n.globals.gridWidth / f
                    } else if (n.config.xaxis.crosshairs.width === "barWidth") {
                        var m = n.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                        if (m !== null) {
                            var x = parseFloat(m.getAttribute("barWidth"));
                            i.xcrosshairsWidth = x
                        } else
                            i.xcrosshairsWidth = 1
                    }
                    n.globals.isBarHorizontal && (i.xcrosshairsWidth = 0),
                    r !== null && i.xcrosshairsWidth > 0 && r.setAttribute("width", i.xcrosshairsWidth)
                }
            }, {
                key: "handleYCrosshair",
                value: function () {
                    var n = this.w
                        , i = this.ttCtx;
                    i.ycrosshairs = n.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"),
                        i.ycrosshairsHidden = n.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden")
                }
            }, {
                key: "drawYaxisTooltipText",
                value: function (n, i, r) {
                    var c = this.ttCtx
                        , d = this.w
                        , h = d.globals.yLabelFormatters[n];
                    if (c.yaxisTooltips[n]) {
                        var f = c.getElGrid().getBoundingClientRect()
                            , m = (i - f.top) * r.yRatio[n]
                            , x = d.globals.maxYArr[n] - d.globals.minYArr[n]
                            , S = d.globals.minYArr[n] + (x - m);
                        c.tooltipPosition.moveYCrosshairs(i - f.top),
                            c.yaxisTooltipText[n].innerHTML = h(S),
                            c.tooltipPosition.moveYAxisTooltip(n)
                    }
                }
            }]),
                j
        }()
            , Ns = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w;
                var i = this.w;
                this.tConfig = i.config.tooltip,
                    this.tooltipUtil = new is(this),
                    this.tooltipLabels = new bs(this),
                    this.tooltipPosition = new Ss(this),
                    this.marker = new Hn(this),
                    this.intersect = new Fa(this),
                    this.axesTooltip = new Rs(this),
                    this.showOnIntersect = this.tConfig.intersect,
                    this.showTooltipTitle = this.tConfig.x.show,
                    this.fixedTooltip = this.tConfig.fixed.enabled,
                    this.xaxisTooltip = null,
                    this.yaxisTTEls = null,
                    this.isBarShared = !i.globals.isBarHorizontal && this.tConfig.shared,
                    this.lastHoverTime = Date.now()
            }

            return p(j, [{
                key: "getElTooltip",
                value: function (n) {
                    return n || (n = this),
                        n.w.globals.dom.baseEl ? n.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip") : null
                }
            }, {
                key: "getElXCrosshairs",
                value: function () {
                    return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs")
                }
            }, {
                key: "getElGrid",
                value: function () {
                    return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid")
                }
            }, {
                key: "drawTooltip",
                value: function (n) {
                    var i = this.w;
                    this.xyRatios = n,
                        this.isXAxisTooltipEnabled = i.config.xaxis.tooltip.enabled && i.globals.axisCharts,
                        this.yaxisTooltips = i.config.yaxis.map(function (h, f) {
                            return !!(h.show && h.tooltip.enabled && i.globals.axisCharts)
                        }),
                        this.allTooltipSeriesGroups = [],
                    i.globals.axisCharts || (this.showTooltipTitle = !1);
                    var r = document.createElement("div");
                    if (r.classList.add("apexcharts-tooltip"),
                    i.config.tooltip.cssClass && r.classList.add(i.config.tooltip.cssClass),
                        r.classList.add("apexcharts-theme-".concat(this.tConfig.theme)),
                        i.globals.dom.elWrap.appendChild(r),
                        i.globals.axisCharts) {
                        this.axesTooltip.drawXaxisTooltip(),
                            this.axesTooltip.drawYaxisTooltip(),
                            this.axesTooltip.setXCrosshairWidth(),
                            this.axesTooltip.handleYCrosshair();
                        var c = new He(this.ctx);
                        this.xAxisTicksPositions = c.getXAxisTicksPositions()
                    }
                    if (!i.globals.comboCharts && !this.tConfig.intersect && i.config.chart.type !== "rangeBar" || this.tConfig.shared || (this.showOnIntersect = !0),
                    i.config.markers.size !== 0 && i.globals.markers.largestSize !== 0 || this.marker.drawDynamicPoints(this),
                    i.globals.collapsedSeries.length !== i.globals.series.length) {
                        this.dataPointsDividedHeight = i.globals.gridHeight / i.globals.dataPoints,
                            this.dataPointsDividedWidth = i.globals.gridWidth / i.globals.dataPoints,
                        this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"),
                            this.tooltipTitle.classList.add("apexcharts-tooltip-title"),
                            this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || i.config.chart.fontFamily,
                            this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize,
                            r.appendChild(this.tooltipTitle));
                        var d = i.globals.series.length;
                        (i.globals.xyCharts || i.globals.comboCharts) && this.tConfig.shared && (d = this.showOnIntersect ? 1 : i.globals.series.length),
                            this.legendLabels = i.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"),
                            this.ttItems = this.createTTElements(d),
                            this.addSVGEvents()
                    }
                }
            }, {
                key: "createTTElements",
                value: function (n) {
                    for (var i = this, r = this.w, c = [], d = this.getElTooltip(), h = function (m) {
                        var x = document.createElement("div");
                        x.classList.add("apexcharts-tooltip-series-group"),
                            x.style.order = r.config.tooltip.inverseOrder ? n - m : m + 1,
                        i.tConfig.shared && i.tConfig.enabledOnSeries && Array.isArray(i.tConfig.enabledOnSeries) && i.tConfig.enabledOnSeries.indexOf(m) < 0 && x.classList.add("apexcharts-tooltip-series-group-hidden");
                        var S = document.createElement("span");
                        S.classList.add("apexcharts-tooltip-marker"),
                            S.style.backgroundColor = r.globals.colors[m],
                            x.appendChild(S);
                        var _ = document.createElement("div");
                        _.classList.add("apexcharts-tooltip-text"),
                            _.style.fontFamily = i.tConfig.style.fontFamily || r.config.chart.fontFamily,
                            _.style.fontSize = i.tConfig.style.fontSize,
                            ["y", "goals", "z"].forEach(function (k) {
                                var L = document.createElement("div");
                                L.classList.add("apexcharts-tooltip-".concat(k, "-group"));
                                var N = document.createElement("span");
                                N.classList.add("apexcharts-tooltip-text-".concat(k, "-label")),
                                    L.appendChild(N);
                                var H = document.createElement("span");
                                H.classList.add("apexcharts-tooltip-text-".concat(k, "-value")),
                                    L.appendChild(H),
                                    _.appendChild(L)
                            }),
                            x.appendChild(_),
                            d.appendChild(x),
                            c.push(x)
                    }, f = 0; f < n; f++)
                        h(f);
                    return c
                }
            }, {
                key: "addSVGEvents",
                value: function () {
                    var n = this.w
                        , i = n.config.chart.type
                        , r = this.getElTooltip()
                        , c = !(i !== "bar" && i !== "candlestick" && i !== "boxPlot" && i !== "rangeBar")
                        , d = i === "area" || i === "line" || i === "scatter" || i === "bubble" || i === "radar"
                        , h = n.globals.dom.Paper.node
                        , f = this.getElGrid();
                    f && (this.seriesBound = f.getBoundingClientRect());
                    var m, x = [], S = [], _ = {
                        hoverArea: h,
                        elGrid: f,
                        tooltipEl: r,
                        tooltipY: x,
                        tooltipX: S,
                        ttItems: this.ttItems
                    };
                    if (n.globals.axisCharts && (d ? m = n.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : c ? m = n.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area") : i !== "heatmap" && i !== "treemap" || (m = n.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")),
                    m && m.length))
                        for (var k = 0; k < m.length; k++)
                            x.push(m[k].getAttribute("cy")),
                                S.push(m[k].getAttribute("cx"));
                    if (n.globals.xyCharts && !this.showOnIntersect || n.globals.comboCharts && !this.showOnIntersect || c && this.tooltipUtil.hasBars() && this.tConfig.shared)
                        this.addPathsEventListeners([h], _);
                    else if (c && !n.globals.comboCharts || d && this.showOnIntersect)
                        this.addDatapointEventsListeners(_);
                    else if (!n.globals.axisCharts || i === "heatmap" || i === "treemap") {
                        var L = n.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                        this.addPathsEventListeners(L, _)
                    }
                    if (this.showOnIntersect) {
                        var N = n.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");
                        N.length > 0 && this.addPathsEventListeners(N, _),
                        this.tooltipUtil.hasBars() && !this.tConfig.shared && this.addDatapointEventsListeners(_)
                    }
                }
            }, {
                key: "drawFixedTooltipRect",
                value: function () {
                    var n = this.w
                        , i = this.getElTooltip()
                        , r = i.getBoundingClientRect()
                        , c = r.width + 10
                        , d = r.height + 10
                        , h = this.tConfig.fixed.offsetX
                        , f = this.tConfig.fixed.offsetY
                        , m = this.tConfig.fixed.position.toLowerCase();
                    return m.indexOf("right") > -1 && (h = h + n.globals.svgWidth - c + 10),
                    m.indexOf("bottom") > -1 && (f = f + n.globals.svgHeight - d - 10),
                        i.style.left = h + "px",
                        i.style.top = f + "px",
                        {
                            x: h,
                            y: f,
                            ttWidth: c,
                            ttHeight: d
                        }
                }
            }, {
                key: "addDatapointEventsListeners",
                value: function (n) {
                    var i = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");
                    this.addPathsEventListeners(i, n)
                }
            }, {
                key: "addPathsEventListeners",
                value: function (n, i) {
                    for (var r = this, c = function (h) {
                        var f = {
                            paths: n[h],
                            tooltipEl: i.tooltipEl,
                            tooltipY: i.tooltipY,
                            tooltipX: i.tooltipX,
                            elGrid: i.elGrid,
                            hoverArea: i.hoverArea,
                            ttItems: i.ttItems
                        };
                        ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map(function (m) {
                            return n[h].addEventListener(m, r.onSeriesHover.bind(r, f), {
                                capture: !1,
                                passive: !0
                            })
                        })
                    }, d = 0; d < n.length; d++)
                        c(d)
                }
            }, {
                key: "onSeriesHover",
                value: function (n, i) {
                    var r = this
                        , c = Date.now() - this.lastHoverTime;
                    c >= 100 ? this.seriesHover(n, i) : (clearTimeout(this.seriesHoverTimeout),
                        this.seriesHoverTimeout = setTimeout(function () {
                            r.seriesHover(n, i)
                        }, 100 - c))
                }
            }, {
                key: "seriesHover",
                value: function (n, i) {
                    var r = this;
                    this.lastHoverTime = Date.now();
                    var c = []
                        , d = this.w;
                    d.config.chart.group && (c = this.ctx.getGroupedCharts()),
                    d.globals.axisCharts && (d.globals.minX === -1 / 0 && d.globals.maxX === 1 / 0 || d.globals.dataPoints === 0) || (c.length ? c.forEach(function (h) {
                        var f = r.getElTooltip(h)
                            , m = {
                            paths: n.paths,
                            tooltipEl: f,
                            tooltipY: n.tooltipY,
                            tooltipX: n.tooltipX,
                            elGrid: n.elGrid,
                            hoverArea: n.hoverArea,
                            ttItems: h.w.globals.tooltip.ttItems
                        };
                        h.w.globals.minX === r.w.globals.minX && h.w.globals.maxX === r.w.globals.maxX && h.w.globals.tooltip.seriesHoverByContext({
                            chartCtx: h,
                            ttCtx: h.w.globals.tooltip,
                            opt: m,
                            e: i
                        })
                    }) : this.seriesHoverByContext({
                        chartCtx: this.ctx,
                        ttCtx: this.w.globals.tooltip,
                        opt: n,
                        e: i
                    }))
                }
            }, {
                key: "seriesHoverByContext",
                value: function (n) {
                    var i = n.chartCtx
                        , r = n.ttCtx
                        , c = n.opt
                        , d = n.e
                        , h = i.w
                        , f = this.getElTooltip();
                    f && (r.tooltipRect = {
                        x: 0,
                        y: 0,
                        ttWidth: f.getBoundingClientRect().width,
                        ttHeight: f.getBoundingClientRect().height
                    },
                        r.e = d,
                    r.tooltipUtil.hasBars() && !h.globals.comboCharts && !r.isBarShared && this.tConfig.onDatasetHover.highlightDataSeries && new bt(i).toggleSeriesOnHover(d, d.target.parentNode),
                    r.fixedTooltip && r.drawFixedTooltipRect(),
                        h.globals.axisCharts ? r.axisChartsTooltips({
                            e: d,
                            opt: c,
                            tooltipRect: r.tooltipRect
                        }) : r.nonAxisChartsTooltips({
                            e: d,
                            opt: c,
                            tooltipRect: r.tooltipRect
                        }))
                }
            }, {
                key: "axisChartsTooltips",
                value: function (n) {
                    var i, r, c = n.e, d = n.opt, h = this.w, f = d.elGrid.getBoundingClientRect(),
                        m = c.type === "touchmove" ? c.touches[0].clientX : c.clientX,
                        x = c.type === "touchmove" ? c.touches[0].clientY : c.clientY;
                    if (this.clientY = x,
                        this.clientX = m,
                        h.globals.capturedSeriesIndex = -1,
                        h.globals.capturedDataPointIndex = -1,
                    x < f.top || x > f.top + f.height)
                        this.handleMouseOut(d);
                    else {
                        if (Array.isArray(this.tConfig.enabledOnSeries) && !h.config.tooltip.shared) {
                            var S = parseInt(d.paths.getAttribute("index"), 10);
                            if (this.tConfig.enabledOnSeries.indexOf(S) < 0)
                                return void this.handleMouseOut(d)
                        }
                        var _ = this.getElTooltip()
                            , k = this.getElXCrosshairs()
                            ,
                            L = h.globals.xyCharts || h.config.chart.type === "bar" && !h.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || h.globals.comboCharts && this.tooltipUtil.hasBars();
                        if (c.type === "mousemove" || c.type === "touchmove" || c.type === "mouseup") {
                            if (h.globals.collapsedSeries.length + h.globals.ancillaryCollapsedSeries.length === h.globals.series.length)
                                return;
                            k !== null && k.classList.add("apexcharts-active");
                            var N = this.yaxisTooltips.filter(function (q) {
                                return q === !0
                            });
                            if (this.ycrosshairs !== null && N.length && this.ycrosshairs.classList.add("apexcharts-active"),
                            L && !this.showOnIntersect)
                                this.handleStickyTooltip(c, m, x, d);
                            else if (h.config.chart.type === "heatmap" || h.config.chart.type === "treemap") {
                                var H = this.intersect.handleHeatTreeTooltip({
                                    e: c,
                                    opt: d,
                                    x: i,
                                    y: r,
                                    type: h.config.chart.type
                                });
                                i = H.x,
                                    r = H.y,
                                    _.style.left = i + "px",
                                    _.style.top = r + "px"
                            } else
                                this.tooltipUtil.hasBars() && this.intersect.handleBarTooltip({
                                    e: c,
                                    opt: d
                                }),
                                this.tooltipUtil.hasMarkers() && this.intersect.handleMarkerTooltip({
                                    e: c,
                                    opt: d,
                                    x: i,
                                    y: r
                                });
                            if (this.yaxisTooltips.length)
                                for (var z = 0; z < h.config.yaxis.length; z++)
                                    this.axesTooltip.drawYaxisTooltipText(z, x, this.xyRatios);
                            d.tooltipEl.classList.add("apexcharts-active")
                        } else
                            c.type !== "mouseout" && c.type !== "touchend" || this.handleMouseOut(d)
                    }
                }
            }, {
                key: "nonAxisChartsTooltips",
                value: function (n) {
                    var i = n.e
                        , r = n.opt
                        , c = n.tooltipRect
                        , d = this.w
                        , h = r.paths.getAttribute("rel")
                        , f = this.getElTooltip()
                        , m = d.globals.dom.elWrap.getBoundingClientRect();
                    if (i.type === "mousemove" || i.type === "touchmove") {
                        f.classList.add("apexcharts-active"),
                            this.tooltipLabels.drawSeriesTexts({
                                ttItems: r.ttItems,
                                i: parseInt(h, 10) - 1,
                                shared: !1
                            });
                        var x = d.globals.clientX - m.left - c.ttWidth / 2
                            , S = d.globals.clientY - m.top - c.ttHeight - 10;
                        if (f.style.left = x + "px",
                            f.style.top = S + "px",
                            d.config.legend.tooltipHoverFormatter) {
                            var _ = h - 1
                                , k = (0,
                                d.config.legend.tooltipHoverFormatter)(this.legendLabels[_].getAttribute("data:default-text"), {
                                seriesIndex: _,
                                dataPointIndex: _,
                                w: d
                            });
                            this.legendLabels[_].innerHTML = k
                        }
                    } else
                        i.type !== "mouseout" && i.type !== "touchend" || (f.classList.remove("apexcharts-active"),
                        d.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function (L) {
                            var N = L.getAttribute("data:default-text");
                            L.innerHTML = decodeURIComponent(N)
                        }))
                }
            }, {
                key: "handleStickyTooltip",
                value: function (n, i, r, c) {
                    var d = this.w
                        , h = this.tooltipUtil.getNearestValues({
                        context: this,
                        hoverArea: c.hoverArea,
                        elGrid: c.elGrid,
                        clientX: i,
                        clientY: r
                    })
                        , f = h.j
                        , m = h.capturedSeries;
                    d.globals.collapsedSeriesIndices.includes(m) && (m = null);
                    var x = c.elGrid.getBoundingClientRect();
                    if (h.hoverX < 0 || h.hoverX > x.width)
                        this.handleMouseOut(c);
                    else if (m !== null)
                        this.handleStickyCapturedSeries(n, m, c, f);
                    else if (this.tooltipUtil.isXoverlap(f) || d.globals.isBarHorizontal) {
                        var S = d.globals.series.findIndex(function (_, k) {
                            return !d.globals.collapsedSeriesIndices.includes(k)
                        });
                        this.create(n, this, S, f, c.ttItems)
                    }
                }
            }, {
                key: "handleStickyCapturedSeries",
                value: function (n, i, r, c) {
                    var d = this.w;
                    if (!this.tConfig.shared && d.globals.series[i][c] === null)
                        return void this.handleMouseOut(r);
                    if (d.globals.series[i][c] !== void 0)
                        this.tConfig.shared && this.tooltipUtil.isXoverlap(c) && this.tooltipUtil.isInitialSeriesSameLen() ? this.create(n, this, i, c, r.ttItems) : this.create(n, this, i, c, r.ttItems, !1);
                    else if (this.tooltipUtil.isXoverlap(c)) {
                        var h = d.globals.series.findIndex(function (f, m) {
                            return !d.globals.collapsedSeriesIndices.includes(m)
                        });
                        this.create(n, this, h, c, r.ttItems)
                    }
                }
            }, {
                key: "deactivateHoverFilter",
                value: function () {
                    for (var n = this.w, i = new $(this.ctx), r = n.globals.dom.Paper.select(".apexcharts-bar-area"), c = 0; c < r.length; c++)
                        i.pathMouseLeave(r[c])
                }
            }, {
                key: "handleMouseOut",
                value: function (n) {
                    var i = this.w
                        , r = this.getElXCrosshairs();
                    if (n.tooltipEl.classList.remove("apexcharts-active"),
                        this.deactivateHoverFilter(),
                    i.config.chart.type !== "bubble" && this.marker.resetPointsSize(),
                    r !== null && r.classList.remove("apexcharts-active"),
                    this.ycrosshairs !== null && this.ycrosshairs.classList.remove("apexcharts-active"),
                    this.isXAxisTooltipEnabled && this.xaxisTooltip.classList.remove("apexcharts-active"),
                        this.yaxisTooltips.length) {
                        this.yaxisTTEls === null && (this.yaxisTTEls = i.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                        for (var c = 0; c < this.yaxisTTEls.length; c++)
                            this.yaxisTTEls[c].classList.remove("apexcharts-active")
                    }
                    i.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function (d) {
                        var h = d.getAttribute("data:default-text");
                        d.innerHTML = decodeURIComponent(h)
                    })
                }
            }, {
                key: "markerClick",
                value: function (n, i, r) {
                    var c = this.w;
                    typeof c.config.chart.events.markerClick == "function" && c.config.chart.events.markerClick(n, this.ctx, {
                        seriesIndex: i,
                        dataPointIndex: r,
                        w: c
                    }),
                        this.ctx.events.fireEvent("markerClick", [n, this.ctx, {
                            seriesIndex: i,
                            dataPointIndex: r,
                            w: c
                        }])
                }
            }, {
                key: "create",
                value: function (n, i, r, c, d) {
                    var h, f, m, x, S, _, k, L, N, H, z, q, Q, b, E, B,
                        X = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : null, K = this.w, ee = i;
                    n.type === "mouseup" && this.markerClick(n, r, c),
                    X === null && (X = this.tConfig.shared);
                    var pe = this.tooltipUtil.hasMarkers(r)
                        , ge = this.tooltipUtil.getElBars();
                    if (K.config.legend.tooltipHoverFormatter) {
                        var Ie = K.config.legend.tooltipHoverFormatter
                            , $e = Array.from(this.legendLabels);
                        $e.forEach(function (zn) {
                            var nn = zn.getAttribute("data:default-text");
                            zn.innerHTML = decodeURIComponent(nn)
                        });
                        for (var Fe = 0; Fe < $e.length; Fe++) {
                            var Je = $e[Fe]
                                , ut = parseInt(Je.getAttribute("i"), 10)
                                , yt = decodeURIComponent(Je.getAttribute("data:default-text"))
                                , It = Ie(yt, {
                                seriesIndex: X ? ut : r,
                                dataPointIndex: c,
                                w: K
                            });
                            if (X)
                                Je.innerHTML = K.globals.collapsedSeriesIndices.indexOf(ut) < 0 ? It : yt;
                            else if (Je.innerHTML = ut === r ? It : yt,
                            r === ut)
                                break
                        }
                    }
                    var Nt = a(a({
                        ttItems: d,
                        i: r,
                        j: c
                    }, ((h = K.globals.seriesRange) === null || h === void 0 || (f = h[r]) === null || f === void 0 || (m = f[c]) === null || m === void 0 || (x = m.y[0]) === null || x === void 0 ? void 0 : x.y1) !== void 0 && {
                        y1: (S = K.globals.seriesRange) === null || S === void 0 || (_ = S[r]) === null || _ === void 0 || (k = _[c]) === null || k === void 0 || (L = k.y[0]) === null || L === void 0 ? void 0 : L.y1
                    }), ((N = K.globals.seriesRange) === null || N === void 0 || (H = N[r]) === null || H === void 0 || (z = H[c]) === null || z === void 0 || (q = z.y[0]) === null || q === void 0 ? void 0 : q.y2) !== void 0 && {
                        y2: (Q = K.globals.seriesRange) === null || Q === void 0 || (b = Q[r]) === null || b === void 0 || (E = b[c]) === null || E === void 0 || (B = E.y[0]) === null || B === void 0 ? void 0 : B.y2
                    });
                    if (X) {
                        if (ee.tooltipLabels.drawSeriesTexts(a(a({}, Nt), {}, {
                            shared: !this.showOnIntersect && this.tConfig.shared
                        })),
                            pe)
                            K.globals.markers.largestSize > 0 ? ee.marker.enlargePoints(c) : ee.tooltipPosition.moveDynamicPointsOnHover(c);
                        else if (this.tooltipUtil.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(ge),
                        this.barSeriesHeight > 0)) {
                            var Lt = new $(this.ctx)
                                , es = K.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(c, "']"));
                            this.deactivateHoverFilter(),
                                this.tooltipPosition.moveStickyTooltipOverBars(c, r);
                            for (var ps = 0; ps < es.length; ps++)
                                Lt.pathMouseEnter(es[ps])
                        }
                    } else
                        ee.tooltipLabels.drawSeriesTexts(a({
                            shared: !1
                        }, Nt)),
                        this.tooltipUtil.hasBars() && ee.tooltipPosition.moveStickyTooltipOverBars(c, r),
                        pe && ee.tooltipPosition.moveMarkers(r, c)
                }
            }]),
                j
        }()
            , vr = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.barCtx = n,
                    this.totalFormatter = this.w.config.plotOptions.bar.dataLabels.total.formatter,
                this.totalFormatter || (this.totalFormatter = this.w.config.dataLabels.formatter)
            }

            return p(j, [{
                key: "handleBarDataLabels",
                value: function (n) {
                    var i = n.x
                        , r = n.y
                        , c = n.y1
                        , d = n.y2
                        , h = n.i
                        , f = n.j
                        , m = n.realIndex
                        , x = n.groupIndex
                        , S = n.series
                        , _ = n.barHeight
                        , k = n.barWidth
                        , L = n.barXPosition
                        , N = n.barYPosition
                        , H = n.visibleSeries
                        , z = n.renderedPath
                        , q = this.w
                        , Q = new $(this.barCtx.ctx)
                        ,
                        b = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[m] : this.barCtx.strokeWidth
                        , E = i + parseFloat(k * H)
                        , B = r + parseFloat(_ * H);
                    q.globals.isXNumeric && !q.globals.isBarHorizontal && (E = i + parseFloat(k * (H + 1)),
                        B = r + parseFloat(_ * (H + 1)) - b);
                    var X, K = null, ee = i, pe = r, ge = {}, Ie = q.config.dataLabels,
                        $e = this.barCtx.barOptions.dataLabels, Fe = this.barCtx.barOptions.dataLabels.total;
                    N !== void 0 && this.barCtx.isRangeBar && (B = N,
                        pe = N),
                    L !== void 0 && this.barCtx.isVerticalGroupedRangeBar && (E = L,
                        ee = L);
                    var Je = Ie.offsetX
                        , ut = Ie.offsetY
                        , yt = {
                        width: 0,
                        height: 0
                    };
                    if (q.config.dataLabels.enabled) {
                        var It = this.barCtx.series[h][f];
                        yt = Q.getTextRects(q.globals.yLabelFormatters[0](It), parseFloat(Ie.style.fontSize))
                    }
                    var Nt = {
                        x: i,
                        y: r,
                        i: h,
                        j: f,
                        realIndex: m,
                        groupIndex: x || -1,
                        renderedPath: z,
                        bcx: E,
                        bcy: B,
                        barHeight: _,
                        barWidth: k,
                        textRects: yt,
                        strokeWidth: b,
                        dataLabelsX: ee,
                        dataLabelsY: pe,
                        dataLabelsConfig: Ie,
                        barDataLabelsConfig: $e,
                        barTotalDataLabelsConfig: Fe,
                        offX: Je,
                        offY: ut
                    };
                    return ge = this.barCtx.isHorizontal ? this.calculateBarsDataLabelsPosition(Nt) : this.calculateColumnsDataLabelsPosition(Nt),
                        z.attr({
                            cy: ge.bcy,
                            cx: ge.bcx,
                            j: f,
                            val: S[h][f],
                            barHeight: _,
                            barWidth: k
                        }),
                        X = this.drawCalculatedDataLabels({
                            x: ge.dataLabelsX,
                            y: ge.dataLabelsY,
                            val: this.barCtx.isRangeBar ? [c, d] : S[h][f],
                            i: m,
                            j: f,
                            barWidth: k,
                            barHeight: _,
                            textRects: yt,
                            dataLabelsConfig: Ie
                        }),
                    q.config.chart.stacked && Fe.enabled && (K = this.drawTotalDataLabels({
                        x: ge.totalDataLabelsX,
                        y: ge.totalDataLabelsY,
                        barWidth: k,
                        barHeight: _,
                        realIndex: m,
                        textAnchor: ge.totalDataLabelsAnchor,
                        val: this.getStackedTotalDataLabel({
                            realIndex: m,
                            j: f
                        }),
                        dataLabelsConfig: Ie,
                        barTotalDataLabelsConfig: Fe
                    })),
                        {
                            dataLabels: X,
                            totalDataLabels: K
                        }
                }
            }, {
                key: "getStackedTotalDataLabel",
                value: function (n) {
                    var i = n.realIndex
                        , r = n.j
                        , c = this.w
                        , d = this.barCtx.stackedSeriesTotals[r];
                    return this.totalFormatter && (d = this.totalFormatter(d, a(a({}, c), {}, {
                        seriesIndex: i,
                        dataPointIndex: r,
                        w: c
                    }))),
                        d
                }
            }, {
                key: "calculateColumnsDataLabelsPosition",
                value: function (n) {
                    var i, r, c = this.w, d = n.i, h = n.j, f = n.realIndex, m = n.groupIndex, x = n.y, S = n.bcx,
                        _ = n.barWidth, k = n.barHeight, L = n.textRects, N = n.dataLabelsX, H = n.dataLabelsY,
                        z = n.dataLabelsConfig, q = n.barDataLabelsConfig, Q = n.barTotalDataLabelsConfig,
                        b = n.strokeWidth, E = n.offX, B = n.offY;
                    k = Math.abs(k);
                    var X = c.config.plotOptions.bar.dataLabels.orientation === "vertical"
                        , K = this.barCtx.barHelpers.getZeroValueEncounters({
                        i: d,
                        j: h
                    }).zeroEncounters;
                    S = S - b / 2 + (m !== -1 ? m * _ : 0);
                    var ee = c.globals.gridWidth / c.globals.dataPoints;
                    this.barCtx.isVerticalGroupedRangeBar ? N += _ / 2 : (N = c.globals.isXNumeric ? S - _ / 2 + E : S - ee + _ / 2 + E,
                    K > 0 && c.config.plotOptions.bar.hideZeroBarsWhenGrouped && (N -= _ * K)),
                    X && (N = N + L.height / 2 - b / 2 - 2);
                    var pe = this.barCtx.series[d][h] < 0
                        , ge = x;
                    switch (this.barCtx.isReversed && (ge = x - k + (pe ? 2 * k : 0),
                        x -= k),
                        q.position) {
                        case "center":
                            H = X ? pe ? ge - k / 2 + B : ge + k / 2 - B : pe ? ge - k / 2 + L.height / 2 + B : ge + k / 2 + L.height / 2 - B;
                            break;
                        case "bottom":
                            H = X ? pe ? ge - k + B : ge + k - B : pe ? ge - k + L.height + b + B : ge + k - L.height / 2 + b - B;
                            break;
                        case "top":
                            H = X ? pe ? ge + B : ge - B : pe ? ge - L.height / 2 - B : ge + L.height + B
                    }
                    if (this.barCtx.lastActiveBarSerieIndex === f && Q.enabled) {
                        var Ie = new $(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({
                            realIndex: f,
                            j: h
                        }), z.fontSize);
                        i = pe ? ge - Ie.height / 2 - B - Q.offsetY + 18 : ge + Ie.height + B + Q.offsetY - 18,
                            r = N + Q.offsetX
                    }
                    return c.config.chart.stacked || (H < 0 ? H = 0 + b : H + L.height / 3 > c.globals.gridHeight && (H = c.globals.gridHeight - b)),
                        {
                            bcx: S,
                            bcy: x,
                            dataLabelsX: N,
                            dataLabelsY: H,
                            totalDataLabelsX: r,
                            totalDataLabelsY: i,
                            totalDataLabelsAnchor: "middle"
                        }
                }
            }, {
                key: "calculateBarsDataLabelsPosition",
                value: function (n) {
                    var i = this.w
                        , r = n.x
                        , c = n.i
                        , d = n.j
                        , h = n.realIndex
                        , f = n.groupIndex
                        , m = n.bcy
                        , x = n.barHeight
                        , S = n.barWidth
                        , _ = n.textRects
                        , k = n.dataLabelsX
                        , L = n.strokeWidth
                        , N = n.dataLabelsConfig
                        , H = n.barDataLabelsConfig
                        , z = n.barTotalDataLabelsConfig
                        , q = n.offX
                        , Q = n.offY
                        , b = i.globals.gridHeight / i.globals.dataPoints;
                    S = Math.abs(S);
                    var E, B,
                        X = (m += f !== -1 ? f * x : 0) - (this.barCtx.isRangeBar ? 0 : b) + x / 2 + _.height / 2 + Q - 3,
                        K = "start", ee = this.barCtx.series[c][d] < 0, pe = r;
                    switch (this.barCtx.isReversed && (pe = r + S - (ee ? 2 * S : 0),
                        r = i.globals.gridWidth - S),
                        H.position) {
                        case "center":
                            k = ee ? pe + S / 2 - q : Math.max(_.width / 2, pe - S / 2) + q;
                            break;
                        case "bottom":
                            k = ee ? pe + S - L - Math.round(_.width / 2) - q : pe - S + L + Math.round(_.width / 2) + q;
                            break;
                        case "top":
                            k = ee ? pe - L + Math.round(_.width / 2) - q : pe - L - Math.round(_.width / 2) + q
                    }
                    if (this.barCtx.lastActiveBarSerieIndex === h && z.enabled) {
                        var ge = new $(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({
                            realIndex: h,
                            j: d
                        }), N.fontSize);
                        ee ? (E = pe - L + Math.round(ge.width / 2) - q - z.offsetX - 15,
                            K = "end") : E = pe - L - Math.round(ge.width / 2) + q + z.offsetX + 15,
                            B = X + z.offsetY
                    }
                    return i.config.chart.stacked || (k < 0 ? k = k + _.width + L : k + _.width / 2 > i.globals.gridWidth && (k = i.globals.gridWidth - _.width - L)),
                        {
                            bcx: r,
                            bcy: m,
                            dataLabelsX: k,
                            dataLabelsY: X,
                            totalDataLabelsX: E,
                            totalDataLabelsY: B,
                            totalDataLabelsAnchor: K
                        }
                }
            }, {
                key: "drawCalculatedDataLabels",
                value: function (n) {
                    var i = n.x
                        , r = n.y
                        , c = n.val
                        , d = n.i
                        , h = n.j
                        , f = n.textRects
                        , m = n.barHeight
                        , x = n.barWidth
                        , S = n.dataLabelsConfig
                        , _ = this.w
                        , k = "rotate(0)";
                    _.config.plotOptions.bar.dataLabels.orientation === "vertical" && (k = "rotate(-90, ".concat(i, ", ").concat(r, ")"));
                    var L = new mt(this.barCtx.ctx)
                        , N = new $(this.barCtx.ctx)
                        , H = S.formatter
                        , z = null
                        , q = _.globals.collapsedSeriesIndices.indexOf(d) > -1;
                    if (S.enabled && !q) {
                        z = N.group({
                            class: "apexcharts-data-labels",
                            transform: k
                        });
                        var Q = "";
                        c !== void 0 && (Q = H(c, a(a({}, _), {}, {
                            seriesIndex: d,
                            dataPointIndex: h,
                            w: _
                        }))),
                        !c && _.config.plotOptions.bar.hideZeroBarsWhenGrouped && (Q = "");
                        var b = _.globals.series[d][h] < 0
                            , E = _.config.plotOptions.bar.dataLabels.position;
                        _.config.plotOptions.bar.dataLabels.orientation === "vertical" && (E === "top" && (S.textAnchor = b ? "end" : "start"),
                        E === "center" && (S.textAnchor = "middle"),
                        E === "bottom" && (S.textAnchor = b ? "end" : "start")),
                        this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && x < N.getTextRects(Q, parseFloat(S.style.fontSize)).width && (Q = ""),
                        _.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && (this.barCtx.isHorizontal ? f.width / 1.6 > Math.abs(x) && (Q = "") : f.height / 1.6 > Math.abs(m) && (Q = ""));
                        var B = a({}, S);
                        this.barCtx.isHorizontal && c < 0 && (S.textAnchor === "start" ? B.textAnchor = "end" : S.textAnchor === "end" && (B.textAnchor = "start")),
                            L.plotDataLabelsText({
                                x: i,
                                y: r,
                                text: Q,
                                i: d,
                                j: h,
                                parent: z,
                                dataLabelsConfig: B,
                                alwaysDrawDataLabel: !0,
                                offsetCorrection: !0
                            })
                    }
                    return z
                }
            }, {
                key: "drawTotalDataLabels",
                value: function (n) {
                    var i, r = n.x, c = n.y, d = n.val, h = n.barWidth, f = n.barHeight, m = n.realIndex,
                        x = n.textAnchor, S = n.barTotalDataLabelsConfig, _ = this.w, k = new $(this.barCtx.ctx);
                    return S.enabled && r !== void 0 && c !== void 0 && this.barCtx.lastActiveBarSerieIndex === m && (i = k.drawText({
                        x: r - (!_.globals.isBarHorizontal && _.globals.seriesGroups.length ? h / _.globals.seriesGroups.length : 0),
                        y: c - (_.globals.isBarHorizontal && _.globals.seriesGroups.length ? f / _.globals.seriesGroups.length : 0),
                        foreColor: S.style.color,
                        text: d,
                        textAnchor: x,
                        fontFamily: S.style.fontFamily,
                        fontSize: S.style.fontSize,
                        fontWeight: S.style.fontWeight
                    })),
                        i
                }
            }]),
                j
        }()
            , Cd = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.barCtx = n
            }

            return p(j, [{
                key: "initVariables",
                value: function (n) {
                    var i = this.w;
                    this.barCtx.series = n,
                        this.barCtx.totalItems = 0,
                        this.barCtx.seriesLen = 0,
                        this.barCtx.visibleI = -1,
                        this.barCtx.visibleItems = 1;
                    for (var r = 0; r < n.length; r++)
                        if (n[r].length > 0 && (this.barCtx.seriesLen = this.barCtx.seriesLen + 1,
                            this.barCtx.totalItems += n[r].length),
                            i.globals.isXNumeric)
                            for (var c = 0; c < n[r].length; c++)
                                i.globals.seriesX[r][c] > i.globals.minX && i.globals.seriesX[r][c] < i.globals.maxX && this.barCtx.visibleItems++;
                        else
                            this.barCtx.visibleItems = i.globals.dataPoints;
                    this.barCtx.seriesLen === 0 && (this.barCtx.seriesLen = 1),
                        this.barCtx.zeroSerieses = [],
                    i.globals.comboCharts || this.checkZeroSeries({
                        series: n
                    })
                }
            }, {
                key: "initialPositions",
                value: function () {
                    var n, i, r, c, d, h, f, m, x = this.w, S = x.globals.dataPoints;
                    this.barCtx.isRangeBar && (S = x.globals.labels.length);
                    var _ = this.barCtx.seriesLen;
                    if (x.config.plotOptions.bar.rangeBarGroupRows && (_ = 1),
                        this.barCtx.isHorizontal)
                        d = (r = x.globals.gridHeight / S) / _,
                        x.globals.isXNumeric && (d = (r = x.globals.gridHeight / this.barCtx.totalItems) / this.barCtx.seriesLen),
                            d = d * parseInt(this.barCtx.barOptions.barHeight, 10) / 100,
                        String(this.barCtx.barOptions.barHeight).indexOf("%") === -1 && (d = parseInt(this.barCtx.barOptions.barHeight, 10)),
                            m = this.barCtx.baseLineInvertedY + x.globals.padHorizontal + (this.barCtx.isReversed ? x.globals.gridWidth : 0) - (this.barCtx.isReversed ? 2 * this.barCtx.baseLineInvertedY : 0),
                        this.barCtx.isFunnel && (m = x.globals.gridWidth / 2),
                            i = (r - d * this.barCtx.seriesLen) / 2;
                    else {
                        if (c = x.globals.gridWidth / this.barCtx.visibleItems,
                        x.config.xaxis.convertedCatToNumeric && (c = x.globals.gridWidth / x.globals.dataPoints),
                            h = c / _ * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100,
                            x.globals.isXNumeric) {
                            var k = this.barCtx.xRatio;
                            x.globals.minXDiff && x.globals.minXDiff !== .5 && x.globals.minXDiff / k > 0 && (c = x.globals.minXDiff / k),
                            (h = c / _ * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100) < 1 && (h = 1)
                        }
                        String(this.barCtx.barOptions.columnWidth).indexOf("%") === -1 && (h = parseInt(this.barCtx.barOptions.columnWidth, 10)),
                            f = x.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? x.globals.gridHeight : 0) + (this.barCtx.isReversed ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex] : 0),
                            n = x.globals.padHorizontal + (c - h * this.barCtx.seriesLen) / 2
                    }
                    return x.globals.barHeight = d,
                        x.globals.barWidth = h,
                        {
                            x: n,
                            y: i,
                            yDivision: r,
                            xDivision: c,
                            barHeight: d,
                            barWidth: h,
                            zeroH: f,
                            zeroW: m
                        }
                }
            }, {
                key: "initializeStackedPrevVars",
                value: function (n) {
                    var i = n.w;
                    i.globals.hasSeriesGroups ? i.globals.seriesGroups.forEach(function (r) {
                        n[r] || (n[r] = {}),
                            n[r].prevY = [],
                            n[r].prevX = [],
                            n[r].prevYF = [],
                            n[r].prevXF = [],
                            n[r].prevYVal = [],
                            n[r].prevXVal = []
                    }) : (n.prevY = [],
                        n.prevX = [],
                        n.prevYF = [],
                        n.prevXF = [],
                        n.prevYVal = [],
                        n.prevXVal = [])
                }
            }, {
                key: "initializeStackedXYVars",
                value: function (n) {
                    var i = n.w;
                    i.globals.hasSeriesGroups ? i.globals.seriesGroups.forEach(function (r) {
                        n[r] || (n[r] = {}),
                            n[r].xArrj = [],
                            n[r].xArrjF = [],
                            n[r].xArrjVal = [],
                            n[r].yArrj = [],
                            n[r].yArrjF = [],
                            n[r].yArrjVal = []
                    }) : (n.xArrj = [],
                        n.xArrjF = [],
                        n.xArrjVal = [],
                        n.yArrj = [],
                        n.yArrjF = [],
                        n.yArrjVal = [])
                }
            }, {
                key: "getPathFillColor",
                value: function (n, i, r, c) {
                    var d, h, f, m, x = this.w, S = new je(this.barCtx.ctx), _ = null,
                        k = this.barCtx.barOptions.distributed ? r : i;
                    return this.barCtx.barOptions.colors.ranges.length > 0 && this.barCtx.barOptions.colors.ranges.map(function (L) {
                        n[i][r] >= L.from && n[i][r] <= L.to && (_ = L.color)
                    }),
                    x.config.series[i].data[r] && x.config.series[i].data[r].fillColor && (_ = x.config.series[i].data[r].fillColor),
                        S.fillPath({
                            seriesNumber: this.barCtx.barOptions.distributed ? k : c,
                            dataPointIndex: r,
                            color: _,
                            value: n[i][r],
                            fillConfig: (d = x.config.series[i].data[r]) === null || d === void 0 ? void 0 : d.fill,
                            fillType: (h = x.config.series[i].data[r]) !== null && h !== void 0 && (f = h.fill) !== null && f !== void 0 && f.type ? (m = x.config.series[i].data[r]) === null || m === void 0 ? void 0 : m.fill.type : Array.isArray(x.config.fill.type) ? x.config.fill.type[i] : x.config.fill.type
                        })
                }
            }, {
                key: "getStrokeWidth",
                value: function (n, i, r) {
                    var c = 0
                        , d = this.w;
                    return this.barCtx.series[n][i] === void 0 || this.barCtx.series[n][i] === null ? this.barCtx.isNullValue = !0 : this.barCtx.isNullValue = !1,
                    d.config.stroke.show && (this.barCtx.isNullValue || (c = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[r] : this.barCtx.strokeWidth)),
                        c
                }
            }, {
                key: "shouldApplyRadius",
                value: function (n) {
                    var i = this.w
                        , r = !1;
                    return i.config.plotOptions.bar.borderRadius > 0 && (i.config.chart.stacked && i.config.plotOptions.bar.borderRadiusWhenStacked === "last" ? this.barCtx.lastActiveBarSerieIndex === n && (r = !0) : r = !0),
                        r
                }
            }, {
                key: "barBackground",
                value: function (n) {
                    var i = n.j
                        , r = n.i
                        , c = n.x1
                        , d = n.x2
                        , h = n.y1
                        , f = n.y2
                        , m = n.elSeries
                        , x = this.w
                        , S = new $(this.barCtx.ctx)
                        , _ = new bt(this.barCtx.ctx).getActiveConfigSeriesIndex();
                    if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && _ === r) {
                        i >= this.barCtx.barOptions.colors.backgroundBarColors.length && (i %= this.barCtx.barOptions.colors.backgroundBarColors.length);
                        var k = this.barCtx.barOptions.colors.backgroundBarColors[i]
                            ,
                            L = S.drawRect(c !== void 0 ? c : 0, h !== void 0 ? h : 0, d !== void 0 ? d : x.globals.gridWidth, f !== void 0 ? f : x.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, k, this.barCtx.barOptions.colors.backgroundBarOpacity);
                        m.add(L),
                            L.node.classList.add("apexcharts-backgroundBar")
                    }
                }
            }, {
                key: "getColumnPaths",
                value: function (n) {
                    var i, r = n.barWidth, c = n.barXPosition, d = n.y1, h = n.y2, f = n.strokeWidth, m = n.seriesGroup,
                        x = n.realIndex, S = n.i, _ = n.j, k = n.w, L = new $(this.barCtx.ctx);
                    (f = Array.isArray(f) ? f[x] : f) || (f = 0);
                    var N = r
                        , H = c;
                    (i = k.config.series[x].data[_]) !== null && i !== void 0 && i.columnWidthOffset && (H = c - k.config.series[x].data[_].columnWidthOffset / 2,
                        N = r + k.config.series[x].data[_].columnWidthOffset);
                    var z = H
                        , q = H + N;
                    d += .001,
                        h += .001;
                    var Q = L.move(z, d)
                        , b = L.move(z, d)
                        , E = L.line(q - f, d);
                    if (k.globals.previousPaths.length > 0 && (b = this.barCtx.getPreviousPath(x, _, !1)),
                        Q = Q + L.line(z, h) + L.line(q - f, h) + L.line(q - f, d) + (k.config.plotOptions.bar.borderRadiusApplication === "around" ? " Z" : " z"),
                        b = b + L.line(z, d) + E + E + E + E + E + L.line(z, d) + (k.config.plotOptions.bar.borderRadiusApplication === "around" ? " Z" : " z"),
                    this.shouldApplyRadius(x) && (Q = L.roundPathCorners(Q, k.config.plotOptions.bar.borderRadius)),
                        k.config.chart.stacked) {
                        var B = this.barCtx;
                        k.globals.hasSeriesGroups && m && (B = this.barCtx[m]),
                            B.yArrj.push(h),
                            B.yArrjF.push(Math.abs(d - h)),
                            B.yArrjVal.push(this.barCtx.series[S][_])
                    }
                    return {
                        pathTo: Q,
                        pathFrom: b
                    }
                }
            }, {
                key: "getBarpaths",
                value: function (n) {
                    var i, r = n.barYPosition, c = n.barHeight, d = n.x1, h = n.x2, f = n.strokeWidth,
                        m = n.seriesGroup, x = n.realIndex, S = n.i, _ = n.j, k = n.w, L = new $(this.barCtx.ctx);
                    (f = Array.isArray(f) ? f[x] : f) || (f = 0);
                    var N = r
                        , H = c;
                    (i = k.config.series[x].data[_]) !== null && i !== void 0 && i.barHeightOffset && (N = r - k.config.series[x].data[_].barHeightOffset / 2,
                        H = c + k.config.series[x].data[_].barHeightOffset);
                    var z = N
                        , q = N + H;
                    d += .001,
                        h += .001;
                    var Q = L.move(d, z)
                        , b = L.move(d, z);
                    k.globals.previousPaths.length > 0 && (b = this.barCtx.getPreviousPath(x, _, !1));
                    var E = L.line(d, q - f);
                    if (Q = Q + L.line(h, z) + L.line(h, q - f) + E + (k.config.plotOptions.bar.borderRadiusApplication === "around" ? " Z" : " z"),
                        b = b + L.line(d, z) + E + E + E + E + E + L.line(d, z) + (k.config.plotOptions.bar.borderRadiusApplication === "around" ? " Z" : " z"),
                    this.shouldApplyRadius(x) && (Q = L.roundPathCorners(Q, k.config.plotOptions.bar.borderRadius)),
                        k.config.chart.stacked) {
                        var B = this.barCtx;
                        k.globals.hasSeriesGroups && m && (B = this.barCtx[m]),
                            B.xArrj.push(h),
                            B.xArrjF.push(Math.abs(d - h)),
                            B.xArrjVal.push(this.barCtx.series[S][_])
                    }
                    return {
                        pathTo: Q,
                        pathFrom: b
                    }
                }
            }, {
                key: "checkZeroSeries",
                value: function (n) {
                    for (var i = n.series, r = this.w, c = 0; c < i.length; c++) {
                        for (var d = 0, h = 0; h < i[r.globals.maxValsInArrayIndex].length; h++)
                            d += i[c][h];
                        d === 0 && this.barCtx.zeroSerieses.push(c)
                    }
                }
            }, {
                key: "getXForValue",
                value: function (n, i) {
                    var r = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2] ? i : null;
                    return n != null && (r = i + n / this.barCtx.invertedYRatio - 2 * (this.barCtx.isReversed ? n / this.barCtx.invertedYRatio : 0)),
                        r
                }
            }, {
                key: "getYForValue",
                value: function (n, i) {
                    var r = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2] ? i : null;
                    return n != null && (r = i - n / this.barCtx.yRatio[this.barCtx.yaxisIndex] + 2 * (this.barCtx.isReversed ? n / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0)),
                        r
                }
            }, {
                key: "getGoalValues",
                value: function (n, i, r, c, d) {
                    var h = this
                        , f = this.w
                        , m = []
                        , x = function (k, L) {
                        var N;
                        m.push((g(N = {}, n, n === "x" ? h.getXForValue(k, i, !1) : h.getYForValue(k, r, !1)),
                            g(N, "attrs", L),
                            N))
                    };
                    if (f.globals.seriesGoals[c] && f.globals.seriesGoals[c][d] && Array.isArray(f.globals.seriesGoals[c][d]) && f.globals.seriesGoals[c][d].forEach(function (k) {
                        x(k.value, k)
                    }),
                    this.barCtx.barOptions.isDumbbell && f.globals.seriesRange.length) {
                        var S = this.barCtx.barOptions.dumbbellColors ? this.barCtx.barOptions.dumbbellColors : f.globals.colors
                            , _ = {
                            strokeHeight: n === "x" ? 0 : f.globals.markers.size[c],
                            strokeWidth: n === "x" ? f.globals.markers.size[c] : 0,
                            strokeDashArray: 0,
                            strokeLineCap: "round",
                            strokeColor: Array.isArray(S[c]) ? S[c][0] : S[c]
                        };
                        x(f.globals.seriesRangeStart[c][d], _),
                            x(f.globals.seriesRangeEnd[c][d], a(a({}, _), {}, {
                                strokeColor: Array.isArray(S[c]) ? S[c][1] : S[c]
                            }))
                    }
                    return m
                }
            }, {
                key: "drawGoalLine",
                value: function (n) {
                    var i = n.barXPosition
                        , r = n.barYPosition
                        , c = n.goalX
                        , d = n.goalY
                        , h = n.barWidth
                        , f = n.barHeight
                        , m = new $(this.barCtx.ctx)
                        , x = m.group({
                        className: "apexcharts-bar-goals-groups"
                    });
                    x.node.classList.add("apexcharts-element-hidden"),
                        this.barCtx.w.globals.delayedElements.push({
                            el: x.node
                        }),
                        x.attr("clip-path", "url(#gridRectMarkerMask".concat(this.barCtx.w.globals.cuid, ")"));
                    var S = null;
                    return this.barCtx.isHorizontal ? Array.isArray(c) && c.forEach(function (_) {
                        var k = _.attrs.strokeHeight !== void 0 ? _.attrs.strokeHeight : f / 2
                            , L = r + k + f / 2;
                        S = m.drawLine(_.x, L - 2 * k, _.x, L, _.attrs.strokeColor ? _.attrs.strokeColor : void 0, _.attrs.strokeDashArray, _.attrs.strokeWidth ? _.attrs.strokeWidth : 2, _.attrs.strokeLineCap),
                            x.add(S)
                    }) : Array.isArray(d) && d.forEach(function (_) {
                        var k = _.attrs.strokeWidth !== void 0 ? _.attrs.strokeWidth : h / 2
                            , L = i + k + h / 2;
                        S = m.drawLine(L - 2 * k, _.y, L, _.y, _.attrs.strokeColor ? _.attrs.strokeColor : void 0, _.attrs.strokeDashArray, _.attrs.strokeHeight ? _.attrs.strokeHeight : 2, _.attrs.strokeLineCap),
                            x.add(S)
                    }),
                        x
                }
            }, {
                key: "drawBarShadow",
                value: function (n) {
                    var i = n.prevPaths
                        , r = n.currPaths
                        , c = n.color
                        , d = this.w
                        , h = i.x
                        , f = i.x1
                        , m = i.barYPosition
                        , x = r.x
                        , S = r.x1
                        , _ = r.barYPosition
                        , k = m + r.barHeight
                        , L = new $(this.barCtx.ctx)
                        , N = new M
                        ,
                        H = L.move(f, k) + L.line(h, k) + L.line(x, _) + L.line(S, _) + L.line(f, k) + (d.config.plotOptions.bar.borderRadiusApplication === "around" ? " Z" : " z");
                    return L.drawPath({
                        d: H,
                        fill: N.shadeColor(.5, M.rgb2hex(c)),
                        stroke: "none",
                        strokeWidth: 0,
                        fillOpacity: 1,
                        classes: "apexcharts-bar-shadows"
                    })
                }
            }, {
                key: "getZeroValueEncounters",
                value: function (n) {
                    var i = n.i
                        , r = n.j
                        , c = this.w
                        , d = 0
                        , h = 0;
                    return c.globals.seriesPercent.forEach(function (f, m) {
                        f[r] && d++,
                        m < i && f[r] === 0 && h++
                    }),
                        {
                            nonZeroColumns: d,
                            zeroEncounters: h
                        }
                }
            }]),
                j
        }()
            , sa = function () {
            function j(n, i) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w;
                var r = this.w;
                this.barOptions = r.config.plotOptions.bar,
                    this.isHorizontal = this.barOptions.horizontal,
                    this.strokeWidth = r.config.stroke.width,
                    this.isNullValue = !1,
                    this.isRangeBar = r.globals.seriesRange.length && this.isHorizontal,
                    this.isVerticalGroupedRangeBar = !r.globals.isBarHorizontal && r.globals.seriesRange.length && r.config.plotOptions.bar.rangeBarGroupRows,
                    this.isFunnel = this.barOptions.isFunnel,
                    this.xyRatios = i,
                this.xyRatios !== null && (this.xRatio = i.xRatio,
                    this.yRatio = i.yRatio,
                    this.invertedXRatio = i.invertedXRatio,
                    this.invertedYRatio = i.invertedYRatio,
                    this.baseLineY = i.baseLineY,
                    this.baseLineInvertedY = i.baseLineInvertedY),
                    this.yaxisIndex = 0,
                    this.seriesLen = 0,
                    this.pathArr = [];
                var c = new bt(this.ctx);
                this.lastActiveBarSerieIndex = c.getActiveConfigSeriesIndex("desc", ["bar", "column"]);
                var d = c.getBarSeriesIndices()
                    , h = new V(this.ctx);
                this.stackedSeriesTotals = h.getStackedSeriesTotals(this.w.config.series.map(function (f, m) {
                    return d.indexOf(m) === -1 ? m : -1
                }).filter(function (f) {
                    return f !== -1
                })),
                    this.barHelpers = new Cd(this)
            }

            return p(j, [{
                key: "draw",
                value: function (n, i) {
                    var r = this.w
                        , c = new $(this.ctx)
                        , d = new V(this.ctx, r);
                    n = d.getLogSeries(n),
                        this.series = n,
                        this.yRatio = d.getLogYRatios(this.yRatio),
                        this.barHelpers.initVariables(n);
                    var h = c.group({
                        class: "apexcharts-bar-series apexcharts-plot-series"
                    });
                    r.config.dataLabels.enabled && this.totalItems > this.barOptions.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts");
                    for (var f = 0, m = 0; f < n.length; f++,
                        m++) {
                        var x, S, _, k, L = void 0, N = void 0, H = [], z = [], q = r.globals.comboCharts ? i[f] : f,
                            Q = c.group({
                                class: "apexcharts-series",
                                rel: f + 1,
                                seriesName: M.escapeString(r.globals.seriesNames[q]),
                                "data:realIndex": q
                            });
                        this.ctx.series.addCollapsedClassToSeries(Q, q),
                        n[f].length > 0 && (this.visibleI = this.visibleI + 1);
                        var b = 0
                            , E = 0;
                        this.yRatio.length > 1 && (this.yaxisIndex = q),
                            this.isReversed = r.config.yaxis[this.yaxisIndex] && r.config.yaxis[this.yaxisIndex].reversed;
                        var B = this.barHelpers.initialPositions();
                        N = B.y,
                            b = B.barHeight,
                            S = B.yDivision,
                            k = B.zeroW,
                            L = B.x,
                            E = B.barWidth,
                            x = B.xDivision,
                            _ = B.zeroH,
                        this.horizontal || z.push(L + E / 2);
                        var X = c.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": q
                        });
                        r.globals.delayedElements.push({
                            el: X.node
                        }),
                            X.node.classList.add("apexcharts-element-hidden");
                        var K = c.group({
                            class: "apexcharts-bar-goals-markers"
                        })
                            , ee = c.group({
                            class: "apexcharts-bar-shadows"
                        });
                        r.globals.delayedElements.push({
                            el: ee.node
                        }),
                            ee.node.classList.add("apexcharts-element-hidden");
                        for (var pe = 0; pe < r.globals.dataPoints; pe++) {
                            var ge = this.barHelpers.getStrokeWidth(f, pe, q)
                                , Ie = null
                                , $e = {
                                indexes: {
                                    i: f,
                                    j: pe,
                                    realIndex: q,
                                    bc: m
                                },
                                x: L,
                                y: N,
                                strokeWidth: ge,
                                elSeries: Q
                            };
                            this.isHorizontal ? (Ie = this.drawBarPaths(a(a({}, $e), {}, {
                                barHeight: b,
                                zeroW: k,
                                yDivision: S
                            })),
                                E = this.series[f][pe] / this.invertedYRatio) : (Ie = this.drawColumnPaths(a(a({}, $e), {}, {
                                xDivision: x,
                                barWidth: E,
                                zeroH: _
                            })),
                                b = this.series[f][pe] / this.yRatio[this.yaxisIndex]);
                            var Fe = this.barHelpers.getPathFillColor(n, f, pe, q);
                            if (this.isFunnel && this.barOptions.isFunnel3d && this.pathArr.length && pe > 0) {
                                var Je = this.barHelpers.drawBarShadow({
                                    color: typeof Fe == "string" && (Fe == null ? void 0 : Fe.indexOf("url")) === -1 ? Fe : M.hexToRgba(r.globals.colors[f]),
                                    prevPaths: this.pathArr[this.pathArr.length - 1],
                                    currPaths: Ie
                                });
                                Je && ee.add(Je)
                            }
                            this.pathArr.push(Ie);
                            var ut = this.barHelpers.drawGoalLine({
                                barXPosition: Ie.barXPosition,
                                barYPosition: Ie.barYPosition,
                                goalX: Ie.goalX,
                                goalY: Ie.goalY,
                                barHeight: b,
                                barWidth: E
                            });
                            ut && K.add(ut),
                                N = Ie.y,
                                L = Ie.x,
                            pe > 0 && z.push(L + E / 2),
                                H.push(N),
                                this.renderSeries({
                                    realIndex: q,
                                    pathFill: Fe,
                                    j: pe,
                                    i: f,
                                    pathFrom: Ie.pathFrom,
                                    pathTo: Ie.pathTo,
                                    strokeWidth: ge,
                                    elSeries: Q,
                                    x: L,
                                    y: N,
                                    series: n,
                                    barHeight: Ie.barHeight ? Ie.barHeight : b,
                                    barWidth: Ie.barWidth ? Ie.barWidth : E,
                                    elDataLabelsWrap: X,
                                    elGoalsMarkers: K,
                                    elBarShadows: ee,
                                    visibleSeries: this.visibleI,
                                    type: "bar"
                                })
                        }
                        r.globals.seriesXvalues[q] = z,
                            r.globals.seriesYvalues[q] = H,
                            h.add(Q)
                    }
                    return h
                }
            }, {
                key: "renderSeries",
                value: function (n) {
                    var i = n.realIndex
                        , r = n.pathFill
                        , c = n.lineFill
                        , d = n.j
                        , h = n.i
                        , f = n.groupIndex
                        , m = n.pathFrom
                        , x = n.pathTo
                        , S = n.strokeWidth
                        , _ = n.elSeries
                        , k = n.x
                        , L = n.y
                        , N = n.y1
                        , H = n.y2
                        , z = n.series
                        , q = n.barHeight
                        , Q = n.barWidth
                        , b = n.barXPosition
                        , E = n.barYPosition
                        , B = n.elDataLabelsWrap
                        , X = n.elGoalsMarkers
                        , K = n.elBarShadows
                        , ee = n.visibleSeries
                        , pe = n.type
                        , ge = this.w
                        , Ie = new $(this.ctx);
                    c || (c = this.barOptions.distributed ? ge.globals.stroke.colors[d] : ge.globals.stroke.colors[i]),
                    ge.config.series[h].data[d] && ge.config.series[h].data[d].strokeColor && (c = ge.config.series[h].data[d].strokeColor),
                    this.isNullValue && (r = "none");
                    var $e = d / ge.config.chart.animations.animateGradually.delay * (ge.config.chart.animations.speed / ge.globals.dataPoints) / 2.4
                        , Fe = Ie.renderPaths({
                        i: h,
                        j: d,
                        realIndex: i,
                        pathFrom: m,
                        pathTo: x,
                        stroke: c,
                        strokeWidth: S,
                        strokeLineCap: ge.config.stroke.lineCap,
                        fill: r,
                        animationDelay: $e,
                        initialSpeed: ge.config.chart.animations.speed,
                        dataChangeSpeed: ge.config.chart.animations.dynamicAnimation.speed,
                        className: "apexcharts-".concat(pe, "-area")
                    });
                    Fe.attr("clip-path", "url(#gridRectMask".concat(ge.globals.cuid, ")"));
                    var Je = ge.config.forecastDataPoints;
                    Je.count > 0 && d >= ge.globals.dataPoints - Je.count && (Fe.node.setAttribute("stroke-dasharray", Je.dashArray),
                        Fe.node.setAttribute("stroke-width", Je.strokeWidth),
                        Fe.node.setAttribute("fill-opacity", Je.fillOpacity)),
                    N !== void 0 && H !== void 0 && (Fe.attr("data-range-y1", N),
                        Fe.attr("data-range-y2", H)),
                        new F(this.ctx).setSelectionFilter(Fe, i, d),
                        _.add(Fe);
                    var ut = new vr(this).handleBarDataLabels({
                        x: k,
                        y: L,
                        y1: N,
                        y2: H,
                        i: h,
                        j: d,
                        series: z,
                        realIndex: i,
                        groupIndex: f,
                        barHeight: q,
                        barWidth: Q,
                        barXPosition: b,
                        barYPosition: E,
                        renderedPath: Fe,
                        visibleSeries: ee
                    });
                    return ut.dataLabels !== null && B.add(ut.dataLabels),
                    ut.totalDataLabels && B.add(ut.totalDataLabels),
                        _.add(B),
                    X && _.add(X),
                    K && _.add(K),
                        _
                }
            }, {
                key: "drawBarPaths",
                value: function (n) {
                    var i, r = n.indexes, c = n.barHeight, d = n.strokeWidth, h = n.zeroW, f = n.x, m = n.y,
                        x = n.yDivision, S = n.elSeries, _ = this.w, k = r.i, L = r.j;
                    if (_.globals.isXNumeric)
                        i = (m = (_.globals.seriesX[k][L] - _.globals.minX) / this.invertedXRatio - c) + c * this.visibleI;
                    else if (_.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                        var N = 0
                            , H = 0;
                        _.globals.seriesPercent.forEach(function (q, Q) {
                            q[L] && N++,
                            Q < k && q[L] === 0 && H++
                        }),
                        N > 0 && (c = this.seriesLen * c / N),
                            i = m + c * this.visibleI,
                            i -= c * H
                    } else
                        i = m + c * this.visibleI;
                    this.isFunnel && (h -= (this.barHelpers.getXForValue(this.series[k][L], h) - h) / 2),
                        f = this.barHelpers.getXForValue(this.series[k][L], h);
                    var z = this.barHelpers.getBarpaths({
                        barYPosition: i,
                        barHeight: c,
                        x1: h,
                        x2: f,
                        strokeWidth: d,
                        series: this.series,
                        realIndex: r.realIndex,
                        i: k,
                        j: L,
                        w: _
                    });
                    return _.globals.isXNumeric || (m += x),
                        this.barHelpers.barBackground({
                            j: L,
                            i: k,
                            y1: i - c * this.visibleI,
                            y2: c * this.seriesLen,
                            elSeries: S
                        }),
                        {
                            pathTo: z.pathTo,
                            pathFrom: z.pathFrom,
                            x1: h,
                            x: f,
                            y: m,
                            goalX: this.barHelpers.getGoalValues("x", h, null, k, L),
                            barYPosition: i,
                            barHeight: c
                        }
                }
            }, {
                key: "drawColumnPaths",
                value: function (n) {
                    var i, r = n.indexes, c = n.x, d = n.y, h = n.xDivision, f = n.barWidth, m = n.zeroH,
                        x = n.strokeWidth, S = n.elSeries, _ = this.w, k = r.realIndex, L = r.i, N = r.j, H = r.bc;
                    if (_.globals.isXNumeric) {
                        var z = this.getBarXForNumericXAxis({
                            x: c,
                            j: N,
                            realIndex: k,
                            barWidth: f
                        });
                        c = z.x,
                            i = z.barXPosition
                    } else if (_.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                        var q = this.barHelpers.getZeroValueEncounters({
                            i: L,
                            j: N
                        })
                            , Q = q.nonZeroColumns
                            , b = q.zeroEncounters;
                        Q > 0 && (f = this.seriesLen * f / Q),
                            i = c + f * this.visibleI,
                            i -= f * b
                    } else
                        i = c + f * this.visibleI;
                    d = this.barHelpers.getYForValue(this.series[L][N], m);
                    var E = this.barHelpers.getColumnPaths({
                        barXPosition: i,
                        barWidth: f,
                        y1: m,
                        y2: d,
                        strokeWidth: x,
                        series: this.series,
                        realIndex: r.realIndex,
                        i: L,
                        j: N,
                        w: _
                    });
                    return _.globals.isXNumeric || (c += h),
                        this.barHelpers.barBackground({
                            bc: H,
                            j: N,
                            i: L,
                            x1: i - x / 2 - f * this.visibleI,
                            x2: f * this.seriesLen + x / 2,
                            elSeries: S
                        }),
                        {
                            pathTo: E.pathTo,
                            pathFrom: E.pathFrom,
                            x: c,
                            y: d,
                            goalY: this.barHelpers.getGoalValues("y", null, m, L, N),
                            barXPosition: i,
                            barWidth: f
                        }
                }
            }, {
                key: "getBarXForNumericXAxis",
                value: function (n) {
                    var i = n.x
                        , r = n.barWidth
                        , c = n.realIndex
                        , d = n.j
                        , h = this.w
                        , f = c;
                    return h.globals.seriesX[c].length || (f = h.globals.maxValsInArrayIndex),
                    h.globals.seriesX[f][d] && (i = (h.globals.seriesX[f][d] - h.globals.minX) / this.xRatio - r * this.seriesLen / 2),
                        {
                            barXPosition: i + r * this.visibleI,
                            x: i
                        }
                }
            }, {
                key: "getPreviousPath",
                value: function (n, i) {
                    for (var r, c = this.w, d = 0; d < c.globals.previousPaths.length; d++) {
                        var h = c.globals.previousPaths[d];
                        h.paths && h.paths.length > 0 && parseInt(h.realIndex, 10) === parseInt(n, 10) && c.globals.previousPaths[d].paths[i] !== void 0 && (r = c.globals.previousPaths[d].paths[i].d)
                    }
                    return r
                }
            }]),
                j
        }()
            , uc = function (j) {
            y(i, sa);
            var n = T(i);

            function i() {
                return l(this, i),
                    n.apply(this, arguments)
            }

            return p(i, [{
                key: "draw",
                value: function (r, c) {
                    var d = this
                        , h = this.w;
                    this.graphics = new $(this.ctx),
                        this.bar = new sa(this.ctx, this.xyRatios);
                    var f = new V(this.ctx, h);
                    r = f.getLogSeries(r),
                        this.yRatio = f.getLogYRatios(this.yRatio),
                        this.barHelpers.initVariables(r),
                    h.config.chart.stackType === "100%" && (r = h.globals.seriesPercent.slice()),
                        this.series = r,
                        this.barHelpers.initializeStackedPrevVars(this);
                    for (var m = this.graphics.group({
                        class: "apexcharts-bar-series apexcharts-plot-series"
                    }), x = 0, S = 0, _ = function (N, H) {
                        var z = void 0
                            , q = void 0
                            , Q = void 0
                            , b = void 0
                            , E = -1;
                        d.groupCtx = d,
                            h.globals.seriesGroups.forEach(function (es, ps) {
                                es.indexOf(h.config.series[N].name) > -1 && (E = ps)
                            }),
                        E !== -1 && (d.groupCtx = d[h.globals.seriesGroups[E]]);
                        var B = []
                            , X = []
                            , K = h.globals.comboCharts ? c[N] : N;
                        d.yRatio.length > 1 && (d.yaxisIndex = K),
                            d.isReversed = h.config.yaxis[d.yaxisIndex] && h.config.yaxis[d.yaxisIndex].reversed;
                        var ee = d.graphics.group({
                            class: "apexcharts-series",
                            seriesName: M.escapeString(h.globals.seriesNames[K]),
                            rel: N + 1,
                            "data:realIndex": K
                        });
                        d.ctx.series.addCollapsedClassToSeries(ee, K);
                        var pe = d.graphics.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": K
                        })
                            , ge = d.graphics.group({
                            class: "apexcharts-bar-goals-markers"
                        })
                            , Ie = 0
                            , $e = 0
                            , Fe = d.initialPositions(x, S, z, q, Q, b);
                        S = Fe.y,
                            Ie = Fe.barHeight,
                            q = Fe.yDivision,
                            b = Fe.zeroW,
                            x = Fe.x,
                            $e = Fe.barWidth,
                            z = Fe.xDivision,
                            Q = Fe.zeroH,
                            h.globals.barHeight = Ie,
                            h.globals.barWidth = $e,
                            d.barHelpers.initializeStackedXYVars(d),
                        d.groupCtx.prevY.length === 1 && d.groupCtx.prevY[0].every(function (es) {
                            return isNaN(es)
                        }) && (d.groupCtx.prevY[0] = d.groupCtx.prevY[0].map(function (es) {
                            return Q
                        }),
                            d.groupCtx.prevYF[0] = d.groupCtx.prevYF[0].map(function (es) {
                                return 0
                            }));
                        for (var Je = 0; Je < h.globals.dataPoints; Je++) {
                            var ut = d.barHelpers.getStrokeWidth(N, Je, K)
                                , yt = {
                                indexes: {
                                    i: N,
                                    j: Je,
                                    realIndex: K,
                                    bc: H
                                },
                                strokeWidth: ut,
                                x,
                                y: S,
                                elSeries: ee,
                                groupIndex: E,
                                seriesGroup: h.globals.seriesGroups[E]
                            }
                                , It = null;
                            d.isHorizontal ? (It = d.drawStackedBarPaths(a(a({}, yt), {}, {
                                zeroW: b,
                                barHeight: Ie,
                                yDivision: q
                            })),
                                $e = d.series[N][Je] / d.invertedYRatio) : (It = d.drawStackedColumnPaths(a(a({}, yt), {}, {
                                xDivision: z,
                                barWidth: $e,
                                zeroH: Q
                            })),
                                Ie = d.series[N][Je] / d.yRatio[d.yaxisIndex]);
                            var Nt = d.barHelpers.drawGoalLine({
                                barXPosition: It.barXPosition,
                                barYPosition: It.barYPosition,
                                goalX: It.goalX,
                                goalY: It.goalY,
                                barHeight: Ie,
                                barWidth: $e
                            });
                            Nt && ge.add(Nt),
                                S = It.y,
                                x = It.x,
                                B.push(x),
                                X.push(S);
                            var Lt = d.barHelpers.getPathFillColor(r, N, Je, K);
                            ee = d.renderSeries({
                                realIndex: K,
                                pathFill: Lt,
                                j: Je,
                                i: N,
                                groupIndex: E,
                                pathFrom: It.pathFrom,
                                pathTo: It.pathTo,
                                strokeWidth: ut,
                                elSeries: ee,
                                x,
                                y: S,
                                series: r,
                                barHeight: Ie,
                                barWidth: $e,
                                elDataLabelsWrap: pe,
                                elGoalsMarkers: ge,
                                type: "bar",
                                visibleSeries: 0
                            })
                        }
                        h.globals.seriesXvalues[K] = B,
                            h.globals.seriesYvalues[K] = X,
                            d.groupCtx.prevY.push(d.groupCtx.yArrj),
                            d.groupCtx.prevYF.push(d.groupCtx.yArrjF),
                            d.groupCtx.prevYVal.push(d.groupCtx.yArrjVal),
                            d.groupCtx.prevX.push(d.groupCtx.xArrj),
                            d.groupCtx.prevXF.push(d.groupCtx.xArrjF),
                            d.groupCtx.prevXVal.push(d.groupCtx.xArrjVal),
                            m.add(ee)
                    }, k = 0, L = 0; k < r.length; k++,
                             L++)
                        _(k, L);
                    return m
                }
            }, {
                key: "initialPositions",
                value: function (r, c, d, h, f, m) {
                    var x, S, _, k, L = this.w;
                    return this.isHorizontal ? (_ = (_ = h = L.globals.gridHeight / L.globals.dataPoints) * parseInt(L.config.plotOptions.bar.barHeight, 10) / 100,
                    String(L.config.plotOptions.bar.barHeight).indexOf("%") === -1 && (_ = parseInt(L.config.plotOptions.bar.barHeight, 10)),
                        m = this.baseLineInvertedY + L.globals.padHorizontal + (this.isReversed ? L.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0),
                        c = (h - _) / 2) : (k = d = L.globals.gridWidth / L.globals.dataPoints,
                        k = L.globals.isXNumeric && L.globals.dataPoints > 1 ? (d = L.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth, 10) / 100 : k * parseInt(L.config.plotOptions.bar.columnWidth, 10) / 100,
                    String(L.config.plotOptions.bar.columnWidth).indexOf("%") === -1 && (k = parseInt(L.config.plotOptions.bar.columnWidth, 10)),
                        f = L.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? L.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0),
                        r = L.globals.padHorizontal + (d - k) / 2),
                        {
                            x: r,
                            y: c,
                            yDivision: h,
                            xDivision: d,
                            barHeight: (x = L.globals.seriesGroups) !== null && x !== void 0 && x.length ? _ / L.globals.seriesGroups.length : _,
                            barWidth: (S = L.globals.seriesGroups) !== null && S !== void 0 && S.length ? k / L.globals.seriesGroups.length : k,
                            zeroH: f,
                            zeroW: m
                        }
                }
            }, {
                key: "drawStackedBarPaths",
                value: function (r) {
                    for (var c, d = r.indexes, h = r.barHeight, f = r.strokeWidth, m = r.zeroW, x = r.x, S = r.y, _ = r.groupIndex, k = r.seriesGroup, L = r.yDivision, N = r.elSeries, H = this.w, z = S + (_ !== -1 ? _ * h : 0), q = d.i, Q = d.j, b = 0, E = 0; E < this.groupCtx.prevXF.length; E++)
                        b += this.groupCtx.prevXF[E][Q];
                    var B = q;
                    if (k && (B = k.indexOf(H.config.series[q].name)),
                    B > 0) {
                        var X = m;
                        this.groupCtx.prevXVal[B - 1][Q] < 0 ? X = this.series[q][Q] >= 0 ? this.groupCtx.prevX[B - 1][Q] + b - 2 * (this.isReversed ? b : 0) : this.groupCtx.prevX[B - 1][Q] : this.groupCtx.prevXVal[B - 1][Q] >= 0 && (X = this.series[q][Q] >= 0 ? this.groupCtx.prevX[B - 1][Q] : this.groupCtx.prevX[B - 1][Q] - b + 2 * (this.isReversed ? b : 0)),
                            c = X
                    } else
                        c = m;
                    x = this.series[q][Q] === null ? c : c + this.series[q][Q] / this.invertedYRatio - 2 * (this.isReversed ? this.series[q][Q] / this.invertedYRatio : 0);
                    var K = this.barHelpers.getBarpaths({
                        barYPosition: z,
                        barHeight: h,
                        x1: c,
                        x2: x,
                        strokeWidth: f,
                        series: this.series,
                        realIndex: d.realIndex,
                        seriesGroup: k,
                        i: q,
                        j: Q,
                        w: H
                    });
                    return this.barHelpers.barBackground({
                        j: Q,
                        i: q,
                        y1: z,
                        y2: h,
                        elSeries: N
                    }),
                        S += L,
                        {
                            pathTo: K.pathTo,
                            pathFrom: K.pathFrom,
                            goalX: this.barHelpers.getGoalValues("x", m, null, q, Q),
                            barYPosition: z,
                            x,
                            y: S
                        }
                }
            }, {
                key: "drawStackedColumnPaths",
                value: function (r) {
                    var c = r.indexes
                        , d = r.x
                        , h = r.y
                        , f = r.xDivision
                        , m = r.barWidth
                        , x = r.zeroH
                        , S = r.groupIndex
                        , _ = r.seriesGroup
                        , k = r.elSeries
                        , L = this.w
                        , N = c.i
                        , H = c.j
                        , z = c.bc;
                    if (L.globals.isXNumeric) {
                        var q = L.globals.seriesX[N][H];
                        q || (q = 0),
                            d = (q - L.globals.minX) / this.xRatio - m / 2,
                        L.globals.seriesGroups.length && (d = (q - L.globals.minX) / this.xRatio - m / 2 * L.globals.seriesGroups.length)
                    }
                    for (var Q, b = d + (S !== -1 ? S * m : 0), E = 0, B = 0; B < this.groupCtx.prevYF.length; B++)
                        E += isNaN(this.groupCtx.prevYF[B][H]) ? 0 : this.groupCtx.prevYF[B][H];
                    var X = N;
                    if (_ && (X = _.indexOf(L.config.series[N].name)),
                    X > 0 && !L.globals.isXNumeric || X > 0 && L.globals.isXNumeric && L.globals.seriesX[N - 1][H] === L.globals.seriesX[N][H]) {
                        var K, ee, pe, ge = Math.min(this.yRatio.length + 1, N + 1);
                        if (this.groupCtx.prevY[X - 1] !== void 0 && this.groupCtx.prevY[X - 1].length)
                            for (var Ie = 1; Ie < ge; Ie++) {
                                var $e;
                                if (!isNaN(($e = this.groupCtx.prevY[X - Ie]) === null || $e === void 0 ? void 0 : $e[H])) {
                                    pe = this.groupCtx.prevY[X - Ie][H];
                                    break
                                }
                            }
                        for (var Fe = 1; Fe < ge; Fe++) {
                            var Je, ut;
                            if (((Je = this.groupCtx.prevYVal[X - Fe]) === null || Je === void 0 ? void 0 : Je[H]) < 0) {
                                ee = this.series[N][H] >= 0 ? pe - E + 2 * (this.isReversed ? E : 0) : pe;
                                break
                            }
                            if (((ut = this.groupCtx.prevYVal[X - Fe]) === null || ut === void 0 ? void 0 : ut[H]) >= 0) {
                                ee = this.series[N][H] >= 0 ? pe : pe + E - 2 * (this.isReversed ? E : 0);
                                break
                            }
                        }
                        ee === void 0 && (ee = L.globals.gridHeight),
                            Q = (K = this.groupCtx.prevYF[0]) !== null && K !== void 0 && K.every(function (It) {
                                return It === 0
                            }) && this.groupCtx.prevYF.slice(1, X).every(function (It) {
                                return It.every(function (Nt) {
                                    return isNaN(Nt)
                                })
                            }) ? x : ee
                    } else
                        Q = x;
                    h = this.series[N][H] ? Q - this.series[N][H] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[N][H] / this.yRatio[this.yaxisIndex] : 0) : Q;
                    var yt = this.barHelpers.getColumnPaths({
                        barXPosition: b,
                        barWidth: m,
                        y1: Q,
                        y2: h,
                        yRatio: this.yRatio[this.yaxisIndex],
                        strokeWidth: this.strokeWidth,
                        series: this.series,
                        seriesGroup: _,
                        realIndex: c.realIndex,
                        i: N,
                        j: H,
                        w: L
                    });
                    return this.barHelpers.barBackground({
                        bc: z,
                        j: H,
                        i: N,
                        x1: b,
                        x2: m,
                        elSeries: k
                    }),
                        d += f,
                        {
                            pathTo: yt.pathTo,
                            pathFrom: yt.pathFrom,
                            goalY: this.barHelpers.getGoalValues("y", null, x, N, H),
                            barXPosition: b,
                            x: L.globals.isXNumeric ? d - f : d,
                            y: h
                        }
                }
            }]),
                i
        }()
            , na = function (j) {
            y(i, sa);
            var n = T(i);

            function i() {
                return l(this, i),
                    n.apply(this, arguments)
            }

            return p(i, [{
                key: "draw",
                value: function (r, c, d) {
                    var h = this
                        , f = this.w
                        , m = new $(this.ctx)
                        , x = f.globals.comboCharts ? c : f.config.chart.type
                        , S = new je(this.ctx);
                    this.candlestickOptions = this.w.config.plotOptions.candlestick,
                        this.boxOptions = this.w.config.plotOptions.boxPlot,
                        this.isHorizontal = f.config.plotOptions.bar.horizontal;
                    var _ = new V(this.ctx, f);
                    r = _.getLogSeries(r),
                        this.series = r,
                        this.yRatio = _.getLogYRatios(this.yRatio),
                        this.barHelpers.initVariables(r);
                    for (var k = m.group({
                        class: "apexcharts-".concat(x, "-series apexcharts-plot-series")
                    }), L = function (H) {
                        h.isBoxPlot = f.config.chart.type === "boxPlot" || f.config.series[H].type === "boxPlot";
                        var z, q, Q, b, E = void 0, B = void 0, X = [], K = [], ee = f.globals.comboCharts ? d[H] : H,
                            pe = m.group({
                                class: "apexcharts-series",
                                seriesName: M.escapeString(f.globals.seriesNames[ee]),
                                rel: H + 1,
                                "data:realIndex": ee
                            });
                        h.ctx.series.addCollapsedClassToSeries(pe, ee),
                        r[H].length > 0 && (h.visibleI = h.visibleI + 1);
                        var ge, Ie;
                        h.yRatio.length > 1 && (h.yaxisIndex = ee);
                        var $e = h.barHelpers.initialPositions();
                        B = $e.y,
                            ge = $e.barHeight,
                            q = $e.yDivision,
                            b = $e.zeroW,
                            E = $e.x,
                            Ie = $e.barWidth,
                            z = $e.xDivision,
                            Q = $e.zeroH,
                            K.push(E + Ie / 2);
                        for (var Fe = m.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": ee
                        }), Je = function (yt) {
                            var It = h.barHelpers.getStrokeWidth(H, yt, ee)
                                , Nt = null
                                , Lt = {
                                indexes: {
                                    i: H,
                                    j: yt,
                                    realIndex: ee
                                },
                                x: E,
                                y: B,
                                strokeWidth: It,
                                elSeries: pe
                            };
                            Nt = h.isHorizontal ? h.drawHorizontalBoxPaths(a(a({}, Lt), {}, {
                                yDivision: q,
                                barHeight: ge,
                                zeroW: b
                            })) : h.drawVerticalBoxPaths(a(a({}, Lt), {}, {
                                xDivision: z,
                                barWidth: Ie,
                                zeroH: Q
                            })),
                                B = Nt.y,
                                E = Nt.x,
                            yt > 0 && K.push(E + Ie / 2),
                                X.push(B),
                                Nt.pathTo.forEach(function (es, ps) {
                                    var zn = !h.isBoxPlot && h.candlestickOptions.wick.useFillColor ? Nt.color[ps] : f.globals.stroke.colors[H]
                                        , nn = S.fillPath({
                                        seriesNumber: ee,
                                        dataPointIndex: yt,
                                        color: Nt.color[ps],
                                        value: r[H][yt]
                                    });
                                    h.renderSeries({
                                        realIndex: ee,
                                        pathFill: nn,
                                        lineFill: zn,
                                        j: yt,
                                        i: H,
                                        pathFrom: Nt.pathFrom,
                                        pathTo: es,
                                        strokeWidth: It,
                                        elSeries: pe,
                                        x: E,
                                        y: B,
                                        series: r,
                                        barHeight: ge,
                                        barWidth: Ie,
                                        elDataLabelsWrap: Fe,
                                        visibleSeries: h.visibleI,
                                        type: f.config.chart.type
                                    })
                                })
                        }, ut = 0; ut < f.globals.dataPoints; ut++)
                            Je(ut);
                        f.globals.seriesXvalues[ee] = K,
                            f.globals.seriesYvalues[ee] = X,
                            k.add(pe)
                    }, N = 0; N < r.length; N++)
                        L(N);
                    return k
                }
            }, {
                key: "drawVerticalBoxPaths",
                value: function (r) {
                    var c = r.indexes
                        , d = r.x;
                    r.y;
                    var h = r.xDivision
                        , f = r.barWidth
                        , m = r.zeroH
                        , x = r.strokeWidth
                        , S = this.w
                        , _ = new $(this.ctx)
                        , k = c.i
                        , L = c.j
                        , N = !0
                        , H = S.config.plotOptions.candlestick.colors.upward
                        , z = S.config.plotOptions.candlestick.colors.downward
                        , q = "";
                    this.isBoxPlot && (q = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
                    var Q = this.yRatio[this.yaxisIndex]
                        , b = c.realIndex
                        , E = this.getOHLCValue(b, L)
                        , B = m
                        , X = m;
                    E.o > E.c && (N = !1);
                    var K = Math.min(E.o, E.c)
                        , ee = Math.max(E.o, E.c)
                        , pe = E.m;
                    S.globals.isXNumeric && (d = (S.globals.seriesX[b][L] - S.globals.minX) / this.xRatio - f / 2);
                    var ge = d + f * this.visibleI;
                    this.series[k][L] === void 0 || this.series[k][L] === null ? (K = m,
                        ee = m) : (K = m - K / Q,
                        ee = m - ee / Q,
                        B = m - E.h / Q,
                        X = m - E.l / Q,
                        pe = m - E.m / Q);
                    var Ie = _.move(ge, m)
                        , $e = _.move(ge + f / 2, K);
                    return S.globals.previousPaths.length > 0 && ($e = this.getPreviousPath(b, L, !0)),
                        Ie = this.isBoxPlot ? [_.move(ge, K) + _.line(ge + f / 2, K) + _.line(ge + f / 2, B) + _.line(ge + f / 4, B) + _.line(ge + f - f / 4, B) + _.line(ge + f / 2, B) + _.line(ge + f / 2, K) + _.line(ge + f, K) + _.line(ge + f, pe) + _.line(ge, pe) + _.line(ge, K + x / 2), _.move(ge, pe) + _.line(ge + f, pe) + _.line(ge + f, ee) + _.line(ge + f / 2, ee) + _.line(ge + f / 2, X) + _.line(ge + f - f / 4, X) + _.line(ge + f / 4, X) + _.line(ge + f / 2, X) + _.line(ge + f / 2, ee) + _.line(ge, ee) + _.line(ge, pe) + "z"] : [_.move(ge, ee) + _.line(ge + f / 2, ee) + _.line(ge + f / 2, B) + _.line(ge + f / 2, ee) + _.line(ge + f, ee) + _.line(ge + f, K) + _.line(ge + f / 2, K) + _.line(ge + f / 2, X) + _.line(ge + f / 2, K) + _.line(ge, K) + _.line(ge, ee - x / 2)],
                        $e += _.move(ge, K),
                    S.globals.isXNumeric || (d += h),
                        {
                            pathTo: Ie,
                            pathFrom: $e,
                            x: d,
                            y: ee,
                            barXPosition: ge,
                            color: this.isBoxPlot ? q : N ? [H] : [z]
                        }
                }
            }, {
                key: "drawHorizontalBoxPaths",
                value: function (r) {
                    var c = r.indexes;
                    r.x;
                    var d = r.y
                        , h = r.yDivision
                        , f = r.barHeight
                        , m = r.zeroW
                        , x = r.strokeWidth
                        , S = this.w
                        , _ = new $(this.ctx)
                        , k = c.i
                        , L = c.j
                        , N = this.boxOptions.colors.lower;
                    this.isBoxPlot && (N = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
                    var H = this.invertedYRatio
                        , z = c.realIndex
                        , q = this.getOHLCValue(z, L)
                        , Q = m
                        , b = m
                        , E = Math.min(q.o, q.c)
                        , B = Math.max(q.o, q.c)
                        , X = q.m;
                    S.globals.isXNumeric && (d = (S.globals.seriesX[z][L] - S.globals.minX) / this.invertedXRatio - f / 2);
                    var K = d + f * this.visibleI;
                    this.series[k][L] === void 0 || this.series[k][L] === null ? (E = m,
                        B = m) : (E = m + E / H,
                        B = m + B / H,
                        Q = m + q.h / H,
                        b = m + q.l / H,
                        X = m + q.m / H);
                    var ee = _.move(m, K)
                        , pe = _.move(E, K + f / 2);
                    return S.globals.previousPaths.length > 0 && (pe = this.getPreviousPath(z, L, !0)),
                        ee = [_.move(E, K) + _.line(E, K + f / 2) + _.line(Q, K + f / 2) + _.line(Q, K + f / 2 - f / 4) + _.line(Q, K + f / 2 + f / 4) + _.line(Q, K + f / 2) + _.line(E, K + f / 2) + _.line(E, K + f) + _.line(X, K + f) + _.line(X, K) + _.line(E + x / 2, K), _.move(X, K) + _.line(X, K + f) + _.line(B, K + f) + _.line(B, K + f / 2) + _.line(b, K + f / 2) + _.line(b, K + f - f / 4) + _.line(b, K + f / 4) + _.line(b, K + f / 2) + _.line(B, K + f / 2) + _.line(B, K) + _.line(X, K) + "z"],
                        pe += _.move(E, K),
                    S.globals.isXNumeric || (d += h),
                        {
                            pathTo: ee,
                            pathFrom: pe,
                            x: B,
                            y: d,
                            barYPosition: K,
                            color: N
                        }
                }
            }, {
                key: "getOHLCValue",
                value: function (r, c) {
                    var d = this.w;
                    return {
                        o: this.isBoxPlot ? d.globals.seriesCandleH[r][c] : d.globals.seriesCandleO[r][c],
                        h: this.isBoxPlot ? d.globals.seriesCandleO[r][c] : d.globals.seriesCandleH[r][c],
                        m: d.globals.seriesCandleM[r][c],
                        l: this.isBoxPlot ? d.globals.seriesCandleC[r][c] : d.globals.seriesCandleL[r][c],
                        c: this.isBoxPlot ? d.globals.seriesCandleL[r][c] : d.globals.seriesCandleC[r][c]
                    }
                }
            }]),
                i
        }()
            , dc = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "checkColorRange",
                value: function () {
                    var n = this.w
                        , i = !1
                        , r = n.config.plotOptions[n.config.chart.type];
                    return r.colorScale.ranges.length > 0 && r.colorScale.ranges.map(function (c, d) {
                        c.from <= 0 && (i = !0)
                    }),
                        i
                }
            }, {
                key: "getShadeColor",
                value: function (n, i, r, c) {
                    var d = this.w
                        , h = 1
                        , f = d.config.plotOptions[n].shadeIntensity
                        , m = this.determineColor(n, i, r);
                    d.globals.hasNegs || c ? h = d.config.plotOptions[n].reverseNegativeShade ? m.percent < 0 ? m.percent / 100 * (1.25 * f) : (1 - m.percent / 100) * (1.25 * f) : m.percent <= 0 ? 1 - (1 + m.percent / 100) * f : (1 - m.percent / 100) * f : (h = 1 - m.percent / 100,
                    n === "treemap" && (h = (1 - m.percent / 100) * (1.25 * f)));
                    var x = m.color
                        , S = new M;
                    return d.config.plotOptions[n].enableShades && (x = this.w.config.theme.mode === "dark" ? M.hexToRgba(S.shadeColor(-1 * h, m.color), d.config.fill.opacity) : M.hexToRgba(S.shadeColor(h, m.color), d.config.fill.opacity)),
                        {
                            color: x,
                            colorProps: m
                        }
                }
            }, {
                key: "determineColor",
                value: function (n, i, r) {
                    var c = this.w
                        , d = c.globals.series[i][r]
                        , h = c.config.plotOptions[n]
                        , f = h.colorScale.inverse ? r : i;
                    h.distributed && c.config.chart.type === "treemap" && (f = r);
                    var m = c.globals.colors[f]
                        , x = null
                        , S = Math.min.apply(Math, A(c.globals.series[i]))
                        , _ = Math.max.apply(Math, A(c.globals.series[i]));
                    h.distributed || n !== "heatmap" || (S = c.globals.minY,
                        _ = c.globals.maxY),
                    h.colorScale.min !== void 0 && (S = h.colorScale.min < c.globals.minY ? h.colorScale.min : c.globals.minY,
                        _ = h.colorScale.max > c.globals.maxY ? h.colorScale.max : c.globals.maxY);
                    var k = Math.abs(_) + Math.abs(S)
                        , L = 100 * d / (k === 0 ? k - 1e-6 : k);
                    return h.colorScale.ranges.length > 0 && h.colorScale.ranges.map(function (N, H) {
                        if (d >= N.from && d <= N.to) {
                            m = N.color,
                                x = N.foreColor ? N.foreColor : null,
                                S = N.from,
                                _ = N.to;
                            var z = Math.abs(_) + Math.abs(S);
                            L = 100 * d / (z === 0 ? z - 1e-6 : z)
                        }
                    }),
                        {
                            color: m,
                            foreColor: x,
                            percent: L
                        }
                }
            }, {
                key: "calculateDataLabels",
                value: function (n) {
                    var i = n.text
                        , r = n.x
                        , c = n.y
                        , d = n.i
                        , h = n.j
                        , f = n.colorProps
                        , m = n.fontSize
                        , x = this.w.config.dataLabels
                        , S = new $(this.ctx)
                        , _ = new mt(this.ctx)
                        , k = null;
                    if (x.enabled) {
                        k = S.group({
                            class: "apexcharts-data-labels"
                        });
                        var L = x.offsetX
                            , N = x.offsetY
                            , H = r + L
                            , z = c + parseFloat(x.style.fontSize) / 3 + N;
                        _.plotDataLabelsText({
                            x: H,
                            y: z,
                            text: i,
                            i: d,
                            j: h,
                            color: f.foreColor,
                            parent: k,
                            fontSize: m,
                            dataLabelsConfig: x
                        })
                    }
                    return k
                }
            }, {
                key: "addListeners",
                value: function (n) {
                    var i = new $(this.ctx);
                    n.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this, n)),
                        n.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this, n)),
                        n.node.addEventListener("mousedown", i.pathMouseDown.bind(this, n))
                }
            }]),
                j
        }()
            , Ad = function () {
            function j(n, i) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.xRatio = i.xRatio,
                    this.yRatio = i.yRatio,
                    this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation,
                    this.helpers = new dc(n),
                    this.rectRadius = this.w.config.plotOptions.heatmap.radius,
                    this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0
            }

            return p(j, [{
                key: "draw",
                value: function (n) {
                    var i = this.w
                        , r = new $(this.ctx)
                        , c = r.group({
                        class: "apexcharts-heatmap"
                    });
                    c.attr("clip-path", "url(#gridRectMask".concat(i.globals.cuid, ")"));
                    var d = i.globals.gridWidth / i.globals.dataPoints
                        , h = i.globals.gridHeight / i.globals.series.length
                        , f = 0
                        , m = !1;
                    this.negRange = this.helpers.checkColorRange();
                    var x = n.slice();
                    i.config.yaxis[0].reversed && (m = !0,
                        x.reverse());
                    for (var S = m ? 0 : x.length - 1; m ? S < x.length : S >= 0; m ? S++ : S--) {
                        var _ = r.group({
                            class: "apexcharts-series apexcharts-heatmap-series",
                            seriesName: M.escapeString(i.globals.seriesNames[S]),
                            rel: S + 1,
                            "data:realIndex": S
                        });
                        if (this.ctx.series.addCollapsedClassToSeries(_, S),
                            i.config.chart.dropShadow.enabled) {
                            var k = i.config.chart.dropShadow;
                            new F(this.ctx).dropShadow(_, k, S)
                        }
                        for (var L = 0, N = i.config.plotOptions.heatmap.shadeIntensity, H = 0; H < x[S].length; H++) {
                            var z = this.helpers.getShadeColor(i.config.chart.type, S, H, this.negRange)
                                , q = z.color
                                , Q = z.colorProps;
                            i.config.fill.type === "image" && (q = new je(this.ctx).fillPath({
                                seriesNumber: S,
                                dataPointIndex: H,
                                opacity: i.globals.hasNegs ? Q.percent < 0 ? 1 - (1 + Q.percent / 100) : N + Q.percent / 100 : Q.percent / 100,
                                patternID: M.randomId(),
                                width: i.config.fill.image.width ? i.config.fill.image.width : d,
                                height: i.config.fill.image.height ? i.config.fill.image.height : h
                            }));
                            var b = this.rectRadius
                                , E = r.drawRect(L, f, d, h, b);
                            if (E.attr({
                                cx: L,
                                cy: f
                            }),
                                E.node.classList.add("apexcharts-heatmap-rect"),
                                _.add(E),
                                E.attr({
                                    fill: q,
                                    i: S,
                                    index: S,
                                    j: H,
                                    val: n[S][H],
                                    "stroke-width": this.strokeWidth,
                                    stroke: i.config.plotOptions.heatmap.useFillColorAsStroke ? q : i.globals.stroke.colors[0],
                                    color: q
                                }),
                                this.helpers.addListeners(E),
                            i.config.chart.animations.enabled && !i.globals.dataChanged) {
                                var B = 1;
                                i.globals.resized || (B = i.config.chart.animations.speed),
                                    this.animateHeatMap(E, L, f, d, h, B)
                            }
                            if (i.globals.dataChanged) {
                                var X = 1;
                                if (this.dynamicAnim.enabled && i.globals.shouldAnimate) {
                                    X = this.dynamicAnim.speed;
                                    var K = i.globals.previousPaths[S] && i.globals.previousPaths[S][H] && i.globals.previousPaths[S][H].color;
                                    K || (K = "rgba(255, 255, 255, 0)"),
                                        this.animateHeatColor(E, M.isColorHex(K) ? K : M.rgb2hex(K), M.isColorHex(q) ? q : M.rgb2hex(q), X)
                                }
                            }
                            var ee = (0,
                                i.config.dataLabels.formatter)(i.globals.series[S][H], {
                                value: i.globals.series[S][H],
                                seriesIndex: S,
                                dataPointIndex: H,
                                w: i
                            })
                                , pe = this.helpers.calculateDataLabels({
                                text: ee,
                                x: L + d / 2,
                                y: f + h / 2,
                                i: S,
                                j: H,
                                colorProps: Q,
                                series: x
                            });
                            pe !== null && _.add(pe),
                                L += d
                        }
                        f += h,
                            c.add(_)
                    }
                    var ge = i.globals.yAxisScale[0].result.slice();
                    return i.config.yaxis[0].reversed ? ge.unshift("") : ge.push(""),
                        i.globals.yAxisScale[0].result = ge,
                        c
                }
            }, {
                key: "animateHeatMap",
                value: function (n, i, r, c, d, h) {
                    var f = new O(this.ctx);
                    f.animateRect(n, {
                        x: i + c / 2,
                        y: r + d / 2,
                        width: 0,
                        height: 0
                    }, {
                        x: i,
                        y: r,
                        width: c,
                        height: d
                    }, h, function () {
                        f.animationCompleted(n)
                    })
                }
            }, {
                key: "animateHeatColor",
                value: function (n, i, r, c) {
                    n.attr({
                        fill: i
                    }).animate(c).attr({
                        fill: r
                    })
                }
            }]),
                j
        }()
            , hc = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "drawYAxisTexts",
                value: function (n, i, r, c) {
                    var d = this.w
                        , h = d.config.yaxis[0]
                        , f = d.globals.yLabelFormatters[0];
                    return new $(this.ctx).drawText({
                        x: n + h.labels.offsetX,
                        y: i + h.labels.offsetY,
                        text: f(c, r),
                        textAnchor: "middle",
                        fontSize: h.labels.style.fontSize,
                        fontFamily: h.labels.style.fontFamily,
                        foreColor: Array.isArray(h.labels.style.colors) ? h.labels.style.colors[r] : h.labels.style.colors
                    })
                }
            }]),
                j
        }()
            , fc = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w;
                var i = this.w;
                this.chartType = this.w.config.chart.type,
                    this.initialAnim = this.w.config.chart.animations.enabled,
                    this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled,
                    this.animBeginArr = [0],
                    this.animDur = 0,
                    this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels,
                    this.lineColorArr = i.globals.stroke.colors !== void 0 ? i.globals.stroke.colors : i.globals.colors,
                    this.defaultSize = Math.min(i.globals.gridWidth, i.globals.gridHeight),
                    this.centerY = this.defaultSize / 2,
                    this.centerX = i.globals.gridWidth / 2,
                    i.config.chart.type === "radialBar" ? this.fullAngle = 360 : this.fullAngle = Math.abs(i.config.plotOptions.pie.endAngle - i.config.plotOptions.pie.startAngle),
                    this.initialAngle = i.config.plotOptions.pie.startAngle % this.fullAngle,
                    i.globals.radialSize = this.defaultSize / 2.05 - i.config.stroke.width - (i.config.chart.sparkline.enabled ? 0 : i.config.chart.dropShadow.blur),
                    this.donutSize = i.globals.radialSize * parseInt(i.config.plotOptions.pie.donut.size, 10) / 100,
                    this.maxY = 0,
                    this.sliceLabels = [],
                    this.sliceSizes = [],
                    this.prevSectorAngleArr = []
            }

            return p(j, [{
                key: "draw",
                value: function (n) {
                    var i = this
                        , r = this.w
                        , c = new $(this.ctx);
                    if (this.ret = c.group({
                        class: "apexcharts-pie"
                    }),
                        r.globals.noData)
                        return this.ret;
                    for (var d = 0, h = 0; h < n.length; h++)
                        d += M.negToZero(n[h]);
                    var f = []
                        , m = c.group();
                    d === 0 && (d = 1e-5),
                        n.forEach(function (K) {
                            i.maxY = Math.max(i.maxY, K)
                        }),
                    r.config.yaxis[0].max && (this.maxY = r.config.yaxis[0].max),
                    r.config.grid.position === "back" && this.chartType === "polarArea" && this.drawPolarElements(this.ret);
                    for (var x = 0; x < n.length; x++) {
                        var S = this.fullAngle * M.negToZero(n[x]) / d;
                        f.push(S),
                            this.chartType === "polarArea" ? (f[x] = this.fullAngle / n.length,
                                this.sliceSizes.push(r.globals.radialSize * n[x] / this.maxY)) : this.sliceSizes.push(r.globals.radialSize)
                    }
                    if (r.globals.dataChanged) {
                        for (var _, k = 0, L = 0; L < r.globals.previousPaths.length; L++)
                            k += M.negToZero(r.globals.previousPaths[L]);
                        for (var N = 0; N < r.globals.previousPaths.length; N++)
                            _ = this.fullAngle * M.negToZero(r.globals.previousPaths[N]) / k,
                                this.prevSectorAngleArr.push(_)
                    }
                    this.donutSize < 0 && (this.donutSize = 0);
                    var H = r.config.plotOptions.pie.customScale
                        , z = r.globals.gridWidth / 2
                        , q = r.globals.gridHeight / 2
                        , Q = z - r.globals.gridWidth / 2 * H
                        , b = q - r.globals.gridHeight / 2 * H;
                    if (this.chartType === "donut") {
                        var E = c.drawCircle(this.donutSize);
                        E.attr({
                            cx: this.centerX,
                            cy: this.centerY,
                            fill: r.config.plotOptions.pie.donut.background ? r.config.plotOptions.pie.donut.background : "transparent"
                        }),
                            m.add(E)
                    }
                    var B = this.drawArcs(f, n);
                    if (this.sliceLabels.forEach(function (K) {
                        B.add(K)
                    }),
                        m.attr({
                            transform: "translate(".concat(Q, ", ").concat(b, ") scale(").concat(H, ")")
                        }),
                        m.add(B),
                        this.ret.add(m),
                        this.donutDataLabels.show) {
                        var X = this.renderInnerDataLabels(this.donutDataLabels, {
                            hollowSize: this.donutSize,
                            centerX: this.centerX,
                            centerY: this.centerY,
                            opacity: this.donutDataLabels.show,
                            translateX: Q,
                            translateY: b
                        });
                        this.ret.add(X)
                    }
                    return r.config.grid.position === "front" && this.chartType === "polarArea" && this.drawPolarElements(this.ret),
                        this.ret
                }
            }, {
                key: "drawArcs",
                value: function (n, i) {
                    var r = this.w
                        , c = new F(this.ctx)
                        , d = new $(this.ctx)
                        , h = new je(this.ctx)
                        , f = d.group({
                        class: "apexcharts-slices"
                    })
                        , m = this.initialAngle
                        , x = this.initialAngle
                        , S = this.initialAngle
                        , _ = this.initialAngle;
                    this.strokeWidth = r.config.stroke.show ? r.config.stroke.width : 0;
                    for (var k = 0; k < n.length; k++) {
                        var L = d.group({
                            class: "apexcharts-series apexcharts-pie-series",
                            seriesName: M.escapeString(r.globals.seriesNames[k]),
                            rel: k + 1,
                            "data:realIndex": k
                        });
                        f.add(L),
                            x = _,
                            S = (m = S) + n[k],
                            _ = x + this.prevSectorAngleArr[k];
                        var N = S < m ? this.fullAngle + S - m : S - m
                            , H = h.fillPath({
                            seriesNumber: k,
                            size: this.sliceSizes[k],
                            value: i[k]
                        })
                            , z = this.getChangedPath(x, _)
                            , q = d.drawPath({
                            d: z,
                            stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[k] : this.lineColorArr,
                            strokeWidth: 0,
                            fill: H,
                            fillOpacity: r.config.fill.opacity,
                            classes: "apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(k)
                        });
                        if (q.attr({
                            index: 0,
                            j: k
                        }),
                            c.setSelectionFilter(q, 0, k),
                            r.config.chart.dropShadow.enabled) {
                            var Q = r.config.chart.dropShadow;
                            c.dropShadow(q, Q, k)
                        }
                        this.addListeners(q, this.donutDataLabels),
                            $.setAttrs(q.node, {
                                "data:angle": N,
                                "data:startAngle": m,
                                "data:strokeWidth": this.strokeWidth,
                                "data:value": i[k]
                            });
                        var b = {
                            x: 0,
                            y: 0
                        };
                        this.chartType === "pie" || this.chartType === "polarArea" ? b = M.polarToCartesian(this.centerX, this.centerY, r.globals.radialSize / 1.25 + r.config.plotOptions.pie.dataLabels.offset, (m + N / 2) % this.fullAngle) : this.chartType === "donut" && (b = M.polarToCartesian(this.centerX, this.centerY, (r.globals.radialSize + this.donutSize) / 2 + r.config.plotOptions.pie.dataLabels.offset, (m + N / 2) % this.fullAngle)),
                            L.add(q);
                        var E = 0;
                        if (!this.initialAnim || r.globals.resized || r.globals.dataChanged ? this.animBeginArr.push(0) : ((E = N / this.fullAngle * r.config.chart.animations.speed) === 0 && (E = 1),
                            this.animDur = E + this.animDur,
                            this.animBeginArr.push(this.animDur)),
                            this.dynamicAnim && r.globals.dataChanged ? this.animatePaths(q, {
                                size: this.sliceSizes[k],
                                endAngle: S,
                                startAngle: m,
                                prevStartAngle: x,
                                prevEndAngle: _,
                                animateStartingPos: !0,
                                i: k,
                                animBeginArr: this.animBeginArr,
                                shouldSetPrevPaths: !0,
                                dur: r.config.chart.animations.dynamicAnimation.speed
                            }) : this.animatePaths(q, {
                                size: this.sliceSizes[k],
                                endAngle: S,
                                startAngle: m,
                                i: k,
                                totalItems: n.length - 1,
                                animBeginArr: this.animBeginArr,
                                dur: E
                            }),
                        r.config.plotOptions.pie.expandOnClick && this.chartType !== "polarArea" && q.click(this.pieClicked.bind(this, k)),
                        r.globals.selectedDataPoints[0] !== void 0 && r.globals.selectedDataPoints[0].indexOf(k) > -1 && this.pieClicked(k),
                            r.config.dataLabels.enabled) {
                            var B = b.x
                                , X = b.y
                                , K = 100 * N / this.fullAngle + "%";
                            if (N !== 0 && r.config.plotOptions.pie.dataLabels.minAngleToShowLabel < n[k]) {
                                var ee = r.config.dataLabels.formatter;
                                ee !== void 0 && (K = ee(r.globals.seriesPercent[k][0], {
                                    seriesIndex: k,
                                    w: r
                                }));
                                var pe = r.globals.dataLabels.style.colors[k]
                                    , ge = d.group({
                                    class: "apexcharts-datalabels"
                                })
                                    , Ie = d.drawText({
                                    x: B,
                                    y: X,
                                    text: K,
                                    textAnchor: "middle",
                                    fontSize: r.config.dataLabels.style.fontSize,
                                    fontFamily: r.config.dataLabels.style.fontFamily,
                                    fontWeight: r.config.dataLabels.style.fontWeight,
                                    foreColor: pe
                                });
                                if (ge.add(Ie),
                                    r.config.dataLabels.dropShadow.enabled) {
                                    var $e = r.config.dataLabels.dropShadow;
                                    c.dropShadow(Ie, $e)
                                }
                                Ie.node.classList.add("apexcharts-pie-label"),
                                r.config.chart.animations.animate && r.globals.resized === !1 && (Ie.node.classList.add("apexcharts-pie-label-delay"),
                                    Ie.node.style.animationDelay = r.config.chart.animations.speed / 940 + "s"),
                                    this.sliceLabels.push(ge)
                            }
                        }
                    }
                    return f
                }
            }, {
                key: "addListeners",
                value: function (n, i) {
                    var r = new $(this.ctx);
                    n.node.addEventListener("mouseenter", r.pathMouseEnter.bind(this, n)),
                        n.node.addEventListener("mouseleave", r.pathMouseLeave.bind(this, n)),
                        n.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, n.node, i)),
                        n.node.addEventListener("mousedown", r.pathMouseDown.bind(this, n)),
                    this.donutDataLabels.total.showAlways || (n.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, n.node, i)),
                        n.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, n.node, i)))
                }
            }, {
                key: "animatePaths",
                value: function (n, i) {
                    var r = this.w
                        ,
                        c = i.endAngle < i.startAngle ? this.fullAngle + i.endAngle - i.startAngle : i.endAngle - i.startAngle
                        , d = c
                        , h = i.startAngle
                        , f = i.startAngle;
                    i.prevStartAngle !== void 0 && i.prevEndAngle !== void 0 && (h = i.prevEndAngle,
                        d = i.prevEndAngle < i.prevStartAngle ? this.fullAngle + i.prevEndAngle - i.prevStartAngle : i.prevEndAngle - i.prevStartAngle),
                    i.i === r.config.series.length - 1 && (c + f > this.fullAngle ? i.endAngle = i.endAngle - (c + f) : c + f < this.fullAngle && (i.endAngle = i.endAngle + (this.fullAngle - (c + f)))),
                    c === this.fullAngle && (c = this.fullAngle - .01),
                        this.animateArc(n, h, f, c, d, i)
                }
            }, {
                key: "animateArc",
                value: function (n, i, r, c, d, h) {
                    var f, m = this, x = this.w, S = new O(this.ctx), _ = h.size;
                    (isNaN(i) || isNaN(d)) && (i = r,
                        d = c,
                        h.dur = 0);
                    var k = c
                        , L = r
                        , N = i < r ? this.fullAngle + i - r : i - r;
                    x.globals.dataChanged && h.shouldSetPrevPaths && h.prevEndAngle && (f = m.getPiePath({
                        me: m,
                        startAngle: h.prevStartAngle,
                        angle: h.prevEndAngle < h.prevStartAngle ? this.fullAngle + h.prevEndAngle - h.prevStartAngle : h.prevEndAngle - h.prevStartAngle,
                        size: _
                    }),
                        n.attr({
                            d: f
                        })),
                        h.dur !== 0 ? n.animate(h.dur, x.globals.easing, h.animBeginArr[h.i]).afterAll(function () {
                            m.chartType !== "pie" && m.chartType !== "donut" && m.chartType !== "polarArea" || this.animate(x.config.chart.animations.dynamicAnimation.speed).attr({
                                "stroke-width": m.strokeWidth
                            }),
                            h.i === x.config.series.length - 1 && S.animationCompleted(n)
                        }).during(function (H) {
                            k = N + (c - N) * H,
                            h.animateStartingPos && (k = d + (c - d) * H,
                                L = i - d + (r - (i - d)) * H),
                                f = m.getPiePath({
                                    me: m,
                                    startAngle: L,
                                    angle: k,
                                    size: _
                                }),
                                n.node.setAttribute("data:pathOrig", f),
                                n.attr({
                                    d: f
                                })
                        }) : (f = m.getPiePath({
                            me: m,
                            startAngle: L,
                            angle: c,
                            size: _
                        }),
                        h.isTrack || (x.globals.animationEnded = !0),
                            n.node.setAttribute("data:pathOrig", f),
                            n.attr({
                                d: f,
                                "stroke-width": m.strokeWidth
                            }))
                }
            }, {
                key: "pieClicked",
                value: function (n) {
                    var i, r = this.w, c = this, d = c.sliceSizes[n] + (r.config.plotOptions.pie.expandOnClick ? 4 : 0),
                        h = r.globals.dom.Paper.select(".apexcharts-".concat(c.chartType.toLowerCase(), "-slice-").concat(n)).members[0];
                    if (h.attr("data:pieClicked") !== "true") {
                        var f = r.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");
                        Array.prototype.forEach.call(f, function (_) {
                            _.setAttribute("data:pieClicked", "false");
                            var k = _.getAttribute("data:pathOrig");
                            k && _.setAttribute("d", k)
                        }),
                            h.attr("data:pieClicked", "true");
                        var m = parseInt(h.attr("data:startAngle"), 10)
                            , x = parseInt(h.attr("data:angle"), 10);
                        i = c.getPiePath({
                            me: c,
                            startAngle: m,
                            angle: x,
                            size: d
                        }),
                        x !== 360 && h.plot(i)
                    } else {
                        h.attr({
                            "data:pieClicked": "false"
                        }),
                            this.revertDataLabelsInner(h.node, this.donutDataLabels);
                        var S = h.attr("data:pathOrig");
                        h.attr({
                            d: S
                        })
                    }
                }
            }, {
                key: "getChangedPath",
                value: function (n, i) {
                    var r = "";
                    return this.dynamicAnim && this.w.globals.dataChanged && (r = this.getPiePath({
                        me: this,
                        startAngle: n,
                        angle: i - n,
                        size: this.size
                    })),
                        r
                }
            }, {
                key: "getPiePath",
                value: function (n) {
                    var i, r = n.me, c = n.startAngle, d = n.angle, h = n.size, f = new $(this.ctx), m = c,
                        x = Math.PI * (m - 90) / 180, S = d + c;
                    Math.ceil(S) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle && (S = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - .01),
                    Math.ceil(S) > this.fullAngle && (S -= this.fullAngle);
                    var _ = Math.PI * (S - 90) / 180
                        , k = r.centerX + h * Math.cos(x)
                        , L = r.centerY + h * Math.sin(x)
                        , N = r.centerX + h * Math.cos(_)
                        , H = r.centerY + h * Math.sin(_)
                        , z = M.polarToCartesian(r.centerX, r.centerY, r.donutSize, S)
                        , q = M.polarToCartesian(r.centerX, r.centerY, r.donutSize, m)
                        , Q = d > 180 ? 1 : 0
                        , b = ["M", k, L, "A", h, h, 0, Q, 1, N, H];
                    return i = r.chartType === "donut" ? [].concat(b, ["L", z.x, z.y, "A", r.donutSize, r.donutSize, 0, Q, 0, q.x, q.y, "L", k, L, "z"]).join(" ") : r.chartType === "pie" || r.chartType === "polarArea" ? [].concat(b, ["L", r.centerX, r.centerY, "L", k, L]).join(" ") : [].concat(b).join(" "),
                        f.roundPathCorners(i, 2 * this.strokeWidth)
                }
            }, {
                key: "drawPolarElements",
                value: function (n) {
                    var i = this.w
                        , r = new dt(this.ctx)
                        , c = new $(this.ctx)
                        , d = new hc(this.ctx)
                        , h = c.group()
                        , f = c.group()
                        , m = r.niceScale(0, Math.ceil(this.maxY), i.config.yaxis[0].tickAmount, 0, !0)
                        , x = m.result.reverse()
                        , S = m.result.length;
                    this.maxY = m.niceMax;
                    for (var _ = i.globals.radialSize, k = _ / (S - 1), L = 0; L < S - 1; L++) {
                        var N = c.drawCircle(_);
                        if (N.attr({
                            cx: this.centerX,
                            cy: this.centerY,
                            fill: "none",
                            "stroke-width": i.config.plotOptions.polarArea.rings.strokeWidth,
                            stroke: i.config.plotOptions.polarArea.rings.strokeColor
                        }),
                            i.config.yaxis[0].show) {
                            var H = d.drawYAxisTexts(this.centerX, this.centerY - _ + parseInt(i.config.yaxis[0].labels.style.fontSize, 10) / 2, L, x[L]);
                            f.add(H)
                        }
                        h.add(N),
                            _ -= k
                    }
                    this.drawSpokes(n),
                        n.add(h),
                        n.add(f)
                }
            }, {
                key: "renderInnerDataLabels",
                value: function (n, i) {
                    var r = this.w
                        , c = new $(this.ctx)
                        , d = c.group({
                        class: "apexcharts-datalabels-group",
                        transform: "translate(".concat(i.translateX ? i.translateX : 0, ", ").concat(i.translateY ? i.translateY : 0, ") scale(").concat(r.config.plotOptions.pie.customScale, ")")
                    })
                        , h = n.total.show;
                    d.node.style.opacity = i.opacity;
                    var f, m, x = i.centerX, S = i.centerY;
                    f = n.name.color === void 0 ? r.globals.colors[0] : n.name.color;
                    var _ = n.name.fontSize
                        , k = n.name.fontFamily
                        , L = n.name.fontWeight;
                    m = n.value.color === void 0 ? r.config.chart.foreColor : n.value.color;
                    var N = n.value.formatter
                        , H = ""
                        , z = "";
                    if (h ? (f = n.total.color,
                        _ = n.total.fontSize,
                        k = n.total.fontFamily,
                        L = n.total.fontWeight,
                        z = n.total.label,
                        H = n.total.formatter(r)) : r.globals.series.length === 1 && (H = N(r.globals.series[0], r),
                        z = r.globals.seriesNames[0]),
                    z && (z = n.name.formatter(z, n.total.show, r)),
                        n.name.show) {
                        var q = c.drawText({
                            x,
                            y: S + parseFloat(n.name.offsetY),
                            text: z,
                            textAnchor: "middle",
                            foreColor: f,
                            fontSize: _,
                            fontWeight: L,
                            fontFamily: k
                        });
                        q.node.classList.add("apexcharts-datalabel-label"),
                            d.add(q)
                    }
                    if (n.value.show) {
                        var Q = n.name.show ? parseFloat(n.value.offsetY) + 16 : n.value.offsetY
                            , b = c.drawText({
                            x,
                            y: S + Q,
                            text: H,
                            textAnchor: "middle",
                            foreColor: m,
                            fontWeight: n.value.fontWeight,
                            fontSize: n.value.fontSize,
                            fontFamily: n.value.fontFamily
                        });
                        b.node.classList.add("apexcharts-datalabel-value"),
                            d.add(b)
                    }
                    return d
                }
            }, {
                key: "printInnerLabels",
                value: function (n, i, r, c) {
                    var d, h = this.w;
                    c ? d = n.name.color === void 0 ? h.globals.colors[parseInt(c.parentNode.getAttribute("rel"), 10) - 1] : n.name.color : h.globals.series.length > 1 && n.total.show && (d = n.total.color);
                    var f = h.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label")
                        , m = h.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
                    r = (0,
                        n.value.formatter)(r, h),
                    c || typeof n.total.formatter != "function" || (r = n.total.formatter(h));
                    var x = i === n.total.label;
                    i = n.name.formatter(i, x, h),
                    f !== null && (f.textContent = i),
                    m !== null && (m.textContent = r),
                    f !== null && (f.style.fill = d)
                }
            }, {
                key: "printDataLabelsInner",
                value: function (n, i) {
                    var r = this.w
                        , c = n.getAttribute("data:value")
                        , d = r.globals.seriesNames[parseInt(n.parentNode.getAttribute("rel"), 10) - 1];
                    r.globals.series.length > 1 && this.printInnerLabels(i, d, c, n);
                    var h = r.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
                    h !== null && (h.style.opacity = 1)
                }
            }, {
                key: "drawSpokes",
                value: function (n) {
                    var i = this
                        , r = this.w
                        , c = new $(this.ctx)
                        , d = r.config.plotOptions.polarArea.spokes;
                    if (d.strokeWidth !== 0) {
                        for (var h = [], f = 360 / r.globals.series.length, m = 0; m < r.globals.series.length; m++)
                            h.push(M.polarToCartesian(this.centerX, this.centerY, r.globals.radialSize, r.config.plotOptions.pie.startAngle + f * m));
                        h.forEach(function (x, S) {
                            var _ = c.drawLine(x.x, x.y, i.centerX, i.centerY, Array.isArray(d.connectorColors) ? d.connectorColors[S] : d.connectorColors);
                            n.add(_)
                        })
                    }
                }
            }, {
                key: "revertDataLabelsInner",
                value: function (n, i, r) {
                    var c = this
                        , d = this.w
                        , h = d.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group")
                        , f = !1
                        , m = d.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area")
                        , x = function (k) {
                        var L = k.makeSliceOut
                            , N = k.printLabel;
                        Array.prototype.forEach.call(m, function (H) {
                            H.getAttribute("data:pieClicked") === "true" && (L && (f = !0),
                            N && c.printDataLabelsInner(H, i))
                        })
                    };
                    if (x({
                        makeSliceOut: !0,
                        printLabel: !1
                    }),
                    i.total.show && d.globals.series.length > 1)
                        f && !i.total.showAlways ? x({
                            makeSliceOut: !1,
                            printLabel: !0
                        }) : this.printInnerLabels(i, i.total.label, i.total.formatter(d));
                    else if (x({
                        makeSliceOut: !1,
                        printLabel: !0
                    }),
                        !f)
                        if (d.globals.selectedDataPoints.length && d.globals.series.length > 1)
                            if (d.globals.selectedDataPoints[0].length > 0) {
                                var S = d.globals.selectedDataPoints[0]
                                    ,
                                    _ = d.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(S));
                                this.printDataLabelsInner(_, i)
                            } else
                                h && d.globals.selectedDataPoints.length && d.globals.selectedDataPoints[0].length === 0 && (h.style.opacity = 0);
                        else
                            h && d.globals.series.length > 1 && (h.style.opacity = 0)
                }
            }]),
                j
        }()
            , pc = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.chartType = this.w.config.chart.type,
                    this.initialAnim = this.w.config.chart.animations.enabled,
                    this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled,
                    this.animDur = 0;
                var i = this.w;
                this.graphics = new $(this.ctx),
                    this.lineColorArr = i.globals.stroke.colors !== void 0 ? i.globals.stroke.colors : i.globals.colors,
                    this.defaultSize = i.globals.svgHeight < i.globals.svgWidth ? i.globals.gridHeight + 1.5 * i.globals.goldenPadding : i.globals.gridWidth,
                    this.isLog = i.config.yaxis[0].logarithmic,
                    this.coreUtils = new V(this.ctx),
                    this.maxValue = this.isLog ? this.coreUtils.getLogVal(i.globals.maxY, 0) : i.globals.maxY,
                    this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : i.globals.minY,
                    this.polygons = i.config.plotOptions.radar.polygons,
                    this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0,
                    this.size = this.defaultSize / 2.1 - this.strokeWidth - i.config.chart.dropShadow.blur,
                i.config.xaxis.labels.show && (this.size = this.size - i.globals.xAxisLabelsWidth / 1.75),
                i.config.plotOptions.radar.size !== void 0 && (this.size = i.config.plotOptions.radar.size),
                    this.dataRadiusOfPercent = [],
                    this.dataRadius = [],
                    this.angleArr = [],
                    this.yaxisLabelsTextsPos = []
            }

            return p(j, [{
                key: "draw",
                value: function (n) {
                    var i = this
                        , r = this.w
                        , c = new je(this.ctx)
                        , d = []
                        , h = new mt(this.ctx);
                    n.length && (this.dataPointsLen = n[r.globals.maxValsInArrayIndex].length),
                        this.disAngle = 2 * Math.PI / this.dataPointsLen;
                    var f = r.globals.gridWidth / 2
                        , m = r.globals.gridHeight / 2
                        , x = f + r.config.plotOptions.radar.offsetX
                        , S = m + r.config.plotOptions.radar.offsetY
                        , _ = this.graphics.group({
                        class: "apexcharts-radar-series apexcharts-plot-series",
                        transform: "translate(".concat(x || 0, ", ").concat(S || 0, ")")
                    })
                        , k = []
                        , L = null
                        , N = null;
                    if (this.yaxisLabels = this.graphics.group({
                        class: "apexcharts-yaxis"
                    }),
                        n.forEach(function (z, q) {
                            var Q = z.length === r.globals.dataPoints
                                , b = i.graphics.group().attr({
                                class: "apexcharts-series",
                                "data:longestSeries": Q,
                                seriesName: M.escapeString(r.globals.seriesNames[q]),
                                rel: q + 1,
                                "data:realIndex": q
                            });
                            i.dataRadiusOfPercent[q] = [],
                                i.dataRadius[q] = [],
                                i.angleArr[q] = [],
                                z.forEach(function (Fe, Je) {
                                    var ut = Math.abs(i.maxValue - i.minValue);
                                    Fe += Math.abs(i.minValue),
                                    i.isLog && (Fe = i.coreUtils.getLogVal(Fe, 0)),
                                        i.dataRadiusOfPercent[q][Je] = Fe / ut,
                                        i.dataRadius[q][Je] = i.dataRadiusOfPercent[q][Je] * i.size,
                                        i.angleArr[q][Je] = Je * i.disAngle
                                }),
                                k = i.getDataPointsPos(i.dataRadius[q], i.angleArr[q]);
                            var E = i.createPaths(k, {
                                x: 0,
                                y: 0
                            });
                            L = i.graphics.group({
                                class: "apexcharts-series-markers-wrap apexcharts-element-hidden"
                            }),
                                N = i.graphics.group({
                                    class: "apexcharts-datalabels",
                                    "data:realIndex": q
                                }),
                                r.globals.delayedElements.push({
                                    el: L.node,
                                    index: q
                                });
                            var B = {
                                i: q,
                                realIndex: q,
                                animationDelay: q,
                                initialSpeed: r.config.chart.animations.speed,
                                dataChangeSpeed: r.config.chart.animations.dynamicAnimation.speed,
                                className: "apexcharts-radar",
                                shouldClipToGrid: !1,
                                bindEventsOnPaths: !1,
                                stroke: r.globals.stroke.colors[q],
                                strokeLineCap: r.config.stroke.lineCap
                            }
                                , X = null;
                            r.globals.previousPaths.length > 0 && (X = i.getPreviousPath(q));
                            for (var K = 0; K < E.linePathsTo.length; K++) {
                                var ee = i.graphics.renderPaths(a(a({}, B), {}, {
                                    pathFrom: X === null ? E.linePathsFrom[K] : X,
                                    pathTo: E.linePathsTo[K],
                                    strokeWidth: Array.isArray(i.strokeWidth) ? i.strokeWidth[q] : i.strokeWidth,
                                    fill: "none",
                                    drawShadow: !1
                                }));
                                b.add(ee);
                                var pe = c.fillPath({
                                    seriesNumber: q
                                })
                                    , ge = i.graphics.renderPaths(a(a({}, B), {}, {
                                    pathFrom: X === null ? E.areaPathsFrom[K] : X,
                                    pathTo: E.areaPathsTo[K],
                                    strokeWidth: 0,
                                    fill: pe,
                                    drawShadow: !1
                                }));
                                if (r.config.chart.dropShadow.enabled) {
                                    var Ie = new F(i.ctx)
                                        , $e = r.config.chart.dropShadow;
                                    Ie.dropShadow(ge, Object.assign({}, $e, {
                                        noUserSpaceOnUse: !0
                                    }), q)
                                }
                                b.add(ge)
                            }
                            z.forEach(function (Fe, Je) {
                                var ut = new tt(i.ctx).getMarkerConfig({
                                    cssClass: "apexcharts-marker",
                                    seriesIndex: q,
                                    dataPointIndex: Je
                                })
                                    , yt = i.graphics.drawMarker(k[Je].x, k[Je].y, ut);
                                yt.attr("rel", Je),
                                    yt.attr("j", Je),
                                    yt.attr("index", q),
                                    yt.node.setAttribute("default-marker-size", ut.pSize);
                                var It = i.graphics.group({
                                    class: "apexcharts-series-markers"
                                });
                                It && It.add(yt),
                                    L.add(It),
                                    b.add(L);
                                var Nt = r.config.dataLabels;
                                if (Nt.enabled) {
                                    var Lt = Nt.formatter(r.globals.series[q][Je], {
                                        seriesIndex: q,
                                        dataPointIndex: Je,
                                        w: r
                                    });
                                    h.plotDataLabelsText({
                                        x: k[Je].x,
                                        y: k[Je].y,
                                        text: Lt,
                                        textAnchor: "middle",
                                        i: q,
                                        j: q,
                                        parent: N,
                                        offsetCorrection: !1,
                                        dataLabelsConfig: a({}, Nt)
                                    })
                                }
                                b.add(N)
                            }),
                                d.push(b)
                        }),
                        this.drawPolygons({
                            parent: _
                        }),
                        r.config.xaxis.labels.show) {
                        var H = this.drawXAxisTexts();
                        _.add(H)
                    }
                    return d.forEach(function (z) {
                        _.add(z)
                    }),
                        _.add(this.yaxisLabels),
                        _
                }
            }, {
                key: "drawPolygons",
                value: function (n) {
                    for (var i = this, r = this.w, c = n.parent, d = new hc(this.ctx), h = r.globals.yAxisScale[0].result.reverse(), f = h.length, m = [], x = this.size / (f - 1), S = 0; S < f; S++)
                        m[S] = x * S;
                    m.reverse();
                    var _ = []
                        , k = [];
                    m.forEach(function (L, N) {
                        var H = M.getPolygonPos(L, i.dataPointsLen)
                            , z = "";
                        H.forEach(function (q, Q) {
                            if (N === 0) {
                                var b = i.graphics.drawLine(q.x, q.y, 0, 0, Array.isArray(i.polygons.connectorColors) ? i.polygons.connectorColors[Q] : i.polygons.connectorColors);
                                k.push(b)
                            }
                            Q === 0 && i.yaxisLabelsTextsPos.push({
                                x: q.x,
                                y: q.y
                            }),
                                z += q.x + "," + q.y + " "
                        }),
                            _.push(z)
                    }),
                        _.forEach(function (L, N) {
                            var H = i.polygons.strokeColors
                                , z = i.polygons.strokeWidth
                                ,
                                q = i.graphics.drawPolygon(L, Array.isArray(H) ? H[N] : H, Array.isArray(z) ? z[N] : z, r.globals.radarPolygons.fill.colors[N]);
                            c.add(q)
                        }),
                        k.forEach(function (L) {
                            c.add(L)
                        }),
                    r.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach(function (L, N) {
                        var H = d.drawYAxisTexts(L.x, L.y, N, h[N]);
                        i.yaxisLabels.add(H)
                    })
                }
            }, {
                key: "drawXAxisTexts",
                value: function () {
                    var n = this
                        , i = this.w
                        , r = i.config.xaxis.labels
                        , c = this.graphics.group({
                        class: "apexcharts-xaxis"
                    })
                        , d = M.getPolygonPos(this.size, this.dataPointsLen);
                    return i.globals.labels.forEach(function (h, f) {
                        var m = i.config.xaxis.labels.formatter
                            , x = new mt(n.ctx);
                        if (d[f]) {
                            var S = n.getTextPos(d[f], n.size)
                                , _ = m(h, {
                                seriesIndex: -1,
                                dataPointIndex: f,
                                w: i
                            });
                            x.plotDataLabelsText({
                                x: S.newX,
                                y: S.newY,
                                text: _,
                                textAnchor: S.textAnchor,
                                i: f,
                                j: f,
                                parent: c,
                                color: Array.isArray(r.style.colors) && r.style.colors[f] ? r.style.colors[f] : "#a8a8a8",
                                dataLabelsConfig: a({
                                    textAnchor: S.textAnchor,
                                    dropShadow: {
                                        enabled: !1
                                    }
                                }, r),
                                offsetCorrection: !1
                            })
                        }
                    }),
                        c
                }
            }, {
                key: "createPaths",
                value: function (n, i) {
                    var r = this
                        , c = []
                        , d = []
                        , h = []
                        , f = [];
                    if (n.length) {
                        d = [this.graphics.move(i.x, i.y)],
                            f = [this.graphics.move(i.x, i.y)];
                        var m = this.graphics.move(n[0].x, n[0].y)
                            , x = this.graphics.move(n[0].x, n[0].y);
                        n.forEach(function (S, _) {
                            m += r.graphics.line(S.x, S.y),
                                x += r.graphics.line(S.x, S.y),
                            _ === n.length - 1 && (m += "Z",
                                x += "Z")
                        }),
                            c.push(m),
                            h.push(x)
                    }
                    return {
                        linePathsFrom: d,
                        linePathsTo: c,
                        areaPathsFrom: f,
                        areaPathsTo: h
                    }
                }
            }, {
                key: "getTextPos",
                value: function (n, i) {
                    var r = "middle"
                        , c = n.x
                        , d = n.y;
                    return Math.abs(n.x) >= 10 ? n.x > 0 ? (r = "start",
                        c += 10) : n.x < 0 && (r = "end",
                        c -= 10) : r = "middle",
                    Math.abs(n.y) >= i - 10 && (n.y < 0 ? d -= 10 : n.y > 0 && (d += 10)),
                        {
                            textAnchor: r,
                            newX: c,
                            newY: d
                        }
                }
            }, {
                key: "getPreviousPath",
                value: function (n) {
                    for (var i = this.w, r = null, c = 0; c < i.globals.previousPaths.length; c++) {
                        var d = i.globals.previousPaths[c];
                        d.paths.length > 0 && parseInt(d.realIndex, 10) === parseInt(n, 10) && i.globals.previousPaths[c].paths[0] !== void 0 && (r = i.globals.previousPaths[c].paths[0].d)
                    }
                    return r
                }
            }, {
                key: "getDataPointsPos",
                value: function (n, i) {
                    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.dataPointsLen;
                    n = n || [],
                        i = i || [];
                    for (var c = [], d = 0; d < r; d++) {
                        var h = {};
                        h.x = n[d] * Math.sin(i[d]),
                            h.y = -n[d] * Math.cos(i[d]),
                            c.push(h)
                    }
                    return c
                }
            }]),
                j
        }()
            , Ed = function (j) {
            y(i, fc);
            var n = T(i);

            function i(r) {
                var c;
                l(this, i),
                    (c = n.call(this, r)).ctx = r,
                    c.w = r.w,
                    c.animBeginArr = [0],
                    c.animDur = 0;
                var d = c.w;
                return c.startAngle = d.config.plotOptions.radialBar.startAngle,
                    c.endAngle = d.config.plotOptions.radialBar.endAngle,
                    c.totalAngle = Math.abs(d.config.plotOptions.radialBar.endAngle - d.config.plotOptions.radialBar.startAngle),
                    c.trackStartAngle = d.config.plotOptions.radialBar.track.startAngle,
                    c.trackEndAngle = d.config.plotOptions.radialBar.track.endAngle,
                    c.barLabels = c.w.config.plotOptions.radialBar.barLabels,
                    c.donutDataLabels = c.w.config.plotOptions.radialBar.dataLabels,
                    c.radialDataLabels = c.donutDataLabels,
                c.trackStartAngle || (c.trackStartAngle = c.startAngle),
                c.trackEndAngle || (c.trackEndAngle = c.endAngle),
                c.endAngle === 360 && (c.endAngle = 359.99),
                    c.margin = parseInt(d.config.plotOptions.radialBar.track.margin, 10),
                    c.onBarLabelClick = c.onBarLabelClick.bind(C(c)),
                    c
            }

            return p(i, [{
                key: "draw",
                value: function (r) {
                    var c = this.w
                        , d = new $(this.ctx)
                        , h = d.group({
                        class: "apexcharts-radialbar"
                    });
                    if (c.globals.noData)
                        return h;
                    var f = d.group()
                        , m = this.defaultSize / 2
                        , x = c.globals.gridWidth / 2
                        , S = this.defaultSize / 2.05;
                    c.config.chart.sparkline.enabled || (S = S - c.config.stroke.width - c.config.chart.dropShadow.blur);
                    var _ = c.globals.fill.colors;
                    if (c.config.plotOptions.radialBar.track.show) {
                        var k = this.drawTracks({
                            size: S,
                            centerX: x,
                            centerY: m,
                            colorArr: _,
                            series: r
                        });
                        f.add(k)
                    }
                    var L = this.drawArcs({
                        size: S,
                        centerX: x,
                        centerY: m,
                        colorArr: _,
                        series: r
                    })
                        , N = 360;
                    c.config.plotOptions.radialBar.startAngle < 0 && (N = this.totalAngle);
                    var H = (360 - N) / 360;
                    if (c.globals.radialSize = S - S * H,
                        this.radialDataLabels.value.show) {
                        var z = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);
                        c.globals.radialSize += z * H
                    }
                    return f.add(L.g),
                    c.config.plotOptions.radialBar.hollow.position === "front" && (L.g.add(L.elHollow),
                    L.dataLabels && L.g.add(L.dataLabels)),
                        h.add(f),
                        h
                }
            }, {
                key: "drawTracks",
                value: function (r) {
                    var c = this.w
                        , d = new $(this.ctx)
                        , h = d.group({
                        class: "apexcharts-tracks"
                    })
                        , f = new F(this.ctx)
                        , m = new je(this.ctx)
                        , x = this.getStrokeWidth(r);
                    r.size = r.size - x / 2;
                    for (var S = 0; S < r.series.length; S++) {
                        var _ = d.group({
                            class: "apexcharts-radialbar-track apexcharts-track"
                        });
                        h.add(_),
                            _.attr({
                                rel: S + 1
                            }),
                            r.size = r.size - x - this.margin;
                        var k = c.config.plotOptions.radialBar.track
                            , L = m.fillPath({
                            seriesNumber: 0,
                            size: r.size,
                            fillColors: Array.isArray(k.background) ? k.background[S] : k.background,
                            solid: !0
                        })
                            , N = this.trackStartAngle
                            , H = this.trackEndAngle;
                        Math.abs(H) + Math.abs(N) >= 360 && (H = 360 - Math.abs(this.startAngle) - .1);
                        var z = d.drawPath({
                            d: "",
                            stroke: L,
                            strokeWidth: x * parseInt(k.strokeWidth, 10) / 100,
                            fill: "none",
                            strokeOpacity: k.opacity,
                            classes: "apexcharts-radialbar-area"
                        });
                        if (k.dropShadow.enabled) {
                            var q = k.dropShadow;
                            f.dropShadow(z, q)
                        }
                        _.add(z),
                            z.attr("id", "apexcharts-radialbarTrack-" + S),
                            this.animatePaths(z, {
                                centerX: r.centerX,
                                centerY: r.centerY,
                                endAngle: H,
                                startAngle: N,
                                size: r.size,
                                i: S,
                                totalItems: 2,
                                animBeginArr: 0,
                                dur: 0,
                                isTrack: !0,
                                easing: c.globals.easing
                            })
                    }
                    return h
                }
            }, {
                key: "drawArcs",
                value: function (r) {
                    var c = this.w
                        , d = new $(this.ctx)
                        , h = new je(this.ctx)
                        , f = new F(this.ctx)
                        , m = d.group()
                        , x = this.getStrokeWidth(r);
                    r.size = r.size - x / 2;
                    var S = c.config.plotOptions.radialBar.hollow.background
                        ,
                        _ = r.size - x * r.series.length - this.margin * r.series.length - x * parseInt(c.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2
                        , k = _ - c.config.plotOptions.radialBar.hollow.margin;
                    c.config.plotOptions.radialBar.hollow.image !== void 0 && (S = this.drawHollowImage(r, m, _, S));
                    var L = this.drawHollow({
                        size: k,
                        centerX: r.centerX,
                        centerY: r.centerY,
                        fill: S || "transparent"
                    });
                    if (c.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                        var N = c.config.plotOptions.radialBar.hollow.dropShadow;
                        f.dropShadow(L, N)
                    }
                    var H = 1;
                    !this.radialDataLabels.total.show && c.globals.series.length > 1 && (H = 0);
                    var z = null;
                    this.radialDataLabels.show && (z = this.renderInnerDataLabels(this.radialDataLabels, {
                        hollowSize: _,
                        centerX: r.centerX,
                        centerY: r.centerY,
                        opacity: H
                    })),
                    c.config.plotOptions.radialBar.hollow.position === "back" && (m.add(L),
                    z && m.add(z));
                    var q = !1;
                    c.config.plotOptions.radialBar.inverseOrder && (q = !0);
                    for (var Q = q ? r.series.length - 1 : 0; q ? Q >= 0 : Q < r.series.length; q ? Q-- : Q++) {
                        var b = d.group({
                            class: "apexcharts-series apexcharts-radial-series",
                            seriesName: M.escapeString(c.globals.seriesNames[Q])
                        });
                        m.add(b),
                            b.attr({
                                rel: Q + 1,
                                "data:realIndex": Q
                            }),
                            this.ctx.series.addCollapsedClassToSeries(b, Q),
                            r.size = r.size - x - this.margin;
                        var E = h.fillPath({
                            seriesNumber: Q,
                            size: r.size,
                            value: r.series[Q]
                        })
                            , B = this.startAngle
                            , X = void 0
                            , K = M.negToZero(r.series[Q] > 100 ? 100 : r.series[Q]) / 100
                            , ee = Math.round(this.totalAngle * K) + this.startAngle
                            , pe = void 0;
                        c.globals.dataChanged && (X = this.startAngle,
                            pe = Math.round(this.totalAngle * M.negToZero(c.globals.previousPaths[Q]) / 100) + X),
                        Math.abs(ee) + Math.abs(B) >= 360 && (ee -= .01),
                        Math.abs(pe) + Math.abs(X) >= 360 && (pe -= .01);
                        var ge = ee - B
                            ,
                            Ie = Array.isArray(c.config.stroke.dashArray) ? c.config.stroke.dashArray[Q] : c.config.stroke.dashArray
                            , $e = d.drawPath({
                                d: "",
                                stroke: E,
                                strokeWidth: x,
                                fill: "none",
                                fillOpacity: c.config.fill.opacity,
                                classes: "apexcharts-radialbar-area apexcharts-radialbar-slice-" + Q,
                                strokeDashArray: Ie
                            });
                        if ($.setAttrs($e.node, {
                            "data:angle": ge,
                            "data:value": r.series[Q]
                        }),
                            c.config.chart.dropShadow.enabled) {
                            var Fe = c.config.chart.dropShadow;
                            f.dropShadow($e, Fe, Q)
                        }
                        if (f.setSelectionFilter($e, 0, Q),
                            this.addListeners($e, this.radialDataLabels),
                            b.add($e),
                            $e.attr({
                                index: 0,
                                j: Q
                            }),
                            this.barLabels.enabled) {
                            var Je = M.polarToCartesian(r.centerX, r.centerY, r.size, B)
                                , ut = this.barLabels.formatter(c.globals.seriesNames[Q], {
                                seriesIndex: Q,
                                w: c
                            })
                                , yt = ["apexcharts-radialbar-label"];
                            this.barLabels.onClick || yt.push("apexcharts-no-click");
                            var It = this.barLabels.useSeriesColors ? c.globals.colors[Q] : c.config.chart.foreColor;
                            It || (It = c.config.chart.foreColor);
                            var Nt = Je.x - this.barLabels.margin
                                , Lt = Je.y
                                , es = d.drawText({
                                x: Nt,
                                y: Lt,
                                text: ut,
                                textAnchor: "end",
                                dominantBaseline: "middle",
                                fontFamily: this.barLabels.fontFamily,
                                fontWeight: this.barLabels.fontWeight,
                                fontSize: this.barLabels.fontSize,
                                foreColor: It,
                                cssClass: yt.join(" ")
                            });
                            es.on("click", this.onBarLabelClick),
                                es.attr({
                                    rel: Q + 1
                                }),
                            B !== 0 && es.attr({
                                "transform-origin": "".concat(Nt, " ").concat(Lt),
                                transform: "rotate(".concat(B, " 0 0)")
                            }),
                                b.add(es)
                        }
                        var ps = 0;
                        !this.initialAnim || c.globals.resized || c.globals.dataChanged || (ps = c.config.chart.animations.speed),
                        c.globals.dataChanged && (ps = c.config.chart.animations.dynamicAnimation.speed),
                            this.animDur = ps / (1.2 * r.series.length) + this.animDur,
                            this.animBeginArr.push(this.animDur),
                            this.animatePaths($e, {
                                centerX: r.centerX,
                                centerY: r.centerY,
                                endAngle: ee,
                                startAngle: B,
                                prevEndAngle: pe,
                                prevStartAngle: X,
                                size: r.size,
                                i: Q,
                                totalItems: 2,
                                animBeginArr: this.animBeginArr,
                                dur: ps,
                                shouldSetPrevPaths: !0,
                                easing: c.globals.easing
                            })
                    }
                    return {
                        g: m,
                        elHollow: L,
                        dataLabels: z
                    }
                }
            }, {
                key: "drawHollow",
                value: function (r) {
                    var c = new $(this.ctx).drawCircle(2 * r.size);
                    return c.attr({
                        class: "apexcharts-radialbar-hollow",
                        cx: r.centerX,
                        cy: r.centerY,
                        r: r.size,
                        fill: r.fill
                    }),
                        c
                }
            }, {
                key: "drawHollowImage",
                value: function (r, c, d, h) {
                    var f = this.w
                        , m = new je(this.ctx)
                        , x = M.randomId()
                        , S = f.config.plotOptions.radialBar.hollow.image;
                    if (f.config.plotOptions.radialBar.hollow.imageClipped)
                        m.clippedImgArea({
                            width: d,
                            height: d,
                            image: S,
                            patternID: "pattern".concat(f.globals.cuid).concat(x)
                        }),
                            h = "url(#pattern".concat(f.globals.cuid).concat(x, ")");
                    else {
                        var _ = f.config.plotOptions.radialBar.hollow.imageWidth
                            , k = f.config.plotOptions.radialBar.hollow.imageHeight;
                        if (_ === void 0 && k === void 0) {
                            var L = f.globals.dom.Paper.image(S).loaded(function (H) {
                                this.move(r.centerX - H.width / 2 + f.config.plotOptions.radialBar.hollow.imageOffsetX, r.centerY - H.height / 2 + f.config.plotOptions.radialBar.hollow.imageOffsetY)
                            });
                            c.add(L)
                        } else {
                            var N = f.globals.dom.Paper.image(S).loaded(function (H) {
                                this.move(r.centerX - _ / 2 + f.config.plotOptions.radialBar.hollow.imageOffsetX, r.centerY - k / 2 + f.config.plotOptions.radialBar.hollow.imageOffsetY),
                                    this.size(_, k)
                            });
                            c.add(N)
                        }
                    }
                    return h
                }
            }, {
                key: "getStrokeWidth",
                value: function (r) {
                    var c = this.w;
                    return r.size * (100 - parseInt(c.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (r.series.length + 1) - this.margin
                }
            }, {
                key: "onBarLabelClick",
                value: function (r) {
                    var c = parseInt(r.target.getAttribute("rel"), 10) - 1
                        , d = this.barLabels.onClick
                        , h = this.w;
                    d && d(h.globals.seriesNames[c], {
                        w: h,
                        seriesIndex: c
                    })
                }
            }]),
                i
        }()
            , br = function (j) {
            y(i, sa);
            var n = T(i);

            function i() {
                return l(this, i),
                    n.apply(this, arguments)
            }

            return p(i, [{
                key: "draw",
                value: function (r, c) {
                    var d = this.w
                        , h = new $(this.ctx);
                    this.rangeBarOptions = this.w.config.plotOptions.rangeBar,
                        this.series = r,
                        this.seriesRangeStart = d.globals.seriesRangeStart,
                        this.seriesRangeEnd = d.globals.seriesRangeEnd,
                        this.barHelpers.initVariables(r);
                    for (var f = h.group({
                        class: "apexcharts-rangebar-series apexcharts-plot-series"
                    }), m = 0; m < r.length; m++) {
                        var x, S, _, k, L = void 0, N = void 0, H = d.globals.comboCharts ? c[m] : m, z = h.group({
                            class: "apexcharts-series",
                            seriesName: M.escapeString(d.globals.seriesNames[H]),
                            rel: m + 1,
                            "data:realIndex": H
                        });
                        this.ctx.series.addCollapsedClassToSeries(z, H),
                        r[m].length > 0 && (this.visibleI = this.visibleI + 1);
                        var q = 0
                            , Q = 0;
                        this.yRatio.length > 1 && (this.yaxisIndex = H);
                        var b = this.barHelpers.initialPositions();
                        N = b.y,
                            k = b.zeroW,
                            L = b.x,
                            Q = b.barWidth,
                            q = b.barHeight,
                            x = b.xDivision,
                            S = b.yDivision,
                            _ = b.zeroH;
                        for (var E = h.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": H
                        }), B = h.group({
                            class: "apexcharts-rangebar-goals-markers"
                        }), X = 0; X < d.globals.dataPoints; X++) {
                            var K, ee = this.barHelpers.getStrokeWidth(m, X, H), pe = this.seriesRangeStart[m][X],
                                ge = this.seriesRangeEnd[m][X], Ie = null, $e = null, Fe = null, Je = {
                                    x: L,
                                    y: N,
                                    strokeWidth: ee,
                                    elSeries: z
                                }, ut = this.seriesLen;
                            if (d.config.plotOptions.bar.rangeBarGroupRows && (ut = 1),
                            d.config.series[m].data[X] === void 0)
                                break;
                            if (this.isHorizontal) {
                                Fe = N + q * this.visibleI;
                                var yt = (S - q * ut) / 2;
                                if (d.config.series[m].data[X].x) {
                                    var It = this.detectOverlappingBars({
                                        i: m,
                                        j: X,
                                        barYPosition: Fe,
                                        srty: yt,
                                        barHeight: q,
                                        yDivision: S,
                                        initPositions: b
                                    });
                                    q = It.barHeight,
                                        Fe = It.barYPosition
                                }
                                Q = (Ie = this.drawRangeBarPaths(a({
                                    indexes: {
                                        i: m,
                                        j: X,
                                        realIndex: H
                                    },
                                    barHeight: q,
                                    barYPosition: Fe,
                                    zeroW: k,
                                    yDivision: S,
                                    y1: pe,
                                    y2: ge
                                }, Je))).barWidth
                            } else {
                                d.globals.isXNumeric && (L = (d.globals.seriesX[m][X] - d.globals.minX) / this.xRatio - Q / 2),
                                    $e = L + Q * this.visibleI;
                                var Nt = (x - Q * ut) / 2;
                                if (d.config.series[m].data[X].x) {
                                    var Lt = this.detectOverlappingBars({
                                        i: m,
                                        j: X,
                                        barXPosition: $e,
                                        srtx: Nt,
                                        barWidth: Q,
                                        xDivision: x,
                                        initPositions: b
                                    });
                                    Q = Lt.barWidth,
                                        $e = Lt.barXPosition
                                }
                                q = (Ie = this.drawRangeColumnPaths(a({
                                    indexes: {
                                        i: m,
                                        j: X,
                                        realIndex: H
                                    },
                                    barWidth: Q,
                                    barXPosition: $e,
                                    zeroH: _,
                                    xDivision: x
                                }, Je))).barHeight
                            }
                            var es = this.barHelpers.drawGoalLine({
                                barXPosition: Ie.barXPosition,
                                barYPosition: Fe,
                                goalX: Ie.goalX,
                                goalY: Ie.goalY,
                                barHeight: q,
                                barWidth: Q
                            });
                            es && B.add(es),
                                N = Ie.y,
                                L = Ie.x;
                            var ps = this.barHelpers.getPathFillColor(r, m, X, H)
                                , zn = d.globals.stroke.colors[H];
                            this.renderSeries((g(K = {
                                realIndex: H,
                                pathFill: ps,
                                lineFill: zn,
                                j: X,
                                i: m,
                                x: L,
                                y: N,
                                y1: pe,
                                y2: ge,
                                pathFrom: Ie.pathFrom,
                                pathTo: Ie.pathTo,
                                strokeWidth: ee,
                                elSeries: z,
                                series: r,
                                barHeight: q,
                                barWidth: Q,
                                barXPosition: $e,
                                barYPosition: Fe
                            }, "barWidth", Q),
                                g(K, "elDataLabelsWrap", E),
                                g(K, "elGoalsMarkers", B),
                                g(K, "visibleSeries", this.visibleI),
                                g(K, "type", "rangebar"),
                                K))
                        }
                        f.add(z)
                    }
                    return f
                }
            }, {
                key: "detectOverlappingBars",
                value: function (r) {
                    var c = r.i
                        , d = r.j
                        , h = r.barYPosition
                        , f = r.barXPosition
                        , m = r.srty
                        , x = r.srtx
                        , S = r.barHeight
                        , _ = r.barWidth
                        , k = r.yDivision
                        , L = r.xDivision
                        , N = r.initPositions
                        , H = this.w
                        , z = []
                        , q = H.config.series[c].data[d].rangeName
                        , Q = H.config.series[c].data[d].x
                        , b = Array.isArray(Q) ? Q.join(" ") : Q
                        , E = H.globals.labels.map(function (X) {
                        return Array.isArray(X) ? X.join(" ") : X
                    }).indexOf(b)
                        , B = H.globals.seriesRange[c].findIndex(function (X) {
                        return X.x === b && X.overlaps.length > 0
                    });
                    return this.isHorizontal ? (h = H.config.plotOptions.bar.rangeBarGroupRows ? m + k * E : m + S * this.visibleI + k * E,
                    B > -1 && !H.config.plotOptions.bar.rangeBarOverlap && (z = H.globals.seriesRange[c][B].overlaps).indexOf(q) > -1 && (h = (S = N.barHeight / z.length) * this.visibleI + k * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + S * (this.visibleI + z.indexOf(q)) + k * E)) : (E > -1 && (f = H.config.plotOptions.bar.rangeBarGroupRows ? x + L * E : x + _ * this.visibleI + L * E),
                    B > -1 && !H.config.plotOptions.bar.rangeBarOverlap && (z = H.globals.seriesRange[c][B].overlaps).indexOf(q) > -1 && (f = (_ = N.barWidth / z.length) * this.visibleI + L * (100 - parseInt(this.barOptions.barWidth, 10)) / 100 / 2 + _ * (this.visibleI + z.indexOf(q)) + L * E)),
                        {
                            barYPosition: h,
                            barXPosition: f,
                            barHeight: S,
                            barWidth: _
                        }
                }
            }, {
                key: "drawRangeColumnPaths",
                value: function (r) {
                    var c = r.indexes
                        , d = r.x
                        , h = r.xDivision
                        , f = r.barWidth
                        , m = r.barXPosition
                        , x = r.zeroH
                        , S = this.w
                        , _ = c.i
                        , k = c.j
                        , L = this.yRatio[this.yaxisIndex]
                        , N = c.realIndex
                        , H = this.getRangeValue(N, k)
                        , z = Math.min(H.start, H.end)
                        , q = Math.max(H.start, H.end);
                    this.series[_][k] === void 0 || this.series[_][k] === null ? z = x : (z = x - z / L,
                        q = x - q / L);
                    var Q = Math.abs(q - z)
                        , b = this.barHelpers.getColumnPaths({
                        barXPosition: m,
                        barWidth: f,
                        y1: z,
                        y2: q,
                        strokeWidth: this.strokeWidth,
                        series: this.seriesRangeEnd,
                        realIndex: c.realIndex,
                        i: N,
                        j: k,
                        w: S
                    });
                    if (S.globals.isXNumeric) {
                        var E = this.getBarXForNumericXAxis({
                            x: d,
                            j: k,
                            realIndex: N,
                            barWidth: f
                        });
                        d = E.x,
                            m = E.barXPosition
                    } else
                        d += h;
                    return {
                        pathTo: b.pathTo,
                        pathFrom: b.pathFrom,
                        barHeight: Q,
                        x: d,
                        y: q,
                        goalY: this.barHelpers.getGoalValues("y", null, x, _, k),
                        barXPosition: m
                    }
                }
            }, {
                key: "drawRangeBarPaths",
                value: function (r) {
                    var c = r.indexes
                        , d = r.y
                        , h = r.y1
                        , f = r.y2
                        , m = r.yDivision
                        , x = r.barHeight
                        , S = r.barYPosition
                        , _ = r.zeroW
                        , k = this.w
                        , L = _ + h / this.invertedYRatio
                        , N = _ + f / this.invertedYRatio
                        , H = Math.abs(N - L)
                        , z = this.barHelpers.getBarpaths({
                        barYPosition: S,
                        barHeight: x,
                        x1: L,
                        x2: N,
                        strokeWidth: this.strokeWidth,
                        series: this.seriesRangeEnd,
                        i: c.realIndex,
                        realIndex: c.realIndex,
                        j: c.j,
                        w: k
                    });
                    return k.globals.isXNumeric || (d += m),
                        {
                            pathTo: z.pathTo,
                            pathFrom: z.pathFrom,
                            barWidth: H,
                            x: N,
                            goalX: this.barHelpers.getGoalValues("x", _, null, c.realIndex, c.j),
                            y: d
                        }
                }
            }, {
                key: "getRangeValue",
                value: function (r, c) {
                    var d = this.w;
                    return {
                        start: d.globals.seriesRangeStart[r][c],
                        end: d.globals.seriesRangeEnd[r][c]
                    }
                }
            }]),
                i
        }()
            , Td = function () {
            function j(n) {
                l(this, j),
                    this.w = n.w,
                    this.lineCtx = n
            }

            return p(j, [{
                key: "sameValueSeriesFix",
                value: function (n, i) {
                    var r = this.w;
                    if ((r.config.fill.type === "gradient" || r.config.fill.type[n] === "gradient") && new V(this.lineCtx.ctx, r).seriesHaveSameValues(n)) {
                        var c = i[n].slice();
                        c[c.length - 1] = c[c.length - 1] + 1e-6,
                            i[n] = c
                    }
                    return i
                }
            }, {
                key: "calculatePoints",
                value: function (n) {
                    var i = n.series
                        , r = n.realIndex
                        , c = n.x
                        , d = n.y
                        , h = n.i
                        , f = n.j
                        , m = n.prevY
                        , x = this.w
                        , S = []
                        , _ = [];
                    if (f === 0) {
                        var k = this.lineCtx.categoryAxisCorrection + x.config.markers.offsetX;
                        x.globals.isXNumeric && (k = (x.globals.seriesX[r][0] - x.globals.minX) / this.lineCtx.xRatio + x.config.markers.offsetX),
                            S.push(k),
                            _.push(M.isNumber(i[h][0]) ? m + x.config.markers.offsetY : null),
                            S.push(c + x.config.markers.offsetX),
                            _.push(M.isNumber(i[h][f + 1]) ? d + x.config.markers.offsetY : null)
                    } else
                        S.push(c + x.config.markers.offsetX),
                            _.push(M.isNumber(i[h][f + 1]) ? d + x.config.markers.offsetY : null);
                    return {
                        x: S,
                        y: _
                    }
                }
            }, {
                key: "checkPreviousPaths",
                value: function (n) {
                    for (var i = n.pathFromLine, r = n.pathFromArea, c = n.realIndex, d = this.w, h = 0; h < d.globals.previousPaths.length; h++) {
                        var f = d.globals.previousPaths[h];
                        (f.type === "line" || f.type === "area") && f.paths.length > 0 && parseInt(f.realIndex, 10) === parseInt(c, 10) && (f.type === "line" ? (this.lineCtx.appendPathFrom = !1,
                            i = d.globals.previousPaths[h].paths[0].d) : f.type === "area" && (this.lineCtx.appendPathFrom = !1,
                            r = d.globals.previousPaths[h].paths[0].d,
                        d.config.stroke.show && d.globals.previousPaths[h].paths[1] && (i = d.globals.previousPaths[h].paths[1].d)))
                    }
                    return {
                        pathFromLine: i,
                        pathFromArea: r
                    }
                }
            }, {
                key: "determineFirstPrevY",
                value: function (n) {
                    var i, r, c = n.i, d = n.series, h = n.prevY, f = n.lineYPosition, m = this.w,
                        x = m.config.chart.stacked && !m.globals.comboCharts || m.config.chart.stacked && m.globals.comboCharts && (!this.w.config.chart.stackOnlyBar || ((i = this.w.config.series[c]) === null || i === void 0 ? void 0 : i.type) === "bar");
                    if (((r = d[c]) === null || r === void 0 ? void 0 : r[0]) !== void 0)
                        h = (f = x && c > 0 ? this.lineCtx.prevSeriesY[c - 1][0] : this.lineCtx.zeroY) - d[c][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + 2 * (this.lineCtx.isReversed ? d[c][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0);
                    else if (x && c > 0 && d[c][0] === void 0) {
                        for (var S = c - 1; S >= 0; S--)
                            if (d[S][0] !== null && d[S][0] !== void 0) {
                                h = f = this.lineCtx.prevSeriesY[S][0];
                                break
                            }
                    }
                    return {
                        prevY: h,
                        lineYPosition: f
                    }
                }
            }]),
                j
        }()
            , Id = function (j) {
            for (var n, i, r, c, d = function (S) {
                for (var _ = [], k = S[0], L = S[1], N = _[0] = No(k, L), H = 1, z = S.length - 1; H < z; H++)
                    k = L,
                        L = S[H + 1],
                        _[H] = .5 * (N + (N = No(k, L)));
                return _[H] = N,
                    _
            }(j), h = j.length - 1, f = [], m = 0; m < h; m++)
                r = No(j[m], j[m + 1]),
                    Math.abs(r) < 1e-6 ? d[m] = d[m + 1] = 0 : (c = (n = d[m] / r) * n + (i = d[m + 1] / r) * i) > 9 && (c = 3 * r / Math.sqrt(c),
                        d[m] = c * n,
                        d[m + 1] = c * i);
            for (var x = 0; x <= h; x++)
                c = (j[Math.min(h, x + 1)][0] - j[Math.max(0, x - 1)][0]) / (6 * (1 + d[x] * d[x])),
                    f.push([c || 0, d[x] * c || 0]);
            return f
        }
            , Oo = function (j) {
            for (var n = "", i = 0; i < j.length; i++) {
                var r = j[i]
                    , c = r.length;
                c > 4 ? (n += "C".concat(r[0], ", ").concat(r[1]),
                    n += ", ".concat(r[2], ", ").concat(r[3]),
                    n += ", ".concat(r[4], ", ").concat(r[5])) : c > 2 && (n += "S".concat(r[0], ", ").concat(r[1]),
                    n += ", ".concat(r[2], ", ").concat(r[3]))
            }
            return n
        }
            , Ro = function (j) {
            var n = Id(j)
                , i = j[1]
                , r = j[0]
                , c = []
                , d = n[1]
                , h = n[0];
            c.push(r, [r[0] + h[0], r[1] + h[1], i[0] - d[0], i[1] - d[1], i[0], i[1]]);
            for (var f = 2, m = n.length; f < m; f++) {
                var x = j[f]
                    , S = n[f];
                c.push([x[0] - S[0], x[1] - S[1], x[0], x[1]])
            }
            return c
        };

        function No(j, n) {
            return (n[1] - j[1]) / (n[0] - j[0])
        }

        var Do = function () {
            function j(n, i, r) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.xyRatios = i,
                    this.pointsChart = !(this.w.config.chart.type !== "bubble" && this.w.config.chart.type !== "scatter") || r,
                    this.scatter = new ft(this.ctx),
                    this.noNegatives = this.w.globals.minX === Number.MAX_VALUE,
                    this.lineHelpers = new Td(this),
                    this.markers = new tt(this.ctx),
                    this.prevSeriesY = [],
                    this.categoryAxisCorrection = 0,
                    this.yaxisIndex = 0
            }

            return p(j, [{
                key: "draw",
                value: function (n, i, r, c) {
                    var d, h = this.w, f = new $(this.ctx), m = h.globals.comboCharts ? i : h.config.chart.type,
                        x = f.group({
                            class: "apexcharts-".concat(m, "-series apexcharts-plot-series")
                        }), S = new V(this.ctx, h);
                    this.yRatio = this.xyRatios.yRatio,
                        this.zRatio = this.xyRatios.zRatio,
                        this.xRatio = this.xyRatios.xRatio,
                        this.baseLineY = this.xyRatios.baseLineY,
                        n = S.getLogSeries(n),
                        this.yRatio = S.getLogYRatios(this.yRatio);
                    for (var _ = [], k = 0; k < n.length; k++) {
                        n = this.lineHelpers.sameValueSeriesFix(k, n);
                        var L = h.globals.comboCharts ? r[k] : k;
                        this._initSerieVariables(n, k, L);
                        var N = []
                            , H = []
                            , z = []
                            , q = h.globals.padHorizontal + this.categoryAxisCorrection;
                        this.ctx.series.addCollapsedClassToSeries(this.elSeries, L),
                        h.globals.isXNumeric && h.globals.seriesX.length > 0 && (q = (h.globals.seriesX[L][0] - h.globals.minX) / this.xRatio),
                            z.push(q);
                        var Q, b = q, E = void 0, B = b, X = this.zeroY, K = this.zeroY;
                        X = this.lineHelpers.determineFirstPrevY({
                            i: k,
                            series: n,
                            prevY: X,
                            lineYPosition: 0
                        }).prevY,
                            h.config.stroke.curve === "monotonCubic" && n[k][0] === null ? N.push(null) : N.push(X),
                            Q = X,
                        m === "rangeArea" && (E = K = this.lineHelpers.determineFirstPrevY({
                            i: k,
                            series: c,
                            prevY: K,
                            lineYPosition: 0
                        }).prevY,
                            H.push(K));
                        var ee = {
                            type: m,
                            series: n,
                            realIndex: L,
                            i: k,
                            x: q,
                            y: 1,
                            pX: b,
                            pY: Q,
                            pathsFrom: this._calculatePathsFrom({
                                type: m,
                                series: n,
                                i: k,
                                realIndex: L,
                                prevX: B,
                                prevY: X,
                                prevY2: K
                            }),
                            linePaths: [],
                            areaPaths: [],
                            seriesIndex: r,
                            lineYPosition: 0,
                            xArrj: z,
                            yArrj: N,
                            y2Arrj: H,
                            seriesRangeEnd: c
                        }
                            , pe = this._iterateOverDataPoints(a(a({}, ee), {}, {
                            iterations: m === "rangeArea" ? n[k].length - 1 : void 0,
                            isRangeStart: !0
                        }));
                        if (m === "rangeArea") {
                            var ge = this._calculatePathsFrom({
                                series: c,
                                i: k,
                                realIndex: L,
                                prevX: B,
                                prevY: K
                            })
                                , Ie = this._iterateOverDataPoints(a(a({}, ee), {}, {
                                series: c,
                                pY: E,
                                pathsFrom: ge,
                                iterations: c[k].length - 1,
                                isRangeStart: !1
                            }));
                            pe.linePaths[0] = Ie.linePath + pe.linePath,
                                pe.pathFromLine = Ie.pathFromLine + pe.pathFromLine
                        }
                        this._handlePaths({
                            type: m,
                            realIndex: L,
                            i: k,
                            paths: pe
                        }),
                            this.elSeries.add(this.elPointsMain),
                            this.elSeries.add(this.elDataLabelsWrap),
                            _.push(this.elSeries)
                    }
                    if (((d = h.config.series[0]) === null || d === void 0 ? void 0 : d.zIndex) !== void 0 && _.sort(function (Je, ut) {
                        return Number(Je.node.getAttribute("zIndex")) - Number(ut.node.getAttribute("zIndex"))
                    }),
                        h.config.chart.stacked)
                        for (var $e = _.length; $e > 0; $e--)
                            x.add(_[$e - 1]);
                    else
                        for (var Fe = 0; Fe < _.length; Fe++)
                            x.add(_[Fe]);
                    return x
                }
            }, {
                key: "_initSerieVariables",
                value: function (n, i, r) {
                    var c = this.w
                        , d = new $(this.ctx);
                    this.xDivision = c.globals.gridWidth / (c.globals.dataPoints - (c.config.xaxis.tickPlacement === "on" ? 1 : 0)),
                        this.strokeWidth = Array.isArray(c.config.stroke.width) ? c.config.stroke.width[r] : c.config.stroke.width,
                    this.yRatio.length > 1 && (this.yaxisIndex = r),
                        this.isReversed = c.config.yaxis[this.yaxisIndex] && c.config.yaxis[this.yaxisIndex].reversed,
                        this.zeroY = c.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? c.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0),
                        this.areaBottomY = this.zeroY,
                    (this.zeroY > c.globals.gridHeight || c.config.plotOptions.area.fillTo === "end") && (this.areaBottomY = c.globals.gridHeight),
                        this.categoryAxisCorrection = this.xDivision / 2,
                        this.elSeries = d.group({
                            class: "apexcharts-series",
                            zIndex: c.config.series[r].zIndex !== void 0 ? c.config.series[r].zIndex : r,
                            seriesName: M.escapeString(c.globals.seriesNames[r])
                        }),
                        this.elPointsMain = d.group({
                            class: "apexcharts-series-markers-wrap",
                            "data:realIndex": r
                        }),
                        this.elDataLabelsWrap = d.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": r
                        });
                    var h = n[i].length === c.globals.dataPoints;
                    this.elSeries.attr({
                        "data:longestSeries": h,
                        rel: i + 1,
                        "data:realIndex": r
                    }),
                        this.appendPathFrom = !0
                }
            }, {
                key: "_calculatePathsFrom",
                value: function (n) {
                    var i, r, c, d, h = n.type, f = n.series, m = n.i, x = n.realIndex, S = n.prevX, _ = n.prevY,
                        k = n.prevY2, L = this.w, N = new $(this.ctx);
                    if (f[m][0] === null) {
                        for (var H = 0; H < f[m].length; H++)
                            if (f[m][H] !== null) {
                                S = this.xDivision * H,
                                    _ = this.zeroY - f[m][H] / this.yRatio[this.yaxisIndex],
                                    i = N.move(S, _),
                                    r = N.move(S, this.areaBottomY);
                                break
                            }
                    } else
                        i = N.move(S, _),
                        h === "rangeArea" && (i = N.move(S, k) + N.line(S, _)),
                            r = N.move(S, this.areaBottomY) + N.line(S, _);
                    if (c = N.move(-1, this.zeroY) + N.line(-1, this.zeroY),
                        d = N.move(-1, this.zeroY) + N.line(-1, this.zeroY),
                    L.globals.previousPaths.length > 0) {
                        var z = this.lineHelpers.checkPreviousPaths({
                            pathFromLine: c,
                            pathFromArea: d,
                            realIndex: x
                        });
                        c = z.pathFromLine,
                            d = z.pathFromArea
                    }
                    return {
                        prevX: S,
                        prevY: _,
                        linePath: i,
                        areaPath: r,
                        pathFromLine: c,
                        pathFromArea: d
                    }
                }
            }, {
                key: "_handlePaths",
                value: function (n) {
                    var i = n.type
                        , r = n.realIndex
                        , c = n.i
                        , d = n.paths
                        , h = this.w
                        , f = new $(this.ctx)
                        , m = new je(this.ctx);
                    this.prevSeriesY.push(d.yArrj),
                        h.globals.seriesXvalues[r] = d.xArrj,
                        h.globals.seriesYvalues[r] = d.yArrj;
                    var x = h.config.forecastDataPoints;
                    if (x.count > 0 && i !== "rangeArea") {
                        var S = h.globals.seriesXvalues[r][h.globals.seriesXvalues[r].length - x.count - 1]
                            , _ = f.drawRect(S, 0, h.globals.gridWidth, h.globals.gridHeight, 0);
                        h.globals.dom.elForecastMask.appendChild(_.node);
                        var k = f.drawRect(0, 0, S, h.globals.gridHeight, 0);
                        h.globals.dom.elNonForecastMask.appendChild(k.node)
                    }
                    this.pointsChart || h.globals.delayedElements.push({
                        el: this.elPointsMain.node,
                        index: r
                    });
                    var L = {
                        i: c,
                        realIndex: r,
                        animationDelay: c,
                        initialSpeed: h.config.chart.animations.speed,
                        dataChangeSpeed: h.config.chart.animations.dynamicAnimation.speed,
                        className: "apexcharts-".concat(i)
                    };
                    if (i === "area")
                        for (var N = m.fillPath({
                            seriesNumber: r
                        }), H = 0; H < d.areaPaths.length; H++) {
                            var z = f.renderPaths(a(a({}, L), {}, {
                                pathFrom: d.pathFromArea,
                                pathTo: d.areaPaths[H],
                                stroke: "none",
                                strokeWidth: 0,
                                strokeLineCap: null,
                                fill: N
                            }));
                            this.elSeries.add(z)
                        }
                    if (h.config.stroke.show && !this.pointsChart) {
                        var q = null;
                        if (i === "line")
                            q = m.fillPath({
                                seriesNumber: r,
                                i: c
                            });
                        else if (h.config.stroke.fill.type === "solid")
                            q = h.globals.stroke.colors[r];
                        else {
                            var Q = h.config.fill;
                            h.config.fill = h.config.stroke.fill,
                                q = m.fillPath({
                                    seriesNumber: r,
                                    i: c
                                }),
                                h.config.fill = Q
                        }
                        for (var b = 0; b < d.linePaths.length; b++) {
                            var E = q;
                            i === "rangeArea" && (E = m.fillPath({
                                seriesNumber: r
                            }));
                            var B = a(a({}, L), {}, {
                                pathFrom: d.pathFromLine,
                                pathTo: d.linePaths[b],
                                stroke: q,
                                strokeWidth: this.strokeWidth,
                                strokeLineCap: h.config.stroke.lineCap,
                                fill: i === "rangeArea" ? E : "none"
                            })
                                , X = f.renderPaths(B);
                            if (this.elSeries.add(X),
                                X.attr("fill-rule", "evenodd"),
                            x.count > 0 && i !== "rangeArea") {
                                var K = f.renderPaths(B);
                                K.node.setAttribute("stroke-dasharray", x.dashArray),
                                x.strokeWidth && K.node.setAttribute("stroke-width", x.strokeWidth),
                                    this.elSeries.add(K),
                                    K.attr("clip-path", "url(#forecastMask".concat(h.globals.cuid, ")")),
                                    X.attr("clip-path", "url(#nonForecastMask".concat(h.globals.cuid, ")"))
                            }
                        }
                    }
                }
            }, {
                key: "_iterateOverDataPoints",
                value: function (n) {
                    var i, r = this, c = n.type, d = n.series, h = n.iterations, f = n.realIndex, m = n.i, x = n.x,
                        S = n.y, _ = n.pX, k = n.pY, L = n.pathsFrom, N = n.linePaths, H = n.areaPaths,
                        z = n.seriesIndex, q = n.lineYPosition, Q = n.xArrj, b = n.yArrj, E = n.y2Arrj,
                        B = n.isRangeStart, X = n.seriesRangeEnd, K = this.w, ee = new $(this.ctx), pe = this.yRatio,
                        ge = L.prevY, Ie = L.linePath, $e = L.areaPath, Fe = L.pathFromLine, Je = L.pathFromArea,
                        ut = M.isNumber(K.globals.minYArr[f]) ? K.globals.minYArr[f] : K.globals.minY;
                    h || (h = K.globals.dataPoints > 1 ? K.globals.dataPoints - 1 : K.globals.dataPoints);
                    for (var yt = function (Li, Mi) {
                        return Mi - Li / pe[r.yaxisIndex] + 2 * (r.isReversed ? Li / pe[r.yaxisIndex] : 0)
                    }, It = S, Nt = K.config.chart.stacked && !K.globals.comboCharts || K.config.chart.stacked && K.globals.comboCharts && (!this.w.config.chart.stackOnlyBar || ((i = this.w.config.series[f]) === null || i === void 0 ? void 0 : i.type) === "bar"), Lt = 0; Lt < h; Lt++) {
                        var es = d[m][Lt + 1] === void 0 || d[m][Lt + 1] === null;
                        if (K.globals.isXNumeric) {
                            var ps = K.globals.seriesX[f][Lt + 1];
                            K.globals.seriesX[f][Lt + 1] === void 0 && (ps = K.globals.seriesX[f][h - 1]),
                                x = (ps - K.globals.minX) / this.xRatio
                        } else
                            x += this.xDivision;
                        Nt ? m > 0 && K.globals.collapsedSeries.length < K.config.series.length - 1 ? q = this.prevSeriesY[function (Li) {
                            for (var Mi = Li, $s = 0; $s < K.globals.series.length; $s++)
                                if (K.globals.collapsedSeriesIndices.indexOf(Li) > -1) {
                                    Mi--;
                                    break
                                }
                            return Mi >= 0 ? Mi : 0
                        }(m - 1)][Lt + 1] : q = this.zeroY : q = this.zeroY,
                            es ? S = yt(ut, q) : (S = yt(d[m][Lt + 1], q),
                            c === "rangeArea" && (It = yt(X[m][Lt + 1], q))),
                            Q.push(x),
                            es && K.config.stroke.curve === "smooth" ? b.push(null) : b.push(S),
                            E.push(It);
                        var zn = this.lineHelpers.calculatePoints({
                            series: d,
                            x,
                            y: S,
                            realIndex: f,
                            i: m,
                            j: Lt,
                            prevY: ge
                        })
                            , nn = this._createPaths({
                            type: c,
                            series: d,
                            i: m,
                            realIndex: f,
                            j: Lt,
                            x,
                            y: S,
                            y2: It,
                            xArrj: Q,
                            yArrj: b,
                            y2Arrj: E,
                            pX: _,
                            pY: k,
                            linePath: Ie,
                            areaPath: $e,
                            linePaths: N,
                            areaPaths: H,
                            seriesIndex: z,
                            isRangeStart: B
                        });
                        H = nn.areaPaths,
                            N = nn.linePaths,
                            _ = nn.pX,
                            k = nn.pY,
                            $e = nn.areaPath,
                            Ie = nn.linePath,
                        !this.appendPathFrom || K.config.stroke.curve === "monotoneCubic" && c === "rangeArea" || (Fe += ee.line(x, this.zeroY),
                            Je += ee.line(x, this.zeroY)),
                            this.handleNullDataPoints(d, zn, m, Lt, f),
                            this._handleMarkersAndLabels({
                                type: c,
                                pointsPos: zn,
                                i: m,
                                j: Lt,
                                realIndex: f,
                                isRangeStart: B
                            })
                    }
                    return {
                        yArrj: b,
                        xArrj: Q,
                        pathFromArea: Je,
                        areaPaths: H,
                        pathFromLine: Fe,
                        linePaths: N,
                        linePath: Ie,
                        areaPath: $e
                    }
                }
            }, {
                key: "_handleMarkersAndLabels",
                value: function (n) {
                    var i = n.type
                        , r = n.pointsPos
                        , c = n.isRangeStart
                        , d = n.i
                        , h = n.j
                        , f = n.realIndex
                        , m = this.w
                        , x = new mt(this.ctx);
                    if (this.pointsChart)
                        this.scatter.draw(this.elSeries, h, {
                            realIndex: f,
                            pointsPos: r,
                            zRatio: this.zRatio,
                            elParent: this.elPointsMain
                        });
                    else {
                        m.globals.series[d].length > 1 && this.elPointsMain.node.classList.add("apexcharts-element-hidden");
                        var S = this.markers.plotChartMarkers(r, f, h + 1);
                        S !== null && this.elPointsMain.add(S)
                    }
                    var _ = x.drawDataLabel({
                        type: i,
                        isRangeStart: c,
                        pos: r,
                        i: f,
                        j: h + 1
                    });
                    _ !== null && this.elDataLabelsWrap.add(_)
                }
            }, {
                key: "_createPaths",
                value: function (n) {
                    var i = n.type
                        , r = n.series
                        , c = n.i
                        , d = n.realIndex
                        , h = n.j
                        , f = n.x
                        , m = n.y
                        , x = n.xArrj
                        , S = n.yArrj
                        , _ = n.y2
                        , k = n.y2Arrj
                        , L = n.pX
                        , N = n.pY
                        , H = n.linePath
                        , z = n.areaPath
                        , q = n.linePaths
                        , Q = n.areaPaths
                        , b = n.seriesIndex
                        , E = n.isRangeStart
                        , B = this.w
                        , X = new $(this.ctx)
                        , K = B.config.stroke.curve
                        , ee = this.areaBottomY;
                    if (Array.isArray(B.config.stroke.curve) && (K = Array.isArray(b) ? B.config.stroke.curve[b[c]] : B.config.stroke.curve[c]),
                    i === "rangeArea" && (B.globals.hasNullValues || B.config.forecastDataPoints.count > 0) && K === "monotoneCubic" && (K = "straight"),
                    K === "monotoneCubic") {
                        var pe = i === "rangeArea" ? x.length === B.globals.dataPoints : h === r[c].length - 2
                            , ge = x.map(function (Nt, Lt) {
                            return [x[Lt], S[Lt]]
                        }).filter(function (Nt) {
                            return Nt[1] !== null
                        });
                        if (pe && ge.length > 1) {
                            var Ie = Ro(ge);
                            if (H += Oo(Ie),
                                r[c][0] === null ? z = H : z += Oo(Ie),
                            i === "rangeArea" && E) {
                                H += X.line(x[x.length - 1], k[k.length - 1]);
                                var $e = x.slice().reverse()
                                    , Fe = k.slice().reverse()
                                    , Je = $e.map(function (Nt, Lt) {
                                    return [$e[Lt], Fe[Lt]]
                                })
                                    , ut = Ro(Je);
                                z = H += Oo(ut)
                            } else
                                z += X.line(ge[ge.length - 1][0], ee) + X.line(ge[0][0], ee) + X.move(ge[0][0], ge[0][1]) + "z";
                            q.push(H),
                                Q.push(z)
                        }
                    } else if (K === "smooth") {
                        var yt = .35 * (f - L);
                        B.globals.hasNullValues ? (r[c][h] !== null && (r[c][h + 1] !== null ? (H = X.move(L, N) + X.curve(L + yt, N, f - yt, m, f + 1, m),
                            z = X.move(L + 1, N) + X.curve(L + yt, N, f - yt, m, f + 1, m) + X.line(f, ee) + X.line(L, ee) + "z") : (H = X.move(L, N),
                            z = X.move(L, N) + "z")),
                            q.push(H),
                            Q.push(z)) : (H += X.curve(L + yt, N, f - yt, m, f, m),
                            z += X.curve(L + yt, N, f - yt, m, f, m)),
                            L = f,
                            N = m,
                        h === r[c].length - 2 && (z = z + X.curve(L, N, f, m, f, ee) + X.move(f, m) + "z",
                            i === "rangeArea" && E ? H = H + X.curve(L, N, f, m, f, _) + X.move(f, _) + "z" : B.globals.hasNullValues || (q.push(H),
                                Q.push(z)))
                    } else {
                        if (r[c][h + 1] === null) {
                            H += X.move(f, m);
                            var It = B.globals.isXNumeric ? (B.globals.seriesX[d][h] - B.globals.minX) / this.xRatio : f - this.xDivision;
                            z = z + X.line(It, ee) + X.move(f, m) + "z"
                        }
                        r[c][h] === null && (H += X.move(f, m),
                            z += X.move(f, ee)),
                            K === "stepline" ? (H = H + X.line(f, null, "H") + X.line(null, m, "V"),
                                z = z + X.line(f, null, "H") + X.line(null, m, "V")) : K === "straight" && (H += X.line(f, m),
                                z += X.line(f, m)),
                        h === r[c].length - 2 && (z = z + X.line(f, ee) + X.move(f, m) + "z",
                            i === "rangeArea" && E ? H = H + X.line(f, _) + X.move(f, _) + "z" : (q.push(H),
                                Q.push(z)))
                    }
                    return {
                        linePaths: q,
                        areaPaths: Q,
                        pX: L,
                        pY: N,
                        linePath: H,
                        areaPath: z
                    }
                }
            }, {
                key: "handleNullDataPoints",
                value: function (n, i, r, c, d) {
                    var h = this.w;
                    if (n[r][c] === null && h.config.markers.showNullDataPoints || n[r].length === 1) {
                        var f = this.markers.plotChartMarkers(i, d, c + 1, this.strokeWidth - h.config.markers.strokeWidth / 2, !0);
                        f !== null && this.elPointsMain.add(f)
                    }
                }
            }]),
                j
        }();
        window.TreemapSquared = {},
            window.TreemapSquared.generate = function () {
                function j(f, m, x, S) {
                    this.xoffset = f,
                        this.yoffset = m,
                        this.height = S,
                        this.width = x,
                        this.shortestEdge = function () {
                            return Math.min(this.height, this.width)
                        }
                        ,
                        this.getCoordinates = function (_) {
                            var k, L = [], N = this.xoffset, H = this.yoffset, z = d(_) / this.height,
                                q = d(_) / this.width;
                            if (this.width >= this.height)
                                for (k = 0; k < _.length; k++)
                                    L.push([N, H, N + z, H + _[k] / z]),
                                        H += _[k] / z;
                            else
                                for (k = 0; k < _.length; k++)
                                    L.push([N, H, N + _[k] / q, H + q]),
                                        N += _[k] / q;
                            return L
                        }
                        ,
                        this.cutArea = function (_) {
                            var k;
                            if (this.width >= this.height) {
                                var L = _ / this.height
                                    , N = this.width - L;
                                k = new j(this.xoffset + L, this.yoffset, N, this.height)
                            } else {
                                var H = _ / this.width
                                    , z = this.height - H;
                                k = new j(this.xoffset, this.yoffset + H, this.width, z)
                            }
                            return k
                        }
                }

                function n(f, m, x, S, _) {
                    S = S === void 0 ? 0 : S,
                        _ = _ === void 0 ? 0 : _;
                    var k = i(function (L, N) {
                        var H, z = [], q = N / d(L);
                        for (H = 0; H < L.length; H++)
                            z[H] = L[H] * q;
                        return z
                    }(f, m * x), [], new j(S, _, m, x), []);
                    return function (L) {
                        var N, H, z = [];
                        for (N = 0; N < L.length; N++)
                            for (H = 0; H < L[N].length; H++)
                                z.push(L[N][H]);
                        return z
                    }(k)
                }

                function i(f, m, x, S) {
                    var _, k, L;
                    if (f.length !== 0)
                        return _ = x.shortestEdge(),
                            function (N, H, z) {
                                var q;
                                if (N.length === 0)
                                    return !0;
                                (q = N.slice()).push(H);
                                var Q = r(N, z)
                                    , b = r(q, z);
                                return Q >= b
                            }(m, k = f[0], _) ? (m.push(k),
                                i(f.slice(1), m, x, S)) : (L = x.cutArea(d(m), S),
                                S.push(x.getCoordinates(m)),
                                i(f, [], L, S)),
                            S;
                    S.push(x.getCoordinates(m))
                }

                function r(f, m) {
                    var x = Math.min.apply(Math, f)
                        , S = Math.max.apply(Math, f)
                        , _ = d(f);
                    return Math.max(Math.pow(m, 2) * S / Math.pow(_, 2), Math.pow(_, 2) / (Math.pow(m, 2) * x))
                }

                function c(f) {
                    return f && f.constructor === Array
                }

                function d(f) {
                    var m, x = 0;
                    for (m = 0; m < f.length; m++)
                        x += f[m];
                    return x
                }

                function h(f) {
                    var m, x = 0;
                    if (c(f[0]))
                        for (m = 0; m < f.length; m++)
                            x += h(f[m]);
                    else
                        x = d(f);
                    return x
                }

                return function f(m, x, S, _, k) {
                    _ = _ === void 0 ? 0 : _,
                        k = k === void 0 ? 0 : k;
                    var L, N, H = [], z = [];
                    if (c(m[0])) {
                        for (N = 0; N < m.length; N++)
                            H[N] = h(m[N]);
                        for (L = n(H, x, S, _, k),
                                 N = 0; N < m.length; N++)
                            z.push(f(m[N], L[N][2] - L[N][0], L[N][3] - L[N][1], L[N][0], L[N][1]))
                    } else
                        z = n(m, x, S, _, k);
                    return z
                }
            }();
        var Ii, yr, Le = function () {
            function j(n, i) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.strokeWidth = this.w.config.stroke.width,
                    this.helpers = new dc(n),
                    this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation,
                    this.labels = []
            }

            return p(j, [{
                key: "draw",
                value: function (n) {
                    var i = this
                        , r = this.w
                        , c = new $(this.ctx)
                        , d = new je(this.ctx)
                        , h = c.group({
                        class: "apexcharts-treemap"
                    });
                    if (r.globals.noData)
                        return h;
                    var f = [];
                    return n.forEach(function (m) {
                        var x = m.map(function (S) {
                            return Math.abs(S)
                        });
                        f.push(x)
                    }),
                        this.negRange = this.helpers.checkColorRange(),
                        r.config.series.forEach(function (m, x) {
                            m.data.forEach(function (S) {
                                Array.isArray(i.labels[x]) || (i.labels[x] = []),
                                    i.labels[x].push(S.x)
                            })
                        }),
                        window.TreemapSquared.generate(f, r.globals.gridWidth, r.globals.gridHeight).forEach(function (m, x) {
                            var S = c.group({
                                class: "apexcharts-series apexcharts-treemap-series",
                                seriesName: M.escapeString(r.globals.seriesNames[x]),
                                rel: x + 1,
                                "data:realIndex": x
                            });
                            if (r.config.chart.dropShadow.enabled) {
                                var _ = r.config.chart.dropShadow;
                                new F(i.ctx).dropShadow(h, _, x)
                            }
                            var k = c.group({
                                class: "apexcharts-data-labels"
                            });
                            m.forEach(function (L, N) {
                                var H = L[0]
                                    , z = L[1]
                                    , q = L[2]
                                    , Q = L[3]
                                    ,
                                    b = c.drawRect(H, z, q - H, Q - z, r.config.plotOptions.treemap.borderRadius, "#fff", 1, i.strokeWidth, r.config.plotOptions.treemap.useFillColorAsStroke ? B : r.globals.stroke.colors[x]);
                                b.attr({
                                    cx: H,
                                    cy: z,
                                    index: x,
                                    i: x,
                                    j: N,
                                    width: q - H,
                                    height: Q - z
                                });
                                var E = i.helpers.getShadeColor(r.config.chart.type, x, N, i.negRange)
                                    , B = E.color;
                                r.config.series[x].data[N] !== void 0 && r.config.series[x].data[N].fillColor && (B = r.config.series[x].data[N].fillColor);
                                var X = d.fillPath({
                                    color: B,
                                    seriesNumber: x,
                                    dataPointIndex: N
                                });
                                b.node.classList.add("apexcharts-treemap-rect"),
                                    b.attr({
                                        fill: X
                                    }),
                                    i.helpers.addListeners(b);
                                var K = {
                                    x: H + (q - H) / 2,
                                    y: z + (Q - z) / 2,
                                    width: 0,
                                    height: 0
                                }
                                    , ee = {
                                    x: H,
                                    y: z,
                                    width: q - H,
                                    height: Q - z
                                };
                                if (r.config.chart.animations.enabled && !r.globals.dataChanged) {
                                    var pe = 1;
                                    r.globals.resized || (pe = r.config.chart.animations.speed),
                                        i.animateTreemap(b, K, ee, pe)
                                }
                                if (r.globals.dataChanged) {
                                    var ge = 1;
                                    i.dynamicAnim.enabled && r.globals.shouldAnimate && (ge = i.dynamicAnim.speed,
                                    r.globals.previousPaths[x] && r.globals.previousPaths[x][N] && r.globals.previousPaths[x][N].rect && (K = r.globals.previousPaths[x][N].rect),
                                        i.animateTreemap(b, K, ee, ge))
                                }
                                var Ie = i.getFontSize(L)
                                    , $e = r.config.dataLabels.formatter(i.labels[x][N], {
                                    value: r.globals.series[x][N],
                                    seriesIndex: x,
                                    dataPointIndex: N,
                                    w: r
                                });
                                r.config.plotOptions.treemap.dataLabels.format === "truncate" && (Ie = parseInt(r.config.dataLabels.style.fontSize, 10),
                                    $e = i.truncateLabels($e, Ie, H, z, q, Q));
                                var Fe = i.helpers.calculateDataLabels({
                                    text: $e,
                                    x: (H + q) / 2,
                                    y: (z + Q) / 2 + i.strokeWidth / 2 + Ie / 3,
                                    i: x,
                                    j: N,
                                    colorProps: E,
                                    fontSize: Ie,
                                    series: n
                                });
                                r.config.dataLabels.enabled && Fe && i.rotateToFitLabel(Fe, Ie, $e, H, z, q, Q),
                                    S.add(b),
                                Fe !== null && S.add(Fe)
                            }),
                                S.add(k),
                                h.add(S)
                        }),
                        h
                }
            }, {
                key: "getFontSize",
                value: function (n) {
                    var i = this.w, r, c, d, h, f = function m(x) {
                        var S, _ = 0;
                        if (Array.isArray(x[0]))
                            for (S = 0; S < x.length; S++)
                                _ += m(x[S]);
                        else
                            for (S = 0; S < x.length; S++)
                                _ += x[S].length;
                        return _
                    }(this.labels) / function m(x) {
                        var S, _ = 0;
                        if (Array.isArray(x[0]))
                            for (S = 0; S < x.length; S++)
                                _ += m(x[S]);
                        else
                            for (S = 0; S < x.length; S++)
                                _ += 1;
                        return _
                    }(this.labels);
                    return r = n[2] - n[0],
                        c = n[3] - n[1],
                        d = r * c,
                        h = Math.pow(d, .5),
                        Math.min(h / f, parseInt(i.config.dataLabels.style.fontSize, 10))
                }
            }, {
                key: "rotateToFitLabel",
                value: function (n, i, r, c, d, h, f) {
                    var m = new $(this.ctx)
                        , x = m.getTextRects(r, i);
                    if (x.width + this.w.config.stroke.width + 5 > h - c && x.width <= f - d) {
                        var S = m.rotateAroundCenter(n.node);
                        n.node.setAttribute("transform", "rotate(-90 ".concat(S.x, " ").concat(S.y, ") translate(").concat(x.height / 3, ")"))
                    }
                }
            }, {
                key: "truncateLabels",
                value: function (n, i, r, c, d, h) {
                    var f = new $(this.ctx)
                        ,
                        m = f.getTextRects(n, i).width + this.w.config.stroke.width + 5 > d - r && h - c > d - r ? h - c : d - r
                        , x = f.getTextBasedOnMaxWidth({
                            text: n,
                            maxWidth: m,
                            fontSize: i
                        });
                    return n.length !== x.length && m / i < 5 ? "" : x
                }
            }, {
                key: "animateTreemap",
                value: function (n, i, r, c) {
                    var d = new O(this.ctx);
                    d.animateRect(n, {
                        x: i.x,
                        y: i.y,
                        width: i.width,
                        height: i.height
                    }, {
                        x: r.x,
                        y: r.y,
                        width: r.width,
                        height: r.height
                    }, c, function () {
                        d.animationCompleted(n)
                    })
                }
            }]),
                j
        }(), Qe = 86400, Pt = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w,
                    this.timeScaleArray = [],
                    this.utc = this.w.config.xaxis.labels.datetimeUTC
            }

            return p(j, [{
                key: "calculateTimeScaleTicks",
                value: function (n, i) {
                    var r = this
                        , c = this.w;
                    if (c.globals.allSeriesCollapsed)
                        return c.globals.labels = [],
                            c.globals.timescaleLabels = [],
                            [];
                    var d = new be(this.ctx)
                        , h = (i - n) / 864e5;
                    this.determineInterval(h),
                        c.globals.disableZoomIn = !1,
                        c.globals.disableZoomOut = !1,
                        h < .00011574074074074075 ? c.globals.disableZoomIn = !0 : h > 5e4 && (c.globals.disableZoomOut = !0);
                    var f = d.getTimeUnitsfromTimestamp(n, i, this.utc)
                        , m = c.globals.gridWidth / h
                        , x = m / 24
                        , S = x / 60
                        , _ = S / 60
                        , k = Math.floor(24 * h)
                        , L = Math.floor(1440 * h)
                        , N = Math.floor(h * Qe)
                        , H = Math.floor(h)
                        , z = Math.floor(h / 30)
                        , q = Math.floor(h / 365)
                        , Q = {
                        minMillisecond: f.minMillisecond,
                        minSecond: f.minSecond,
                        minMinute: f.minMinute,
                        minHour: f.minHour,
                        minDate: f.minDate,
                        minMonth: f.minMonth,
                        minYear: f.minYear
                    }
                        , b = {
                        firstVal: Q,
                        currentMillisecond: Q.minMillisecond,
                        currentSecond: Q.minSecond,
                        currentMinute: Q.minMinute,
                        currentHour: Q.minHour,
                        currentMonthDate: Q.minDate,
                        currentDate: Q.minDate,
                        currentMonth: Q.minMonth,
                        currentYear: Q.minYear,
                        daysWidthOnXAxis: m,
                        hoursWidthOnXAxis: x,
                        minutesWidthOnXAxis: S,
                        secondsWidthOnXAxis: _,
                        numberOfSeconds: N,
                        numberOfMinutes: L,
                        numberOfHours: k,
                        numberOfDays: H,
                        numberOfMonths: z,
                        numberOfYears: q
                    };
                    switch (this.tickInterval) {
                        case "years":
                            this.generateYearScale(b);
                            break;
                        case "months":
                        case "half_year":
                            this.generateMonthScale(b);
                            break;
                        case "months_days":
                        case "months_fortnight":
                        case "days":
                        case "week_days":
                            this.generateDayScale(b);
                            break;
                        case "hours":
                            this.generateHourScale(b);
                            break;
                        case "minutes_fives":
                        case "minutes":
                            this.generateMinuteScale(b);
                            break;
                        case "seconds_tens":
                        case "seconds_fives":
                        case "seconds":
                            this.generateSecondScale(b)
                    }
                    var E = this.timeScaleArray.map(function (B) {
                        var X = {
                            position: B.position,
                            unit: B.unit,
                            year: B.year,
                            day: B.day ? B.day : 1,
                            hour: B.hour ? B.hour : 0,
                            month: B.month + 1
                        };
                        return B.unit === "month" ? a(a({}, X), {}, {
                            day: 1,
                            value: B.value + 1
                        }) : B.unit === "day" || B.unit === "hour" ? a(a({}, X), {}, {
                            value: B.value
                        }) : B.unit === "minute" ? a(a({}, X), {}, {
                            value: B.value,
                            minute: B.value
                        }) : B.unit === "second" ? a(a({}, X), {}, {
                            value: B.value,
                            minute: B.minute,
                            second: B.second
                        }) : B
                    });
                    return E.filter(function (B) {
                        var X = 1
                            , K = Math.ceil(c.globals.gridWidth / 120)
                            , ee = B.value;
                        c.config.xaxis.tickAmount !== void 0 && (K = c.config.xaxis.tickAmount),
                        E.length > K && (X = Math.floor(E.length / K));
                        var pe = !1
                            , ge = !1;
                        switch (r.tickInterval) {
                            case "years":
                                B.unit === "year" && (pe = !0);
                                break;
                            case "half_year":
                                X = 7,
                                B.unit === "year" && (pe = !0);
                                break;
                            case "months":
                                X = 1,
                                B.unit === "year" && (pe = !0);
                                break;
                            case "months_fortnight":
                                X = 15,
                                B.unit !== "year" && B.unit !== "month" || (pe = !0),
                                ee === 30 && (ge = !0);
                                break;
                            case "months_days":
                                X = 10,
                                B.unit === "month" && (pe = !0),
                                ee === 30 && (ge = !0);
                                break;
                            case "week_days":
                                X = 8,
                                B.unit === "month" && (pe = !0);
                                break;
                            case "days":
                                X = 1,
                                B.unit === "month" && (pe = !0);
                                break;
                            case "hours":
                                B.unit === "day" && (pe = !0);
                                break;
                            case "minutes_fives":
                            case "seconds_fives":
                                ee % 5 != 0 && (ge = !0);
                                break;
                            case "seconds_tens":
                                ee % 10 != 0 && (ge = !0)
                        }
                        if (r.tickInterval === "hours" || r.tickInterval === "minutes_fives" || r.tickInterval === "seconds_tens" || r.tickInterval === "seconds_fives") {
                            if (!ge)
                                return !0
                        } else if ((ee % X == 0 || pe) && !ge)
                            return !0
                    })
                }
            }, {
                key: "recalcDimensionsBasedOnFormat",
                value: function (n, i) {
                    var r = this.w
                        , c = this.formatDates(n)
                        , d = this.removeOverlappingTS(c);
                    r.globals.timescaleLabels = d.slice(),
                        new xe(this.ctx).plotCoords()
                }
            }, {
                key: "determineInterval",
                value: function (n) {
                    var i = 24 * n
                        , r = 60 * i;
                    switch (!0) {
                        case n / 365 > 5:
                            this.tickInterval = "years";
                            break;
                        case n > 800:
                            this.tickInterval = "half_year";
                            break;
                        case n > 180:
                            this.tickInterval = "months";
                            break;
                        case n > 90:
                            this.tickInterval = "months_fortnight";
                            break;
                        case n > 60:
                            this.tickInterval = "months_days";
                            break;
                        case n > 30:
                            this.tickInterval = "week_days";
                            break;
                        case n > 2:
                            this.tickInterval = "days";
                            break;
                        case i > 2.4:
                            this.tickInterval = "hours";
                            break;
                        case r > 15:
                            this.tickInterval = "minutes_fives";
                            break;
                        case r > 5:
                            this.tickInterval = "minutes";
                            break;
                        case r > 1:
                            this.tickInterval = "seconds_tens";
                            break;
                        case 60 * r > 20:
                            this.tickInterval = "seconds_fives";
                            break;
                        default:
                            this.tickInterval = "seconds"
                    }
                }
            }, {
                key: "generateYearScale",
                value: function (n) {
                    var i = n.firstVal
                        , r = n.currentMonth
                        , c = n.currentYear
                        , d = n.daysWidthOnXAxis
                        , h = n.numberOfYears
                        , f = i.minYear
                        , m = 0
                        , x = new be(this.ctx)
                        , S = "year";
                    if (i.minDate > 1 || i.minMonth > 0) {
                        var _ = x.determineRemainingDaysOfYear(i.minYear, i.minMonth, i.minDate);
                        m = (x.determineDaysOfYear(i.minYear) - _ + 1) * d,
                            f = i.minYear + 1,
                            this.timeScaleArray.push({
                                position: m,
                                value: f,
                                unit: S,
                                year: f,
                                month: M.monthMod(r + 1)
                            })
                    } else
                        i.minDate === 1 && i.minMonth === 0 && this.timeScaleArray.push({
                            position: m,
                            value: f,
                            unit: S,
                            year: c,
                            month: M.monthMod(r + 1)
                        });
                    for (var k = f, L = m, N = 0; N < h; N++)
                        k++,
                            L = x.determineDaysOfYear(k - 1) * d + L,
                            this.timeScaleArray.push({
                                position: L,
                                value: k,
                                unit: S,
                                year: k,
                                month: 1
                            })
                }
            }, {
                key: "generateMonthScale",
                value: function (n) {
                    var i = n.firstVal
                        , r = n.currentMonthDate
                        , c = n.currentMonth
                        , d = n.currentYear
                        , h = n.daysWidthOnXAxis
                        , f = n.numberOfMonths
                        , m = c
                        , x = 0
                        , S = new be(this.ctx)
                        , _ = "month"
                        , k = 0;
                    if (i.minDate > 1) {
                        x = (S.determineDaysOfMonths(c + 1, i.minYear) - r + 1) * h,
                            m = M.monthMod(c + 1);
                        var L = d + k
                            , N = M.monthMod(m)
                            , H = m;
                        m === 0 && (_ = "year",
                            H = L,
                            N = 1,
                            L += k += 1),
                            this.timeScaleArray.push({
                                position: x,
                                value: H,
                                unit: _,
                                year: L,
                                month: N
                            })
                    } else
                        this.timeScaleArray.push({
                            position: x,
                            value: m,
                            unit: _,
                            year: d,
                            month: M.monthMod(c)
                        });
                    for (var z = m + 1, q = x, Q = 0, b = 1; Q < f; Q++,
                        b++) {
                        (z = M.monthMod(z)) === 0 ? (_ = "year",
                            k += 1) : _ = "month";
                        var E = this._getYear(d, z, k);
                        q = S.determineDaysOfMonths(z, E) * h + q;
                        var B = z === 0 ? E : z;
                        this.timeScaleArray.push({
                            position: q,
                            value: B,
                            unit: _,
                            year: E,
                            month: z === 0 ? 1 : z
                        }),
                            z++
                    }
                }
            }, {
                key: "generateDayScale",
                value: function (n) {
                    var i = n.firstVal
                        , r = n.currentMonth
                        , c = n.currentYear
                        , d = n.hoursWidthOnXAxis
                        , h = n.numberOfDays
                        , f = new be(this.ctx)
                        , m = "day"
                        , x = i.minDate + 1
                        , S = x
                        , _ = function (b, E, B) {
                        return b > f.determineDaysOfMonths(E + 1, B) && (S = 1,
                            m = "month",
                            L = E += 1),
                            E
                    }
                        , k = (24 - i.minHour) * d
                        , L = x
                        , N = _(S, r, c);
                    i.minHour === 0 && i.minDate === 1 ? (k = 0,
                        L = M.monthMod(i.minMonth),
                        m = "month",
                        S = i.minDate) : i.minDate !== 1 && i.minHour === 0 && i.minMinute === 0 && (k = 0,
                        x = i.minDate,
                        L = x,
                        N = _(S = x, r, c)),
                        this.timeScaleArray.push({
                            position: k,
                            value: L,
                            unit: m,
                            year: this._getYear(c, N, 0),
                            month: M.monthMod(N),
                            day: S
                        });
                    for (var H = k, z = 0; z < h; z++) {
                        m = "day",
                            N = _(S += 1, N, this._getYear(c, N, 0));
                        var q = this._getYear(c, N, 0);
                        H = 24 * d + H;
                        var Q = S === 1 ? M.monthMod(N) : S;
                        this.timeScaleArray.push({
                            position: H,
                            value: Q,
                            unit: m,
                            year: q,
                            month: M.monthMod(N),
                            day: Q
                        })
                    }
                }
            }, {
                key: "generateHourScale",
                value: function (n) {
                    var i = n.firstVal
                        , r = n.currentDate
                        , c = n.currentMonth
                        , d = n.currentYear
                        , h = n.minutesWidthOnXAxis
                        , f = n.numberOfHours
                        , m = new be(this.ctx)
                        , x = "hour"
                        , S = function (X, K) {
                        return X > m.determineDaysOfMonths(K + 1, d) && (z = 1,
                            K += 1),
                            {
                                month: K,
                                date: z
                            }
                    }
                        , _ = function (X, K) {
                        return X > m.determineDaysOfMonths(K + 1, d) ? K += 1 : K
                    }
                        , k = 60 - (i.minMinute + i.minSecond / 60)
                        , L = k * h
                        , N = i.minHour + 1
                        , H = N;
                    k === 60 && (L = 0,
                        H = N = i.minHour);
                    var z = r;
                    H >= 24 && (H = 0,
                        z += 1,
                        x = "day");
                    var q = S(z, c).month;
                    q = _(z, q),
                        this.timeScaleArray.push({
                            position: L,
                            value: N,
                            unit: x,
                            day: z,
                            hour: H,
                            year: d,
                            month: M.monthMod(q)
                        }),
                        H++;
                    for (var Q = L, b = 0; b < f; b++) {
                        x = "hour",
                        H >= 24 && (H = 0,
                            x = "day",
                            q = S(z += 1, q).month,
                            q = _(z, q));
                        var E = this._getYear(d, q, 0);
                        Q = 60 * h + Q;
                        var B = H === 0 ? z : H;
                        this.timeScaleArray.push({
                            position: Q,
                            value: B,
                            unit: x,
                            hour: H,
                            day: z,
                            year: E,
                            month: M.monthMod(q)
                        }),
                            H++
                    }
                }
            }, {
                key: "generateMinuteScale",
                value: function (n) {
                    for (var i = n.currentMillisecond, r = n.currentSecond, c = n.currentMinute, d = n.currentHour, h = n.currentDate, f = n.currentMonth, m = n.currentYear, x = n.minutesWidthOnXAxis, S = n.secondsWidthOnXAxis, _ = n.numberOfMinutes, k = c + 1, L = h, N = f, H = m, z = d, q = (60 - r - i / 1e3) * S, Q = 0; Q < _; Q++)
                        k >= 60 && (k = 0,
                        (z += 1) === 24 && (z = 0)),
                            this.timeScaleArray.push({
                                position: q,
                                value: k,
                                unit: "minute",
                                hour: z,
                                minute: k,
                                day: L,
                                year: this._getYear(H, N, 0),
                                month: M.monthMod(N)
                            }),
                            q += x,
                            k++
                }
            }, {
                key: "generateSecondScale",
                value: function (n) {
                    for (var i = n.currentMillisecond, r = n.currentSecond, c = n.currentMinute, d = n.currentHour, h = n.currentDate, f = n.currentMonth, m = n.currentYear, x = n.secondsWidthOnXAxis, S = n.numberOfSeconds, _ = r + 1, k = c, L = h, N = f, H = m, z = d, q = (1e3 - i) / 1e3 * x, Q = 0; Q < S; Q++)
                        _ >= 60 && (_ = 0,
                        ++k >= 60 && (k = 0,
                        ++z === 24 && (z = 0))),
                            this.timeScaleArray.push({
                                position: q,
                                value: _,
                                unit: "second",
                                hour: z,
                                minute: k,
                                second: _,
                                day: L,
                                year: this._getYear(H, N, 0),
                                month: M.monthMod(N)
                            }),
                            q += x,
                            _++
                }
            }, {
                key: "createRawDateString",
                value: function (n, i) {
                    var r = n.year;
                    return n.month === 0 && (n.month = 1),
                        r += "-" + ("0" + n.month.toString()).slice(-2),
                        n.unit === "day" ? r += n.unit === "day" ? "-" + ("0" + i).slice(-2) : "-01" : r += "-" + ("0" + (n.day ? n.day : "1")).slice(-2),
                        n.unit === "hour" ? r += n.unit === "hour" ? "T" + ("0" + i).slice(-2) : "T00" : r += "T" + ("0" + (n.hour ? n.hour : "0")).slice(-2),
                        n.unit === "minute" ? r += ":" + ("0" + i).slice(-2) : r += ":" + (n.minute ? ("0" + n.minute).slice(-2) : "00"),
                        n.unit === "second" ? r += ":" + ("0" + i).slice(-2) : r += ":00",
                    this.utc && (r += ".000Z"),
                        r
                }
            }, {
                key: "formatDates",
                value: function (n) {
                    var i = this
                        , r = this.w;
                    return n.map(function (c) {
                        var d = c.value.toString()
                            , h = new be(i.ctx)
                            , f = i.createRawDateString(c, d)
                            , m = h.getDate(h.parseDate(f));
                        if (i.utc || (m = h.getDate(h.parseDateWithTimezone(f))),
                        r.config.xaxis.labels.format === void 0) {
                            var x = "dd MMM"
                                , S = r.config.xaxis.labels.datetimeFormatter;
                            c.unit === "year" && (x = S.year),
                            c.unit === "month" && (x = S.month),
                            c.unit === "day" && (x = S.day),
                            c.unit === "hour" && (x = S.hour),
                            c.unit === "minute" && (x = S.minute),
                            c.unit === "second" && (x = S.second),
                                d = h.formatDate(m, x)
                        } else
                            d = h.formatDate(m, r.config.xaxis.labels.format);
                        return {
                            dateString: f,
                            position: c.position,
                            value: d,
                            unit: c.unit,
                            year: c.year,
                            month: c.month
                        }
                    })
                }
            }, {
                key: "removeOverlappingTS",
                value: function (n) {
                    var i, r = this, c = new $(this.ctx), d = !1;
                    n.length > 0 && n[0].value && n.every(function (m) {
                        return m.value.length === n[0].value.length
                    }) && (d = !0,
                        i = c.getTextRects(n[0].value).width);
                    var h = 0
                        , f = n.map(function (m, x) {
                        if (x > 0 && r.w.config.xaxis.labels.hideOverlappingLabels) {
                            var S = d ? i : c.getTextRects(n[h].value).width
                                , _ = n[h].position;
                            return m.position > _ + S + 10 ? (h = x,
                                m) : null
                        }
                        return m
                    });
                    return f = f.filter(function (m) {
                        return m !== null
                    })
                }
            }, {
                key: "_getYear",
                value: function (n, i, r) {
                    return n + Math.floor(i / 12) + r
                }
            }]),
                j
        }(), xs = function () {
            function j(n, i) {
                l(this, j),
                    this.ctx = i,
                    this.w = i.w,
                    this.el = n
            }

            return p(j, [{
                key: "setupElements",
                value: function () {
                    var n = this.w.globals
                        , i = this.w.config
                        , r = i.chart.type;
                    n.axisCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble", "radar", "heatmap", "treemap"].indexOf(r) > -1,
                        n.xyCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble"].indexOf(r) > -1,
                        n.isBarHorizontal = (i.chart.type === "bar" || i.chart.type === "rangeBar" || i.chart.type === "boxPlot") && i.plotOptions.bar.horizontal,
                        n.chartClass = ".apexcharts" + n.chartID,
                        n.dom.baseEl = this.el,
                        n.dom.elWrap = document.createElement("div"),
                        $.setAttrs(n.dom.elWrap, {
                            id: n.chartClass.substring(1),
                            class: "apexcharts-canvas " + n.chartClass.substring(1)
                        }),
                        this.el.appendChild(n.dom.elWrap),
                        n.dom.Paper = new window.SVG.Doc(n.dom.elWrap),
                        n.dom.Paper.attr({
                            class: "apexcharts-svg",
                            "xmlns:data": "ApexChartsNS",
                            transform: "translate(".concat(i.chart.offsetX, ", ").concat(i.chart.offsetY, ")")
                        }),
                        n.dom.Paper.node.style.background = i.theme.mode !== "dark" || i.chart.background ? i.chart.background : "rgba(0, 0, 0, 0.8)",
                        this.setSVGDimensions(),
                        n.dom.elLegendForeign = document.createElementNS(n.SVGNS, "foreignObject"),
                        $.setAttrs(n.dom.elLegendForeign, {
                            x: 0,
                            y: 0,
                            width: n.svgWidth,
                            height: n.svgHeight
                        }),
                        n.dom.elLegendWrap = document.createElement("div"),
                        n.dom.elLegendWrap.classList.add("apexcharts-legend"),
                        n.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"),
                        n.dom.elLegendForeign.appendChild(n.dom.elLegendWrap),
                        n.dom.Paper.node.appendChild(n.dom.elLegendForeign),
                        n.dom.elGraphical = n.dom.Paper.group().attr({
                            class: "apexcharts-inner apexcharts-graphical"
                        }),
                        n.dom.elDefs = n.dom.Paper.defs(),
                        n.dom.Paper.add(n.dom.elGraphical),
                        n.dom.elGraphical.add(n.dom.elDefs)
                }
            }, {
                key: "plotChartType",
                value: function (n, i) {
                    var r = this.w
                        , c = r.config
                        , d = r.globals
                        , h = {
                        series: [],
                        i: []
                    }
                        , f = {
                        series: [],
                        i: []
                    }
                        , m = {
                        series: [],
                        i: []
                    }
                        , x = {
                        series: [],
                        i: []
                    }
                        , S = {
                        series: [],
                        i: []
                    }
                        , _ = {
                        series: [],
                        i: []
                    }
                        , k = {
                        series: [],
                        i: []
                    }
                        , L = {
                        series: [],
                        i: []
                    }
                        , N = {
                        series: [],
                        seriesRangeEnd: [],
                        i: []
                    };
                    d.series.map(function (K, ee) {
                        var pe = 0;
                        n[ee].type !== void 0 ? (n[ee].type === "column" || n[ee].type === "bar" ? (d.series.length > 1 && c.plotOptions.bar.horizontal && console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"),
                            S.series.push(K),
                            S.i.push(ee),
                            pe++,
                            r.globals.columnSeries = S.series) : n[ee].type === "area" ? (f.series.push(K),
                            f.i.push(ee),
                            pe++) : n[ee].type === "line" ? (h.series.push(K),
                            h.i.push(ee),
                            pe++) : n[ee].type === "scatter" ? (m.series.push(K),
                            m.i.push(ee)) : n[ee].type === "bubble" ? (x.series.push(K),
                            x.i.push(ee),
                            pe++) : n[ee].type === "candlestick" ? (_.series.push(K),
                            _.i.push(ee),
                            pe++) : n[ee].type === "boxPlot" ? (k.series.push(K),
                            k.i.push(ee),
                            pe++) : n[ee].type === "rangeBar" ? (L.series.push(K),
                            L.i.push(ee),
                            pe++) : n[ee].type === "rangeArea" ? (N.series.push(d.seriesRangeStart[ee]),
                            N.seriesRangeEnd.push(d.seriesRangeEnd[ee]),
                            N.i.push(ee),
                            pe++) : console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea"),
                        pe > 1 && (d.comboCharts = !0)) : (h.series.push(K),
                            h.i.push(ee))
                    });
                    var H = new Do(this.ctx, i)
                        , z = new na(this.ctx, i);
                    this.ctx.pie = new fc(this.ctx);
                    var q = new Ed(this.ctx);
                    this.ctx.rangeBar = new br(this.ctx, i);
                    var Q = new pc(this.ctx)
                        , b = [];
                    if (d.comboCharts) {
                        if (f.series.length > 0 && b.push(H.draw(f.series, "area", f.i)),
                        S.series.length > 0)
                            if (r.config.chart.stacked) {
                                var E = new uc(this.ctx, i);
                                b.push(E.draw(S.series, S.i))
                            } else
                                this.ctx.bar = new sa(this.ctx, i),
                                    b.push(this.ctx.bar.draw(S.series, S.i));
                        if (N.series.length > 0 && b.push(H.draw(N.series, "rangeArea", N.i, N.seriesRangeEnd)),
                        h.series.length > 0 && b.push(H.draw(h.series, "line", h.i)),
                        _.series.length > 0 && b.push(z.draw(_.series, "candlestick", _.i)),
                        k.series.length > 0 && b.push(z.draw(k.series, "boxPlot", k.i)),
                        L.series.length > 0 && b.push(this.ctx.rangeBar.draw(L.series, L.i)),
                        m.series.length > 0) {
                            var B = new Do(this.ctx, i, !0);
                            b.push(B.draw(m.series, "scatter", m.i))
                        }
                        if (x.series.length > 0) {
                            var X = new Do(this.ctx, i, !0);
                            b.push(X.draw(x.series, "bubble", x.i))
                        }
                    } else
                        switch (c.chart.type) {
                            case "line":
                                b = H.draw(d.series, "line");
                                break;
                            case "area":
                                b = H.draw(d.series, "area");
                                break;
                            case "bar":
                                c.chart.stacked ? b = new uc(this.ctx, i).draw(d.series) : (this.ctx.bar = new sa(this.ctx, i),
                                    b = this.ctx.bar.draw(d.series));
                                break;
                            case "candlestick":
                                b = new na(this.ctx, i).draw(d.series, "candlestick");
                                break;
                            case "boxPlot":
                                b = new na(this.ctx, i).draw(d.series, c.chart.type);
                                break;
                            case "rangeBar":
                                b = this.ctx.rangeBar.draw(d.series);
                                break;
                            case "rangeArea":
                                b = H.draw(d.seriesRangeStart, "rangeArea", void 0, d.seriesRangeEnd);
                                break;
                            case "heatmap":
                                b = new Ad(this.ctx, i).draw(d.series);
                                break;
                            case "treemap":
                                b = new Le(this.ctx, i).draw(d.series);
                                break;
                            case "pie":
                            case "donut":
                            case "polarArea":
                                b = this.ctx.pie.draw(d.series);
                                break;
                            case "radialBar":
                                b = q.draw(d.series);
                                break;
                            case "radar":
                                b = Q.draw(d.series);
                                break;
                            default:
                                b = H.draw(d.series)
                        }
                    return b
                }
            }, {
                key: "setSVGDimensions",
                value: function () {
                    var n = this.w.globals
                        , i = this.w.config;
                    n.svgWidth = i.chart.width,
                        n.svgHeight = i.chart.height;
                    var r = M.getDimensions(this.el)
                        , c = i.chart.width.toString().split(/[0-9]+/g).pop();
                    c === "%" ? M.isNumber(r[0]) && (r[0].width === 0 && (r = M.getDimensions(this.el.parentNode)),
                        n.svgWidth = r[0] * parseInt(i.chart.width, 10) / 100) : c !== "px" && c !== "" || (n.svgWidth = parseInt(i.chart.width, 10));
                    var d = i.chart.height.toString().split(/[0-9]+/g).pop();
                    if (n.svgHeight !== "auto" && n.svgHeight !== "")
                        if (d === "%") {
                            var h = M.getDimensions(this.el.parentNode);
                            n.svgHeight = h[1] * parseInt(i.chart.height, 10) / 100
                        } else
                            n.svgHeight = parseInt(i.chart.height, 10);
                    else
                        n.axisCharts ? n.svgHeight = n.svgWidth / 1.61 : n.svgHeight = n.svgWidth / 1.2;
                    if (n.svgWidth < 0 && (n.svgWidth = 0),
                    n.svgHeight < 0 && (n.svgHeight = 0),
                        $.setAttrs(n.dom.Paper.node, {
                            width: n.svgWidth,
                            height: n.svgHeight
                        }),
                    d !== "%") {
                        var f = i.chart.sparkline.enabled ? 0 : n.axisCharts ? i.chart.parentHeightOffset : 0;
                        n.dom.Paper.node.parentNode.parentNode.style.minHeight = n.svgHeight + f + "px"
                    }
                    n.dom.elWrap.style.width = n.svgWidth + "px",
                        n.dom.elWrap.style.height = n.svgHeight + "px"
                }
            }, {
                key: "shiftGraphPosition",
                value: function () {
                    var n = this.w.globals
                        , i = n.translateY
                        , r = {
                        transform: "translate(" + n.translateX + ", " + i + ")"
                    };
                    $.setAttrs(n.dom.elGraphical.node, r)
                }
            }, {
                key: "resizeNonAxisCharts",
                value: function () {
                    var n = this.w
                        , i = n.globals
                        , r = 0
                        , c = n.config.chart.sparkline.enabled ? 1 : 15;
                    c += n.config.grid.padding.bottom,
                    n.config.legend.position !== "top" && n.config.legend.position !== "bottom" || !n.config.legend.show || n.config.legend.floating || (r = new lt(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
                    var d = n.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie")
                        , h = 2.05 * n.globals.radialSize;
                    if (d && !n.config.chart.sparkline.enabled && n.config.plotOptions.radialBar.startAngle !== 0) {
                        var f = M.getBoundingClientRect(d);
                        h = f.bottom;
                        var m = f.bottom - f.top;
                        h = Math.max(2.05 * n.globals.radialSize, m)
                    }
                    var x = h + i.translateY + r + c;
                    i.dom.elLegendForeign && i.dom.elLegendForeign.setAttribute("height", x),
                    n.config.chart.height && String(n.config.chart.height).indexOf("%") > 0 || (i.dom.elWrap.style.height = x + "px",
                        $.setAttrs(i.dom.Paper.node, {
                            height: x
                        }),
                        i.dom.Paper.node.parentNode.parentNode.style.minHeight = x + "px")
                }
            }, {
                key: "coreCalculations",
                value: function () {
                    new Y(this.ctx).init()
                }
            }, {
                key: "resetGlobals",
                value: function () {
                    var n = this
                        , i = function () {
                        return n.w.config.series.map(function (d) {
                            return []
                        })
                    }
                        , r = new Xe
                        , c = this.w.globals;
                    r.initGlobalVars(c),
                        c.seriesXvalues = i(),
                        c.seriesYvalues = i()
                }
            }, {
                key: "isMultipleY",
                value: function () {
                    if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1)
                        return this.w.globals.isMultipleYAxis = !0,
                            !0
                }
            }, {
                key: "xySettings",
                value: function () {
                    var n = null
                        , i = this.w;
                    if (i.globals.axisCharts) {
                        if (i.config.xaxis.crosshairs.position === "back" && new Oe(this.ctx).drawXCrosshairs(),
                        i.config.yaxis[0].crosshairs.position === "back" && new Oe(this.ctx).drawYCrosshairs(),
                        i.config.xaxis.type === "datetime" && i.config.xaxis.labels.formatter === void 0) {
                            this.ctx.timeScale = new Pt(this.ctx);
                            var r = [];
                            isFinite(i.globals.minX) && isFinite(i.globals.maxX) && !i.globals.isBarHorizontal ? r = this.ctx.timeScale.calculateTimeScaleTicks(i.globals.minX, i.globals.maxX) : i.globals.isBarHorizontal && (r = this.ctx.timeScale.calculateTimeScaleTicks(i.globals.minY, i.globals.maxY)),
                                this.ctx.timeScale.recalcDimensionsBasedOnFormat(r)
                        }
                        n = new V(this.ctx).getCalculatedRatios()
                    }
                    return n
                }
            }, {
                key: "updateSourceChart",
                value: function (n) {
                    this.ctx.w.globals.selection = void 0,
                        this.ctx.updateHelpers._updateOptions({
                            chart: {
                                selection: {
                                    xaxis: {
                                        min: n.w.globals.minX,
                                        max: n.w.globals.maxX
                                    }
                                }
                            }
                        }, !1, !1)
                }
            }, {
                key: "setupBrushHandler",
                value: function () {
                    var n = this
                        , i = this.w;
                    if (i.config.chart.brush.enabled && typeof i.config.chart.events.selection != "function") {
                        var r = Array.isArray(i.config.chart.brush.targets) ? i.config.chart.brush.targets : [i.config.chart.brush.target];
                        r.forEach(function (c) {
                            var d = ApexCharts.getChartByID(c);
                            d.w.globals.brushSource = n.ctx,
                            typeof d.w.config.chart.events.zoomed != "function" && (d.w.config.chart.events.zoomed = function () {
                                    n.updateSourceChart(d)
                                }
                            ),
                            typeof d.w.config.chart.events.scrolled != "function" && (d.w.config.chart.events.scrolled = function () {
                                    n.updateSourceChart(d)
                                }
                            )
                        }),
                            i.config.chart.events.selection = function (c, d) {
                                r.forEach(function (h) {
                                    var f = ApexCharts.getChartByID(h)
                                        , m = M.clone(i.config.yaxis);
                                    if (i.config.chart.brush.autoScaleYaxis && f.w.globals.series.length === 1) {
                                        var x = new dt(f);
                                        m = x.autoScaleY(f, m, d)
                                    }
                                    var S = f.w.config.yaxis.reduce(function (_, k, L) {
                                        return [].concat(A(_), [a(a({}, f.w.config.yaxis[L]), {}, {
                                            min: m[0].min,
                                            max: m[0].max
                                        })])
                                    }, []);
                                    f.ctx.updateHelpers._updateOptions({
                                        xaxis: {
                                            min: d.xaxis.min,
                                            max: d.xaxis.max
                                        },
                                        yaxis: S
                                    }, !1, !1, !1, !1)
                                })
                            }
                    }
                }
            }]),
                j
        }(), qs = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "_updateOptions",
                value: function (n) {
                    var i = this
                        , r = arguments.length > 1 && arguments[1] !== void 0 && arguments[1]
                        , c = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2]
                        , d = !(arguments.length > 3 && arguments[3] !== void 0) || arguments[3]
                        , h = arguments.length > 4 && arguments[4] !== void 0 && arguments[4];
                    return new Promise(function (f) {
                            var m = [i.ctx];
                            d && (m = i.ctx.getSyncedCharts()),
                            i.ctx.w.globals.isExecCalled && (m = [i.ctx],
                                i.ctx.w.globals.isExecCalled = !1),
                                m.forEach(function (x, S) {
                                    var _ = x.w;
                                    if (_.globals.shouldAnimate = c,
                                    r || (_.globals.resized = !0,
                                        _.globals.dataChanged = !0,
                                    c && x.series.getPreviousPaths()),
                                    n && o(n) === "object" && (x.config = new Me(n),
                                        n = V.extendArrayProps(x.config, n, _),
                                    x.w.globals.chartID !== i.ctx.w.globals.chartID && delete n.series,
                                        _.config = M.extend(_.config, n),
                                    h && (_.globals.lastXAxis = n.xaxis ? M.clone(n.xaxis) : [],
                                        _.globals.lastYAxis = n.yaxis ? M.clone(n.yaxis) : [],
                                        _.globals.initialConfig = M.extend({}, _.config),
                                        _.globals.initialSeries = M.clone(_.config.series),
                                        n.series))) {
                                        for (var k = 0; k < _.globals.collapsedSeriesIndices.length; k++) {
                                            var L = _.config.series[_.globals.collapsedSeriesIndices[k]];
                                            _.globals.collapsedSeries[k].data = _.globals.axisCharts ? L.data.slice() : L
                                        }
                                        for (var N = 0; N < _.globals.ancillaryCollapsedSeriesIndices.length; N++) {
                                            var H = _.config.series[_.globals.ancillaryCollapsedSeriesIndices[N]];
                                            _.globals.ancillaryCollapsedSeries[N].data = _.globals.axisCharts ? H.data.slice() : H
                                        }
                                        x.series.emptyCollapsedSeries(_.config.series)
                                    }
                                    return x.update(n).then(function () {
                                        S === m.length - 1 && f(x)
                                    })
                                })
                        }
                    )
                }
            }, {
                key: "_updateSeries",
                value: function (n, i) {
                    var r = this
                        , c = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
                    return new Promise(function (d) {
                            var h, f = r.w;
                            return f.globals.shouldAnimate = i,
                                f.globals.dataChanged = !0,
                            i && r.ctx.series.getPreviousPaths(),
                                f.globals.axisCharts ? ((h = n.map(function (m, x) {
                                    return r._extendSeries(m, x)
                                })).length === 0 && (h = [{
                                    data: []
                                }]),
                                    f.config.series = h) : f.config.series = n.slice(),
                            c && (f.globals.initialConfig.series = M.clone(f.config.series),
                                f.globals.initialSeries = M.clone(f.config.series)),
                                r.ctx.update().then(function () {
                                    d(r.ctx)
                                })
                        }
                    )
                }
            }, {
                key: "_extendSeries",
                value: function (n, i) {
                    var r = this.w
                        , c = r.config.series[i];
                    return a(a({}, r.config.series[i]), {}, {
                        name: n.name ? n.name : c == null ? void 0 : c.name,
                        color: n.color ? n.color : c == null ? void 0 : c.color,
                        type: n.type ? n.type : c == null ? void 0 : c.type,
                        group: n.group ? n.group : c == null ? void 0 : c.group,
                        data: n.data ? n.data : c == null ? void 0 : c.data,
                        zIndex: n.zIndex !== void 0 ? n.zIndex : i
                    })
                }
            }, {
                key: "toggleDataPointSelection",
                value: function (n, i) {
                    var r = this.w
                        , c = null
                        , d = ".apexcharts-series[data\\:realIndex='".concat(n, "']");
                    return r.globals.axisCharts ? c = r.globals.dom.Paper.select("".concat(d, " path[j='").concat(i, "'], ").concat(d, " circle[j='").concat(i, "'], ").concat(d, " rect[j='").concat(i, "']")).members[0] : i === void 0 && (c = r.globals.dom.Paper.select("".concat(d, " path[j='").concat(n, "']")).members[0],
                    r.config.chart.type !== "pie" && r.config.chart.type !== "polarArea" && r.config.chart.type !== "donut" || this.ctx.pie.pieClicked(n)),
                        c ? (new $(this.ctx).pathMouseDown(c, null),
                            c.node ? c.node : null) : (console.warn("toggleDataPointSelection: Element not found"),
                            null)
                }
            }, {
                key: "forceXAxisUpdate",
                value: function (n) {
                    var i = this.w;
                    if (["min", "max"].forEach(function (c) {
                        n.xaxis[c] !== void 0 && (i.config.xaxis[c] = n.xaxis[c],
                            i.globals.lastXAxis[c] = n.xaxis[c])
                    }),
                    n.xaxis.categories && n.xaxis.categories.length && (i.config.xaxis.categories = n.xaxis.categories),
                        i.config.xaxis.convertedCatToNumeric) {
                        var r = new fe(n);
                        n = r.convertCatToNumericXaxis(n, this.ctx)
                    }
                    return n
                }
            }, {
                key: "forceYAxisUpdate",
                value: function (n) {
                    return n.chart && n.chart.stacked && n.chart.stackType === "100%" && (Array.isArray(n.yaxis) ? n.yaxis.forEach(function (i, r) {
                        n.yaxis[r].min = 0,
                            n.yaxis[r].max = 100
                    }) : (n.yaxis.min = 0,
                        n.yaxis.max = 100)),
                        n
                }
            }, {
                key: "revertDefaultAxisMinMax",
                value: function (n) {
                    var i = this
                        , r = this.w
                        , c = r.globals.lastXAxis
                        , d = r.globals.lastYAxis;
                    n && n.xaxis && (c = n.xaxis),
                    n && n.yaxis && (d = n.yaxis),
                        r.config.xaxis.min = c.min,
                        r.config.xaxis.max = c.max;
                    var h = function (f) {
                        d[f] !== void 0 && (r.config.yaxis[f].min = d[f].min,
                            r.config.yaxis[f].max = d[f].max)
                    };
                    r.config.yaxis.map(function (f, m) {
                        r.globals.zoomed || d[m] !== void 0 ? h(m) : i.ctx.opts.yaxis[m] !== void 0 && (f.min = i.ctx.opts.yaxis[m].min,
                            f.max = i.ctx.opts.yaxis[m].max)
                    })
                }
            }]),
                j
        }();
        Ii = typeof window < "u" ? window : void 0,
            yr = function (j, n) {
                var i = (this !== void 0 ? this : j).SVG = function (b) {
                        if (i.supported)
                            return b = new i.Doc(b),
                            i.parser.draw || i.prepare(),
                                b
                    }
                ;
                if (i.ns = "http://www.w3.org/2000/svg",
                    i.xmlns = "http://www.w3.org/2000/xmlns/",
                    i.xlink = "http://www.w3.org/1999/xlink",
                    i.svgjs = "http://svgjs.dev",
                    i.supported = !0,
                    !i.supported)
                    return !1;
                i.did = 1e3,
                    i.eid = function (b) {
                        return "Svgjs" + S(b) + i.did++
                    }
                    ,
                    i.create = function (b) {
                        var E = n.createElementNS(this.ns, b);
                        return E.setAttribute("id", this.eid(b)),
                            E
                    }
                    ,
                    i.extend = function () {
                        var b, E;
                        E = (b = [].slice.call(arguments)).pop();
                        for (var B = b.length - 1; B >= 0; B--)
                            if (b[B])
                                for (var X in E)
                                    b[B].prototype[X] = E[X];
                        i.Set && i.Set.inherit && i.Set.inherit()
                    }
                    ,
                    i.invent = function (b) {
                        var E = typeof b.create == "function" ? b.create : function () {
                                this.constructor.call(this, i.create(b.create))
                            }
                        ;
                        return b.inherit && (E.prototype = new b.inherit),
                        b.extend && i.extend(E, b.extend),
                        b.construct && i.extend(b.parent || i.Container, b.construct),
                            E
                    }
                    ,
                    i.adopt = function (b) {
                        return b ? b.instance ? b.instance : ((E = b.nodeName == "svg" ? b.parentNode instanceof j.SVGElement ? new i.Nested : new i.Doc : b.nodeName == "linearGradient" ? new i.Gradient("linear") : b.nodeName == "radialGradient" ? new i.Gradient("radial") : i[S(b.nodeName)] ? new i[S(b.nodeName)] : new i.Element(b)).type = b.nodeName,
                            E.node = b,
                            b.instance = E,
                        E instanceof i.Doc && E.namespace().defs(),
                            E.setData(JSON.parse(b.getAttribute("svgjs:data")) || {}),
                            E) : null;
                        var E
                    }
                    ,
                    i.prepare = function () {
                        var b = n.getElementsByTagName("body")[0]
                            , E = (b ? new i.Doc(b) : i.adopt(n.documentElement).nested()).size(2, 0);
                        i.parser = {
                            body: b || n.documentElement,
                            draw: E.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
                            poly: E.polyline().node,
                            path: E.path().node,
                            native: i.create("svg")
                        }
                    }
                    ,
                    i.parser = {
                        native: i.create("svg")
                    },
                    n.addEventListener("DOMContentLoaded", function () {
                        i.parser.draw || i.prepare()
                    }, !1),
                    i.regex = {
                        numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
                        hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
                        rgb: /rgb\((\d+),(\d+),(\d+)\)/,
                        reference: /#([a-z0-9\-_]+)/i,
                        transforms: /\)\s*,?\s*/,
                        whitespace: /\s/g,
                        isHex: /^#[a-f0-9]{3,6}$/i,
                        isRgb: /^rgb\(/,
                        isCss: /[^:]+:[^;]+;?/,
                        isBlank: /^(\s+)?$/,
                        isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
                        isPercent: /^-?[\d\.]+%$/,
                        isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
                        delimiter: /[\s,]+/,
                        hyphen: /([^e])\-/gi,
                        pathLetters: /[MLHVCSQTAZ]/gi,
                        isPathLetter: /[MLHVCSQTAZ]/i,
                        numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
                        dots: /\./g
                    },
                    i.utils = {
                        map: function (b, E) {
                            for (var B = b.length, X = [], K = 0; K < B; K++)
                                X.push(E(b[K]));
                            return X
                        },
                        filter: function (b, E) {
                            for (var B = b.length, X = [], K = 0; K < B; K++)
                                E(b[K]) && X.push(b[K]);
                            return X
                        },
                        filterSVGElements: function (b) {
                            return this.filter(b, function (E) {
                                return E instanceof j.SVGElement
                            })
                        }
                    },
                    i.defaults = {
                        attrs: {
                            "fill-opacity": 1,
                            "stroke-opacity": 1,
                            "stroke-width": 0,
                            "stroke-linejoin": "miter",
                            "stroke-linecap": "butt",
                            fill: "#000000",
                            stroke: "#000000",
                            opacity: 1,
                            x: 0,
                            y: 0,
                            cx: 0,
                            cy: 0,
                            width: 0,
                            height: 0,
                            r: 0,
                            rx: 0,
                            ry: 0,
                            offset: 0,
                            "stop-opacity": 1,
                            "stop-color": "#000000",
                            "font-size": 16,
                            "font-family": "Helvetica, Arial, sans-serif",
                            "text-anchor": "start"
                        }
                    },
                    i.Color = function (b) {
                        var E, B;
                        this.r = 0,
                            this.g = 0,
                            this.b = 0,
                        b && (typeof b == "string" ? i.regex.isRgb.test(b) ? (E = i.regex.rgb.exec(b.replace(i.regex.whitespace, "")),
                            this.r = parseInt(E[1]),
                            this.g = parseInt(E[2]),
                            this.b = parseInt(E[3])) : i.regex.isHex.test(b) && (E = i.regex.hex.exec((B = b).length == 4 ? ["#", B.substring(1, 2), B.substring(1, 2), B.substring(2, 3), B.substring(2, 3), B.substring(3, 4), B.substring(3, 4)].join("") : B),
                            this.r = parseInt(E[1], 16),
                            this.g = parseInt(E[2], 16),
                            this.b = parseInt(E[3], 16)) : o(b) === "object" && (this.r = b.r,
                            this.g = b.g,
                            this.b = b.b))
                    }
                    ,
                    i.extend(i.Color, {
                        toString: function () {
                            return this.toHex()
                        },
                        toHex: function () {
                            return "#" + _(this.r) + _(this.g) + _(this.b)
                        },
                        toRgb: function () {
                            return "rgb(" + [this.r, this.g, this.b].join() + ")"
                        },
                        brightness: function () {
                            return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11
                        },
                        morph: function (b) {
                            return this.destination = new i.Color(b),
                                this
                        },
                        at: function (b) {
                            return this.destination ? (b = b < 0 ? 0 : b > 1 ? 1 : b,
                                new i.Color({
                                    r: ~~(this.r + (this.destination.r - this.r) * b),
                                    g: ~~(this.g + (this.destination.g - this.g) * b),
                                    b: ~~(this.b + (this.destination.b - this.b) * b)
                                })) : this
                        }
                    }),
                    i.Color.test = function (b) {
                        return b += "",
                        i.regex.isHex.test(b) || i.regex.isRgb.test(b)
                    }
                    ,
                    i.Color.isRgb = function (b) {
                        return b && typeof b.r == "number" && typeof b.g == "number" && typeof b.b == "number"
                    }
                    ,
                    i.Color.isColor = function (b) {
                        return i.Color.isRgb(b) || i.Color.test(b)
                    }
                    ,
                    i.Array = function (b, E) {
                        (b = (b || []).valueOf()).length == 0 && E && (b = E.valueOf()),
                            this.value = this.parse(b)
                    }
                    ,
                    i.extend(i.Array, {
                        toString: function () {
                            return this.value.join(" ")
                        },
                        valueOf: function () {
                            return this.value
                        },
                        parse: function (b) {
                            return b = b.valueOf(),
                                Array.isArray(b) ? b : this.split(b)
                        }
                    }),
                    i.PointArray = function (b, E) {
                        i.Array.call(this, b, E || [[0, 0]])
                    }
                    ,
                    i.PointArray.prototype = new i.Array,
                    i.PointArray.prototype.constructor = i.PointArray;
                for (var r = {
                    M: function (b, E, B) {
                        return E.x = B.x = b[0],
                            E.y = B.y = b[1],
                            ["M", E.x, E.y]
                    },
                    L: function (b, E) {
                        return E.x = b[0],
                            E.y = b[1],
                            ["L", b[0], b[1]]
                    },
                    H: function (b, E) {
                        return E.x = b[0],
                            ["H", b[0]]
                    },
                    V: function (b, E) {
                        return E.y = b[0],
                            ["V", b[0]]
                    },
                    C: function (b, E) {
                        return E.x = b[4],
                            E.y = b[5],
                            ["C", b[0], b[1], b[2], b[3], b[4], b[5]]
                    },
                    Q: function (b, E) {
                        return E.x = b[2],
                            E.y = b[3],
                            ["Q", b[0], b[1], b[2], b[3]]
                    },
                    S: function (b, E) {
                        return E.x = b[2],
                            E.y = b[3],
                            ["S", b[0], b[1], b[2], b[3]]
                    },
                    Z: function (b, E, B) {
                        return E.x = B.x,
                            E.y = B.y,
                            ["Z"]
                    }
                }, c = "mlhvqtcsaz".split(""), d = 0, h = c.length; d < h; ++d)
                    r[c[d]] = function (b) {
                        return function (E, B, X) {
                            if (b == "H")
                                E[0] = E[0] + B.x;
                            else if (b == "V")
                                E[0] = E[0] + B.y;
                            else if (b == "A")
                                E[5] = E[5] + B.x,
                                    E[6] = E[6] + B.y;
                            else
                                for (var K = 0, ee = E.length; K < ee; ++K)
                                    E[K] = E[K] + (K % 2 ? B.y : B.x);
                            if (r && typeof r[b] == "function")
                                return r[b](E, B, X)
                        }
                    }(c[d].toUpperCase());
                i.PathArray = function (b, E) {
                    i.Array.call(this, b, E || [["M", 0, 0]])
                }
                    ,
                    i.PathArray.prototype = new i.Array,
                    i.PathArray.prototype.constructor = i.PathArray,
                    i.extend(i.PathArray, {
                        toString: function () {
                            return function (b) {
                                for (var E = 0, B = b.length, X = ""; E < B; E++)
                                    X += b[E][0],
                                    b[E][1] != null && (X += b[E][1],
                                    b[E][2] != null && (X += " ",
                                        X += b[E][2],
                                    b[E][3] != null && (X += " ",
                                        X += b[E][3],
                                        X += " ",
                                        X += b[E][4],
                                    b[E][5] != null && (X += " ",
                                        X += b[E][5],
                                        X += " ",
                                        X += b[E][6],
                                    b[E][7] != null && (X += " ",
                                        X += b[E][7])))));
                                return X + " "
                            }(this.value)
                        },
                        move: function (b, E) {
                            var B = this.bbox();
                            return B.x,
                                B.y,
                                this
                        },
                        at: function (b) {
                            if (!this.destination)
                                return this;
                            for (var E = this.value, B = this.destination.value, X = [], K = new i.PathArray, ee = 0, pe = E.length; ee < pe; ee++) {
                                X[ee] = [E[ee][0]];
                                for (var ge = 1, Ie = E[ee].length; ge < Ie; ge++)
                                    X[ee][ge] = E[ee][ge] + (B[ee][ge] - E[ee][ge]) * b;
                                X[ee][0] === "A" && (X[ee][4] = +(X[ee][4] != 0),
                                    X[ee][5] = +(X[ee][5] != 0))
                            }
                            return K.value = X,
                                K
                        },
                        parse: function (b) {
                            if (b instanceof i.PathArray)
                                return b.valueOf();
                            var E, B = {
                                M: 2,
                                L: 2,
                                H: 1,
                                V: 1,
                                C: 6,
                                S: 4,
                                Q: 4,
                                T: 2,
                                A: 7,
                                Z: 0
                            };
                            b = typeof b == "string" ? b.replace(i.regex.numbersWithDots, m).replace(i.regex.pathLetters, " $& ").replace(i.regex.hyphen, "$1 -").trim().split(i.regex.delimiter) : b.reduce(function (Ie, $e) {
                                return [].concat.call(Ie, $e)
                            }, []);
                            var X = []
                                , K = new i.Point
                                , ee = new i.Point
                                , pe = 0
                                , ge = b.length;
                            do
                                i.regex.isPathLetter.test(b[pe]) ? (E = b[pe],
                                    ++pe) : E == "M" ? E = "L" : E == "m" && (E = "l"),
                                    X.push(r[E].call(null, b.slice(pe, pe += B[E.toUpperCase()]).map(parseFloat), K, ee));
                            while (ge > pe);
                            return X
                        },
                        bbox: function () {
                            return i.parser.draw || i.prepare(),
                                i.parser.path.setAttribute("d", this.toString()),
                                i.parser.path.getBBox()
                        }
                    }),
                    i.Number = i.invent({
                        create: function (b, E) {
                            this.value = 0,
                                this.unit = E || "",
                                typeof b == "number" ? this.value = isNaN(b) ? 0 : isFinite(b) ? b : b < 0 ? -34e37 : 34e37 : typeof b == "string" ? (E = b.match(i.regex.numberAndUnit)) && (this.value = parseFloat(E[1]),
                                    E[5] == "%" ? this.value /= 100 : E[5] == "s" && (this.value *= 1e3),
                                    this.unit = E[5]) : b instanceof i.Number && (this.value = b.valueOf(),
                                    this.unit = b.unit)
                        },
                        extend: {
                            toString: function () {
                                return (this.unit == "%" ? ~~(1e8 * this.value) / 1e6 : this.unit == "s" ? this.value / 1e3 : this.value) + this.unit
                            },
                            toJSON: function () {
                                return this.toString()
                            },
                            valueOf: function () {
                                return this.value
                            },
                            plus: function (b) {
                                return b = new i.Number(b),
                                    new i.Number(this + b, this.unit || b.unit)
                            },
                            minus: function (b) {
                                return b = new i.Number(b),
                                    new i.Number(this - b, this.unit || b.unit)
                            },
                            times: function (b) {
                                return b = new i.Number(b),
                                    new i.Number(this * b, this.unit || b.unit)
                            },
                            divide: function (b) {
                                return b = new i.Number(b),
                                    new i.Number(this / b, this.unit || b.unit)
                            },
                            to: function (b) {
                                var E = new i.Number(this);
                                return typeof b == "string" && (E.unit = b),
                                    E
                            },
                            morph: function (b) {
                                return this.destination = new i.Number(b),
                                b.relative && (this.destination.value += this.value),
                                    this
                            },
                            at: function (b) {
                                return this.destination ? new i.Number(this.destination).minus(this).times(b).plus(this) : this
                            }
                        }
                    }),
                    i.Element = i.invent({
                        create: function (b) {
                            this._stroke = i.defaults.attrs.stroke,
                                this._event = null,
                                this.dom = {},
                            (this.node = b) && (this.type = b.nodeName,
                                this.node.instance = this,
                                this._stroke = b.getAttribute("stroke") || this._stroke)
                        },
                        extend: {
                            x: function (b) {
                                return this.attr("x", b)
                            },
                            y: function (b) {
                                return this.attr("y", b)
                            },
                            cx: function (b) {
                                return b == null ? this.x() + this.width() / 2 : this.x(b - this.width() / 2)
                            },
                            cy: function (b) {
                                return b == null ? this.y() + this.height() / 2 : this.y(b - this.height() / 2)
                            },
                            move: function (b, E) {
                                return this.x(b).y(E)
                            },
                            center: function (b, E) {
                                return this.cx(b).cy(E)
                            },
                            width: function (b) {
                                return this.attr("width", b)
                            },
                            height: function (b) {
                                return this.attr("height", b)
                            },
                            size: function (b, E) {
                                var B = k(this, b, E);
                                return this.width(new i.Number(B.width)).height(new i.Number(B.height))
                            },
                            clone: function (b) {
                                this.writeDataToDom();
                                var E = H(this.node.cloneNode(!0));
                                return b ? b.add(E) : this.after(E),
                                    E
                            },
                            remove: function () {
                                return this.parent() && this.parent().removeElement(this),
                                    this
                            },
                            replace: function (b) {
                                return this.after(b).remove(),
                                    b
                            },
                            addTo: function (b) {
                                return b.put(this)
                            },
                            putIn: function (b) {
                                return b.add(this)
                            },
                            id: function (b) {
                                return this.attr("id", b)
                            },
                            show: function () {
                                return this.style("display", "")
                            },
                            hide: function () {
                                return this.style("display", "none")
                            },
                            visible: function () {
                                return this.style("display") != "none"
                            },
                            toString: function () {
                                return this.attr("id")
                            },
                            classes: function () {
                                var b = this.attr("class");
                                return b == null ? [] : b.trim().split(i.regex.delimiter)
                            },
                            hasClass: function (b) {
                                return this.classes().indexOf(b) != -1
                            },
                            addClass: function (b) {
                                if (!this.hasClass(b)) {
                                    var E = this.classes();
                                    E.push(b),
                                        this.attr("class", E.join(" "))
                                }
                                return this
                            },
                            removeClass: function (b) {
                                return this.hasClass(b) && this.attr("class", this.classes().filter(function (E) {
                                    return E != b
                                }).join(" ")),
                                    this
                            },
                            toggleClass: function (b) {
                                return this.hasClass(b) ? this.removeClass(b) : this.addClass(b)
                            },
                            reference: function (b) {
                                return i.get(this.attr(b))
                            },
                            parent: function (b) {
                                var E = this;
                                if (!E.node.parentNode)
                                    return null;
                                if (E = i.adopt(E.node.parentNode),
                                    !b)
                                    return E;
                                for (; E && E.node instanceof j.SVGElement;) {
                                    if (typeof b == "string" ? E.matches(b) : E instanceof b)
                                        return E;
                                    if (!E.node.parentNode || E.node.parentNode.nodeName == "#document")
                                        return null;
                                    E = i.adopt(E.node.parentNode)
                                }
                            },
                            doc: function () {
                                return this instanceof i.Doc ? this : this.parent(i.Doc)
                            },
                            parents: function (b) {
                                var E = []
                                    , B = this;
                                do {
                                    if (!(B = B.parent(b)) || !B.node)
                                        break;
                                    E.push(B)
                                } while (B.parent);
                                return E
                            },
                            matches: function (b) {
                                return function (E, B) {
                                    return (E.matches || E.matchesSelector || E.msMatchesSelector || E.mozMatchesSelector || E.webkitMatchesSelector || E.oMatchesSelector).call(E, B)
                                }(this.node, b)
                            },
                            native: function () {
                                return this.node
                            },
                            svg: function (b) {
                                var E = n.createElement("svg");
                                if (!(b && this instanceof i.Parent))
                                    return E.appendChild(b = n.createElement("svg")),
                                        this.writeDataToDom(),
                                        b.appendChild(this.node.cloneNode(!0)),
                                        E.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
                                E.innerHTML = "<svg>" + b.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
                                for (var B = 0, X = E.firstChild.childNodes.length; B < X; B++)
                                    this.node.appendChild(E.firstChild.firstChild);
                                return this
                            },
                            writeDataToDom: function () {
                                return (this.each || this.lines) && (this.each ? this : this.lines()).each(function () {
                                    this.writeDataToDom()
                                }),
                                    this.node.removeAttribute("svgjs:data"),
                                Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)),
                                    this
                            },
                            setData: function (b) {
                                return this.dom = b,
                                    this
                            },
                            is: function (b) {
                                return function (E, B) {
                                    return E instanceof B
                                }(this, b)
                            }
                        }
                    }),
                    i.easing = {
                        "-": function (b) {
                            return b
                        },
                        "<>": function (b) {
                            return -Math.cos(b * Math.PI) / 2 + .5
                        },
                        ">": function (b) {
                            return Math.sin(b * Math.PI / 2)
                        },
                        "<": function (b) {
                            return 1 - Math.cos(b * Math.PI / 2)
                        }
                    },
                    i.morph = function (b) {
                        return function (E, B) {
                            return new i.MorphObj(E, B).at(b)
                        }
                    }
                    ,
                    i.Situation = i.invent({
                        create: function (b) {
                            this.init = !1,
                                this.reversed = !1,
                                this.reversing = !1,
                                this.duration = new i.Number(b.duration).valueOf(),
                                this.delay = new i.Number(b.delay).valueOf(),
                                this.start = +new Date + this.delay,
                                this.finish = this.start + this.duration,
                                this.ease = b.ease,
                                this.loop = 0,
                                this.loops = !1,
                                this.animations = {},
                                this.attrs = {},
                                this.styles = {},
                                this.transforms = [],
                                this.once = {}
                        }
                    }),
                    i.FX = i.invent({
                        create: function (b) {
                            this._target = b,
                                this.situations = [],
                                this.active = !1,
                                this.situation = null,
                                this.paused = !1,
                                this.lastPos = 0,
                                this.pos = 0,
                                this.absPos = 0,
                                this._speed = 1
                        },
                        extend: {
                            animate: function (b, E, B) {
                                o(b) === "object" && (E = b.ease,
                                    B = b.delay,
                                    b = b.duration);
                                var X = new i.Situation({
                                    duration: b || 1e3,
                                    delay: B || 0,
                                    ease: i.easing[E || "-"] || E
                                });
                                return this.queue(X),
                                    this
                            },
                            target: function (b) {
                                return b && b instanceof i.Element ? (this._target = b,
                                    this) : this._target
                            },
                            timeToAbsPos: function (b) {
                                return (b - this.situation.start) / (this.situation.duration / this._speed)
                            },
                            absPosToTime: function (b) {
                                return this.situation.duration / this._speed * b + this.situation.start
                            },
                            startAnimFrame: function () {
                                this.stopAnimFrame(),
                                    this.animationFrame = j.requestAnimationFrame((function () {
                                            this.step()
                                        }
                                    ).bind(this))
                            },
                            stopAnimFrame: function () {
                                j.cancelAnimationFrame(this.animationFrame)
                            },
                            start: function () {
                                return !this.active && this.situation && (this.active = !0,
                                    this.startCurrent()),
                                    this
                            },
                            startCurrent: function () {
                                return this.situation.start = +new Date + this.situation.delay / this._speed,
                                    this.situation.finish = this.situation.start + this.situation.duration / this._speed,
                                    this.initAnimations().step()
                            },
                            queue: function (b) {
                                return (typeof b == "function" || b instanceof i.Situation) && this.situations.push(b),
                                this.situation || (this.situation = this.situations.shift()),
                                    this
                            },
                            dequeue: function () {
                                return this.stop(),
                                    this.situation = this.situations.shift(),
                                this.situation && (this.situation instanceof i.Situation ? this.start() : this.situation.call(this)),
                                    this
                            },
                            initAnimations: function () {
                                var b, E = this.situation;
                                if (E.init)
                                    return this;
                                for (var B in E.animations) {
                                    b = this.target()[B](),
                                    Array.isArray(b) || (b = [b]),
                                    Array.isArray(E.animations[B]) || (E.animations[B] = [E.animations[B]]);
                                    for (var X = b.length; X--;)
                                        E.animations[B][X] instanceof i.Number && (b[X] = new i.Number(b[X])),
                                            E.animations[B][X] = b[X].morph(E.animations[B][X])
                                }
                                for (var B in E.attrs)
                                    E.attrs[B] = new i.MorphObj(this.target().attr(B), E.attrs[B]);
                                for (var B in E.styles)
                                    E.styles[B] = new i.MorphObj(this.target().style(B), E.styles[B]);
                                return E.initialTransformation = this.target().matrixify(),
                                    E.init = !0,
                                    this
                            },
                            clearQueue: function () {
                                return this.situations = [],
                                    this
                            },
                            clearCurrent: function () {
                                return this.situation = null,
                                    this
                            },
                            stop: function (b, E) {
                                var B = this.active;
                                return this.active = !1,
                                E && this.clearQueue(),
                                b && this.situation && (!B && this.startCurrent(),
                                    this.atEnd()),
                                    this.stopAnimFrame(),
                                    this.clearCurrent()
                            },
                            after: function (b) {
                                var E = this.last();
                                return this.target().on("finished.fx", function B(X) {
                                    X.detail.situation == E && (b.call(this, E),
                                        this.off("finished.fx", B))
                                }),
                                    this._callStart()
                            },
                            during: function (b) {
                                var E = this.last()
                                    , B = function (X) {
                                    X.detail.situation == E && b.call(this, X.detail.pos, i.morph(X.detail.pos), X.detail.eased, E)
                                };
                                return this.target().off("during.fx", B).on("during.fx", B),
                                    this.after(function () {
                                        this.off("during.fx", B)
                                    }),
                                    this._callStart()
                            },
                            afterAll: function (b) {
                                var E = function B(X) {
                                    b.call(this),
                                        this.off("allfinished.fx", B)
                                };
                                return this.target().off("allfinished.fx", E).on("allfinished.fx", E),
                                    this._callStart()
                            },
                            last: function () {
                                return this.situations.length ? this.situations[this.situations.length - 1] : this.situation
                            },
                            add: function (b, E, B) {
                                return this.last()[B || "animations"][b] = E,
                                    this._callStart()
                            },
                            step: function (b) {
                                var E, B, X;
                                b || (this.absPos = this.timeToAbsPos(+new Date)),
                                    this.situation.loops !== !1 ? (E = Math.max(this.absPos, 0),
                                        B = Math.floor(E),
                                        this.situation.loops === !0 || B < this.situation.loops ? (this.pos = E - B,
                                            X = this.situation.loop,
                                            this.situation.loop = B) : (this.absPos = this.situation.loops,
                                            this.pos = 1,
                                            X = this.situation.loop - 1,
                                            this.situation.loop = this.situation.loops),
                                    this.situation.reversing && (this.situation.reversed = this.situation.reversed != !!((this.situation.loop - X) % 2))) : (this.absPos = Math.min(this.absPos, 1),
                                        this.pos = this.absPos),
                                this.pos < 0 && (this.pos = 0),
                                this.situation.reversed && (this.pos = 1 - this.pos);
                                var K = this.situation.ease(this.pos);
                                for (var ee in this.situation.once)
                                    ee > this.lastPos && ee <= K && (this.situation.once[ee].call(this.target(), this.pos, K),
                                        delete this.situation.once[ee]);
                                return this.active && this.target().fire("during", {
                                    pos: this.pos,
                                    eased: K,
                                    fx: this,
                                    situation: this.situation
                                }),
                                    this.situation ? (this.eachAt(),
                                        this.pos == 1 && !this.situation.reversed || this.situation.reversed && this.pos == 0 ? (this.stopAnimFrame(),
                                            this.target().fire("finished", {
                                                fx: this,
                                                situation: this.situation
                                            }),
                                        this.situations.length || (this.target().fire("allfinished"),
                                        this.situations.length || (this.target().off(".fx"),
                                            this.active = !1)),
                                            this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(),
                                        this.lastPos = K,
                                        this) : this
                            },
                            eachAt: function () {
                                var b, E = this, B = this.target(), X = this.situation;
                                for (var K in X.animations)
                                    b = [].concat(X.animations[K]).map(function (ge) {
                                        return typeof ge != "string" && ge.at ? ge.at(X.ease(E.pos), E.pos) : ge
                                    }),
                                        B[K].apply(B, b);
                                for (var K in X.attrs)
                                    b = [K].concat(X.attrs[K]).map(function (Ie) {
                                        return typeof Ie != "string" && Ie.at ? Ie.at(X.ease(E.pos), E.pos) : Ie
                                    }),
                                        B.attr.apply(B, b);
                                for (var K in X.styles)
                                    b = [K].concat(X.styles[K]).map(function (Ie) {
                                        return typeof Ie != "string" && Ie.at ? Ie.at(X.ease(E.pos), E.pos) : Ie
                                    }),
                                        B.style.apply(B, b);
                                if (X.transforms.length) {
                                    b = X.initialTransformation,
                                        K = 0;
                                    for (var ee = X.transforms.length; K < ee; K++) {
                                        var pe = X.transforms[K];
                                        pe instanceof i.Matrix ? b = pe.relative ? b.multiply(new i.Matrix().morph(pe).at(X.ease(this.pos))) : b.morph(pe).at(X.ease(this.pos)) : (pe.relative || pe.undo(b.extract()),
                                            b = b.multiply(pe.at(X.ease(this.pos))))
                                    }
                                    B.matrix(b)
                                }
                                return this
                            },
                            once: function (b, E, B) {
                                var X = this.last();
                                return B || (b = X.ease(b)),
                                    X.once[b] = E,
                                    this
                            },
                            _callStart: function () {
                                return setTimeout((function () {
                                        this.start()
                                    }
                                ).bind(this), 0),
                                    this
                            }
                        },
                        parent: i.Element,
                        construct: {
                            animate: function (b, E, B) {
                                return (this.fx || (this.fx = new i.FX(this))).animate(b, E, B)
                            },
                            delay: function (b) {
                                return (this.fx || (this.fx = new i.FX(this))).delay(b)
                            },
                            stop: function (b, E) {
                                return this.fx && this.fx.stop(b, E),
                                    this
                            },
                            finish: function () {
                                return this.fx && this.fx.finish(),
                                    this
                            }
                        }
                    }),
                    i.MorphObj = i.invent({
                        create: function (b, E) {
                            return i.Color.isColor(E) ? new i.Color(b).morph(E) : i.regex.delimiter.test(b) ? i.regex.pathLetters.test(b) ? new i.PathArray(b).morph(E) : new i.Array(b).morph(E) : i.regex.numberAndUnit.test(E) ? new i.Number(b).morph(E) : (this.value = b,
                                void (this.destination = E))
                        },
                        extend: {
                            at: function (b, E) {
                                return E < 1 ? this.value : this.destination
                            },
                            valueOf: function () {
                                return this.value
                            }
                        }
                    }),
                    i.extend(i.FX, {
                        attr: function (b, E, B) {
                            if (o(b) === "object")
                                for (var X in b)
                                    this.attr(X, b[X]);
                            else
                                this.add(b, E, "attrs");
                            return this
                        },
                        plot: function (b, E, B, X) {
                            return arguments.length == 4 ? this.plot([b, E, B, X]) : this.add("plot", new (this.target()).morphArray(b))
                        }
                    }),
                    i.Box = i.invent({
                        create: function (b, E, B, X) {
                            if (!(o(b) !== "object" || b instanceof i.Element))
                                return i.Box.call(this, b.left != null ? b.left : b.x, b.top != null ? b.top : b.y, b.width, b.height);
                            var K;
                            arguments.length == 4 && (this.x = b,
                                this.y = E,
                                this.width = B,
                                this.height = X),
                            (K = this).x == null && (K.x = 0,
                                K.y = 0,
                                K.width = 0,
                                K.height = 0),
                                K.w = K.width,
                                K.h = K.height,
                                K.x2 = K.x + K.width,
                                K.y2 = K.y + K.height,
                                K.cx = K.x + K.width / 2,
                                K.cy = K.y + K.height / 2
                        }
                    }),
                    i.BBox = i.invent({
                        create: function (b) {
                            if (i.Box.apply(this, [].slice.call(arguments)),
                            b instanceof i.Element) {
                                var E;
                                try {
                                    if (!n.documentElement.contains) {
                                        for (var B = b.node; B.parentNode;)
                                            B = B.parentNode;
                                        if (B != n)
                                            throw new Error("Element not in the dom")
                                    }
                                    E = b.node.getBBox()
                                } catch {
                                    if (b instanceof i.Shape) {
                                        i.parser.draw || i.prepare();
                                        var X = b.clone(i.parser.draw.instance).show();
                                        X && X.node && typeof X.node.getBBox == "function" && (E = X.node.getBBox()),
                                        X && typeof X.remove == "function" && X.remove()
                                    } else
                                        E = {
                                            x: b.node.clientLeft,
                                            y: b.node.clientTop,
                                            width: b.node.clientWidth,
                                            height: b.node.clientHeight
                                        }
                                }
                                i.Box.call(this, E)
                            }
                        },
                        inherit: i.Box,
                        parent: i.Element,
                        construct: {
                            bbox: function () {
                                return new i.BBox(this)
                            }
                        }
                    }),
                    i.BBox.prototype.constructor = i.BBox,
                    i.Matrix = i.invent({
                        create: function (b) {
                            var E = N([1, 0, 0, 1, 0, 0]);
                            b = b === null ? E : b instanceof i.Element ? b.matrixify() : typeof b == "string" ? N(b.split(i.regex.delimiter).map(parseFloat)) : arguments.length == 6 ? N([].slice.call(arguments)) : Array.isArray(b) ? N(b) : b && o(b) === "object" ? b : E;
                            for (var B = q.length - 1; B >= 0; --B)
                                this[q[B]] = b[q[B]] != null ? b[q[B]] : E[q[B]]
                        },
                        extend: {
                            extract: function () {
                                var b = L(this, 0, 1);
                                L(this, 1, 0);
                                var E = 180 / Math.PI * Math.atan2(b.y, b.x) - 90;
                                return {
                                    x: this.e,
                                    y: this.f,
                                    transformedX: (this.e * Math.cos(E * Math.PI / 180) + this.f * Math.sin(E * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
                                    transformedY: (this.f * Math.cos(E * Math.PI / 180) + this.e * Math.sin(-E * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
                                    rotation: E,
                                    a: this.a,
                                    b: this.b,
                                    c: this.c,
                                    d: this.d,
                                    e: this.e,
                                    f: this.f,
                                    matrix: new i.Matrix(this)
                                }
                            },
                            clone: function () {
                                return new i.Matrix(this)
                            },
                            morph: function (b) {
                                return this.destination = new i.Matrix(b),
                                    this
                            },
                            multiply: function (b) {
                                return new i.Matrix(this.native().multiply(function (E) {
                                    return E instanceof i.Matrix || (E = new i.Matrix(E)),
                                        E
                                }(b).native()))
                            },
                            inverse: function () {
                                return new i.Matrix(this.native().inverse())
                            },
                            translate: function (b, E) {
                                return new i.Matrix(this.native().translate(b || 0, E || 0))
                            },
                            native: function () {
                                for (var b = i.parser.native.createSVGMatrix(), E = q.length - 1; E >= 0; E--)
                                    b[q[E]] = this[q[E]];
                                return b
                            },
                            toString: function () {
                                return "matrix(" + z(this.a) + "," + z(this.b) + "," + z(this.c) + "," + z(this.d) + "," + z(this.e) + "," + z(this.f) + ")"
                            }
                        },
                        parent: i.Element,
                        construct: {
                            ctm: function () {
                                return new i.Matrix(this.node.getCTM())
                            },
                            screenCTM: function () {
                                if (this instanceof i.Nested) {
                                    var b = this.rect(1, 1)
                                        , E = b.node.getScreenCTM();
                                    return b.remove(),
                                        new i.Matrix(E)
                                }
                                return new i.Matrix(this.node.getScreenCTM())
                            }
                        }
                    }),
                    i.Point = i.invent({
                        create: function (b, E) {
                            var B;
                            B = Array.isArray(b) ? {
                                x: b[0],
                                y: b[1]
                            } : o(b) === "object" ? {
                                x: b.x,
                                y: b.y
                            } : b != null ? {
                                x: b,
                                y: E ?? b
                            } : {
                                x: 0,
                                y: 0
                            },
                                this.x = B.x,
                                this.y = B.y
                        },
                        extend: {
                            clone: function () {
                                return new i.Point(this)
                            },
                            morph: function (b, E) {
                                return this.destination = new i.Point(b, E),
                                    this
                            }
                        }
                    }),
                    i.extend(i.Element, {
                        point: function (b, E) {
                            return new i.Point(b, E).transform(this.screenCTM().inverse())
                        }
                    }),
                    i.extend(i.Element, {
                        attr: function (b, E, B) {
                            if (b == null) {
                                for (b = {},
                                         B = (E = this.node.attributes).length - 1; B >= 0; B--)
                                    b[E[B].nodeName] = i.regex.isNumber.test(E[B].nodeValue) ? parseFloat(E[B].nodeValue) : E[B].nodeValue;
                                return b
                            }
                            if (o(b) === "object")
                                for (var X in b)
                                    this.attr(X, b[X]);
                            else if (E === null)
                                this.node.removeAttribute(b);
                            else {
                                if (E == null)
                                    return (E = this.node.getAttribute(b)) == null ? i.defaults.attrs[b] : i.regex.isNumber.test(E) ? parseFloat(E) : E;
                                b == "stroke-width" ? this.attr("stroke", parseFloat(E) > 0 ? this._stroke : null) : b == "stroke" && (this._stroke = E),
                                b != "fill" && b != "stroke" || (i.regex.isImage.test(E) && (E = this.doc().defs().image(E, 0, 0)),
                                E instanceof i.Image && (E = this.doc().defs().pattern(0, 0, function () {
                                    this.add(E)
                                }))),
                                    typeof E == "number" ? E = new i.Number(E) : i.Color.isColor(E) ? E = new i.Color(E) : Array.isArray(E) && (E = new i.Array(E)),
                                    b == "leading" ? this.leading && this.leading(E) : typeof B == "string" ? this.node.setAttributeNS(B, b, E.toString()) : this.node.setAttribute(b, E.toString()),
                                !this.rebuild || b != "font-size" && b != "x" || this.rebuild(b, E)
                            }
                            return this
                        }
                    }),
                    i.extend(i.Element, {
                        transform: function (b, E) {
                            var B;
                            return o(b) !== "object" ? (B = new i.Matrix(this).extract(),
                                typeof b == "string" ? B[b] : B) : (B = new i.Matrix(this),
                                E = !!E || !!b.relative,
                            b.a != null && (B = E ? B.multiply(new i.Matrix(b)) : new i.Matrix(b)),
                                this.attr("transform", B))
                        }
                    }),
                    i.extend(i.Element, {
                        untransform: function () {
                            return this.attr("transform", null)
                        },
                        matrixify: function () {
                            return (this.attr("transform") || "").split(i.regex.transforms).slice(0, -1).map(function (b) {
                                var E = b.trim().split("(");
                                return [E[0], E[1].split(i.regex.delimiter).map(function (B) {
                                    return parseFloat(B)
                                })]
                            }).reduce(function (b, E) {
                                return E[0] == "matrix" ? b.multiply(N(E[1])) : b[E[0]].apply(b, E[1])
                            }, new i.Matrix)
                        },
                        toParent: function (b) {
                            if (this == b)
                                return this;
                            var E = this.screenCTM()
                                , B = b.screenCTM().inverse();
                            return this.addTo(b).untransform().transform(B.multiply(E)),
                                this
                        },
                        toDoc: function () {
                            return this.toParent(this.doc())
                        }
                    }),
                    i.Transformation = i.invent({
                        create: function (b, E) {
                            if (arguments.length > 1 && typeof E != "boolean")
                                return this.constructor.call(this, [].slice.call(arguments));
                            if (Array.isArray(b))
                                for (var B = 0, X = this.arguments.length; B < X; ++B)
                                    this[this.arguments[B]] = b[B];
                            else if (b && o(b) === "object")
                                for (B = 0,
                                         X = this.arguments.length; B < X; ++B)
                                    this[this.arguments[B]] = b[this.arguments[B]];
                            this.inversed = !1,
                            E === !0 && (this.inversed = !0)
                        }
                    }),
                    i.Translate = i.invent({
                        parent: i.Matrix,
                        inherit: i.Transformation,
                        create: function (b, E) {
                            this.constructor.apply(this, [].slice.call(arguments))
                        },
                        extend: {
                            arguments: ["transformedX", "transformedY"],
                            method: "translate"
                        }
                    }),
                    i.extend(i.Element, {
                        style: function (b, E) {
                            if (arguments.length == 0)
                                return this.node.style.cssText || "";
                            if (arguments.length < 2)
                                if (o(b) === "object")
                                    for (var B in b)
                                        this.style(B, b[B]);
                                else {
                                    if (!i.regex.isCss.test(b))
                                        return this.node.style[x(b)];
                                    for (b = b.split(/\s*;\s*/).filter(function (X) {
                                        return !!X
                                    }).map(function (X) {
                                        return X.split(/\s*:\s*/)
                                    }); E = b.pop();)
                                        this.style(E[0], E[1])
                                }
                            else
                                this.node.style[x(b)] = E === null || i.regex.isBlank.test(E) ? "" : E;
                            return this
                        }
                    }),
                    i.Parent = i.invent({
                        create: function (b) {
                            this.constructor.call(this, b)
                        },
                        inherit: i.Element,
                        extend: {
                            children: function () {
                                return i.utils.map(i.utils.filterSVGElements(this.node.childNodes), function (b) {
                                    return i.adopt(b)
                                })
                            },
                            add: function (b, E) {
                                return E == null ? this.node.appendChild(b.node) : b.node != this.node.childNodes[E] && this.node.insertBefore(b.node, this.node.childNodes[E]),
                                    this
                            },
                            put: function (b, E) {
                                return this.add(b, E),
                                    b
                            },
                            has: function (b) {
                                return this.index(b) >= 0
                            },
                            index: function (b) {
                                return [].slice.call(this.node.childNodes).indexOf(b.node)
                            },
                            get: function (b) {
                                return i.adopt(this.node.childNodes[b])
                            },
                            first: function () {
                                return this.get(0)
                            },
                            last: function () {
                                return this.get(this.node.childNodes.length - 1)
                            },
                            each: function (b, E) {
                                for (var B = this.children(), X = 0, K = B.length; X < K; X++)
                                    B[X] instanceof i.Element && b.apply(B[X], [X, B]),
                                    E && B[X] instanceof i.Container && B[X].each(b, E);
                                return this
                            },
                            removeElement: function (b) {
                                return this.node.removeChild(b.node),
                                    this
                            },
                            clear: function () {
                                for (; this.node.hasChildNodes();)
                                    this.node.removeChild(this.node.lastChild);
                                return delete this._defs,
                                    this
                            },
                            defs: function () {
                                return this.doc().defs()
                            }
                        }
                    }),
                    i.extend(i.Parent, {
                        ungroup: function (b, E) {
                            return E === 0 || this instanceof i.Defs || this.node == i.parser.draw || (b = b || (this instanceof i.Doc ? this : this.parent(i.Parent)),
                                E = E || 1 / 0,
                                this.each(function () {
                                    return this instanceof i.Defs ? this : this instanceof i.Parent ? this.ungroup(b, E - 1) : this.toParent(b)
                                }),
                            this.node.firstChild || this.remove()),
                                this
                        },
                        flatten: function (b, E) {
                            return this.ungroup(b, E)
                        }
                    }),
                    i.Container = i.invent({
                        create: function (b) {
                            this.constructor.call(this, b)
                        },
                        inherit: i.Parent
                    }),
                    i.ViewBox = i.invent({
                        parent: i.Container,
                        construct: {}
                    }),
                    ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function (b) {
                        i.Element.prototype[b] = function (E) {
                            return i.on(this.node, b, E),
                                this
                        }
                    }),
                    i.listeners = [],
                    i.handlerMap = [],
                    i.listenerId = 0,
                    i.on = function (b, E, B, X, K) {
                        var ee = B.bind(X || b.instance || b)
                            , pe = (i.handlerMap.indexOf(b) + 1 || i.handlerMap.push(b)) - 1
                            , ge = E.split(".")[0]
                            , Ie = E.split(".")[1] || "*";
                        i.listeners[pe] = i.listeners[pe] || {},
                            i.listeners[pe][ge] = i.listeners[pe][ge] || {},
                            i.listeners[pe][ge][Ie] = i.listeners[pe][ge][Ie] || {},
                        B._svgjsListenerId || (B._svgjsListenerId = ++i.listenerId),
                            i.listeners[pe][ge][Ie][B._svgjsListenerId] = ee,
                            b.addEventListener(ge, ee, K || {
                                passive: !0
                            })
                    }
                    ,
                    i.off = function (b, E, B) {
                        var X = i.handlerMap.indexOf(b)
                            , K = E && E.split(".")[0]
                            , ee = E && E.split(".")[1]
                            , pe = "";
                        if (X != -1)
                            if (B) {
                                if (typeof B == "function" && (B = B._svgjsListenerId),
                                    !B)
                                    return;
                                i.listeners[X][K] && i.listeners[X][K][ee || "*"] && (b.removeEventListener(K, i.listeners[X][K][ee || "*"][B], !1),
                                    delete i.listeners[X][K][ee || "*"][B])
                            } else if (ee && K) {
                                if (i.listeners[X][K] && i.listeners[X][K][ee]) {
                                    for (var ge in i.listeners[X][K][ee])
                                        i.off(b, [K, ee].join("."), ge);
                                    delete i.listeners[X][K][ee]
                                }
                            } else if (ee)
                                for (var Ie in i.listeners[X])
                                    for (var pe in i.listeners[X][Ie])
                                        ee === pe && i.off(b, [Ie, ee].join("."));
                            else if (K) {
                                if (i.listeners[X][K]) {
                                    for (var pe in i.listeners[X][K])
                                        i.off(b, [K, pe].join("."));
                                    delete i.listeners[X][K]
                                }
                            } else {
                                for (var Ie in i.listeners[X])
                                    i.off(b, Ie);
                                delete i.listeners[X],
                                    delete i.handlerMap[X]
                            }
                    }
                    ,
                    i.extend(i.Element, {
                        on: function (b, E, B, X) {
                            return i.on(this.node, b, E, B, X),
                                this
                        },
                        off: function (b, E) {
                            return i.off(this.node, b, E),
                                this
                        },
                        fire: function (b, E) {
                            return b instanceof j.Event ? this.node.dispatchEvent(b) : this.node.dispatchEvent(b = new i.CustomEvent(b, {
                                detail: E,
                                cancelable: !0
                            })),
                                this._event = b,
                                this
                        },
                        event: function () {
                            return this._event
                        }
                    }),
                    i.Defs = i.invent({
                        create: "defs",
                        inherit: i.Container
                    }),
                    i.G = i.invent({
                        create: "g",
                        inherit: i.Container,
                        extend: {
                            x: function (b) {
                                return b == null ? this.transform("x") : this.transform({
                                    x: b - this.x()
                                }, !0)
                            }
                        },
                        construct: {
                            group: function () {
                                return this.put(new i.G)
                            }
                        }
                    }),
                    i.Doc = i.invent({
                        create: function (b) {
                            b && ((b = typeof b == "string" ? n.getElementById(b) : b).nodeName == "svg" ? this.constructor.call(this, b) : (this.constructor.call(this, i.create("svg")),
                                b.appendChild(this.node),
                                this.size("100%", "100%")),
                                this.namespace().defs())
                        },
                        inherit: i.Container,
                        extend: {
                            namespace: function () {
                                return this.attr({
                                    xmlns: i.ns,
                                    version: "1.1"
                                }).attr("xmlns:xlink", i.xlink, i.xmlns).attr("xmlns:svgjs", i.svgjs, i.xmlns)
                            },
                            defs: function () {
                                var b;
                                return this._defs || ((b = this.node.getElementsByTagName("defs")[0]) ? this._defs = i.adopt(b) : this._defs = new i.Defs,
                                    this.node.appendChild(this._defs.node)),
                                    this._defs
                            },
                            parent: function () {
                                return this.node.parentNode && this.node.parentNode.nodeName != "#document" ? this.node.parentNode : null
                            },
                            remove: function () {
                                return this.parent() && this.parent().removeChild(this.node),
                                    this
                            },
                            clear: function () {
                                for (; this.node.hasChildNodes();)
                                    this.node.removeChild(this.node.lastChild);
                                return delete this._defs,
                                i.parser.draw && !i.parser.draw.parentNode && this.node.appendChild(i.parser.draw),
                                    this
                            },
                            clone: function (b) {
                                this.writeDataToDom();
                                var E = this.node
                                    , B = H(E.cloneNode(!0));
                                return b ? (b.node || b).appendChild(B.node) : E.parentNode.insertBefore(B.node, E.nextSibling),
                                    B
                            }
                        }
                    }),
                    i.extend(i.Element, {}),
                    i.Gradient = i.invent({
                        create: function (b) {
                            this.constructor.call(this, i.create(b + "Gradient")),
                                this.type = b
                        },
                        inherit: i.Container,
                        extend: {
                            at: function (b, E, B) {
                                return this.put(new i.Stop).update(b, E, B)
                            },
                            update: function (b) {
                                return this.clear(),
                                typeof b == "function" && b.call(this, this),
                                    this
                            },
                            fill: function () {
                                return "url(#" + this.id() + ")"
                            },
                            toString: function () {
                                return this.fill()
                            },
                            attr: function (b, E, B) {
                                return b == "transform" && (b = "gradientTransform"),
                                    i.Container.prototype.attr.call(this, b, E, B)
                            }
                        },
                        construct: {
                            gradient: function (b, E) {
                                return this.defs().gradient(b, E)
                            }
                        }
                    }),
                    i.extend(i.Gradient, i.FX, {
                        from: function (b, E) {
                            return (this._target || this).type == "radial" ? this.attr({
                                fx: new i.Number(b),
                                fy: new i.Number(E)
                            }) : this.attr({
                                x1: new i.Number(b),
                                y1: new i.Number(E)
                            })
                        },
                        to: function (b, E) {
                            return (this._target || this).type == "radial" ? this.attr({
                                cx: new i.Number(b),
                                cy: new i.Number(E)
                            }) : this.attr({
                                x2: new i.Number(b),
                                y2: new i.Number(E)
                            })
                        }
                    }),
                    i.extend(i.Defs, {
                        gradient: function (b, E) {
                            return this.put(new i.Gradient(b)).update(E)
                        }
                    }),
                    i.Stop = i.invent({
                        create: "stop",
                        inherit: i.Element,
                        extend: {
                            update: function (b) {
                                return (typeof b == "number" || b instanceof i.Number) && (b = {
                                    offset: arguments[0],
                                    color: arguments[1],
                                    opacity: arguments[2]
                                }),
                                b.opacity != null && this.attr("stop-opacity", b.opacity),
                                b.color != null && this.attr("stop-color", b.color),
                                b.offset != null && this.attr("offset", new i.Number(b.offset)),
                                    this
                            }
                        }
                    }),
                    i.Pattern = i.invent({
                        create: "pattern",
                        inherit: i.Container,
                        extend: {
                            fill: function () {
                                return "url(#" + this.id() + ")"
                            },
                            update: function (b) {
                                return this.clear(),
                                typeof b == "function" && b.call(this, this),
                                    this
                            },
                            toString: function () {
                                return this.fill()
                            },
                            attr: function (b, E, B) {
                                return b == "transform" && (b = "patternTransform"),
                                    i.Container.prototype.attr.call(this, b, E, B)
                            }
                        },
                        construct: {
                            pattern: function (b, E, B) {
                                return this.defs().pattern(b, E, B)
                            }
                        }
                    }),
                    i.extend(i.Defs, {
                        pattern: function (b, E, B) {
                            return this.put(new i.Pattern).update(B).attr({
                                x: 0,
                                y: 0,
                                width: b,
                                height: E,
                                patternUnits: "userSpaceOnUse"
                            })
                        }
                    }),
                    i.Shape = i.invent({
                        create: function (b) {
                            this.constructor.call(this, b)
                        },
                        inherit: i.Element
                    }),
                    i.Symbol = i.invent({
                        create: "symbol",
                        inherit: i.Container,
                        construct: {
                            symbol: function () {
                                return this.put(new i.Symbol)
                            }
                        }
                    }),
                    i.Use = i.invent({
                        create: "use",
                        inherit: i.Shape,
                        extend: {
                            element: function (b, E) {
                                return this.attr("href", (E || "") + "#" + b, i.xlink)
                            }
                        },
                        construct: {
                            use: function (b, E) {
                                return this.put(new i.Use).element(b, E)
                            }
                        }
                    }),
                    i.Rect = i.invent({
                        create: "rect",
                        inherit: i.Shape,
                        construct: {
                            rect: function (b, E) {
                                return this.put(new i.Rect).size(b, E)
                            }
                        }
                    }),
                    i.Circle = i.invent({
                        create: "circle",
                        inherit: i.Shape,
                        construct: {
                            circle: function (b) {
                                return this.put(new i.Circle).rx(new i.Number(b).divide(2)).move(0, 0)
                            }
                        }
                    }),
                    i.extend(i.Circle, i.FX, {
                        rx: function (b) {
                            return this.attr("r", b)
                        },
                        ry: function (b) {
                            return this.rx(b)
                        }
                    }),
                    i.Ellipse = i.invent({
                        create: "ellipse",
                        inherit: i.Shape,
                        construct: {
                            ellipse: function (b, E) {
                                return this.put(new i.Ellipse).size(b, E).move(0, 0)
                            }
                        }
                    }),
                    i.extend(i.Ellipse, i.Rect, i.FX, {
                        rx: function (b) {
                            return this.attr("rx", b)
                        },
                        ry: function (b) {
                            return this.attr("ry", b)
                        }
                    }),
                    i.extend(i.Circle, i.Ellipse, {
                        x: function (b) {
                            return b == null ? this.cx() - this.rx() : this.cx(b + this.rx())
                        },
                        y: function (b) {
                            return b == null ? this.cy() - this.ry() : this.cy(b + this.ry())
                        },
                        cx: function (b) {
                            return b == null ? this.attr("cx") : this.attr("cx", b)
                        },
                        cy: function (b) {
                            return b == null ? this.attr("cy") : this.attr("cy", b)
                        },
                        width: function (b) {
                            return b == null ? 2 * this.rx() : this.rx(new i.Number(b).divide(2))
                        },
                        height: function (b) {
                            return b == null ? 2 * this.ry() : this.ry(new i.Number(b).divide(2))
                        },
                        size: function (b, E) {
                            var B = k(this, b, E);
                            return this.rx(new i.Number(B.width).divide(2)).ry(new i.Number(B.height).divide(2))
                        }
                    }),
                    i.Line = i.invent({
                        create: "line",
                        inherit: i.Shape,
                        extend: {
                            array: function () {
                                return new i.PointArray([[this.attr("x1"), this.attr("y1")], [this.attr("x2"), this.attr("y2")]])
                            },
                            plot: function (b, E, B, X) {
                                return b == null ? this.array() : (b = E !== void 0 ? {
                                    x1: b,
                                    y1: E,
                                    x2: B,
                                    y2: X
                                } : new i.PointArray(b).toLine(),
                                    this.attr(b))
                            },
                            move: function (b, E) {
                                return this.attr(this.array().move(b, E).toLine())
                            },
                            size: function (b, E) {
                                var B = k(this, b, E);
                                return this.attr(this.array().size(B.width, B.height).toLine())
                            }
                        },
                        construct: {
                            line: function (b, E, B, X) {
                                return i.Line.prototype.plot.apply(this.put(new i.Line), b != null ? [b, E, B, X] : [0, 0, 0, 0])
                            }
                        }
                    }),
                    i.Polyline = i.invent({
                        create: "polyline",
                        inherit: i.Shape,
                        construct: {
                            polyline: function (b) {
                                return this.put(new i.Polyline).plot(b || new i.PointArray)
                            }
                        }
                    }),
                    i.Polygon = i.invent({
                        create: "polygon",
                        inherit: i.Shape,
                        construct: {
                            polygon: function (b) {
                                return this.put(new i.Polygon).plot(b || new i.PointArray)
                            }
                        }
                    }),
                    i.extend(i.Polyline, i.Polygon, {
                        array: function () {
                            return this._array || (this._array = new i.PointArray(this.attr("points")))
                        },
                        plot: function (b) {
                            return b == null ? this.array() : this.clear().attr("points", typeof b == "string" ? b : this._array = new i.PointArray(b))
                        },
                        clear: function () {
                            return delete this._array,
                                this
                        },
                        move: function (b, E) {
                            return this.attr("points", this.array().move(b, E))
                        },
                        size: function (b, E) {
                            var B = k(this, b, E);
                            return this.attr("points", this.array().size(B.width, B.height))
                        }
                    }),
                    i.extend(i.Line, i.Polyline, i.Polygon, {
                        morphArray: i.PointArray,
                        x: function (b) {
                            return b == null ? this.bbox().x : this.move(b, this.bbox().y)
                        },
                        y: function (b) {
                            return b == null ? this.bbox().y : this.move(this.bbox().x, b)
                        },
                        width: function (b) {
                            var E = this.bbox();
                            return b == null ? E.width : this.size(b, E.height)
                        },
                        height: function (b) {
                            var E = this.bbox();
                            return b == null ? E.height : this.size(E.width, b)
                        }
                    }),
                    i.Path = i.invent({
                        create: "path",
                        inherit: i.Shape,
                        extend: {
                            morphArray: i.PathArray,
                            array: function () {
                                return this._array || (this._array = new i.PathArray(this.attr("d")))
                            },
                            plot: function (b) {
                                return b == null ? this.array() : this.clear().attr("d", typeof b == "string" ? b : this._array = new i.PathArray(b))
                            },
                            clear: function () {
                                return delete this._array,
                                    this
                            }
                        },
                        construct: {
                            path: function (b) {
                                return this.put(new i.Path).plot(b || new i.PathArray)
                            }
                        }
                    }),
                    i.Image = i.invent({
                        create: "image",
                        inherit: i.Shape,
                        extend: {
                            load: function (b) {
                                if (!b)
                                    return this;
                                var E = this
                                    , B = new j.Image;
                                return i.on(B, "load", function () {
                                    i.off(B);
                                    var X = E.parent(i.Pattern);
                                    X !== null && (E.width() == 0 && E.height() == 0 && E.size(B.width, B.height),
                                    X && X.width() == 0 && X.height() == 0 && X.size(E.width(), E.height()),
                                    typeof E._loaded == "function" && E._loaded.call(E, {
                                        width: B.width,
                                        height: B.height,
                                        ratio: B.width / B.height,
                                        url: b
                                    }))
                                }),
                                    i.on(B, "error", function (X) {
                                        i.off(B),
                                        typeof E._error == "function" && E._error.call(E, X)
                                    }),
                                    this.attr("href", B.src = this.src = b, i.xlink)
                            },
                            loaded: function (b) {
                                return this._loaded = b,
                                    this
                            },
                            error: function (b) {
                                return this._error = b,
                                    this
                            }
                        },
                        construct: {
                            image: function (b, E, B) {
                                return this.put(new i.Image).load(b).size(E || 0, B || E || 0)
                            }
                        }
                    }),
                    i.Text = i.invent({
                        create: function () {
                            this.constructor.call(this, i.create("text")),
                                this.dom.leading = new i.Number(1.3),
                                this._rebuild = !0,
                                this._build = !1,
                                this.attr("font-family", i.defaults.attrs["font-family"])
                        },
                        inherit: i.Shape,
                        extend: {
                            x: function (b) {
                                return b == null ? this.attr("x") : this.attr("x", b)
                            },
                            text: function (b) {
                                if (b === void 0) {
                                    b = "";
                                    for (var E = this.node.childNodes, B = 0, X = E.length; B < X; ++B)
                                        B != 0 && E[B].nodeType != 3 && i.adopt(E[B]).dom.newLined == 1 && (b += `
`),
                                            b += E[B].textContent;
                                    return b
                                }
                                if (this.clear().build(!0),
                                typeof b == "function")
                                    b.call(this, this);
                                else {
                                    B = 0;
                                    for (var K = (b = b.split(`
`)).length; B < K; B++)
                                        this.tspan(b[B]).newLine()
                                }
                                return this.build(!1).rebuild()
                            },
                            size: function (b) {
                                return this.attr("font-size", b).rebuild()
                            },
                            leading: function (b) {
                                return b == null ? this.dom.leading : (this.dom.leading = new i.Number(b),
                                    this.rebuild())
                            },
                            lines: function () {
                                var b = (this.textPath && this.textPath() || this).node
                                    , E = i.utils.map(i.utils.filterSVGElements(b.childNodes), function (B) {
                                    return i.adopt(B)
                                });
                                return new i.Set(E)
                            },
                            rebuild: function (b) {
                                if (typeof b == "boolean" && (this._rebuild = b),
                                    this._rebuild) {
                                    var E = this
                                        , B = 0
                                        , X = this.dom.leading * new i.Number(this.attr("font-size"));
                                    this.lines().each(function () {
                                        this.dom.newLined && (E.textPath() || this.attr("x", E.attr("x")),
                                            this.text() == `
` ? B += X : (this.attr("dy", X + B),
                                                B = 0))
                                    }),
                                        this.fire("rebuild")
                                }
                                return this
                            },
                            build: function (b) {
                                return this._build = !!b,
                                    this
                            },
                            setData: function (b) {
                                return this.dom = b,
                                    this.dom.leading = new i.Number(b.leading || 1.3),
                                    this
                            }
                        },
                        construct: {
                            text: function (b) {
                                return this.put(new i.Text).text(b)
                            },
                            plain: function (b) {
                                return this.put(new i.Text).plain(b)
                            }
                        }
                    }),
                    i.Tspan = i.invent({
                        create: "tspan",
                        inherit: i.Shape,
                        extend: {
                            text: function (b) {
                                return b == null ? this.node.textContent + (this.dom.newLined ? `
` : "") : (typeof b == "function" ? b.call(this, this) : this.plain(b),
                                    this)
                            },
                            dx: function (b) {
                                return this.attr("dx", b)
                            },
                            dy: function (b) {
                                return this.attr("dy", b)
                            },
                            newLine: function () {
                                var b = this.parent(i.Text);
                                return this.dom.newLined = !0,
                                    this.dy(b.dom.leading * b.attr("font-size")).attr("x", b.x())
                            }
                        }
                    }),
                    i.extend(i.Text, i.Tspan, {
                        plain: function (b) {
                            return this._build === !1 && this.clear(),
                                this.node.appendChild(n.createTextNode(b)),
                                this
                        },
                        tspan: function (b) {
                            var E = (this.textPath && this.textPath() || this).node
                                , B = new i.Tspan;
                            return this._build === !1 && this.clear(),
                                E.appendChild(B.node),
                                B.text(b)
                        },
                        clear: function () {
                            for (var b = (this.textPath && this.textPath() || this).node; b.hasChildNodes();)
                                b.removeChild(b.lastChild);
                            return this
                        },
                        length: function () {
                            return this.node.getComputedTextLength()
                        }
                    }),
                    i.TextPath = i.invent({
                        create: "textPath",
                        inherit: i.Parent,
                        parent: i.Text,
                        construct: {
                            morphArray: i.PathArray,
                            array: function () {
                                var b = this.track();
                                return b ? b.array() : null
                            },
                            plot: function (b) {
                                var E = this.track()
                                    , B = null;
                                return E && (B = E.plot(b)),
                                    b == null ? B : this
                            },
                            track: function () {
                                var b = this.textPath();
                                if (b)
                                    return b.reference("href")
                            },
                            textPath: function () {
                                if (this.node.firstChild && this.node.firstChild.nodeName == "textPath")
                                    return i.adopt(this.node.firstChild)
                            }
                        }
                    }),
                    i.Nested = i.invent({
                        create: function () {
                            this.constructor.call(this, i.create("svg")),
                                this.style("overflow", "visible")
                        },
                        inherit: i.Container,
                        construct: {
                            nested: function () {
                                return this.put(new i.Nested)
                            }
                        }
                    });
                var f = {
                    stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
                    fill: ["color", "opacity", "rule"],
                    prefix: function (b, E) {
                        return E == "color" ? b : b + "-" + E
                    }
                };

                function m(b, E, B, X) {
                    return B + X.replace(i.regex.dots, " .")
                }

                function x(b) {
                    return b.toLowerCase().replace(/-(.)/g, function (E, B) {
                        return B.toUpperCase()
                    })
                }

                function S(b) {
                    return b.charAt(0).toUpperCase() + b.slice(1)
                }

                function _(b) {
                    var E = b.toString(16);
                    return E.length == 1 ? "0" + E : E
                }

                function k(b, E, B) {
                    if (E == null || B == null) {
                        var X = b.bbox();
                        E == null ? E = X.width / X.height * B : B == null && (B = X.height / X.width * E)
                    }
                    return {
                        width: E,
                        height: B
                    }
                }

                function L(b, E, B) {
                    return {
                        x: E * b.a + B * b.c + 0,
                        y: E * b.b + B * b.d + 0
                    }
                }

                function N(b) {
                    return {
                        a: b[0],
                        b: b[1],
                        c: b[2],
                        d: b[3],
                        e: b[4],
                        f: b[5]
                    }
                }

                function H(b) {
                    for (var E = b.childNodes.length - 1; E >= 0; E--)
                        b.childNodes[E] instanceof j.SVGElement && H(b.childNodes[E]);
                    return i.adopt(b).id(i.eid(b.nodeName))
                }

                function z(b) {
                    return Math.abs(b) > 1e-37 ? b : 0
                }

                ["fill", "stroke"].forEach(function (b) {
                    var E = {};
                    E[b] = function (B) {
                        if (B === void 0)
                            return this;
                        if (typeof B == "string" || i.Color.isRgb(B) || B && typeof B.fill == "function")
                            this.attr(b, B);
                        else
                            for (var X = f[b].length - 1; X >= 0; X--)
                                B[f[b][X]] != null && this.attr(f.prefix(b, f[b][X]), B[f[b][X]]);
                        return this
                    }
                        ,
                        i.extend(i.Element, i.FX, E)
                }),
                    i.extend(i.Element, i.FX, {
                        translate: function (b, E) {
                            return this.transform({
                                x: b,
                                y: E
                            })
                        },
                        matrix: function (b) {
                            return this.attr("transform", new i.Matrix(arguments.length == 6 ? [].slice.call(arguments) : b))
                        },
                        opacity: function (b) {
                            return this.attr("opacity", b)
                        },
                        dx: function (b) {
                            return this.x(new i.Number(b).plus(this instanceof i.FX ? 0 : this.x()), !0)
                        },
                        dy: function (b) {
                            return this.y(new i.Number(b).plus(this instanceof i.FX ? 0 : this.y()), !0)
                        }
                    }),
                    i.extend(i.Path, {
                        length: function () {
                            return this.node.getTotalLength()
                        },
                        pointAt: function (b) {
                            return this.node.getPointAtLength(b)
                        }
                    }),
                    i.Set = i.invent({
                        create: function (b) {
                            Array.isArray(b) ? this.members = b : this.clear()
                        },
                        extend: {
                            add: function () {
                                for (var b = [].slice.call(arguments), E = 0, B = b.length; E < B; E++)
                                    this.members.push(b[E]);
                                return this
                            },
                            remove: function (b) {
                                var E = this.index(b);
                                return E > -1 && this.members.splice(E, 1),
                                    this
                            },
                            each: function (b) {
                                for (var E = 0, B = this.members.length; E < B; E++)
                                    b.apply(this.members[E], [E, this.members]);
                                return this
                            },
                            clear: function () {
                                return this.members = [],
                                    this
                            },
                            length: function () {
                                return this.members.length
                            },
                            has: function (b) {
                                return this.index(b) >= 0
                            },
                            index: function (b) {
                                return this.members.indexOf(b)
                            },
                            get: function (b) {
                                return this.members[b]
                            },
                            first: function () {
                                return this.get(0)
                            },
                            last: function () {
                                return this.get(this.members.length - 1)
                            },
                            valueOf: function () {
                                return this.members
                            }
                        },
                        construct: {
                            set: function (b) {
                                return new i.Set(b)
                            }
                        }
                    }),
                    i.FX.Set = i.invent({
                        create: function (b) {
                            this.set = b
                        }
                    }),
                    i.Set.inherit = function () {
                        var b = [];
                        for (var E in i.Shape.prototype)
                            typeof i.Shape.prototype[E] == "function" && typeof i.Set.prototype[E] != "function" && b.push(E);
                        for (var E in b.forEach(function (X) {
                            i.Set.prototype[X] = function () {
                                for (var K = 0, ee = this.members.length; K < ee; K++)
                                    this.members[K] && typeof this.members[K][X] == "function" && this.members[K][X].apply(this.members[K], arguments);
                                return X == "animate" ? this.fx || (this.fx = new i.FX.Set(this)) : this
                            }
                        }),
                            b = [],
                            i.FX.prototype)
                            typeof i.FX.prototype[E] == "function" && typeof i.FX.Set.prototype[E] != "function" && b.push(E);
                        b.forEach(function (B) {
                            i.FX.Set.prototype[B] = function () {
                                for (var X = 0, K = this.set.members.length; X < K; X++)
                                    this.set.members[X].fx[B].apply(this.set.members[X].fx, arguments);
                                return this
                            }
                        })
                    }
                    ,
                    i.extend(i.Element, {}),
                    i.extend(i.Element, {
                        remember: function (b, E) {
                            if (o(arguments[0]) === "object")
                                for (var B in b)
                                    this.remember(B, b[B]);
                            else {
                                if (arguments.length == 1)
                                    return this.memory()[b];
                                this.memory()[b] = E
                            }
                            return this
                        },
                        forget: function () {
                            if (arguments.length == 0)
                                this._memory = {};
                            else
                                for (var b = arguments.length - 1; b >= 0; b--)
                                    delete this.memory()[arguments[b]];
                            return this
                        },
                        memory: function () {
                            return this._memory || (this._memory = {})
                        }
                    }),
                    i.get = function (b) {
                        var E = n.getElementById(function (B) {
                            var X = (B || "").toString().match(i.regex.reference);
                            if (X)
                                return X[1]
                        }(b) || b);
                        return i.adopt(E)
                    }
                    ,
                    i.select = function (b, E) {
                        return new i.Set(i.utils.map((E || n).querySelectorAll(b), function (B) {
                            return i.adopt(B)
                        }))
                    }
                    ,
                    i.extend(i.Parent, {
                        select: function (b) {
                            return i.select(b, this.node)
                        }
                    });
                var q = "abcdef".split("");
                if (typeof j.CustomEvent != "function") {
                    var Q = function (b, E) {
                        E = E || {
                            bubbles: !1,
                            cancelable: !1,
                            detail: void 0
                        };
                        var B = n.createEvent("CustomEvent");
                        return B.initCustomEvent(b, E.bubbles, E.cancelable, E.detail),
                            B
                    };
                    Q.prototype = j.Event.prototype,
                        i.CustomEvent = Q
                } else
                    i.CustomEvent = j.CustomEvent;
                return i
            }
            ,
            o(t) === "object" ? e.exports = Ii.document ? yr(Ii, Ii.document) : function (j) {
                    return yr(j, j.document)
                }
                : Ii.SVG = yr(Ii, Ii.document),
            (function () {
                    SVG.Filter = SVG.invent({
                        create: "filter",
                        inherit: SVG.Parent,
                        extend: {
                            source: "SourceGraphic",
                            sourceAlpha: "SourceAlpha",
                            background: "BackgroundImage",
                            backgroundAlpha: "BackgroundAlpha",
                            fill: "FillPaint",
                            stroke: "StrokePaint",
                            autoSetIn: !0,
                            put: function (h, f) {
                                return this.add(h, f),
                                !h.attr("in") && this.autoSetIn && h.attr("in", this.source),
                                h.attr("result") || h.attr("result", h),
                                    h
                            },
                            blend: function (h, f, m) {
                                return this.put(new SVG.BlendEffect(h, f, m))
                            },
                            colorMatrix: function (h, f) {
                                return this.put(new SVG.ColorMatrixEffect(h, f))
                            },
                            convolveMatrix: function (h) {
                                return this.put(new SVG.ConvolveMatrixEffect(h))
                            },
                            componentTransfer: function (h) {
                                return this.put(new SVG.ComponentTransferEffect(h))
                            },
                            composite: function (h, f, m) {
                                return this.put(new SVG.CompositeEffect(h, f, m))
                            },
                            flood: function (h, f) {
                                return this.put(new SVG.FloodEffect(h, f))
                            },
                            offset: function (h, f) {
                                return this.put(new SVG.OffsetEffect(h, f))
                            },
                            image: function (h) {
                                return this.put(new SVG.ImageEffect(h))
                            },
                            merge: function () {
                                var h = [void 0];
                                for (var f in arguments)
                                    h.push(arguments[f]);
                                return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, h)))
                            },
                            gaussianBlur: function (h, f) {
                                return this.put(new SVG.GaussianBlurEffect(h, f))
                            },
                            morphology: function (h, f) {
                                return this.put(new SVG.MorphologyEffect(h, f))
                            },
                            diffuseLighting: function (h, f, m) {
                                return this.put(new SVG.DiffuseLightingEffect(h, f, m))
                            },
                            displacementMap: function (h, f, m, x, S) {
                                return this.put(new SVG.DisplacementMapEffect(h, f, m, x, S))
                            },
                            specularLighting: function (h, f, m, x) {
                                return this.put(new SVG.SpecularLightingEffect(h, f, m, x))
                            },
                            tile: function () {
                                return this.put(new SVG.TileEffect)
                            },
                            turbulence: function (h, f, m, x, S) {
                                return this.put(new SVG.TurbulenceEffect(h, f, m, x, S))
                            },
                            toString: function () {
                                return "url(#" + this.attr("id") + ")"
                            }
                        }
                    }),
                        SVG.extend(SVG.Defs, {
                            filter: function (h) {
                                var f = this.put(new SVG.Filter);
                                return typeof h == "function" && h.call(f, f),
                                    f
                            }
                        }),
                        SVG.extend(SVG.Container, {
                            filter: function (h) {
                                return this.defs().filter(h)
                            }
                        }),
                        SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
                            filter: function (h) {
                                return this.filterer = h instanceof SVG.Element ? h : this.doc().filter(h),
                                this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer),
                                    this.attr("filter", this.filterer),
                                    this.filterer
                            },
                            unfilter: function (h) {
                                return this.filterer && h === !0 && this.filterer.remove(),
                                    delete this.filterer,
                                    this.attr("filter", null)
                            }
                        }),
                        SVG.Effect = SVG.invent({
                            create: function () {
                                this.constructor.call(this)
                            },
                            inherit: SVG.Element,
                            extend: {
                                in: function (h) {
                                    return h == null ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", h)
                                },
                                result: function (h) {
                                    return h == null ? this.attr("result") : this.attr("result", h)
                                },
                                toString: function () {
                                    return this.result()
                                }
                            }
                        }),
                        SVG.ParentEffect = SVG.invent({
                            create: function () {
                                this.constructor.call(this)
                            },
                            inherit: SVG.Parent,
                            extend: {
                                in: function (h) {
                                    return h == null ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", h)
                                },
                                result: function (h) {
                                    return h == null ? this.attr("result") : this.attr("result", h)
                                },
                                toString: function () {
                                    return this.result()
                                }
                            }
                        });
                    var j = {
                        blend: function (h, f) {
                            return this.parent() && this.parent().blend(this, h, f)
                        },
                        colorMatrix: function (h, f) {
                            return this.parent() && this.parent().colorMatrix(h, f).in(this)
                        },
                        convolveMatrix: function (h) {
                            return this.parent() && this.parent().convolveMatrix(h).in(this)
                        },
                        componentTransfer: function (h) {
                            return this.parent() && this.parent().componentTransfer(h).in(this)
                        },
                        composite: function (h, f) {
                            return this.parent() && this.parent().composite(this, h, f)
                        },
                        flood: function (h, f) {
                            return this.parent() && this.parent().flood(h, f)
                        },
                        offset: function (h, f) {
                            return this.parent() && this.parent().offset(h, f).in(this)
                        },
                        image: function (h) {
                            return this.parent() && this.parent().image(h)
                        },
                        merge: function () {
                            return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments))
                        },
                        gaussianBlur: function (h, f) {
                            return this.parent() && this.parent().gaussianBlur(h, f).in(this)
                        },
                        morphology: function (h, f) {
                            return this.parent() && this.parent().morphology(h, f).in(this)
                        },
                        diffuseLighting: function (h, f, m) {
                            return this.parent() && this.parent().diffuseLighting(h, f, m).in(this)
                        },
                        displacementMap: function (h, f, m, x) {
                            return this.parent() && this.parent().displacementMap(this, h, f, m, x)
                        },
                        specularLighting: function (h, f, m, x) {
                            return this.parent() && this.parent().specularLighting(h, f, m, x).in(this)
                        },
                        tile: function () {
                            return this.parent() && this.parent().tile().in(this)
                        },
                        turbulence: function (h, f, m, x, S) {
                            return this.parent() && this.parent().turbulence(h, f, m, x, S).in(this)
                        }
                    };
                    SVG.extend(SVG.Effect, j),
                        SVG.extend(SVG.ParentEffect, j),
                        SVG.ChildEffect = SVG.invent({
                            create: function () {
                                this.constructor.call(this)
                            },
                            inherit: SVG.Element,
                            extend: {
                                in: function (h) {
                                    this.attr("in", h)
                                }
                            }
                        });
                    var n = {
                        blend: function (h, f, m) {
                            this.attr({
                                in: h,
                                in2: f,
                                mode: m || "normal"
                            })
                        },
                        colorMatrix: function (h, f) {
                            h == "matrix" && (f = c(f)),
                                this.attr({
                                    type: h,
                                    values: f === void 0 ? null : f
                                })
                        },
                        convolveMatrix: function (h) {
                            h = c(h),
                                this.attr({
                                    order: Math.sqrt(h.split(" ").length),
                                    kernelMatrix: h
                                })
                        },
                        composite: function (h, f, m) {
                            this.attr({
                                in: h,
                                in2: f,
                                operator: m
                            })
                        },
                        flood: function (h, f) {
                            this.attr("flood-color", h),
                            f != null && this.attr("flood-opacity", f)
                        },
                        offset: function (h, f) {
                            this.attr({
                                dx: h,
                                dy: f
                            })
                        },
                        image: function (h) {
                            this.attr("href", h, SVG.xlink)
                        },
                        displacementMap: function (h, f, m, x, S) {
                            this.attr({
                                in: h,
                                in2: f,
                                scale: m,
                                xChannelSelector: x,
                                yChannelSelector: S
                            })
                        },
                        gaussianBlur: function (h, f) {
                            h != null || f != null ? this.attr("stdDeviation", function (m) {
                                if (!Array.isArray(m))
                                    return m;
                                for (var x = 0, S = m.length, _ = []; x < S; x++)
                                    _.push(m[x]);
                                return _.join(" ")
                            }(Array.prototype.slice.call(arguments))) : this.attr("stdDeviation", "0 0")
                        },
                        morphology: function (h, f) {
                            this.attr({
                                operator: h,
                                radius: f
                            })
                        },
                        tile: function () {
                        },
                        turbulence: function (h, f, m, x, S) {
                            this.attr({
                                numOctaves: f,
                                seed: m,
                                stitchTiles: x,
                                baseFrequency: h,
                                type: S
                            })
                        }
                    }
                        , i = {
                        merge: function () {
                            var h;
                            if (arguments[0] instanceof SVG.Set) {
                                var f = this;
                                arguments[0].each(function (x) {
                                    this instanceof SVG.MergeNode ? f.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && f.put(new SVG.MergeNode(this))
                                })
                            } else {
                                h = Array.isArray(arguments[0]) ? arguments[0] : arguments;
                                for (var m = 0; m < h.length; m++)
                                    h[m] instanceof SVG.MergeNode ? this.put(h[m]) : this.put(new SVG.MergeNode(h[m]))
                            }
                        },
                        componentTransfer: function (h) {
                            if (this.rgb = new SVG.Set,
                                ["r", "g", "b", "a"].forEach((function (m) {
                                        this[m] = new SVG["Func" + m.toUpperCase()]("identity"),
                                            this.rgb.add(this[m]),
                                            this.node.appendChild(this[m].node)
                                    }
                                ).bind(this)),
                                h)
                                for (var f in h.rgb && (["r", "g", "b"].forEach((function (m) {
                                        this[m].attr(h.rgb)
                                    }
                                ).bind(this)),
                                    delete h.rgb),
                                    h)
                                    this[f].attr(h[f])
                        },
                        diffuseLighting: function (h, f, m) {
                            this.attr({
                                surfaceScale: h,
                                diffuseConstant: f,
                                kernelUnitLength: m
                            })
                        },
                        specularLighting: function (h, f, m, x) {
                            this.attr({
                                surfaceScale: h,
                                diffuseConstant: f,
                                specularExponent: m,
                                kernelUnitLength: x
                            })
                        }
                    }
                        , r = {
                        distantLight: function (h, f) {
                            this.attr({
                                azimuth: h,
                                elevation: f
                            })
                        },
                        pointLight: function (h, f, m) {
                            this.attr({
                                x: h,
                                y: f,
                                z: m
                            })
                        },
                        spotLight: function (h, f, m, x, S, _) {
                            this.attr({
                                x: h,
                                y: f,
                                z: m,
                                pointsAtX: x,
                                pointsAtY: S,
                                pointsAtZ: _
                            })
                        },
                        mergeNode: function (h) {
                            this.attr("in", h)
                        }
                    };

                    function c(h) {
                        return Array.isArray(h) && (h = new SVG.Array(h)),
                            h.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ")
                    }

                    function d() {
                        var h = function () {
                        };
                        for (var f in typeof arguments[arguments.length - 1] == "function" && (h = arguments[arguments.length - 1],
                            Array.prototype.splice.call(arguments, arguments.length - 1, 1)),
                            arguments)
                            for (var m in arguments[f])
                                h(arguments[f][m], m, arguments[f])
                    }

                    ["r", "g", "b", "a"].forEach(function (h) {
                        r["Func" + h.toUpperCase()] = function (f) {
                            switch (this.attr("type", f),
                                f) {
                                case "table":
                                    this.attr("tableValues", arguments[1]);
                                    break;
                                case "linear":
                                    this.attr("slope", arguments[1]),
                                        this.attr("intercept", arguments[2]);
                                    break;
                                case "gamma":
                                    this.attr("amplitude", arguments[1]),
                                        this.attr("exponent", arguments[2]),
                                        this.attr("offset", arguments[2])
                            }
                        }
                    }),
                        d(n, function (h, f) {
                            var m = f.charAt(0).toUpperCase() + f.slice(1);
                            SVG[m + "Effect"] = SVG.invent({
                                create: function () {
                                    this.constructor.call(this, SVG.create("fe" + m)),
                                        h.apply(this, arguments),
                                        this.result(this.attr("id") + "Out")
                                },
                                inherit: SVG.Effect,
                                extend: {}
                            })
                        }),
                        d(i, function (h, f) {
                            var m = f.charAt(0).toUpperCase() + f.slice(1);
                            SVG[m + "Effect"] = SVG.invent({
                                create: function () {
                                    this.constructor.call(this, SVG.create("fe" + m)),
                                        h.apply(this, arguments),
                                        this.result(this.attr("id") + "Out")
                                },
                                inherit: SVG.ParentEffect,
                                extend: {}
                            })
                        }),
                        d(r, function (h, f) {
                            var m = f.charAt(0).toUpperCase() + f.slice(1);
                            SVG[m] = SVG.invent({
                                create: function () {
                                    this.constructor.call(this, SVG.create("fe" + m)),
                                        h.apply(this, arguments)
                                },
                                inherit: SVG.ChildEffect,
                                extend: {}
                            })
                        }),
                        SVG.extend(SVG.MergeEffect, {
                            in: function (h) {
                                return h instanceof SVG.MergeNode ? this.add(h, 0) : this.add(new SVG.MergeNode(h), 0),
                                    this
                            }
                        }),
                        SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, {
                            in2: function (h) {
                                return h == null ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", h)
                            }
                        }),
                        SVG.filter = {
                            sepiatone: [.343, .669, .119, 0, 0, .249, .626, .13, 0, 0, .172, .334, .111, 0, 0, 0, 0, 0, 1, 0]
                        }
                }
            ).call(void 0),
            function () {
                function j(d, h, f, m, x, S, _) {
                    for (var k = d.slice(h, f || _), L = m.slice(x, S || _), N = 0, H = {
                        pos: [0, 0],
                        start: [0, 0]
                    }, z = {
                        pos: [0, 0],
                        start: [0, 0]
                    }; k[N] = n.call(H, k[N]),
                             L[N] = n.call(z, L[N]),
                             k[N][0] != L[N][0] || k[N][0] == "M" || k[N][0] == "A" && (k[N][4] != L[N][4] || k[N][5] != L[N][5]) ? (Array.prototype.splice.apply(k, [N, 1].concat(r.call(H, k[N]))),
                                 Array.prototype.splice.apply(L, [N, 1].concat(r.call(z, L[N])))) : (k[N] = i.call(H, k[N]),
                                 L[N] = i.call(z, L[N])),
                             !(++N == k.length && N == L.length);)
                        N == k.length && k.push(["C", H.pos[0], H.pos[1], H.pos[0], H.pos[1], H.pos[0], H.pos[1]]),
                        N == L.length && L.push(["C", z.pos[0], z.pos[1], z.pos[0], z.pos[1], z.pos[0], z.pos[1]]);
                    return {
                        start: k,
                        dest: L
                    }
                }

                function n(d) {
                    switch (d[0]) {
                        case "z":
                        case "Z":
                            d[0] = "L",
                                d[1] = this.start[0],
                                d[2] = this.start[1];
                            break;
                        case "H":
                            d[0] = "L",
                                d[2] = this.pos[1];
                            break;
                        case "V":
                            d[0] = "L",
                                d[2] = d[1],
                                d[1] = this.pos[0];
                            break;
                        case "T":
                            d[0] = "Q",
                                d[3] = d[1],
                                d[4] = d[2],
                                d[1] = this.reflection[1],
                                d[2] = this.reflection[0];
                            break;
                        case "S":
                            d[0] = "C",
                                d[6] = d[4],
                                d[5] = d[3],
                                d[4] = d[2],
                                d[3] = d[1],
                                d[2] = this.reflection[1],
                                d[1] = this.reflection[0]
                    }
                    return d
                }

                function i(d) {
                    var h = d.length;
                    return this.pos = [d[h - 2], d[h - 1]],
                    "SCQT".indexOf(d[0]) != -1 && (this.reflection = [2 * this.pos[0] - d[h - 4], 2 * this.pos[1] - d[h - 3]]),
                        d
                }

                function r(d) {
                    var h = [d];
                    switch (d[0]) {
                        case "M":
                            return this.pos = this.start = [d[1], d[2]],
                                h;
                        case "L":
                            d[5] = d[3] = d[1],
                                d[6] = d[4] = d[2],
                                d[1] = this.pos[0],
                                d[2] = this.pos[1];
                            break;
                        case "Q":
                            d[6] = d[4],
                                d[5] = d[3],
                                d[4] = 1 * d[4] / 3 + 2 * d[2] / 3,
                                d[3] = 1 * d[3] / 3 + 2 * d[1] / 3,
                                d[2] = 1 * this.pos[1] / 3 + 2 * d[2] / 3,
                                d[1] = 1 * this.pos[0] / 3 + 2 * d[1] / 3;
                            break;
                        case "A":
                            h = function (f, m) {
                                var x, S, _, k, L, N, H, z, q, Q, b, E, B, X, K, ee, pe, ge, Ie, $e, Fe, Je, ut, yt, It,
                                    Nt, Lt = Math.abs(m[1]), es = Math.abs(m[2]), ps = m[3] % 360, zn = m[4], nn = m[5],
                                    Li = m[6], Mi = m[7], $s = new SVG.Point(f), Us = new SVG.Point(Li, Mi), Pg = [];
                                if (Lt === 0 || es === 0 || $s.x === Us.x && $s.y === Us.y)
                                    return [["C", $s.x, $s.y, Us.x, Us.y, Us.x, Us.y]];
                                for (x = new SVG.Point(($s.x - Us.x) / 2, ($s.y - Us.y) / 2).transform(new SVG.Matrix().rotate(ps)),
                                     (S = x.x * x.x / (Lt * Lt) + x.y * x.y / (es * es)) > 1 && (Lt *= S = Math.sqrt(S),
                                         es *= S),
                                         _ = new SVG.Matrix().rotate(ps).scale(1 / Lt, 1 / es).rotate(-ps),
                                         $s = $s.transform(_),
                                         Us = Us.transform(_),
                                         k = [Us.x - $s.x, Us.y - $s.y],
                                         N = k[0] * k[0] + k[1] * k[1],
                                         L = Math.sqrt(N),
                                         k[0] /= L,
                                         k[1] /= L,
                                         H = N < 4 ? Math.sqrt(1 - N / 4) : 0,
                                     zn === nn && (H *= -1),
                                         z = new SVG.Point((Us.x + $s.x) / 2 + H * -k[1], (Us.y + $s.y) / 2 + H * k[0]),
                                         q = new SVG.Point($s.x - z.x, $s.y - z.y),
                                         Q = new SVG.Point(Us.x - z.x, Us.y - z.y),
                                         b = Math.acos(q.x / Math.sqrt(q.x * q.x + q.y * q.y)),
                                     q.y < 0 && (b *= -1),
                                         E = Math.acos(Q.x / Math.sqrt(Q.x * Q.x + Q.y * Q.y)),
                                     Q.y < 0 && (E *= -1),
                                     nn && b > E && (E += 2 * Math.PI),
                                     !nn && b < E && (E -= 2 * Math.PI),
                                         X = Math.ceil(2 * Math.abs(b - E) / Math.PI),
                                         ee = [],
                                         pe = b,
                                         B = (E - b) / X,
                                         K = 4 * Math.tan(B / 4) / 3,
                                         Fe = 0; Fe <= X; Fe++)
                                    Ie = Math.cos(pe),
                                        ge = Math.sin(pe),
                                        $e = new SVG.Point(z.x + Ie, z.y + ge),
                                        ee[Fe] = [new SVG.Point($e.x + K * ge, $e.y - K * Ie), $e, new SVG.Point($e.x - K * ge, $e.y + K * Ie)],
                                        pe += B;
                                for (ee[0][0] = ee[0][1].clone(),
                                         ee[ee.length - 1][2] = ee[ee.length - 1][1].clone(),
                                         _ = new SVG.Matrix().rotate(ps).scale(Lt, es).rotate(-ps),
                                         Fe = 0,
                                         Je = ee.length; Fe < Je; Fe++)
                                    ee[Fe][0] = ee[Fe][0].transform(_),
                                        ee[Fe][1] = ee[Fe][1].transform(_),
                                        ee[Fe][2] = ee[Fe][2].transform(_);
                                for (Fe = 1,
                                         Je = ee.length; Fe < Je; Fe++)
                                    ut = ($e = ee[Fe - 1][2]).x,
                                        yt = $e.y,
                                        It = ($e = ee[Fe][0]).x,
                                        Nt = $e.y,
                                        Li = ($e = ee[Fe][1]).x,
                                        Mi = $e.y,
                                        Pg.push(["C", ut, yt, It, Nt, Li, Mi]);
                                return Pg
                            }(this.pos, d),
                                d = h[0]
                    }
                    return d[0] = "C",
                        this.pos = [d[5], d[6]],
                        this.reflection = [2 * d[5] - d[3], 2 * d[6] - d[4]],
                        h
                }

                function c(d, h) {
                    if (h === !1)
                        return !1;
                    for (var f = h, m = d.length; f < m; ++f)
                        if (d[f][0] == "M")
                            return f;
                    return !1
                }

                SVG.extend(SVG.PathArray, {
                    morph: function (d) {
                        for (var h = this.value, f = this.parse(d), m = 0, x = 0, S = !1, _ = !1; m !== !1 || x !== !1;) {
                            var k;
                            S = c(h, m !== !1 && m + 1),
                                _ = c(f, x !== !1 && x + 1),
                            m === !1 && (m = (k = new SVG.PathArray(L.start).bbox()).height == 0 || k.width == 0 ? h.push(h[0]) - 1 : h.push(["M", k.x + k.width / 2, k.y + k.height / 2]) - 1),
                            x === !1 && (x = (k = new SVG.PathArray(L.dest).bbox()).height == 0 || k.width == 0 ? f.push(f[0]) - 1 : f.push(["M", k.x + k.width / 2, k.y + k.height / 2]) - 1);
                            var L = j(h, m, S, f, x, _);
                            h = h.slice(0, m).concat(L.start, S === !1 ? [] : h.slice(S)),
                                f = f.slice(0, x).concat(L.dest, _ === !1 ? [] : f.slice(_)),
                                m = S !== !1 && m + L.start.length,
                                x = _ !== !1 && x + L.dest.length
                        }
                        return this.value = h,
                            this.destination = new SVG.PathArray,
                            this.destination.value = f,
                            this
                    }
                })
            }(),
            (function () {
                    function j(n) {
                        n.remember("_draggable", this),
                            this.el = n
                    }

                    j.prototype.init = function (n, i) {
                        var r = this;
                        this.constraint = n,
                            this.value = i,
                            this.el.on("mousedown.drag", function (c) {
                                r.start(c)
                            }),
                            this.el.on("touchstart.drag", function (c) {
                                r.start(c)
                            })
                    }
                        ,
                        j.prototype.transformPoint = function (n, i) {
                            var r = (n = n || window.event).changedTouches && n.changedTouches[0] || n;
                            return this.p.x = r.clientX - (i || 0),
                                this.p.y = r.clientY,
                                this.p.matrixTransform(this.m)
                        }
                        ,
                        j.prototype.getBBox = function () {
                            var n = this.el.bbox();
                            return this.el instanceof SVG.Nested && (n = this.el.rbox()),
                            (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (n.x = this.el.x(),
                                n.y = this.el.y()),
                                n
                        }
                        ,
                        j.prototype.start = function (n) {
                            if (n.type != "click" && n.type != "mousedown" && n.type != "mousemove" || (n.which || n.buttons) == 1) {
                                var i = this;
                                if (this.el.fire("beforedrag", {
                                    event: n,
                                    handler: this
                                }),
                                    !this.el.event().defaultPrevented) {
                                    n.preventDefault(),
                                        n.stopPropagation(),
                                        this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc),
                                        this.p = this.parent.node.createSVGPoint(),
                                        this.m = this.el.node.getScreenCTM().inverse();
                                    var r, c = this.getBBox();
                                    if (this.el instanceof SVG.Text)
                                        switch (r = this.el.node.getComputedTextLength(),
                                            this.el.attr("text-anchor")) {
                                            case "middle":
                                                r /= 2;
                                                break;
                                            case "start":
                                                r = 0
                                        }
                                    this.startPoints = {
                                        point: this.transformPoint(n, r),
                                        box: c,
                                        transform: this.el.transform()
                                    },
                                        SVG.on(window, "mousemove.drag", function (d) {
                                            i.drag(d)
                                        }),
                                        SVG.on(window, "touchmove.drag", function (d) {
                                            i.drag(d)
                                        }),
                                        SVG.on(window, "mouseup.drag", function (d) {
                                            i.end(d)
                                        }),
                                        SVG.on(window, "touchend.drag", function (d) {
                                            i.end(d)
                                        }),
                                        this.el.fire("dragstart", {
                                            event: n,
                                            p: this.startPoints.point,
                                            m: this.m,
                                            handler: this
                                        })
                                }
                            }
                        }
                        ,
                        j.prototype.drag = function (n) {
                            var i = this.getBBox()
                                , r = this.transformPoint(n)
                                , c = this.startPoints.box.x + r.x - this.startPoints.point.x
                                , d = this.startPoints.box.y + r.y - this.startPoints.point.y
                                , h = this.constraint
                                , f = r.x - this.startPoints.point.x
                                , m = r.y - this.startPoints.point.y;
                            if (this.el.fire("dragmove", {
                                event: n,
                                p: r,
                                m: this.m,
                                handler: this
                            }),
                                this.el.event().defaultPrevented)
                                return r;
                            if (typeof h == "function") {
                                var x = h.call(this.el, c, d, this.m);
                                typeof x == "boolean" && (x = {
                                    x,
                                    y: x
                                }),
                                    x.x === !0 ? this.el.x(c) : x.x !== !1 && this.el.x(x.x),
                                    x.y === !0 ? this.el.y(d) : x.y !== !1 && this.el.y(x.y)
                            } else
                                typeof h == "object" && (h.minX != null && c < h.minX ? f = (c = h.minX) - this.startPoints.box.x : h.maxX != null && c > h.maxX - i.width && (f = (c = h.maxX - i.width) - this.startPoints.box.x),
                                    h.minY != null && d < h.minY ? m = (d = h.minY) - this.startPoints.box.y : h.maxY != null && d > h.maxY - i.height && (m = (d = h.maxY - i.height) - this.startPoints.box.y),
                                h.snapToGrid != null && (c -= c % h.snapToGrid,
                                    d -= d % h.snapToGrid,
                                    f -= f % h.snapToGrid,
                                    m -= m % h.snapToGrid),
                                    this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({
                                        x: f,
                                        y: m
                                    }, !0) : this.el.move(c, d));
                            return r
                        }
                        ,
                        j.prototype.end = function (n) {
                            var i = this.drag(n);
                            this.el.fire("dragend", {
                                event: n,
                                p: i,
                                m: this.m,
                                handler: this
                            }),
                                SVG.off(window, "mousemove.drag"),
                                SVG.off(window, "touchmove.drag"),
                                SVG.off(window, "mouseup.drag"),
                                SVG.off(window, "touchend.drag")
                        }
                        ,
                        SVG.extend(SVG.Element, {
                            draggable: function (n, i) {
                                typeof n != "function" && typeof n != "object" || (i = n,
                                    n = !0);
                                var r = this.remember("_draggable") || new j(this);
                                return (n = n === void 0 || n) ? r.init(i || {}, n) : (this.off("mousedown.drag"),
                                    this.off("touchstart.drag")),
                                    this
                            }
                        })
                }
            ).call(void 0),
            function () {
                function j(n) {
                    this.el = n,
                        n.remember("_selectHandler", this),
                        this.pointSelection = {
                            isSelected: !1
                        },
                        this.rectSelection = {
                            isSelected: !1
                        },
                        this.pointsList = {
                            lt: [0, 0],
                            rt: ["width", 0],
                            rb: ["width", "height"],
                            lb: [0, "height"],
                            t: ["width", 0],
                            r: ["width", "height"],
                            b: ["width", "height"],
                            l: [0, "height"]
                        },
                        this.pointCoord = function (i, r, c) {
                            var d = typeof i != "string" ? i : r[i];
                            return c ? d / 2 : d
                        }
                        ,
                        this.pointCoords = function (i, r) {
                            var c = this.pointsList[i];
                            return {
                                x: this.pointCoord(c[0], r, i === "t" || i === "b"),
                                y: this.pointCoord(c[1], r, i === "r" || i === "l")
                            }
                        }
                }

                j.prototype.init = function (n, i) {
                    var r = this.el.bbox();
                    this.options = {};
                    var c = this.el.selectize.defaults.points;
                    for (var d in this.el.selectize.defaults)
                        this.options[d] = this.el.selectize.defaults[d],
                        i[d] !== void 0 && (this.options[d] = i[d]);
                    var h = ["points", "pointsExclude"];
                    for (var d in h) {
                        var f = this.options[h[d]];
                        typeof f == "string" ? f = f.length > 0 ? f.split(/\s*,\s*/i) : [] : typeof f == "boolean" && h[d] === "points" && (f = f ? c : []),
                            this.options[h[d]] = f
                    }
                    this.options.points = [c, this.options.points].reduce(function (m, x) {
                        return m.filter(function (S) {
                            return x.indexOf(S) > -1
                        })
                    }),
                        this.options.points = [this.options.points, this.options.pointsExclude].reduce(function (m, x) {
                            return m.filter(function (S) {
                                return x.indexOf(S) < 0
                            })
                        }),
                        this.parent = this.el.parent(),
                        this.nested = this.nested || this.parent.group(),
                        this.nested.matrix(new SVG.Matrix(this.el).translate(r.x, r.y)),
                        this.options.deepSelect && ["line", "polyline", "polygon"].indexOf(this.el.type) !== -1 ? this.selectPoints(n) : this.selectRect(n),
                        this.observe(),
                        this.cleanup()
                }
                    ,
                    j.prototype.selectPoints = function (n) {
                        return this.pointSelection.isSelected = n,
                        this.pointSelection.set || (this.pointSelection.set = this.parent.set(),
                            this.drawPoints()),
                            this
                    }
                    ,
                    j.prototype.getPointArray = function () {
                        var n = this.el.bbox();
                        return this.el.array().valueOf().map(function (i) {
                            return [i[0] - n.x, i[1] - n.y]
                        })
                    }
                    ,
                    j.prototype.drawPoints = function () {
                        for (var n = this, i = this.getPointArray(), r = 0, c = i.length; r < c; ++r) {
                            var d = function (f) {
                                    return function (m) {
                                        (m = m || window.event).preventDefault ? m.preventDefault() : m.returnValue = !1,
                                            m.stopPropagation();
                                        var x = m.pageX || m.touches[0].pageX
                                            , S = m.pageY || m.touches[0].pageY;
                                        n.el.fire("point", {
                                            x,
                                            y: S,
                                            i: f,
                                            event: m
                                        })
                                    }
                                }(r)
                                ,
                                h = this.drawPoint(i[r][0], i[r][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", d).on("mousedown", d);
                            this.pointSelection.set.add(h)
                        }
                    }
                    ,
                    j.prototype.drawPoint = function (n, i) {
                        var r = this.options.pointType;
                        switch (r) {
                            case "circle":
                                return this.drawCircle(n, i);
                            case "rect":
                                return this.drawRect(n, i);
                            default:
                                if (typeof r == "function")
                                    return r.call(this, n, i);
                                throw new Error("Unknown " + r + " point type!")
                        }
                    }
                    ,
                    j.prototype.drawCircle = function (n, i) {
                        return this.nested.circle(this.options.pointSize).center(n, i)
                    }
                    ,
                    j.prototype.drawRect = function (n, i) {
                        return this.nested.rect(this.options.pointSize, this.options.pointSize).center(n, i)
                    }
                    ,
                    j.prototype.updatePointSelection = function () {
                        var n = this.getPointArray();
                        this.pointSelection.set.each(function (i) {
                            this.cx() === n[i][0] && this.cy() === n[i][1] || this.center(n[i][0], n[i][1])
                        })
                    }
                    ,
                    j.prototype.updateRectSelection = function () {
                        var n = this
                            , i = this.el.bbox();
                        if (this.rectSelection.set.get(0).attr({
                            width: i.width,
                            height: i.height
                        }),
                        this.options.points.length && this.options.points.map(function (c, d) {
                            var h = n.pointCoords(c, i);
                            n.rectSelection.set.get(d + 1).center(h.x, h.y)
                        }),
                            this.options.rotationPoint) {
                            var r = this.rectSelection.set.length();
                            this.rectSelection.set.get(r - 1).center(i.width / 2, 20)
                        }
                    }
                    ,
                    j.prototype.selectRect = function (n) {
                        var i = this
                            , r = this.el.bbox();

                        function c(f) {
                            return function (m) {
                                (m = m || window.event).preventDefault ? m.preventDefault() : m.returnValue = !1,
                                    m.stopPropagation();
                                var x = m.pageX || m.touches[0].pageX
                                    , S = m.pageY || m.touches[0].pageY;
                                i.el.fire(f, {
                                    x,
                                    y: S,
                                    event: m
                                })
                            }
                        }

                        if (this.rectSelection.isSelected = n,
                            this.rectSelection.set = this.rectSelection.set || this.parent.set(),
                        this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(r.width, r.height).addClass(this.options.classRect)),
                        this.options.points.length && this.rectSelection.set.length() < 2 && (this.options.points.map(function (f, m) {
                            var x = i.pointCoords(f, r)
                                ,
                                S = i.drawPoint(x.x, x.y).attr("class", i.options.classPoints + "_" + f).on("mousedown", c(f)).on("touchstart", c(f));
                            i.rectSelection.set.add(S)
                        }),
                            this.rectSelection.set.each(function () {
                                this.addClass(i.options.classPoints)
                            })),
                        this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
                            var d = function (f) {
                                    (f = f || window.event).preventDefault ? f.preventDefault() : f.returnValue = !1,
                                        f.stopPropagation();
                                    var m = f.pageX || f.touches[0].pageX
                                        , x = f.pageY || f.touches[0].pageY;
                                    i.el.fire("rot", {
                                        x: m,
                                        y: x,
                                        event: f
                                    })
                                }
                                ,
                                h = this.drawPoint(r.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", d).on("mousedown", d);
                            this.rectSelection.set.add(h)
                        }
                    }
                    ,
                    j.prototype.handler = function () {
                        var n = this.el.bbox();
                        this.nested.matrix(new SVG.Matrix(this.el).translate(n.x, n.y)),
                        this.rectSelection.isSelected && this.updateRectSelection(),
                        this.pointSelection.isSelected && this.updatePointSelection()
                    }
                    ,
                    j.prototype.observe = function () {
                        var n = this;
                        if (MutationObserver)
                            if (this.rectSelection.isSelected || this.pointSelection.isSelected)
                                this.observerInst = this.observerInst || new MutationObserver(function () {
                                        n.handler()
                                    }
                                ),
                                    this.observerInst.observe(this.el.node, {
                                        attributes: !0
                                    });
                            else
                                try {
                                    this.observerInst.disconnect(),
                                        delete this.observerInst
                                } catch {
                                }
                        else
                            this.el.off("DOMAttrModified.select"),
                            (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", function () {
                                n.handler()
                            })
                    }
                    ,
                    j.prototype.cleanup = function () {
                        !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each(function () {
                            this.remove()
                        }),
                            this.rectSelection.set.clear(),
                            delete this.rectSelection.set),
                        !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each(function () {
                            this.remove()
                        }),
                            this.pointSelection.set.clear(),
                            delete this.pointSelection.set),
                        this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(),
                            delete this.nested)
                    }
                    ,
                    SVG.extend(SVG.Element, {
                        selectize: function (n, i) {
                            return typeof n == "object" && (i = n,
                                n = !0),
                                (this.remember("_selectHandler") || new j(this)).init(n === void 0 || n, i || {}),
                                this
                        }
                    }),
                    SVG.Element.prototype.selectize.defaults = {
                        points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
                        pointsExclude: [],
                        classRect: "svg_select_boundingRect",
                        classPoints: "svg_select_points",
                        pointSize: 7,
                        rotationPoint: !0,
                        deepSelect: !1,
                        pointType: "circle"
                    }
            }(),
            function () {
                (function () {
                        function j(n) {
                            n.remember("_resizeHandler", this),
                                this.el = n,
                                this.parameters = {},
                                this.lastUpdateCall = null,
                                this.p = n.doc().node.createSVGPoint()
                        }

                        j.prototype.transformPoint = function (n, i, r) {
                            return this.p.x = n - (this.offset.x - window.pageXOffset),
                                this.p.y = i - (this.offset.y - window.pageYOffset),
                                this.p.matrixTransform(r || this.m)
                        }
                            ,
                            j.prototype._extractPosition = function (n) {
                                return {
                                    x: n.clientX != null ? n.clientX : n.touches[0].clientX,
                                    y: n.clientY != null ? n.clientY : n.touches[0].clientY
                                }
                            }
                            ,
                            j.prototype.init = function (n) {
                                var i = this;
                                if (this.stop(),
                                n !== "stop") {
                                    for (var r in this.options = {},
                                        this.el.resize.defaults)
                                        this.options[r] = this.el.resize.defaults[r],
                                        n[r] !== void 0 && (this.options[r] = n[r]);
                                    this.el.on("lt.resize", function (c) {
                                        i.resize(c || window.event)
                                    }),
                                        this.el.on("rt.resize", function (c) {
                                            i.resize(c || window.event)
                                        }),
                                        this.el.on("rb.resize", function (c) {
                                            i.resize(c || window.event)
                                        }),
                                        this.el.on("lb.resize", function (c) {
                                            i.resize(c || window.event)
                                        }),
                                        this.el.on("t.resize", function (c) {
                                            i.resize(c || window.event)
                                        }),
                                        this.el.on("r.resize", function (c) {
                                            i.resize(c || window.event)
                                        }),
                                        this.el.on("b.resize", function (c) {
                                            i.resize(c || window.event)
                                        }),
                                        this.el.on("l.resize", function (c) {
                                            i.resize(c || window.event)
                                        }),
                                        this.el.on("rot.resize", function (c) {
                                            i.resize(c || window.event)
                                        }),
                                        this.el.on("point.resize", function (c) {
                                            i.resize(c || window.event)
                                        }),
                                        this.update()
                                }
                            }
                            ,
                            j.prototype.stop = function () {
                                return this.el.off("lt.resize"),
                                    this.el.off("rt.resize"),
                                    this.el.off("rb.resize"),
                                    this.el.off("lb.resize"),
                                    this.el.off("t.resize"),
                                    this.el.off("r.resize"),
                                    this.el.off("b.resize"),
                                    this.el.off("l.resize"),
                                    this.el.off("rot.resize"),
                                    this.el.off("point.resize"),
                                    this
                            }
                            ,
                            j.prototype.resize = function (n) {
                                var i = this;
                                this.m = this.el.node.getScreenCTM().inverse(),
                                    this.offset = {
                                        x: window.pageXOffset,
                                        y: window.pageYOffset
                                    };
                                var r = this._extractPosition(n.detail.event);
                                if (this.parameters = {
                                    type: this.el.type,
                                    p: this.transformPoint(r.x, r.y),
                                    x: n.detail.x,
                                    y: n.detail.y,
                                    box: this.el.bbox(),
                                    rotation: this.el.transform().rotation
                                },
                                this.el.type === "text" && (this.parameters.fontSize = this.el.attr()["font-size"]),
                                n.detail.i !== void 0) {
                                    var c = this.el.array().valueOf();
                                    this.parameters.i = n.detail.i,
                                        this.parameters.pointCoords = [c[n.detail.i][0], c[n.detail.i][1]]
                                }
                                switch (n.type) {
                                    case "lt":
                                        this.calc = function (d, h) {
                                            var f = this.snapToGrid(d, h);
                                            if (this.parameters.box.width - f[0] > 0 && this.parameters.box.height - f[1] > 0) {
                                                if (this.parameters.type === "text")
                                                    return this.el.move(this.parameters.box.x + f[0], this.parameters.box.y),
                                                        void this.el.attr("font-size", this.parameters.fontSize - f[0]);
                                                f = this.checkAspectRatio(f),
                                                    this.el.move(this.parameters.box.x + f[0], this.parameters.box.y + f[1]).size(this.parameters.box.width - f[0], this.parameters.box.height - f[1])
                                            }
                                        }
                                        ;
                                        break;
                                    case "rt":
                                        this.calc = function (d, h) {
                                            var f = this.snapToGrid(d, h, 2);
                                            if (this.parameters.box.width + f[0] > 0 && this.parameters.box.height - f[1] > 0) {
                                                if (this.parameters.type === "text")
                                                    return this.el.move(this.parameters.box.x - f[0], this.parameters.box.y),
                                                        void this.el.attr("font-size", this.parameters.fontSize + f[0]);
                                                f = this.checkAspectRatio(f, !0),
                                                    this.el.move(this.parameters.box.x, this.parameters.box.y + f[1]).size(this.parameters.box.width + f[0], this.parameters.box.height - f[1])
                                            }
                                        }
                                        ;
                                        break;
                                    case "rb":
                                        this.calc = function (d, h) {
                                            var f = this.snapToGrid(d, h, 0);
                                            if (this.parameters.box.width + f[0] > 0 && this.parameters.box.height + f[1] > 0) {
                                                if (this.parameters.type === "text")
                                                    return this.el.move(this.parameters.box.x - f[0], this.parameters.box.y),
                                                        void this.el.attr("font-size", this.parameters.fontSize + f[0]);
                                                f = this.checkAspectRatio(f),
                                                    this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + f[0], this.parameters.box.height + f[1])
                                            }
                                        }
                                        ;
                                        break;
                                    case "lb":
                                        this.calc = function (d, h) {
                                            var f = this.snapToGrid(d, h, 1);
                                            if (this.parameters.box.width - f[0] > 0 && this.parameters.box.height + f[1] > 0) {
                                                if (this.parameters.type === "text")
                                                    return this.el.move(this.parameters.box.x + f[0], this.parameters.box.y),
                                                        void this.el.attr("font-size", this.parameters.fontSize - f[0]);
                                                f = this.checkAspectRatio(f, !0),
                                                    this.el.move(this.parameters.box.x + f[0], this.parameters.box.y).size(this.parameters.box.width - f[0], this.parameters.box.height + f[1])
                                            }
                                        }
                                        ;
                                        break;
                                    case "t":
                                        this.calc = function (d, h) {
                                            var f = this.snapToGrid(d, h, 2);
                                            if (this.parameters.box.height - f[1] > 0) {
                                                if (this.parameters.type === "text")
                                                    return;
                                                this.el.move(this.parameters.box.x, this.parameters.box.y + f[1]).height(this.parameters.box.height - f[1])
                                            }
                                        }
                                        ;
                                        break;
                                    case "r":
                                        this.calc = function (d, h) {
                                            var f = this.snapToGrid(d, h, 0);
                                            if (this.parameters.box.width + f[0] > 0) {
                                                if (this.parameters.type === "text")
                                                    return;
                                                this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + f[0])
                                            }
                                        }
                                        ;
                                        break;
                                    case "b":
                                        this.calc = function (d, h) {
                                            var f = this.snapToGrid(d, h, 0);
                                            if (this.parameters.box.height + f[1] > 0) {
                                                if (this.parameters.type === "text")
                                                    return;
                                                this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + f[1])
                                            }
                                        }
                                        ;
                                        break;
                                    case "l":
                                        this.calc = function (d, h) {
                                            var f = this.snapToGrid(d, h, 1);
                                            if (this.parameters.box.width - f[0] > 0) {
                                                if (this.parameters.type === "text")
                                                    return;
                                                this.el.move(this.parameters.box.x + f[0], this.parameters.box.y).width(this.parameters.box.width - f[0])
                                            }
                                        }
                                        ;
                                        break;
                                    case "rot":
                                        this.calc = function (d, h) {
                                            var f = d + this.parameters.p.x
                                                , m = h + this.parameters.p.y
                                                ,
                                                x = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2)
                                                ,
                                                S = Math.atan2(m - this.parameters.box.y - this.parameters.box.height / 2, f - this.parameters.box.x - this.parameters.box.width / 2)
                                                ,
                                                _ = this.parameters.rotation + 180 * (S - x) / Math.PI + this.options.snapToAngle / 2;
                                            this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(_ - _ % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy)
                                        }
                                        ;
                                        break;
                                    case "point":
                                        this.calc = function (d, h) {
                                            var f = this.snapToGrid(d, h, this.parameters.pointCoords[0], this.parameters.pointCoords[1])
                                                , m = this.el.array().valueOf();
                                            m[this.parameters.i][0] = this.parameters.pointCoords[0] + f[0],
                                                m[this.parameters.i][1] = this.parameters.pointCoords[1] + f[1],
                                                this.el.plot(m)
                                        }
                                }
                                this.el.fire("resizestart", {
                                    dx: this.parameters.x,
                                    dy: this.parameters.y,
                                    event: n
                                }),
                                    SVG.on(window, "touchmove.resize", function (d) {
                                        i.update(d || window.event)
                                    }),
                                    SVG.on(window, "touchend.resize", function () {
                                        i.done()
                                    }),
                                    SVG.on(window, "mousemove.resize", function (d) {
                                        i.update(d || window.event)
                                    }),
                                    SVG.on(window, "mouseup.resize", function () {
                                        i.done()
                                    })
                            }
                            ,
                            j.prototype.update = function (n) {
                                if (n) {
                                    var i = this._extractPosition(n)
                                        , r = this.transformPoint(i.x, i.y)
                                        , c = r.x - this.parameters.p.x
                                        , d = r.y - this.parameters.p.y;
                                    this.lastUpdateCall = [c, d],
                                        this.calc(c, d),
                                        this.el.fire("resizing", {
                                            dx: c,
                                            dy: d,
                                            event: n
                                        })
                                } else
                                    this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1])
                            }
                            ,
                            j.prototype.done = function () {
                                this.lastUpdateCall = null,
                                    SVG.off(window, "mousemove.resize"),
                                    SVG.off(window, "mouseup.resize"),
                                    SVG.off(window, "touchmove.resize"),
                                    SVG.off(window, "touchend.resize"),
                                    this.el.fire("resizedone")
                            }
                            ,
                            j.prototype.snapToGrid = function (n, i, r, c) {
                                var d;
                                return c !== void 0 ? d = [(r + n) % this.options.snapToGrid, (c + i) % this.options.snapToGrid] : (r = r ?? 3,
                                    d = [(this.parameters.box.x + n + (1 & r ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + i + (2 & r ? 0 : this.parameters.box.height)) % this.options.snapToGrid]),
                                n < 0 && (d[0] -= this.options.snapToGrid),
                                i < 0 && (d[1] -= this.options.snapToGrid),
                                    n -= Math.abs(d[0]) < this.options.snapToGrid / 2 ? d[0] : d[0] - (n < 0 ? -this.options.snapToGrid : this.options.snapToGrid),
                                    i -= Math.abs(d[1]) < this.options.snapToGrid / 2 ? d[1] : d[1] - (i < 0 ? -this.options.snapToGrid : this.options.snapToGrid),
                                    this.constraintToBox(n, i, r, c)
                            }
                            ,
                            j.prototype.constraintToBox = function (n, i, r, c) {
                                var d, h, f = this.options.constraint || {};
                                return c !== void 0 ? (d = r,
                                    h = c) : (d = this.parameters.box.x + (1 & r ? 0 : this.parameters.box.width),
                                    h = this.parameters.box.y + (2 & r ? 0 : this.parameters.box.height)),
                                f.minX !== void 0 && d + n < f.minX && (n = f.minX - d),
                                f.maxX !== void 0 && d + n > f.maxX && (n = f.maxX - d),
                                f.minY !== void 0 && h + i < f.minY && (i = f.minY - h),
                                f.maxY !== void 0 && h + i > f.maxY && (i = f.maxY - h),
                                    [n, i]
                            }
                            ,
                            j.prototype.checkAspectRatio = function (n, i) {
                                if (!this.options.saveAspectRatio)
                                    return n;
                                var r = n.slice()
                                    , c = this.parameters.box.width / this.parameters.box.height
                                    , d = this.parameters.box.width + n[0]
                                    , h = this.parameters.box.height - n[1]
                                    , f = d / h;
                                return f < c ? (r[1] = d / c - this.parameters.box.height,
                                i && (r[1] = -r[1])) : f > c && (r[0] = this.parameters.box.width - h * c,
                                i && (r[0] = -r[0])),
                                    r
                            }
                            ,
                            SVG.extend(SVG.Element, {
                                resize: function (n) {
                                    return (this.remember("_resizeHandler") || new j(this)).init(n || {}),
                                        this
                                }
                            }),
                            SVG.Element.prototype.resize.defaults = {
                                snapToAngle: .1,
                                snapToGrid: 1,
                                constraint: {},
                                saveAspectRatio: !1
                            }
                    }
                ).call(this)
            }(),
        window.Apex === void 0 && (window.Apex = {});
        var Pi = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "initModules",
                value: function () {
                    this.ctx.publicMethods = ["updateOptions", "updateSeries", "appendData", "appendSeries", "isSeriesHidden", "toggleSeries", "showSeries", "hideSeries", "setLocale", "resetSeries", "zoomX", "toggleDataPointSelection", "dataURI", "exportToCSV", "addXaxisAnnotation", "addYaxisAnnotation", "addPointAnnotation", "clearAnnotations", "removeAnnotation", "paper", "destroy"],
                        this.ctx.eventList = ["click", "mousedown", "mousemove", "mouseleave", "touchstart", "touchmove", "touchleave", "mouseup", "touchend"],
                        this.ctx.animations = new O(this.ctx),
                        this.ctx.axes = new _e(this.ctx),
                        this.ctx.core = new xs(this.ctx.el, this.ctx),
                        this.ctx.config = new Me({}),
                        this.ctx.data = new Pe(this.ctx),
                        this.ctx.grid = new et(this.ctx),
                        this.ctx.graphics = new $(this.ctx),
                        this.ctx.coreUtils = new V(this.ctx),
                        this.ctx.crosshairs = new Oe(this.ctx),
                        this.ctx.events = new ce(this.ctx),
                        this.ctx.exports = new Ne(this.ctx),
                        this.ctx.localization = new we(this.ctx),
                        this.ctx.options = new oe,
                        this.ctx.responsive = new qe(this.ctx),
                        this.ctx.series = new bt(this.ctx),
                        this.ctx.theme = new We(this.ctx),
                        this.ctx.formatters = new de(this.ctx),
                        this.ctx.titleSubtitle = new Ge(this.ctx),
                        this.ctx.legend = new lt(this.ctx),
                        this.ctx.toolbar = new vt(this.ctx),
                        this.ctx.tooltip = new Ns(this.ctx),
                        this.ctx.dimensions = new xe(this.ctx),
                        this.ctx.updateHelpers = new qs(this.ctx),
                        this.ctx.zoomPanSelection = new qt(this.ctx),
                        this.ctx.w.globals.tooltip = new Ns(this.ctx)
                }
            }]),
                j
        }()
            , Vn = function () {
            function j(n) {
                l(this, j),
                    this.ctx = n,
                    this.w = n.w
            }

            return p(j, [{
                key: "clear",
                value: function (n) {
                    var i = n.isUpdating;
                    this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(),
                    this.ctx.toolbar && this.ctx.toolbar.destroy(),
                        this.ctx.animations = null,
                        this.ctx.axes = null,
                        this.ctx.annotations = null,
                        this.ctx.core = null,
                        this.ctx.data = null,
                        this.ctx.grid = null,
                        this.ctx.series = null,
                        this.ctx.responsive = null,
                        this.ctx.theme = null,
                        this.ctx.formatters = null,
                        this.ctx.titleSubtitle = null,
                        this.ctx.legend = null,
                        this.ctx.dimensions = null,
                        this.ctx.options = null,
                        this.ctx.crosshairs = null,
                        this.ctx.zoomPanSelection = null,
                        this.ctx.updateHelpers = null,
                        this.ctx.toolbar = null,
                        this.ctx.localization = null,
                        this.ctx.w.globals.tooltip = null,
                        this.clearDomElements({
                            isUpdating: i
                        })
                }
            }, {
                key: "killSVG",
                value: function (n) {
                    n.each(function (i, r) {
                        this.removeClass("*"),
                            this.off(),
                            this.stop()
                    }, !0),
                        n.ungroup(),
                        n.clear()
                }
            }, {
                key: "clearDomElements",
                value: function (n) {
                    var i = this
                        , r = n.isUpdating
                        , c = this.w.globals.dom.Paper.node;
                    c.parentNode && c.parentNode.parentNode && !r && (c.parentNode.parentNode.style.minHeight = "unset");
                    var d = this.w.globals.dom.baseEl;
                    d && this.ctx.eventList.forEach(function (f) {
                        d.removeEventListener(f, i.ctx.events.documentEvent)
                    });
                    var h = this.w.globals.dom;
                    if (this.ctx.el !== null)
                        for (; this.ctx.el.firstChild;)
                            this.ctx.el.removeChild(this.ctx.el.firstChild);
                    this.killSVG(h.Paper),
                        h.Paper.remove(),
                        h.elWrap = null,
                        h.elGraphical = null,
                        h.elLegendWrap = null,
                        h.elLegendForeign = null,
                        h.baseEl = null,
                        h.elGridRect = null,
                        h.elGridRectMask = null,
                        h.elGridRectMarkerMask = null,
                        h.elForecastMask = null,
                        h.elNonForecastMask = null,
                        h.elDefs = null
                }
            }]),
                j
        }()
            , ia = new WeakMap
            , $a = function () {
            function j(n, i) {
                l(this, j),
                    this.opts = i,
                    this.ctx = this,
                    this.w = new Be(i).init(),
                    this.el = n,
                    this.w.globals.cuid = M.randomId(),
                    this.w.globals.chartID = this.w.config.chart.id ? M.escapeString(this.w.config.chart.id) : this.w.globals.cuid,
                    new Pi(this).initModules(),
                    this.create = M.bind(this.create, this),
                    this.windowResizeHandler = this._windowResizeHandler.bind(this),
                    this.parentResizeHandler = this._parentResizeCallback.bind(this)
            }

            return p(j, [{
                key: "render",
                value: function () {
                    var n = this;
                    return new Promise(function (i, r) {
                            if (n.el !== null) {
                                Apex._chartInstances === void 0 && (Apex._chartInstances = []),
                                n.w.config.chart.id && Apex._chartInstances.push({
                                    id: n.w.globals.chartID,
                                    group: n.w.config.chart.group,
                                    chart: n
                                }),
                                    n.setLocale(n.w.config.chart.defaultLocale);
                                var c = n.w.config.chart.events.beforeMount;
                                if (typeof c == "function" && c(n, n.w),
                                    n.events.fireEvent("beforeMount", [n, n.w]),
                                    window.addEventListener("resize", n.windowResizeHandler),
                                    function (k, L) {
                                        var N = !1;
                                        if (k.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                                            var H = k.getBoundingClientRect();
                                            k.style.display !== "none" && H.width !== 0 || (N = !0)
                                        }
                                        var z = new ResizeObserver(function (q) {
                                                N && L.call(k, q),
                                                    N = !0
                                            }
                                        );
                                        k.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? Array.from(k.children).forEach(function (q) {
                                            return z.observe(q)
                                        }) : z.observe(k),
                                            ia.set(L, z)
                                    }(n.el.parentNode, n.parentResizeHandler),
                                    !n.css) {
                                    var d = n.el.getRootNode && n.el.getRootNode()
                                        , h = M.is("ShadowRoot", d)
                                        , f = n.el.ownerDocument
                                        , m = f.getElementById("apexcharts-css");
                                    if (h || !m) {
                                        var x;
                                        n.css = document.createElement("style"),
                                            n.css.id = "apexcharts-css",
                                            n.css.textContent = `@keyframes opaque {
  0% {
      opacity: 0
  }

  to {
      opacity: 1
  }
}

@keyframes resizeanim {
  0%,to {
      opacity: 0
  }
}

.apexcharts-canvas {
  position: relative;
  user-select: none
}

.apexcharts-canvas ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 6px
}

.apexcharts-canvas ::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0,0,0,.5);
  box-shadow: 0 0 1px rgba(255,255,255,.5);
  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)
}

.apexcharts-inner {
  position: relative
}

.apexcharts-text tspan {
  font-family: inherit
}

.legend-mouseover-inactive {
  transition: .15s ease all;
  opacity: .2
}

.apexcharts-legend-text {
  padding-left: 15px;
  margin-left: -15px;
}

.apexcharts-series-collapsed {
  opacity: 0
}

.apexcharts-tooltip {
  border-radius: 5px;
  box-shadow: 2px 2px 6px -4px #999;
  cursor: default;
  font-size: 14px;
  left: 62px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  white-space: nowrap;
  z-index: 12;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-theme-light {
  border: 1px solid #e3e3e3;
  background: rgba(255,255,255,.96)
}

.apexcharts-tooltip.apexcharts-theme-dark {
  color: #fff;
  background: rgba(30,30,30,.8)
}

.apexcharts-tooltip * {
  font-family: inherit
}

.apexcharts-tooltip-title {
  padding: 6px;
  font-size: 15px;
  margin-bottom: 4px
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {
  background: #eceff1;
  border-bottom: 1px solid #ddd
}

.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
  background: rgba(0,0,0,.7);
  border-bottom: 1px solid #333
}

.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {
  display: inline-block;
  margin-left: 5px;
  font-weight: 600
}

.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {
  display: none
}

.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  padding: 6px 0 5px
}

.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  display: flex
}

.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {
  margin-top: -6px
}

.apexcharts-tooltip-marker {
  width: 12px;
  height: 12px;
  position: relative;
  top: 0;
  margin-right: 10px;
  border-radius: 50%
}

.apexcharts-tooltip-series-group {
  padding: 0 10px;
  display: none;
  text-align: left;
  justify-content: left;
  align-items: center
}

.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {
  opacity: 1
}

.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {
  padding-bottom: 4px
}

.apexcharts-tooltip-series-group-hidden {
  opacity: 0;
  height: 0;
  line-height: 0;
  padding: 0!important
}

.apexcharts-tooltip-y-group {
  padding: 6px 0 5px
}

.apexcharts-custom-tooltip,.apexcharts-tooltip-box {
  padding: 4px 8px
}

.apexcharts-tooltip-boxPlot {
  display: flex;
  flex-direction: column-reverse
}

.apexcharts-tooltip-box>div {
  margin: 4px 0
}

.apexcharts-tooltip-box span.value {
  font-weight: 700
}

.apexcharts-tooltip-rangebar {
  padding: 5px 8px
}

.apexcharts-tooltip-rangebar .category {
  font-weight: 600;
  color: #777
}

.apexcharts-tooltip-rangebar .series-name {
  font-weight: 700;
  display: block;
  margin-bottom: 5px
}

.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {
  opacity: 0;
  pointer-events: none;
  color: #373d3f;
  font-size: 13px;
  text-align: center;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  background: #eceff1;
  border: 1px solid #90a4ae
}

.apexcharts-xaxistooltip {
  padding: 9px 10px;
  transition: .15s ease all
}

.apexcharts-xaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {
  left: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-xaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-left: -6px
}

.apexcharts-xaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-left: -7px
}

.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {
  bottom: 100%
}

.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {
  top: 100%
}

.apexcharts-xaxistooltip-bottom:after {
  border-bottom-color: #eceff1
}

.apexcharts-xaxistooltip-bottom:before {
  border-bottom-color: #90a4ae
}

.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {
  border-bottom-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip-top:after {
  border-top-color: #eceff1
}

.apexcharts-xaxistooltip-top:before {
  border-top-color: #90a4ae
}

.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {
  border-top-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-yaxistooltip {
  padding: 4px 10px
}

.apexcharts-yaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-yaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-top: -6px
}

.apexcharts-yaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -7px
}

.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {
  left: 100%
}

.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {
  right: 100%
}

.apexcharts-yaxistooltip-left:after {
  border-left-color: #eceff1
}

.apexcharts-yaxistooltip-left:before {
  border-left-color: #90a4ae
}

.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {
  border-left-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip-right:after {
  border-right-color: #eceff1
}

.apexcharts-yaxistooltip-right:before {
  border-right-color: #90a4ae
}

.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {
  border-right-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip.apexcharts-active {
  opacity: 1
}

.apexcharts-yaxistooltip-hidden {
  display: none
}

.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {
  pointer-events: none;
  opacity: 0;
  transition: .15s ease all
}

.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-ycrosshairs-hidden {
  opacity: 0
}

.apexcharts-selection-rect {
  cursor: move
}

.svg_select_boundingRect,.svg_select_points_rot {
  pointer-events: none;
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {
  cursor: ew-resize;
  opacity: 1;
  visibility: visible
}

.svg_select_points {
  fill: #efefef;
  stroke: #333;
  rx: 2
}

.apexcharts-svg.apexcharts-zoomable.hovering-zoom {
  cursor: crosshair
}

.apexcharts-svg.apexcharts-zoomable.hovering-pan {
  cursor: move
}

.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  cursor: pointer;
  width: 20px;
  height: 20px;
  line-height: 24px;
  color: #6e8192;
  text-align: center
}

.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {
  fill: #6e8192
}

.apexcharts-selection-icon svg {
  fill: #444;
  transform: scale(.76)
}

.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {
  fill: #f3f4f5
}

.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {
  fill: #008ffb
}

.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {
  fill: #333
}

.apexcharts-menu-icon,.apexcharts-selection-icon {
  position: relative
}

.apexcharts-reset-icon {
  margin-left: 5px
}

.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {
  transform: scale(.85)
}

.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  transform: scale(.7)
}

.apexcharts-zoomout-icon {
  margin-right: 3px
}

.apexcharts-pan-icon {
  transform: scale(.62);
  position: relative;
  left: 1px;
  top: 0
}

.apexcharts-pan-icon svg {
  fill: #fff;
  stroke: #6e8192;
  stroke-width: 2
}

.apexcharts-pan-icon.apexcharts-selected svg {
  stroke: #008ffb
}

.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {
  stroke: #333
}

.apexcharts-toolbar {
  position: absolute;
  z-index: 11;
  max-width: 176px;
  text-align: right;
  border-radius: 3px;
  padding: 0 6px 2px;
  display: flex;
  justify-content: space-between;
  align-items: center
}

.apexcharts-menu {
  background: #fff;
  position: absolute;
  top: 100%;
  border: 1px solid #ddd;
  border-radius: 3px;
  padding: 3px;
  right: 10px;
  opacity: 0;
  min-width: 110px;
  transition: .15s ease all;
  pointer-events: none
}

.apexcharts-menu.apexcharts-menu-open {
  opacity: 1;
  pointer-events: all;
  transition: .15s ease all
}

.apexcharts-menu-item {
  padding: 6px 7px;
  font-size: 12px;
  cursor: pointer
}

.apexcharts-theme-light .apexcharts-menu-item:hover {
  background: #eee
}

.apexcharts-theme-dark .apexcharts-menu {
  background: rgba(0,0,0,.7);
  color: #fff
}

@media screen and (min-width:768px) {
  .apexcharts-canvas:hover .apexcharts-toolbar {
      opacity: 1
  }
}

.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {
  opacity: 0
}

.apexcharts-hidden-element-shown {
  opacity: 1;
  transition: 0.25s ease all;
}
.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {
  cursor: default;
  pointer-events: none
}

.apexcharts-pie-label-delay {
  opacity: 0;
  animation-name: opaque;
  animation-duration: .3s;
  animation-fill-mode: forwards;
  animation-timing-function: ease
}

.apexcharts-radialbar-label {
  cursor: pointer;
}

.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {
  pointer-events: none
}

.apexcharts-marker {
  transition: .15s ease all
}

.resize-triggers {
  animation: 1ms resizeanim;
  visibility: hidden;
  opacity: 0;
  height: 100%;
  width: 100%;
  overflow: hidden
}

.contract-trigger:before,.resize-triggers,.resize-triggers>div {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0
}

.resize-triggers>div {
  height: 100%;
  width: 100%;
  background: #eee;
  overflow: auto
}

.contract-trigger:before {
  overflow: hidden;
  width: 200%;
  height: 200%
}

.apexcharts-bar-goals-markers{
  pointer-events: none
}

.apexcharts-bar-shadows{
  pointer-events: none
}

.apexcharts-rangebar-goals-markers{
  pointer-events: none
}`;
                                        var S = ((x = n.opts.chart) === null || x === void 0 ? void 0 : x.nonce) || n.w.config.chart.nonce;
                                        S && n.css.setAttribute("nonce", S),
                                            h ? d.prepend(n.css) : f.head.appendChild(n.css)
                                    }
                                }
                                var _ = n.create(n.w.config.series, {});
                                if (!_)
                                    return i(n);
                                n.mount(_).then(function () {
                                    typeof n.w.config.chart.events.mounted == "function" && n.w.config.chart.events.mounted(n, n.w),
                                        n.events.fireEvent("mounted", [n, n.w]),
                                        i(_)
                                }).catch(function (k) {
                                    r(k)
                                })
                            } else
                                r(new Error("Element not found"))
                        }
                    )
                }
            }, {
                key: "create",
                value: function (n, i) {
                    var r = this.w;
                    new Pi(this).initModules();
                    var c = this.w.globals;
                    if (c.noData = !1,
                        c.animationEnded = !1,
                        this.responsive.checkResponsiveConfig(i),
                    r.config.xaxis.convertedCatToNumeric && new fe(r.config).convertCatToNumericXaxis(r.config, this.ctx),
                    this.el === null || (this.core.setupElements(),
                    r.config.chart.type === "treemap" && (r.config.grid.show = !1,
                        r.config.yaxis[0].show = !1),
                    c.svgWidth === 0))
                        return c.animationEnded = !0,
                            null;
                    var d = V.checkComboSeries(n);
                    c.comboCharts = d.comboCharts,
                        c.comboBarCount = d.comboBarCount;
                    var h = n.every(function (S) {
                        return S.data && S.data.length === 0
                    });
                    (n.length === 0 || h) && this.series.handleNoData(),
                        this.events.setupEventHandlers(),
                        this.data.parseData(n),
                        this.theme.init(),
                        new tt(this).setGlobalMarkerSize(),
                        this.formatters.setLabelFormatters(),
                        this.titleSubtitle.draw(),
                    c.noData && c.collapsedSeries.length !== c.series.length && !r.config.legend.showForSingleSeries || this.legend.init(),
                        this.series.hasAllSeriesEqualX(),
                    c.axisCharts && (this.core.coreCalculations(),
                    r.config.xaxis.type !== "category" && this.formatters.setLabelFormatters(),
                        this.ctx.toolbar.minX = r.globals.minX,
                        this.ctx.toolbar.maxX = r.globals.maxX),
                        this.formatters.heatmapLabelFormatters(),
                        new V(this).getLargestMarkerSize(),
                        this.dimensions.plotCoords();
                    var f = this.core.xySettings();
                    this.grid.createGridMask();
                    var m = this.core.plotChartType(n, f)
                        , x = new mt(this);
                    return x.bringForward(),
                    r.config.dataLabels.background.enabled && x.dataLabelsBackground(),
                        this.core.shiftGraphPosition(),
                        {
                            elGraph: m,
                            xyRatios: f,
                            dimensions: {
                                plot: {
                                    left: r.globals.translateX,
                                    top: r.globals.translateY,
                                    width: r.globals.gridWidth,
                                    height: r.globals.gridHeight
                                }
                            }
                        }
                }
            }, {
                key: "mount",
                value: function () {
                    var n = this
                        , i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null
                        , r = this
                        , c = r.w;
                    return new Promise(function (d, h) {
                            if (r.el === null)
                                return h(new Error("Not enough data to display or target element not found"));
                            (i === null || c.globals.allSeriesCollapsed) && r.series.handleNoData(),
                                r.grid = new et(r);
                            var f, m, x = r.grid.drawGrid();
                            if (r.annotations = new ve(r),
                                r.annotations.drawImageAnnos(),
                                r.annotations.drawTextAnnos(),
                            c.config.grid.position === "back" && (x && c.globals.dom.elGraphical.add(x.el),
                            x != null && (f = x.elGridBorders) !== null && f !== void 0 && f.node && c.globals.dom.elGraphical.add(x.elGridBorders)),
                                Array.isArray(i.elGraph))
                                for (var S = 0; S < i.elGraph.length; S++)
                                    c.globals.dom.elGraphical.add(i.elGraph[S]);
                            else
                                c.globals.dom.elGraphical.add(i.elGraph);
                            c.config.grid.position === "front" && (x && c.globals.dom.elGraphical.add(x.el),
                            x != null && (m = x.elGridBorders) !== null && m !== void 0 && m.node && c.globals.dom.elGraphical.add(x.elGridBorders)),
                            c.config.xaxis.crosshairs.position === "front" && r.crosshairs.drawXCrosshairs(),
                            c.config.yaxis[0].crosshairs.position === "front" && r.crosshairs.drawYCrosshairs(),
                            c.config.chart.type !== "treemap" && r.axes.drawAxis(c.config.chart.type, x);
                            var _ = new He(n.ctx, x)
                                , k = new W(n.ctx, x);
                            if (x !== null && (_.xAxisLabelCorrections(x.xAxisTickWidth),
                                k.setYAxisTextAlignments(),
                                c.config.yaxis.map(function (N, H) {
                                    c.globals.ignoreYAxisIndexes.indexOf(H) === -1 && k.yAxisTitleRotate(H, N.opposite)
                                })),
                                r.annotations.drawAxesAnnotations(),
                                !c.globals.noData) {
                                if (c.config.tooltip.enabled && !c.globals.noData && r.w.globals.tooltip.drawTooltip(i.xyRatios),
                                c.globals.axisCharts && (c.globals.isXNumeric || c.config.xaxis.convertedCatToNumeric || c.globals.isRangeBar))
                                    (c.config.chart.zoom.enabled || c.config.chart.selection && c.config.chart.selection.enabled || c.config.chart.pan && c.config.chart.pan.enabled) && r.zoomPanSelection.init({
                                        xyRatios: i.xyRatios
                                    });
                                else {
                                    var L = c.config.chart.toolbar.tools;
                                    ["zoom", "zoomin", "zoomout", "selection", "pan", "reset"].forEach(function (N) {
                                        L[N] = !1
                                    })
                                }
                                c.config.chart.toolbar.show && !c.globals.allSeriesCollapsed && r.toolbar.createToolbar()
                            }
                            c.globals.memory.methodsToExec.length > 0 && c.globals.memory.methodsToExec.forEach(function (N) {
                                N.method(N.params, !1, N.context)
                            }),
                            c.globals.axisCharts || c.globals.noData || r.core.resizeNonAxisCharts(),
                                d(r)
                        }
                    )
                }
            }, {
                key: "destroy",
                value: function () {
                    var n, i;
                    window.removeEventListener("resize", this.windowResizeHandler),
                        this.el.parentNode,
                        n = this.parentResizeHandler,
                    (i = ia.get(n)) && (i.disconnect(),
                        ia.delete(n));
                    var r = this.w.config.chart.id;
                    r && Apex._chartInstances.forEach(function (c, d) {
                        c.id === M.escapeString(r) && Apex._chartInstances.splice(d, 1)
                    }),
                        new Vn(this.ctx).clear({
                            isUpdating: !1
                        })
                }
            }, {
                key: "updateOptions",
                value: function (n) {
                    var i = this
                        , r = arguments.length > 1 && arguments[1] !== void 0 && arguments[1]
                        , c = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2]
                        , d = !(arguments.length > 3 && arguments[3] !== void 0) || arguments[3]
                        , h = !(arguments.length > 4 && arguments[4] !== void 0) || arguments[4]
                        , f = this.w;
                    return f.globals.selection = void 0,
                    n.series && (this.series.resetSeries(!1, !0, !1),
                    n.series.length && n.series[0].data && (n.series = n.series.map(function (m, x) {
                        return i.updateHelpers._extendSeries(m, x)
                    })),
                        this.updateHelpers.revertDefaultAxisMinMax()),
                    n.xaxis && (n = this.updateHelpers.forceXAxisUpdate(n)),
                    n.yaxis && (n = this.updateHelpers.forceYAxisUpdate(n)),
                    f.globals.collapsedSeriesIndices.length > 0 && this.series.clearPreviousPaths(),
                    n.theme && (n = this.theme.updateThemeOptions(n)),
                        this.updateHelpers._updateOptions(n, r, c, d, h)
                }
            }, {
                key: "updateSeries",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : []
                        , i = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1]
                        , r = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2];
                    return this.series.resetSeries(!1),
                        this.updateHelpers.revertDefaultAxisMinMax(),
                        this.updateHelpers._updateSeries(n, i, r)
                }
            }, {
                key: "appendSeries",
                value: function (n) {
                    var i = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1]
                        , r = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2]
                        , c = this.w.config.series.slice();
                    return c.push(n),
                        this.series.resetSeries(!1),
                        this.updateHelpers.revertDefaultAxisMinMax(),
                        this.updateHelpers._updateSeries(c, i, r)
                }
            }, {
                key: "appendData",
                value: function (n) {
                    var i = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1]
                        , r = this;
                    r.w.globals.dataChanged = !0,
                        r.series.getPreviousPaths();
                    for (var c = r.w.config.series.slice(), d = 0; d < c.length; d++)
                        if (n[d] !== null && n[d] !== void 0)
                            for (var h = 0; h < n[d].data.length; h++)
                                c[d].data.push(n[d].data[h]);
                    return r.w.config.series = c,
                    i && (r.w.globals.initialSeries = M.clone(r.w.config.series)),
                        this.update()
                }
            }, {
                key: "update",
                value: function (n) {
                    var i = this;
                    return new Promise(function (r, c) {
                            new Vn(i.ctx).clear({
                                isUpdating: !0
                            });
                            var d = i.create(i.w.config.series, n);
                            if (!d)
                                return r(i);
                            i.mount(d).then(function () {
                                typeof i.w.config.chart.events.updated == "function" && i.w.config.chart.events.updated(i, i.w),
                                    i.events.fireEvent("updated", [i, i.w]),
                                    i.w.globals.isDirty = !0,
                                    r(i)
                            }).catch(function (h) {
                                c(h)
                            })
                        }
                    )
                }
            }, {
                key: "getSyncedCharts",
                value: function () {
                    var n = this.getGroupedCharts()
                        , i = [this];
                    return n.length && (i = [],
                        n.forEach(function (r) {
                            i.push(r)
                        })),
                        i
                }
            }, {
                key: "getGroupedCharts",
                value: function () {
                    var n = this;
                    return Apex._chartInstances.filter(function (i) {
                        if (i.group)
                            return !0
                    }).map(function (i) {
                        return n.w.config.chart.group === i.group ? i.chart : n
                    })
                }
            }, {
                key: "toggleSeries",
                value: function (n) {
                    return this.series.toggleSeries(n)
                }
            }, {
                key: "highlightSeriesOnLegendHover",
                value: function (n, i) {
                    return this.series.toggleSeriesOnHover(n, i)
                }
            }, {
                key: "showSeries",
                value: function (n) {
                    this.series.showSeries(n)
                }
            }, {
                key: "hideSeries",
                value: function (n) {
                    this.series.hideSeries(n)
                }
            }, {
                key: "isSeriesHidden",
                value: function (n) {
                    this.series.isSeriesHidden(n)
                }
            }, {
                key: "resetSeries",
                value: function () {
                    var n = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0]
                        , i = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
                    this.series.resetSeries(n, i)
                }
            }, {
                key: "addEventListener",
                value: function (n, i) {
                    this.events.addEventListener(n, i)
                }
            }, {
                key: "removeEventListener",
                value: function (n, i) {
                    this.events.removeEventListener(n, i)
                }
            }, {
                key: "addXaxisAnnotation",
                value: function (n) {
                    var i = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1]
                        , r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0
                        , c = this;
                    r && (c = r),
                        c.annotations.addXaxisAnnotationExternal(n, i, c)
                }
            }, {
                key: "addYaxisAnnotation",
                value: function (n) {
                    var i = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1]
                        , r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0
                        , c = this;
                    r && (c = r),
                        c.annotations.addYaxisAnnotationExternal(n, i, c)
                }
            }, {
                key: "addPointAnnotation",
                value: function (n) {
                    var i = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1]
                        , r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0
                        , c = this;
                    r && (c = r),
                        c.annotations.addPointAnnotationExternal(n, i, c)
                }
            }, {
                key: "clearAnnotations",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0
                        , i = this;
                    n && (i = n),
                        i.annotations.clearAnnotations(i)
                }
            }, {
                key: "removeAnnotation",
                value: function (n) {
                    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0
                        , r = this;
                    i && (r = i),
                        r.annotations.removeAnnotation(r, n)
                }
            }, {
                key: "getChartArea",
                value: function () {
                    return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner")
                }
            }, {
                key: "getSeriesTotalXRange",
                value: function (n, i) {
                    return this.coreUtils.getSeriesTotalsXRange(n, i)
                }
            }, {
                key: "getHighestValueInSeries",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    return new Y(this.ctx).getMinYMaxY(n).highestY
                }
            }, {
                key: "getLowestValueInSeries",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    return new Y(this.ctx).getMinYMaxY(n).lowestY
                }
            }, {
                key: "getSeriesTotal",
                value: function () {
                    return this.w.globals.seriesTotals
                }
            }, {
                key: "toggleDataPointSelection",
                value: function (n, i) {
                    return this.updateHelpers.toggleDataPointSelection(n, i)
                }
            }, {
                key: "zoomX",
                value: function (n, i) {
                    this.ctx.toolbar.zoomUpdateOptions(n, i)
                }
            }, {
                key: "setLocale",
                value: function (n) {
                    this.localization.setCurrentLocaleValues(n)
                }
            }, {
                key: "dataURI",
                value: function (n) {
                    return new Ne(this.ctx).dataURI(n)
                }
            }, {
                key: "exportToCSV",
                value: function () {
                    var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    return new Ne(this.ctx).exportToCSV(n)
                }
            }, {
                key: "paper",
                value: function () {
                    return this.w.globals.dom.Paper
                }
            }, {
                key: "_parentResizeCallback",
                value: function () {
                    this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize && this._windowResize()
                }
            }, {
                key: "_windowResize",
                value: function () {
                    var n = this;
                    clearTimeout(this.w.globals.resizeTimer),
                        this.w.globals.resizeTimer = window.setTimeout(function () {
                            n.w.globals.resized = !0,
                                n.w.globals.dataChanged = !1,
                                n.ctx.update()
                        }, 150)
                }
            }, {
                key: "_windowResizeHandler",
                value: function () {
                    var n = this.w.config.chart.redrawOnWindowResize;
                    typeof n == "function" && (n = n()),
                    n && this._windowResize()
                }
            }], [{
                key: "getChartByID",
                value: function (n) {
                    var i = M.escapeString(n);
                    if (Apex._chartInstances) {
                        var r = Apex._chartInstances.filter(function (c) {
                            return c.id === i
                        })[0];
                        return r && r.chart
                    }
                }
            }, {
                key: "initOnLoad",
                value: function () {
                    for (var n = document.querySelectorAll("[data-apexcharts]"), i = 0; i < n.length; i++)
                        new j(n[i], JSON.parse(n[i].getAttribute("data-options"))).render()
                }
            }, {
                key: "exec",
                value: function (n, i) {
                    var r = this.getChartByID(n);
                    if (r) {
                        r.w.globals.isExecCalled = !0;
                        var c = null;
                        if (r.publicMethods.indexOf(i) !== -1) {
                            for (var d = arguments.length, h = new Array(d > 2 ? d - 2 : 0), f = 2; f < d; f++)
                                h[f - 2] = arguments[f];
                            c = r[i].apply(r, h)
                        }
                        return c
                    }
                }
            }, {
                key: "merge",
                value: function (n, i) {
                    return M.extend(n, i)
                }
            }]),
                j
        }();
        e.exports = $a
    }
)(Of, Of.exports);
var Cq = Of.exports;
const wy = kq(Cq)
    ,
    Sy = ["animationEnd", "beforeMount", "mounted", "updated", "click", "mouseMove", "mouseLeave", "legendClick", "markerClick", "selection", "dataPointSelection", "dataPointMouseEnter", "dataPointMouseLeave", "beforeZoom", "beforeResetZoom", "zoomed", "scrolled", "brushScrolled"]
    , Iu = Ce({
        name: "apexchart",
        props: {
            options: {
                type: Object
            },
            type: {
                type: String
            },
            series: {
                type: Array,
                required: !0
            },
            width: {
                default: "100%"
            },
            height: {
                default: "auto"
            }
        },
        emits: Sy,
        setup(e, {emit: t}) {
            const s = Se(null)
                , a = Se(null)
                , o = le => le && typeof le == "object" && !Array.isArray(le) && le != null
                , l = (le, oe) => {
                    typeof Object.assign != "function" && function () {
                        Object.assign = function (be) {
                            if (be == null)
                                throw new TypeError("Cannot convert undefined or null to object");
                            let de = Object(be);
                            for (let J = 1; J < arguments.length; J++) {
                                let ue = arguments[J];
                                if (ue != null)
                                    for (let fe in ue)
                                        ue.hasOwnProperty(fe) && (de[fe] = ue[fe])
                            }
                            return de
                        }
                    }();
                    let ve = Object.assign({}, le);
                    return o(le) && o(oe) && Object.keys(oe).forEach(be => {
                            o(oe[be]) ? be in le ? ve[be] = l(le[be], oe[be]) : Object.assign(ve, {
                                [be]: oe[be]
                            }) : Object.assign(ve, {
                                [be]: oe[be]
                            })
                        }
                    ),
                        ve
                }
                , u = async () => {
                    if (await xt(),
                        a.value)
                        return;
                    const le = {
                        chart: {
                            type: e.type || e.options.chart.type || "line",
                            height: e.height,
                            width: e.width,
                            events: {}
                        },
                        series: e.series
                    };
                    Sy.forEach(ve => {
                            let be = (...de) => t(ve, ...de);
                            le.chart.events[ve] = be
                        }
                    );
                    const oe = l(e.options, le);
                    return a.value = new wy(s.value, oe),
                        a.value.render()
                }
                , p = () => (g(),
                    u())
                , g = () => {
                    a.value.destroy()
                }
                , y = (le, oe) => a.value.updateSeries(le, oe)
                , v = (le, oe, ve, be) => a.value.updateOptions(le, oe, ve, be)
                , w = le => a.value.toggleSeries(le)
                , C = le => {
                    a.value.showSeries(le)
                }
                , T = le => {
                    a.value.hideSeries(le)
                }
                , I = (le, oe) => a.value.appendSeries(le, oe)
                , A = () => {
                    a.value.resetSeries()
                }
                , R = (le, oe) => {
                    a.value.toggleDataPointSelection(le, oe)
                }
                , P = le => a.value.appendData(le)
                , M = (le, oe) => a.value.zoomX(le, oe)
                , O = le => a.value.dataURI(le)
                , F = le => a.value.setLocale(le)
                , $ = (le, oe) => {
                    a.value.addXaxisAnnotation(le, oe)
                }
                , V = (le, oe) => {
                    a.value.addYaxisAnnotation(le, oe)
                }
                , G = (le, oe) => {
                    a.value.addPointAnnotation(le, oe)
                }
                , ie = (le, oe) => {
                    a.value.removeAnnotation(le, oe)
                }
                , te = () => {
                    a.value.clearAnnotations()
                }
            ;
            ql(() => {
                    window.ApexCharts = wy
                }
            ),
                $t(() => {
                        s.value = Et().proxy.$el,
                            u()
                    }
                ),
                us(() => {
                        a.value && g()
                    }
                );
            const ne = ai(e);
            return Ke(ne.options, () => {
                    !a.value && e.options ? u() : a.value.updateOptions(e.options)
                }
            ),
                Ke(ne.series, () => {
                        !a.value && e.series ? u() : a.value.updateSeries(e.series)
                    }
                    , {
                        deep: !0
                    }),
                Ke(ne.type, () => {
                        p()
                    }
                ),
                Ke(ne.width, () => {
                        p()
                    }
                ),
                Ke(ne.height, () => {
                        p()
                    }
                ),
                {
                    chart: a,
                    init: u,
                    refresh: p,
                    destroy: g,
                    updateOptions: v,
                    updateSeries: y,
                    toggleSeries: w,
                    showSeries: C,
                    hideSeries: T,
                    resetSeries: A,
                    zoomX: M,
                    toggleDataPointSelection: R,
                    appendData: P,
                    appendSeries: I,
                    addXaxisAnnotation: $,
                    addYaxisAnnotation: V,
                    addPointAnnotation: G,
                    removeAnnotation: ie,
                    clearAnnotations: te,
                    setLocale: F,
                    dataURI: O
                }
        },
        render() {
            return jt("div", {
                class: "vue-apexcharts"
            })
        }
    })
    , Aq = e => {
        e.component(Iu.name, Iu)
    }
;
Iu.install = Aq;
eY(gs, Jn);
const Bn = Al(f2);
Bn.use(Rt);
Bn.use(gs);
Bn.use(Jn);
Bn.use(QU, {
    disableClick: !0
});
Bn.component(or.name, or);
Bn.component("DefaultLayout", wq);
Bn.config.globalProperties.$APIv1 = Gt;
Bn.config.globalProperties.$strapi = U1;
gg.extend(_q);
Bn.config.globalProperties.$date = gg;
Bn.config.globalProperties.$duration = gg.duration;
Bn.use(Iu);
Bn.mount("#app");
export {
    us as $,
    ar as A,
    ae as B,
    ss as C,
    _t as D,
    RS as E,
    lS as F,
    Zt as G,
    Ye as H,
    qq as I,
    At as J,
    $t as K,
    Ke as L,
    ts as M,
    jn as N,
    ks as O,
    Ct as P,
    wi as Q,
    Cy as R,
    Os as S,
    fn as T,
    pg as U,
    fg as V,
    st as W,
    ys as X,
    ql as Y,
    So as Z,
    ot as _,
    QH as a,
    Kp as a$,
    kt as a0,
    xt as a1,
    Xt as a2,
    ai as a3,
    at as a4,
    Ai as a5,
    bd as a6,
    fs as a7,
    Bt as a8,
    Zn as a9,
    WX as aA,
    sY as aB,
    Ti as aC,
    nY as aD,
    Qq as aE,
    C_ as aF,
    eK as aG,
    bn as aH,
    ms as aI,
    wn as aJ,
    pt as aK,
    Ze as aL,
    An as aM,
    Cs as aN,
    Pw as aO,
    Dw as aP,
    vn as aQ,
    or as aR,
    gH as aS,
    WW as aT,
    P9 as aU,
    t_ as aV,
    F_ as aW,
    Sg as aX,
    wg as aY,
    sW as aZ,
    Ex as a_,
    ls as aa,
    In as ab,
    IS as ac,
    Ag as ad,
    Rt as ae,
    jo as af,
    wo as ag,
    Po as ah,
    bU as ai,
    bi as aj,
    En as ak,
    Ig as al,
    kX as am,
    Ei as an,
    gA as ao,
    _n as ap,
    $n as aq,
    _d as ar,
    Vt as as,
    M_ as at,
    nH as au,
    Jp as av,
    l_ as aw,
    o_ as ax,
    qp as ay,
    sj as az,
    gt as b,
    Mo as b0,
    L_ as b1,
    sK as b2,
    iK as b3,
    lr as b4,
    nK as b5,
    tK as b6,
    HH as b7,
    NB as b8,
    MY as b9,
    ph as bA,
    nt as bB,
    mr as bC,
    qi as bD,
    Na as bE,
    ii as bF,
    dr as bG,
    Yp as bH,
    Gq as bI,
    jq as bJ,
    e8 as bK,
    Xq as bL,
    p8 as bM,
    md as bN,
    cn as bO,
    wt as bP,
    jt as bQ,
    Bs as bR,
    To as bS,
    H9 as ba,
    aK as bb,
    Ht as bc,
    mn as bd,
    ta as be,
    $l as bf,
    _8 as bg,
    p0 as bh,
    Ci as bi,
    Nn as bj,
    x4 as bk,
    X4 as bl,
    Bl as bm,
    Sl as bn,
    hn as bo,
    rK as bp,
    oK as bq,
    uB as br,
    ZV as bs,
    JV as bt,
    KV as bu,
    RB as bv,
    B9 as bw,
    ct as bx,
    XY as by,
    Tq as bz,
    Ce as c,
    JH as d,
    Yr as e,
    re as f,
    rt as g,
    ac as h,
    eV as i,
    Sn as j,
    Te as k,
    D as l,
    ng as m,
    Ot as n,
    Z as o,
    vs as p,
    he as q,
    Se as r,
    U as s,
    me as t,
    _i as u,
    ye as v,
    se as w,
    ke as x,
    De as y,
    Mt as z
};
